ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"cmsis_os.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.makeFreeRtosPriority,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	makeFreeRtosPriority:
  24              	.LVL0:
  25              	.LFB48:
  26              		.file 1 "FreeRTOS/src/cmsis_os.c"
   1:FreeRTOS/src/cmsis_os.c **** /* ----------------------------------------------------------------------
   2:FreeRTOS/src/cmsis_os.c ****  * $Date:        5. February 2013
   3:FreeRTOS/src/cmsis_os.c ****  * $Revision:    V1.02
   4:FreeRTOS/src/cmsis_os.c ****  *
   5:FreeRTOS/src/cmsis_os.c ****  * Project:      CMSIS-RTOS API
   6:FreeRTOS/src/cmsis_os.c ****  * Title:        cmsis_os.c
   7:FreeRTOS/src/cmsis_os.c ****  *
   8:FreeRTOS/src/cmsis_os.c ****  * Version 0.02
   9:FreeRTOS/src/cmsis_os.c ****  *    Initial Proposal Phase
  10:FreeRTOS/src/cmsis_os.c ****  * Version 0.03
  11:FreeRTOS/src/cmsis_os.c ****  *    osKernelStart added, optional feature: main started as thread
  12:FreeRTOS/src/cmsis_os.c ****  *    osSemaphores have standard behavior
  13:FreeRTOS/src/cmsis_os.c ****  *    osTimerCreate does not start the timer, added osTimerStart
  14:FreeRTOS/src/cmsis_os.c ****  *    osThreadPass is renamed to osThreadYield
  15:FreeRTOS/src/cmsis_os.c ****  * Version 1.01
  16:FreeRTOS/src/cmsis_os.c ****  *    Support for C++ interface
  17:FreeRTOS/src/cmsis_os.c ****  *     - const attribute removed from the osXxxxDef_t typedef's
  18:FreeRTOS/src/cmsis_os.c ****  *     - const attribute added to the osXxxxDef macros
  19:FreeRTOS/src/cmsis_os.c ****  *    Added: osTimerDelete, osMutexDelete, osSemaphoreDelete
  20:FreeRTOS/src/cmsis_os.c ****  *    Added: osKernelInitialize
  21:FreeRTOS/src/cmsis_os.c ****  * Version 1.02
  22:FreeRTOS/src/cmsis_os.c ****  *    Control functions for short timeouts in microsecond resolution:
  23:FreeRTOS/src/cmsis_os.c ****  *    Added: osKernelSysTick, osKernelSysTickFrequency, osKernelSysTickMicroSec
  24:FreeRTOS/src/cmsis_os.c ****  *    Removed: osSignalGet 
  25:FreeRTOS/src/cmsis_os.c ****  *    
  26:FreeRTOS/src/cmsis_os.c ****  *  
  27:FreeRTOS/src/cmsis_os.c ****  *----------------------------------------------------------------------------
  28:FreeRTOS/src/cmsis_os.c ****  *
  29:FreeRTOS/src/cmsis_os.c ****  * Portions Copyright © 2016 STMicroelectronics International N.V. All rights reserved.
  30:FreeRTOS/src/cmsis_os.c ****  * Portions Copyright (c) 2013 ARM LIMITED
  31:FreeRTOS/src/cmsis_os.c ****  * All rights reserved.
  32:FreeRTOS/src/cmsis_os.c ****  * Redistribution and use in source and binary forms, with or without
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 2


  33:FreeRTOS/src/cmsis_os.c ****  * modification, are permitted provided that the following conditions are met:
  34:FreeRTOS/src/cmsis_os.c ****  *  - Redistributions of source code must retain the above copyright
  35:FreeRTOS/src/cmsis_os.c ****  *    notice, this list of conditions and the following disclaimer.
  36:FreeRTOS/src/cmsis_os.c ****  *  - Redistributions in binary form must reproduce the above copyright
  37:FreeRTOS/src/cmsis_os.c ****  *    notice, this list of conditions and the following disclaimer in the
  38:FreeRTOS/src/cmsis_os.c ****  *    documentation and/or other materials provided with the distribution.
  39:FreeRTOS/src/cmsis_os.c ****  *  - Neither the name of ARM  nor the names of its contributors may be used
  40:FreeRTOS/src/cmsis_os.c ****  *    to endorse or promote products derived from this software without
  41:FreeRTOS/src/cmsis_os.c ****  *    specific prior written permission.
  42:FreeRTOS/src/cmsis_os.c ****  *
  43:FreeRTOS/src/cmsis_os.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  44:FreeRTOS/src/cmsis_os.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  45:FreeRTOS/src/cmsis_os.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  46:FreeRTOS/src/cmsis_os.c ****  * ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  47:FreeRTOS/src/cmsis_os.c ****  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  48:FreeRTOS/src/cmsis_os.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  49:FreeRTOS/src/cmsis_os.c ****  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  50:FreeRTOS/src/cmsis_os.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  51:FreeRTOS/src/cmsis_os.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  52:FreeRTOS/src/cmsis_os.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  53:FreeRTOS/src/cmsis_os.c ****  * POSSIBILITY OF SUCH DAMAGE.
  54:FreeRTOS/src/cmsis_os.c ****  *---------------------------------------------------------------------------*/
  55:FreeRTOS/src/cmsis_os.c **** 
  56:FreeRTOS/src/cmsis_os.c **** #include <string.h>
  57:FreeRTOS/src/cmsis_os.c **** #include "cmsis_os.h"
  58:FreeRTOS/src/cmsis_os.c **** 
  59:FreeRTOS/src/cmsis_os.c **** /*
  60:FreeRTOS/src/cmsis_os.c ****  * ARM Compiler 4/5
  61:FreeRTOS/src/cmsis_os.c ****  */
  62:FreeRTOS/src/cmsis_os.c **** #if   defined ( __CC_ARM )
  63:FreeRTOS/src/cmsis_os.c **** 
  64:FreeRTOS/src/cmsis_os.c ****   #define __ASM            __asm                                      
  65:FreeRTOS/src/cmsis_os.c ****   #define __INLINE         __inline                                     
  66:FreeRTOS/src/cmsis_os.c ****   #define __STATIC_INLINE  static __inline
  67:FreeRTOS/src/cmsis_os.c **** 
  68:FreeRTOS/src/cmsis_os.c ****   #include "cmsis_armcc.h"
  69:FreeRTOS/src/cmsis_os.c **** 
  70:FreeRTOS/src/cmsis_os.c **** /*
  71:FreeRTOS/src/cmsis_os.c ****  * GNU Compiler
  72:FreeRTOS/src/cmsis_os.c ****  */
  73:FreeRTOS/src/cmsis_os.c **** #elif defined ( __GNUC__ )
  74:FreeRTOS/src/cmsis_os.c **** 
  75:FreeRTOS/src/cmsis_os.c ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  76:FreeRTOS/src/cmsis_os.c ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  77:FreeRTOS/src/cmsis_os.c ****   #define __STATIC_INLINE  static inline
  78:FreeRTOS/src/cmsis_os.c **** 
  79:FreeRTOS/src/cmsis_os.c ****   #include "cmsis_gcc.h"
  80:FreeRTOS/src/cmsis_os.c **** 
  81:FreeRTOS/src/cmsis_os.c **** 
  82:FreeRTOS/src/cmsis_os.c **** /*
  83:FreeRTOS/src/cmsis_os.c ****  * IAR Compiler
  84:FreeRTOS/src/cmsis_os.c ****  */
  85:FreeRTOS/src/cmsis_os.c **** #elif defined ( __ICCARM__ )
  86:FreeRTOS/src/cmsis_os.c **** 
  87:FreeRTOS/src/cmsis_os.c ****   #ifndef   __ASM
  88:FreeRTOS/src/cmsis_os.c ****     #define __ASM                     __asm
  89:FreeRTOS/src/cmsis_os.c ****   #endif
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 3


  90:FreeRTOS/src/cmsis_os.c ****   #ifndef   __INLINE
  91:FreeRTOS/src/cmsis_os.c ****     #define __INLINE                  inline
  92:FreeRTOS/src/cmsis_os.c ****   #endif
  93:FreeRTOS/src/cmsis_os.c ****   #ifndef   __STATIC_INLINE
  94:FreeRTOS/src/cmsis_os.c ****     #define __STATIC_INLINE           static inline
  95:FreeRTOS/src/cmsis_os.c ****   #endif
  96:FreeRTOS/src/cmsis_os.c **** 
  97:FreeRTOS/src/cmsis_os.c ****   #include <cmsis_iar.h>
  98:FreeRTOS/src/cmsis_os.c **** #endif
  99:FreeRTOS/src/cmsis_os.c **** 
 100:FreeRTOS/src/cmsis_os.c **** extern void xPortSysTickHandler(void);
 101:FreeRTOS/src/cmsis_os.c **** 
 102:FreeRTOS/src/cmsis_os.c **** /* Convert from CMSIS type osPriority to FreeRTOS priority number */
 103:FreeRTOS/src/cmsis_os.c **** static unsigned portBASE_TYPE makeFreeRtosPriority (osPriority priority)
 104:FreeRTOS/src/cmsis_os.c **** {
  27              		.loc 1 104 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 105:FreeRTOS/src/cmsis_os.c ****   unsigned portBASE_TYPE fpriority = tskIDLE_PRIORITY;
  32              		.loc 1 105 3 view .LVU1
 106:FreeRTOS/src/cmsis_os.c ****   
 107:FreeRTOS/src/cmsis_os.c ****   if (priority != osPriorityError) {
  33              		.loc 1 107 3 view .LVU2
  34              		.loc 1 107 6 is_stmt 0 view .LVU3
  35 0000 8428     		cmp	r0, #132
  36 0002 01D0     		beq	.L3
 108:FreeRTOS/src/cmsis_os.c ****     fpriority += (priority - osPriorityIdle);
  37              		.loc 1 108 5 is_stmt 1 view .LVU4
  38              		.loc 1 108 15 is_stmt 0 view .LVU5
  39 0004 0330     		adds	r0, r0, #3
  40              	.LVL1:
  41              		.loc 1 108 15 view .LVU6
  42 0006 7047     		bx	lr
  43              	.LVL2:
  44              	.L3:
 105:FreeRTOS/src/cmsis_os.c ****   unsigned portBASE_TYPE fpriority = tskIDLE_PRIORITY;
  45              		.loc 1 105 26 view .LVU7
  46 0008 0020     		movs	r0, #0
  47              	.LVL3:
 109:FreeRTOS/src/cmsis_os.c ****   }
 110:FreeRTOS/src/cmsis_os.c ****   
 111:FreeRTOS/src/cmsis_os.c ****   return fpriority;
  48              		.loc 1 111 3 is_stmt 1 view .LVU8
 112:FreeRTOS/src/cmsis_os.c **** }
  49              		.loc 1 112 1 is_stmt 0 view .LVU9
  50 000a 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE48:
  54              		.section	.text.makeCmsisPriority,"ax",%progbits
  55              		.align	1
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu softvfp
  61              	makeCmsisPriority:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 4


  62              	.LVL4:
  63              	.LFB49:
 113:FreeRTOS/src/cmsis_os.c **** 
 114:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_uxTaskPriorityGet == 1)
 115:FreeRTOS/src/cmsis_os.c **** /* Convert from FreeRTOS priority number to CMSIS type osPriority */
 116:FreeRTOS/src/cmsis_os.c **** static osPriority makeCmsisPriority (unsigned portBASE_TYPE fpriority)
 117:FreeRTOS/src/cmsis_os.c **** {
  64              		.loc 1 117 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 118:FreeRTOS/src/cmsis_os.c ****   osPriority priority = osPriorityError;
  69              		.loc 1 118 3 view .LVU11
 119:FreeRTOS/src/cmsis_os.c ****   
 120:FreeRTOS/src/cmsis_os.c ****   if ((fpriority - tskIDLE_PRIORITY) <= (osPriorityRealtime - osPriorityIdle)) {
  70              		.loc 1 120 3 view .LVU12
  71              		.loc 1 120 6 is_stmt 0 view .LVU13
  72 0000 0628     		cmp	r0, #6
  73 0002 02D8     		bhi	.L6
 121:FreeRTOS/src/cmsis_os.c ****     priority = (osPriority)((int)osPriorityIdle + (int)(fpriority - tskIDLE_PRIORITY));
  74              		.loc 1 121 5 is_stmt 1 view .LVU14
  75              		.loc 1 121 49 is_stmt 0 view .LVU15
  76 0004 0338     		subs	r0, r0, #3
  77              	.LVL5:
  78              		.loc 1 121 14 view .LVU16
  79 0006 00B2     		sxth	r0, r0
  80              	.LVL6:
  81              		.loc 1 121 14 view .LVU17
  82 0008 7047     		bx	lr
  83              	.LVL7:
  84              	.L6:
 118:FreeRTOS/src/cmsis_os.c ****   osPriority priority = osPriorityError;
  85              		.loc 1 118 14 view .LVU18
  86 000a 8420     		movs	r0, #132
  87              	.LVL8:
 122:FreeRTOS/src/cmsis_os.c ****   }
 123:FreeRTOS/src/cmsis_os.c ****   
 124:FreeRTOS/src/cmsis_os.c ****   return priority;
  88              		.loc 1 124 3 is_stmt 1 view .LVU19
 125:FreeRTOS/src/cmsis_os.c **** }
  89              		.loc 1 125 1 is_stmt 0 view .LVU20
  90 000c 7047     		bx	lr
  91              		.cfi_endproc
  92              	.LFE49:
  94              		.section	.text.inHandlerMode,"ax",%progbits
  95              		.align	1
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu softvfp
 101              	inHandlerMode:
 102              	.LFB50:
 126:FreeRTOS/src/cmsis_os.c **** #endif
 127:FreeRTOS/src/cmsis_os.c **** 
 128:FreeRTOS/src/cmsis_os.c **** 
 129:FreeRTOS/src/cmsis_os.c **** /* Determine whether we are in thread mode or handler mode. */
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 5


 130:FreeRTOS/src/cmsis_os.c **** static int inHandlerMode (void)
 131:FreeRTOS/src/cmsis_os.c **** {
 103              		.loc 1 131 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 132:FreeRTOS/src/cmsis_os.c ****   return __get_IPSR() != 0;
 108              		.loc 1 132 3 view .LVU22
 109              	.LBB8:
 110              	.LBI8:
 111              		.file 2 "CMSIS/inc/cmsis_gcc.h"
   1:CMSIS/inc/cmsis_gcc.h **** /**************************************************************************//**
   2:CMSIS/inc/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:CMSIS/inc/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:CMSIS/inc/cmsis_gcc.h ****  * @version  V5.0.4
   5:CMSIS/inc/cmsis_gcc.h ****  * @date     09. April 2018
   6:CMSIS/inc/cmsis_gcc.h ****  ******************************************************************************/
   7:CMSIS/inc/cmsis_gcc.h **** /*
   8:CMSIS/inc/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:CMSIS/inc/cmsis_gcc.h ****  *
  10:CMSIS/inc/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:CMSIS/inc/cmsis_gcc.h ****  *
  12:CMSIS/inc/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:CMSIS/inc/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:CMSIS/inc/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:CMSIS/inc/cmsis_gcc.h ****  *
  16:CMSIS/inc/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:CMSIS/inc/cmsis_gcc.h ****  *
  18:CMSIS/inc/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:CMSIS/inc/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:CMSIS/inc/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:CMSIS/inc/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:CMSIS/inc/cmsis_gcc.h ****  * limitations under the License.
  23:CMSIS/inc/cmsis_gcc.h ****  */
  24:CMSIS/inc/cmsis_gcc.h **** 
  25:CMSIS/inc/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:CMSIS/inc/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:CMSIS/inc/cmsis_gcc.h **** 
  28:CMSIS/inc/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:CMSIS/inc/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:CMSIS/inc/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:CMSIS/inc/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:CMSIS/inc/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:CMSIS/inc/cmsis_gcc.h **** 
  34:CMSIS/inc/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:CMSIS/inc/cmsis_gcc.h **** #ifndef __has_builtin
  36:CMSIS/inc/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:CMSIS/inc/cmsis_gcc.h **** #endif
  38:CMSIS/inc/cmsis_gcc.h **** 
  39:CMSIS/inc/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:CMSIS/inc/cmsis_gcc.h **** #ifndef   __ASM
  41:CMSIS/inc/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:CMSIS/inc/cmsis_gcc.h **** #endif
  43:CMSIS/inc/cmsis_gcc.h **** #ifndef   __INLINE
  44:CMSIS/inc/cmsis_gcc.h ****   #define __INLINE                               inline
  45:CMSIS/inc/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 6


  46:CMSIS/inc/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:CMSIS/inc/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:CMSIS/inc/cmsis_gcc.h **** #endif
  49:CMSIS/inc/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:CMSIS/inc/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:CMSIS/inc/cmsis_gcc.h **** #endif                                           
  52:CMSIS/inc/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:CMSIS/inc/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:CMSIS/inc/cmsis_gcc.h **** #endif
  55:CMSIS/inc/cmsis_gcc.h **** #ifndef   __USED
  56:CMSIS/inc/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:CMSIS/inc/cmsis_gcc.h **** #endif
  58:CMSIS/inc/cmsis_gcc.h **** #ifndef   __WEAK
  59:CMSIS/inc/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:CMSIS/inc/cmsis_gcc.h **** #endif
  61:CMSIS/inc/cmsis_gcc.h **** #ifndef   __PACKED
  62:CMSIS/inc/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:CMSIS/inc/cmsis_gcc.h **** #endif
  64:CMSIS/inc/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:CMSIS/inc/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:CMSIS/inc/cmsis_gcc.h **** #endif
  67:CMSIS/inc/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:CMSIS/inc/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:CMSIS/inc/cmsis_gcc.h **** #endif
  70:CMSIS/inc/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:CMSIS/inc/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:CMSIS/inc/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:CMSIS/inc/cmsis_gcc.h **** #endif
  78:CMSIS/inc/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:CMSIS/inc/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:CMSIS/inc/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:CMSIS/inc/cmsis_gcc.h **** #endif
  86:CMSIS/inc/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:CMSIS/inc/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:CMSIS/inc/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:CMSIS/inc/cmsis_gcc.h **** #endif
  94:CMSIS/inc/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:CMSIS/inc/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:CMSIS/inc/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:CMSIS/inc/cmsis_gcc.h **** #endif
 102:CMSIS/inc/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 7


 103:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:CMSIS/inc/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:CMSIS/inc/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:CMSIS/inc/cmsis_gcc.h **** #endif
 110:CMSIS/inc/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:CMSIS/inc/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:CMSIS/inc/cmsis_gcc.h **** #endif
 113:CMSIS/inc/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:CMSIS/inc/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:CMSIS/inc/cmsis_gcc.h **** #endif
 116:CMSIS/inc/cmsis_gcc.h **** 
 117:CMSIS/inc/cmsis_gcc.h **** 
 118:CMSIS/inc/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:CMSIS/inc/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:CMSIS/inc/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:CMSIS/inc/cmsis_gcc.h ****   @{
 122:CMSIS/inc/cmsis_gcc.h ****  */
 123:CMSIS/inc/cmsis_gcc.h **** 
 124:CMSIS/inc/cmsis_gcc.h **** /**
 125:CMSIS/inc/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:CMSIS/inc/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:CMSIS/inc/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:CMSIS/inc/cmsis_gcc.h ****  */
 129:CMSIS/inc/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:CMSIS/inc/cmsis_gcc.h **** {
 131:CMSIS/inc/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:CMSIS/inc/cmsis_gcc.h **** }
 133:CMSIS/inc/cmsis_gcc.h **** 
 134:CMSIS/inc/cmsis_gcc.h **** 
 135:CMSIS/inc/cmsis_gcc.h **** /**
 136:CMSIS/inc/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:CMSIS/inc/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:CMSIS/inc/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:CMSIS/inc/cmsis_gcc.h ****  */
 140:CMSIS/inc/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:CMSIS/inc/cmsis_gcc.h **** {
 142:CMSIS/inc/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:CMSIS/inc/cmsis_gcc.h **** }
 144:CMSIS/inc/cmsis_gcc.h **** 
 145:CMSIS/inc/cmsis_gcc.h **** 
 146:CMSIS/inc/cmsis_gcc.h **** /**
 147:CMSIS/inc/cmsis_gcc.h ****   \brief   Get Control Register
 148:CMSIS/inc/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:CMSIS/inc/cmsis_gcc.h ****   \return               Control Register value
 150:CMSIS/inc/cmsis_gcc.h ****  */
 151:CMSIS/inc/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:CMSIS/inc/cmsis_gcc.h **** {
 153:CMSIS/inc/cmsis_gcc.h ****   uint32_t result;
 154:CMSIS/inc/cmsis_gcc.h **** 
 155:CMSIS/inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:CMSIS/inc/cmsis_gcc.h ****   return(result);
 157:CMSIS/inc/cmsis_gcc.h **** }
 158:CMSIS/inc/cmsis_gcc.h **** 
 159:CMSIS/inc/cmsis_gcc.h **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 8


 160:CMSIS/inc/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:CMSIS/inc/cmsis_gcc.h **** /**
 162:CMSIS/inc/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:CMSIS/inc/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:CMSIS/inc/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:CMSIS/inc/cmsis_gcc.h ****  */
 166:CMSIS/inc/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:CMSIS/inc/cmsis_gcc.h **** {
 168:CMSIS/inc/cmsis_gcc.h ****   uint32_t result;
 169:CMSIS/inc/cmsis_gcc.h **** 
 170:CMSIS/inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:CMSIS/inc/cmsis_gcc.h ****   return(result);
 172:CMSIS/inc/cmsis_gcc.h **** }
 173:CMSIS/inc/cmsis_gcc.h **** #endif
 174:CMSIS/inc/cmsis_gcc.h **** 
 175:CMSIS/inc/cmsis_gcc.h **** 
 176:CMSIS/inc/cmsis_gcc.h **** /**
 177:CMSIS/inc/cmsis_gcc.h ****   \brief   Set Control Register
 178:CMSIS/inc/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:CMSIS/inc/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:CMSIS/inc/cmsis_gcc.h ****  */
 181:CMSIS/inc/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:CMSIS/inc/cmsis_gcc.h **** {
 183:CMSIS/inc/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:CMSIS/inc/cmsis_gcc.h **** }
 185:CMSIS/inc/cmsis_gcc.h **** 
 186:CMSIS/inc/cmsis_gcc.h **** 
 187:CMSIS/inc/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:CMSIS/inc/cmsis_gcc.h **** /**
 189:CMSIS/inc/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:CMSIS/inc/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:CMSIS/inc/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:CMSIS/inc/cmsis_gcc.h ****  */
 193:CMSIS/inc/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:CMSIS/inc/cmsis_gcc.h **** {
 195:CMSIS/inc/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:CMSIS/inc/cmsis_gcc.h **** }
 197:CMSIS/inc/cmsis_gcc.h **** #endif
 198:CMSIS/inc/cmsis_gcc.h **** 
 199:CMSIS/inc/cmsis_gcc.h **** 
 200:CMSIS/inc/cmsis_gcc.h **** /**
 201:CMSIS/inc/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:CMSIS/inc/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:CMSIS/inc/cmsis_gcc.h ****   \return               IPSR Register value
 204:CMSIS/inc/cmsis_gcc.h ****  */
 205:CMSIS/inc/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 112              		.loc 2 205 31 view .LVU23
 113              	.LBB9:
 206:CMSIS/inc/cmsis_gcc.h **** {
 207:CMSIS/inc/cmsis_gcc.h ****   uint32_t result;
 114              		.loc 2 207 3 view .LVU24
 208:CMSIS/inc/cmsis_gcc.h **** 
 209:CMSIS/inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 115              		.loc 2 209 3 view .LVU25
 116              		.syntax unified
 117              	@ 209 "CMSIS/inc/cmsis_gcc.h" 1
 118 0000 EFF30580 		MRS r0, ipsr
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 9


 119              	@ 0 "" 2
 120              	.LVL9:
 210:CMSIS/inc/cmsis_gcc.h ****   return(result);
 121              		.loc 2 210 3 view .LVU26
 122              		.loc 2 210 3 is_stmt 0 view .LVU27
 123              		.thumb
 124              		.syntax unified
 125              	.LBE9:
 126              	.LBE8:
 133:FreeRTOS/src/cmsis_os.c **** }
 127              		.loc 1 133 1 view .LVU28
 128 0004 0030     		adds	r0, r0, #0
 129 0006 18BF     		it	ne
 130 0008 0120     		movne	r0, #1
 131 000a 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE50:
 135              		.section	.text.osKernelStart,"ax",%progbits
 136              		.align	1
 137              		.global	osKernelStart
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu softvfp
 143              	osKernelStart:
 144              	.LFB51:
 134:FreeRTOS/src/cmsis_os.c **** 
 135:FreeRTOS/src/cmsis_os.c **** /*********************** Kernel Control Functions *****************************/
 136:FreeRTOS/src/cmsis_os.c **** /**
 137:FreeRTOS/src/cmsis_os.c **** * @brief  Initialize the RTOS Kernel for creating objects.
 138:FreeRTOS/src/cmsis_os.c **** * @retval status code that indicates the execution status of the function.
 139:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osKernelInitialize shall be consistent in every CMSIS-RTOS.
 140:FreeRTOS/src/cmsis_os.c **** */
 141:FreeRTOS/src/cmsis_os.c **** osStatus osKernelInitialize (void);
 142:FreeRTOS/src/cmsis_os.c **** 
 143:FreeRTOS/src/cmsis_os.c **** /**
 144:FreeRTOS/src/cmsis_os.c **** * @brief  Start the RTOS Kernel with executing the specified thread.
 145:FreeRTOS/src/cmsis_os.c **** * @param  thread_def    thread definition referenced with \ref osThread.
 146:FreeRTOS/src/cmsis_os.c **** * @param  argument      pointer that is passed to the thread function as start argument.
 147:FreeRTOS/src/cmsis_os.c **** * @retval status code that indicates the execution status of the function
 148:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osKernelStart shall be consistent in every CMSIS-RTOS.
 149:FreeRTOS/src/cmsis_os.c **** */
 150:FreeRTOS/src/cmsis_os.c **** osStatus osKernelStart (void)
 151:FreeRTOS/src/cmsis_os.c **** {
 145              		.loc 1 151 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149 0000 08B5     		push	{r3, lr}
 150              	.LCFI0:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 3, -8
 153              		.cfi_offset 14, -4
 152:FreeRTOS/src/cmsis_os.c ****   vTaskStartScheduler();
 154              		.loc 1 152 3 view .LVU30
 155 0002 FFF7FEFF 		bl	vTaskStartScheduler
 156              	.LVL10:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 10


 153:FreeRTOS/src/cmsis_os.c ****   
 154:FreeRTOS/src/cmsis_os.c ****   return osOK;
 157              		.loc 1 154 3 view .LVU31
 155:FreeRTOS/src/cmsis_os.c **** }
 158              		.loc 1 155 1 is_stmt 0 view .LVU32
 159 0006 0020     		movs	r0, #0
 160 0008 08BD     		pop	{r3, pc}
 161              		.cfi_endproc
 162              	.LFE51:
 164              		.section	.text.osKernelRunning,"ax",%progbits
 165              		.align	1
 166              		.global	osKernelRunning
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 170              		.fpu softvfp
 172              	osKernelRunning:
 173              	.LFB52:
 156:FreeRTOS/src/cmsis_os.c **** 
 157:FreeRTOS/src/cmsis_os.c **** /**
 158:FreeRTOS/src/cmsis_os.c **** * @brief  Check if the RTOS kernel is already started
 159:FreeRTOS/src/cmsis_os.c **** * @param  None
 160:FreeRTOS/src/cmsis_os.c **** * @retval (0) RTOS is not started
 161:FreeRTOS/src/cmsis_os.c **** *         (1) RTOS is started
 162:FreeRTOS/src/cmsis_os.c **** *         (-1) if this feature is disabled in FreeRTOSConfig.h 
 163:FreeRTOS/src/cmsis_os.c **** * @note  MUST REMAIN UNCHANGED: \b osKernelRunning shall be consistent in every CMSIS-RTOS.
 164:FreeRTOS/src/cmsis_os.c **** */
 165:FreeRTOS/src/cmsis_os.c **** int32_t osKernelRunning(void)
 166:FreeRTOS/src/cmsis_os.c **** {
 174              		.loc 1 166 1 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178 0000 08B5     		push	{r3, lr}
 179              	.LCFI1:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 3, -8
 182              		.cfi_offset 14, -4
 167:FreeRTOS/src/cmsis_os.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 168:FreeRTOS/src/cmsis_os.c ****   if (xTaskGetSchedulerState() == taskSCHEDULER_NOT_STARTED)
 183              		.loc 1 168 3 view .LVU34
 184              		.loc 1 168 7 is_stmt 0 view .LVU35
 185 0002 FFF7FEFF 		bl	xTaskGetSchedulerState
 186              	.LVL11:
 187              		.loc 1 168 6 view .LVU36
 188 0006 0128     		cmp	r0, #1
 189 0008 01D0     		beq	.L14
 169:FreeRTOS/src/cmsis_os.c ****     return 0;
 170:FreeRTOS/src/cmsis_os.c ****   else
 171:FreeRTOS/src/cmsis_os.c ****     return 1;
 190              		.loc 1 171 12 view .LVU37
 191 000a 0120     		movs	r0, #1
 192              	.L10:
 172:FreeRTOS/src/cmsis_os.c **** #else
 173:FreeRTOS/src/cmsis_os.c **** 	return (-1);
 174:FreeRTOS/src/cmsis_os.c **** #endif	
 175:FreeRTOS/src/cmsis_os.c **** }
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 11


 193              		.loc 1 175 1 view .LVU38
 194 000c 08BD     		pop	{r3, pc}
 195              	.L14:
 169:FreeRTOS/src/cmsis_os.c ****     return 0;
 196              		.loc 1 169 12 view .LVU39
 197 000e 0020     		movs	r0, #0
 198 0010 FCE7     		b	.L10
 199              		.cfi_endproc
 200              	.LFE52:
 202              		.section	.text.osKernelSysTick,"ax",%progbits
 203              		.align	1
 204              		.global	osKernelSysTick
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu softvfp
 210              	osKernelSysTick:
 211              	.LFB53:
 176:FreeRTOS/src/cmsis_os.c **** 
 177:FreeRTOS/src/cmsis_os.c **** #if (defined (osFeature_SysTick)  &&  (osFeature_SysTick != 0))     // System Timer available
 178:FreeRTOS/src/cmsis_os.c **** /**
 179:FreeRTOS/src/cmsis_os.c **** * @brief  Get the value of the Kernel SysTick timer
 180:FreeRTOS/src/cmsis_os.c **** * @param  None
 181:FreeRTOS/src/cmsis_os.c **** * @retval None
 182:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osKernelSysTick shall be consistent in every CMSIS-RTOS.
 183:FreeRTOS/src/cmsis_os.c **** */
 184:FreeRTOS/src/cmsis_os.c **** uint32_t osKernelSysTick(void)
 185:FreeRTOS/src/cmsis_os.c **** {
 212              		.loc 1 185 1 is_stmt 1 view -0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216 0000 08B5     		push	{r3, lr}
 217              	.LCFI2:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 3, -8
 220              		.cfi_offset 14, -4
 186:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 221              		.loc 1 186 3 view .LVU41
 222              		.loc 1 186 7 is_stmt 0 view .LVU42
 223 0002 FFF7FEFF 		bl	inHandlerMode
 224              	.LVL12:
 225              		.loc 1 186 6 view .LVU43
 226 0006 10B1     		cbz	r0, .L16
 187:FreeRTOS/src/cmsis_os.c ****     return xTaskGetTickCountFromISR();
 227              		.loc 1 187 5 is_stmt 1 view .LVU44
 228              		.loc 1 187 12 is_stmt 0 view .LVU45
 229 0008 FFF7FEFF 		bl	xTaskGetTickCountFromISR
 230              	.LVL13:
 231              	.L15:
 188:FreeRTOS/src/cmsis_os.c ****   }
 189:FreeRTOS/src/cmsis_os.c ****   else {
 190:FreeRTOS/src/cmsis_os.c ****     return xTaskGetTickCount();
 191:FreeRTOS/src/cmsis_os.c ****   }
 192:FreeRTOS/src/cmsis_os.c **** }
 232              		.loc 1 192 1 view .LVU46
 233 000c 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 12


 234              	.L16:
 190:FreeRTOS/src/cmsis_os.c ****   }
 235              		.loc 1 190 5 is_stmt 1 view .LVU47
 190:FreeRTOS/src/cmsis_os.c ****   }
 236              		.loc 1 190 12 is_stmt 0 view .LVU48
 237 000e FFF7FEFF 		bl	xTaskGetTickCount
 238              	.LVL14:
 239 0012 FBE7     		b	.L15
 240              		.cfi_endproc
 241              	.LFE53:
 243              		.section	.text.osThreadCreate,"ax",%progbits
 244              		.align	1
 245              		.global	osThreadCreate
 246              		.syntax unified
 247              		.thumb
 248              		.thumb_func
 249              		.fpu softvfp
 251              	osThreadCreate:
 252              	.LVL15:
 253              	.LFB54:
 193:FreeRTOS/src/cmsis_os.c **** #endif    // System Timer available
 194:FreeRTOS/src/cmsis_os.c **** /*********************** Thread Management *****************************/
 195:FreeRTOS/src/cmsis_os.c **** /**
 196:FreeRTOS/src/cmsis_os.c **** * @brief  Create a thread and add it to Active Threads and set it to state READY.
 197:FreeRTOS/src/cmsis_os.c **** * @param  thread_def    thread definition referenced with \ref osThread.
 198:FreeRTOS/src/cmsis_os.c **** * @param  argument      pointer that is passed to the thread function as start argument.
 199:FreeRTOS/src/cmsis_os.c **** * @retval thread ID for reference by other functions or NULL in case of error.
 200:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadCreate shall be consistent in every CMSIS-RTOS.
 201:FreeRTOS/src/cmsis_os.c **** */
 202:FreeRTOS/src/cmsis_os.c **** osThreadId osThreadCreate (const osThreadDef_t *thread_def, void *argument)
 203:FreeRTOS/src/cmsis_os.c **** {
 254              		.loc 1 203 1 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 8
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		.loc 1 203 1 is_stmt 0 view .LVU50
 259 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 260              	.LCFI3:
 261              		.cfi_def_cfa_offset 20
 262              		.cfi_offset 4, -20
 263              		.cfi_offset 5, -16
 264              		.cfi_offset 6, -12
 265              		.cfi_offset 7, -8
 266              		.cfi_offset 14, -4
 267 0002 85B0     		sub	sp, sp, #20
 268              	.LCFI4:
 269              		.cfi_def_cfa_offset 40
 270 0004 0F46     		mov	r7, r1
 204:FreeRTOS/src/cmsis_os.c ****   TaskHandle_t handle;
 271              		.loc 1 204 3 is_stmt 1 view .LVU51
 205:FreeRTOS/src/cmsis_os.c ****   
 206:FreeRTOS/src/cmsis_os.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 ) &&  ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 207:FreeRTOS/src/cmsis_os.c ****   if((thread_def->buffer != NULL) && (thread_def->controlblock != NULL)) {
 208:FreeRTOS/src/cmsis_os.c ****     handle = xTaskCreateStatic((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->na
 209:FreeRTOS/src/cmsis_os.c ****               thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 210:FreeRTOS/src/cmsis_os.c ****               thread_def->buffer, thread_def->controlblock);
 211:FreeRTOS/src/cmsis_os.c ****   }
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 13


 212:FreeRTOS/src/cmsis_os.c ****   else {
 213:FreeRTOS/src/cmsis_os.c ****     if (xTaskCreate((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
 214:FreeRTOS/src/cmsis_os.c ****               thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 215:FreeRTOS/src/cmsis_os.c ****               &handle) != pdPASS)  {
 216:FreeRTOS/src/cmsis_os.c ****       return NULL;
 217:FreeRTOS/src/cmsis_os.c ****     } 
 218:FreeRTOS/src/cmsis_os.c ****   }
 219:FreeRTOS/src/cmsis_os.c **** #elif( configSUPPORT_STATIC_ALLOCATION == 1 )
 220:FreeRTOS/src/cmsis_os.c **** 
 221:FreeRTOS/src/cmsis_os.c ****     handle = xTaskCreateStatic((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->na
 222:FreeRTOS/src/cmsis_os.c ****               thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 223:FreeRTOS/src/cmsis_os.c ****               thread_def->buffer, thread_def->controlblock);
 224:FreeRTOS/src/cmsis_os.c **** #else
 225:FreeRTOS/src/cmsis_os.c ****   if (xTaskCreate((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
 272              		.loc 1 225 3 view .LVU52
 273              		.loc 1 225 45 is_stmt 0 view .LVU53
 274 0006 4468     		ldr	r4, [r0, #4]
 275              		.loc 1 225 83 view .LVU54
 276 0008 0568     		ldr	r5, [r0]
 226:FreeRTOS/src/cmsis_os.c ****                    thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 277              		.loc 1 226 30 view .LVU55
 278 000a 0669     		ldr	r6, [r0, #16]
 225:FreeRTOS/src/cmsis_os.c ****                    thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 279              		.loc 1 225 7 view .LVU56
 280 000c B0F90800 		ldrsh	r0, [r0, #8]
 281              	.LVL16:
 225:FreeRTOS/src/cmsis_os.c ****                    thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 282              		.loc 1 225 7 view .LVU57
 283 0010 FFF7FEFF 		bl	makeFreeRtosPriority
 284              	.LVL17:
 225:FreeRTOS/src/cmsis_os.c ****                    thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 285              		.loc 1 225 7 view .LVU58
 286 0014 03AB     		add	r3, sp, #12
 287 0016 0193     		str	r3, [sp, #4]
 288 0018 0090     		str	r0, [sp]
 289 001a 3B46     		mov	r3, r7
 290 001c B2B2     		uxth	r2, r6
 291 001e 2946     		mov	r1, r5
 292 0020 2046     		mov	r0, r4
 293 0022 FFF7FEFF 		bl	xTaskCreate
 294              	.LVL18:
 225:FreeRTOS/src/cmsis_os.c ****                    thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 295              		.loc 1 225 6 view .LVU59
 296 0026 0128     		cmp	r0, #1
 297 0028 02D1     		bne	.L21
 227:FreeRTOS/src/cmsis_os.c ****                    &handle) != pdPASS)  {
 228:FreeRTOS/src/cmsis_os.c ****     return NULL;
 229:FreeRTOS/src/cmsis_os.c ****   }     
 230:FreeRTOS/src/cmsis_os.c **** #endif
 231:FreeRTOS/src/cmsis_os.c ****   
 232:FreeRTOS/src/cmsis_os.c ****   return handle;
 298              		.loc 1 232 3 is_stmt 1 view .LVU60
 299              		.loc 1 232 10 is_stmt 0 view .LVU61
 300 002a 0398     		ldr	r0, [sp, #12]
 301              	.L19:
 233:FreeRTOS/src/cmsis_os.c **** }
 302              		.loc 1 233 1 view .LVU62
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 14


 303 002c 05B0     		add	sp, sp, #20
 304              	.LCFI5:
 305              		.cfi_remember_state
 306              		.cfi_def_cfa_offset 20
 307              		@ sp needed
 308 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 309              	.LVL19:
 310              	.L21:
 311              	.LCFI6:
 312              		.cfi_restore_state
 228:FreeRTOS/src/cmsis_os.c ****   }     
 313              		.loc 1 228 12 view .LVU63
 314 0030 0020     		movs	r0, #0
 315 0032 FBE7     		b	.L19
 316              		.cfi_endproc
 317              	.LFE54:
 319              		.section	.text.osThreadGetId,"ax",%progbits
 320              		.align	1
 321              		.global	osThreadGetId
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu softvfp
 327              	osThreadGetId:
 328              	.LFB55:
 234:FreeRTOS/src/cmsis_os.c **** 
 235:FreeRTOS/src/cmsis_os.c **** /**
 236:FreeRTOS/src/cmsis_os.c **** * @brief  Return the thread ID of the current running thread.
 237:FreeRTOS/src/cmsis_os.c **** * @retval thread ID for reference by other functions or NULL in case of error.
 238:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadGetId shall be consistent in every CMSIS-RTOS.
 239:FreeRTOS/src/cmsis_os.c **** */
 240:FreeRTOS/src/cmsis_os.c **** osThreadId osThreadGetId (void)
 241:FreeRTOS/src/cmsis_os.c **** {
 329              		.loc 1 241 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 08B5     		push	{r3, lr}
 334              	.LCFI7:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 3, -8
 337              		.cfi_offset 14, -4
 242:FreeRTOS/src/cmsis_os.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
 243:FreeRTOS/src/cmsis_os.c ****   return xTaskGetCurrentTaskHandle();
 338              		.loc 1 243 3 view .LVU65
 339              		.loc 1 243 10 is_stmt 0 view .LVU66
 340 0002 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 341              	.LVL20:
 244:FreeRTOS/src/cmsis_os.c **** #else
 245:FreeRTOS/src/cmsis_os.c **** 	return NULL;
 246:FreeRTOS/src/cmsis_os.c **** #endif
 247:FreeRTOS/src/cmsis_os.c **** }
 342              		.loc 1 247 1 view .LVU67
 343 0006 08BD     		pop	{r3, pc}
 344              		.cfi_endproc
 345              	.LFE55:
 347              		.section	.text.osThreadTerminate,"ax",%progbits
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 15


 348              		.align	1
 349              		.global	osThreadTerminate
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 353              		.fpu softvfp
 355              	osThreadTerminate:
 356              	.LVL21:
 357              	.LFB56:
 248:FreeRTOS/src/cmsis_os.c **** 
 249:FreeRTOS/src/cmsis_os.c **** /**
 250:FreeRTOS/src/cmsis_os.c **** * @brief  Terminate execution of a thread and remove it from Active Threads.
 251:FreeRTOS/src/cmsis_os.c **** * @param   thread_id   thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
 252:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 253:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadTerminate shall be consistent in every CMSIS-RTOS.
 254:FreeRTOS/src/cmsis_os.c **** */
 255:FreeRTOS/src/cmsis_os.c **** osStatus osThreadTerminate (osThreadId thread_id)
 256:FreeRTOS/src/cmsis_os.c **** {
 358              		.loc 1 256 1 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 257:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_vTaskDelete == 1)
 258:FreeRTOS/src/cmsis_os.c ****   vTaskDelete(thread_id);
 259:FreeRTOS/src/cmsis_os.c ****   return osOK;
 260:FreeRTOS/src/cmsis_os.c **** #else
 261:FreeRTOS/src/cmsis_os.c ****   return osErrorOS;
 363              		.loc 1 261 3 view .LVU69
 262:FreeRTOS/src/cmsis_os.c **** #endif
 263:FreeRTOS/src/cmsis_os.c **** }
 364              		.loc 1 263 1 is_stmt 0 view .LVU70
 365 0000 FF20     		movs	r0, #255
 366              	.LVL22:
 367              		.loc 1 263 1 view .LVU71
 368 0002 7047     		bx	lr
 369              		.cfi_endproc
 370              	.LFE56:
 372              		.section	.text.osThreadYield,"ax",%progbits
 373              		.align	1
 374              		.global	osThreadYield
 375              		.syntax unified
 376              		.thumb
 377              		.thumb_func
 378              		.fpu softvfp
 380              	osThreadYield:
 381              	.LFB57:
 264:FreeRTOS/src/cmsis_os.c **** 
 265:FreeRTOS/src/cmsis_os.c **** /**
 266:FreeRTOS/src/cmsis_os.c **** * @brief  Pass control to next thread that is in state \b READY.
 267:FreeRTOS/src/cmsis_os.c **** * @retval status code that indicates the execution status of the function.
 268:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadYield shall be consistent in every CMSIS-RTOS.
 269:FreeRTOS/src/cmsis_os.c **** */
 270:FreeRTOS/src/cmsis_os.c **** osStatus osThreadYield (void)
 271:FreeRTOS/src/cmsis_os.c **** {
 382              		.loc 1 271 1 is_stmt 1 view -0
 383              		.cfi_startproc
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 16


 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		@ link register save eliminated.
 272:FreeRTOS/src/cmsis_os.c ****   taskYIELD();
 387              		.loc 1 272 3 view .LVU73
 388 0000 044B     		ldr	r3, .L27
 389 0002 4FF08052 		mov	r2, #268435456
 390 0006 1A60     		str	r2, [r3]
 391              		.loc 1 272 3 view .LVU74
 392              		.syntax unified
 393              	@ 272 "FreeRTOS/src/cmsis_os.c" 1
 394 0008 BFF34F8F 		dsb
 395              	@ 0 "" 2
 396              		.loc 1 272 3 view .LVU75
 397              	@ 272 "FreeRTOS/src/cmsis_os.c" 1
 398 000c BFF36F8F 		isb
 399              	@ 0 "" 2
 400              		.loc 1 272 14 view .LVU76
 273:FreeRTOS/src/cmsis_os.c ****   
 274:FreeRTOS/src/cmsis_os.c ****   return osOK;
 401              		.loc 1 274 3 view .LVU77
 275:FreeRTOS/src/cmsis_os.c **** }
 402              		.loc 1 275 1 is_stmt 0 view .LVU78
 403              		.thumb
 404              		.syntax unified
 405 0010 0020     		movs	r0, #0
 406 0012 7047     		bx	lr
 407              	.L28:
 408              		.align	2
 409              	.L27:
 410 0014 04ED00E0 		.word	-536810236
 411              		.cfi_endproc
 412              	.LFE57:
 414              		.section	.text.osThreadSetPriority,"ax",%progbits
 415              		.align	1
 416              		.global	osThreadSetPriority
 417              		.syntax unified
 418              		.thumb
 419              		.thumb_func
 420              		.fpu softvfp
 422              	osThreadSetPriority:
 423              	.LVL23:
 424              	.LFB58:
 276:FreeRTOS/src/cmsis_os.c **** 
 277:FreeRTOS/src/cmsis_os.c **** /**
 278:FreeRTOS/src/cmsis_os.c **** * @brief   Change priority of an active thread.
 279:FreeRTOS/src/cmsis_os.c **** * @param   thread_id     thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
 280:FreeRTOS/src/cmsis_os.c **** * @param   priority      new priority value for the thread function.
 281:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 282:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadSetPriority shall be consistent in every CMSIS-RTOS.
 283:FreeRTOS/src/cmsis_os.c **** */
 284:FreeRTOS/src/cmsis_os.c **** osStatus osThreadSetPriority (osThreadId thread_id, osPriority priority)
 285:FreeRTOS/src/cmsis_os.c **** {
 425              		.loc 1 285 1 is_stmt 1 view -0
 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 17


 429              		.loc 1 285 1 is_stmt 0 view .LVU80
 430 0000 10B5     		push	{r4, lr}
 431              	.LCFI8:
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 4, -8
 434              		.cfi_offset 14, -4
 435 0002 0446     		mov	r4, r0
 286:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_vTaskPrioritySet == 1)
 287:FreeRTOS/src/cmsis_os.c ****   vTaskPrioritySet(thread_id, makeFreeRtosPriority(priority));
 436              		.loc 1 287 3 is_stmt 1 view .LVU81
 437 0004 0846     		mov	r0, r1
 438              	.LVL24:
 439              		.loc 1 287 3 is_stmt 0 view .LVU82
 440 0006 FFF7FEFF 		bl	makeFreeRtosPriority
 441              	.LVL25:
 442              		.loc 1 287 3 view .LVU83
 443 000a 0146     		mov	r1, r0
 444 000c 2046     		mov	r0, r4
 445 000e FFF7FEFF 		bl	vTaskPrioritySet
 446              	.LVL26:
 288:FreeRTOS/src/cmsis_os.c ****   return osOK;
 447              		.loc 1 288 3 is_stmt 1 view .LVU84
 289:FreeRTOS/src/cmsis_os.c **** #else
 290:FreeRTOS/src/cmsis_os.c ****   return osErrorOS;
 291:FreeRTOS/src/cmsis_os.c **** #endif
 292:FreeRTOS/src/cmsis_os.c **** }
 448              		.loc 1 292 1 is_stmt 0 view .LVU85
 449 0012 0020     		movs	r0, #0
 450 0014 10BD     		pop	{r4, pc}
 451              		.loc 1 292 1 view .LVU86
 452              		.cfi_endproc
 453              	.LFE58:
 455              		.section	.text.osThreadGetPriority,"ax",%progbits
 456              		.align	1
 457              		.global	osThreadGetPriority
 458              		.syntax unified
 459              		.thumb
 460              		.thumb_func
 461              		.fpu softvfp
 463              	osThreadGetPriority:
 464              	.LVL27:
 465              	.LFB59:
 293:FreeRTOS/src/cmsis_os.c **** 
 294:FreeRTOS/src/cmsis_os.c **** /**
 295:FreeRTOS/src/cmsis_os.c **** * @brief   Get current priority of an active thread.
 296:FreeRTOS/src/cmsis_os.c **** * @param   thread_id     thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
 297:FreeRTOS/src/cmsis_os.c **** * @retval  current priority value of the thread function.
 298:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadGetPriority shall be consistent in every CMSIS-RTOS.
 299:FreeRTOS/src/cmsis_os.c **** */
 300:FreeRTOS/src/cmsis_os.c **** osPriority osThreadGetPriority (osThreadId thread_id)
 301:FreeRTOS/src/cmsis_os.c **** {
 466              		.loc 1 301 1 is_stmt 1 view -0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              		.loc 1 301 1 is_stmt 0 view .LVU88
 471 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 18


 472              	.LCFI9:
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 4, -8
 475              		.cfi_offset 14, -4
 476 0002 0446     		mov	r4, r0
 302:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_uxTaskPriorityGet == 1)
 303:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode())
 477              		.loc 1 303 3 is_stmt 1 view .LVU89
 478              		.loc 1 303 7 is_stmt 0 view .LVU90
 479 0004 FFF7FEFF 		bl	inHandlerMode
 480              	.LVL28:
 481              		.loc 1 303 6 view .LVU91
 482 0008 28B1     		cbz	r0, .L32
 304:FreeRTOS/src/cmsis_os.c ****   {
 305:FreeRTOS/src/cmsis_os.c ****     return makeCmsisPriority(uxTaskPriorityGetFromISR(thread_id));  
 483              		.loc 1 305 5 is_stmt 1 view .LVU92
 484              		.loc 1 305 12 is_stmt 0 view .LVU93
 485 000a 2046     		mov	r0, r4
 486 000c FFF7FEFF 		bl	uxTaskPriorityGetFromISR
 487              	.LVL29:
 488 0010 FFF7FEFF 		bl	makeCmsisPriority
 489              	.LVL30:
 490              	.L33:
 306:FreeRTOS/src/cmsis_os.c ****   }
 307:FreeRTOS/src/cmsis_os.c ****   else
 308:FreeRTOS/src/cmsis_os.c ****   {  
 309:FreeRTOS/src/cmsis_os.c ****     return makeCmsisPriority(uxTaskPriorityGet(thread_id));
 310:FreeRTOS/src/cmsis_os.c ****   }
 311:FreeRTOS/src/cmsis_os.c **** #else
 312:FreeRTOS/src/cmsis_os.c ****   return osPriorityError;
 313:FreeRTOS/src/cmsis_os.c **** #endif
 314:FreeRTOS/src/cmsis_os.c **** }
 491              		.loc 1 314 1 view .LVU94
 492 0014 10BD     		pop	{r4, pc}
 493              	.LVL31:
 494              	.L32:
 309:FreeRTOS/src/cmsis_os.c ****   }
 495              		.loc 1 309 5 is_stmt 1 view .LVU95
 309:FreeRTOS/src/cmsis_os.c ****   }
 496              		.loc 1 309 12 is_stmt 0 view .LVU96
 497 0016 2046     		mov	r0, r4
 498 0018 FFF7FEFF 		bl	uxTaskPriorityGet
 499              	.LVL32:
 500 001c FFF7FEFF 		bl	makeCmsisPriority
 501              	.LVL33:
 502 0020 F8E7     		b	.L33
 503              		.cfi_endproc
 504              	.LFE59:
 506              		.section	.text.osDelay,"ax",%progbits
 507              		.align	1
 508              		.global	osDelay
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu softvfp
 514              	osDelay:
 515              	.LVL34:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 19


 516              	.LFB60:
 315:FreeRTOS/src/cmsis_os.c **** 
 316:FreeRTOS/src/cmsis_os.c **** /*********************** Generic Wait Functions *******************************/
 317:FreeRTOS/src/cmsis_os.c **** /**
 318:FreeRTOS/src/cmsis_os.c **** * @brief   Wait for Timeout (Time Delay)
 319:FreeRTOS/src/cmsis_os.c **** * @param   millisec      time delay value
 320:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 321:FreeRTOS/src/cmsis_os.c **** */
 322:FreeRTOS/src/cmsis_os.c **** osStatus osDelay (uint32_t millisec)
 323:FreeRTOS/src/cmsis_os.c **** {
 517              		.loc 1 323 1 is_stmt 1 view -0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 521              		.loc 1 323 1 is_stmt 0 view .LVU98
 522 0000 08B5     		push	{r3, lr}
 523              	.LCFI10:
 524              		.cfi_def_cfa_offset 8
 525              		.cfi_offset 3, -8
 526              		.cfi_offset 14, -4
 324:FreeRTOS/src/cmsis_os.c **** #if INCLUDE_vTaskDelay
 325:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks = millisec / portTICK_PERIOD_MS;
 527              		.loc 1 325 3 is_stmt 1 view .LVU99
 528              	.LVL35:
 326:FreeRTOS/src/cmsis_os.c ****   
 327:FreeRTOS/src/cmsis_os.c ****   vTaskDelay(ticks ? ticks : 1);          /* Minimum delay = 1 tick */
 529              		.loc 1 327 3 view .LVU100
 530 0002 0346     		mov	r3, r0
 531 0004 00B9     		cbnz	r0, .L36
 532 0006 0123     		movs	r3, #1
 533              	.L36:
 534              		.loc 1 327 3 is_stmt 0 discriminator 4 view .LVU101
 535 0008 1846     		mov	r0, r3
 536              	.LVL36:
 537              		.loc 1 327 3 discriminator 4 view .LVU102
 538 000a FFF7FEFF 		bl	vTaskDelay
 539              	.LVL37:
 328:FreeRTOS/src/cmsis_os.c ****   
 329:FreeRTOS/src/cmsis_os.c ****   return osOK;
 540              		.loc 1 329 3 is_stmt 1 discriminator 4 view .LVU103
 330:FreeRTOS/src/cmsis_os.c **** #else
 331:FreeRTOS/src/cmsis_os.c ****   (void) millisec;
 332:FreeRTOS/src/cmsis_os.c ****   
 333:FreeRTOS/src/cmsis_os.c ****   return osErrorResource;
 334:FreeRTOS/src/cmsis_os.c **** #endif
 335:FreeRTOS/src/cmsis_os.c **** }
 541              		.loc 1 335 1 is_stmt 0 discriminator 4 view .LVU104
 542 000e 0020     		movs	r0, #0
 543 0010 08BD     		pop	{r3, pc}
 544              		.cfi_endproc
 545              	.LFE60:
 547              		.section	.text.osTimerCreate,"ax",%progbits
 548              		.align	1
 549              		.global	osTimerCreate
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 20


 553              		.fpu softvfp
 555              	osTimerCreate:
 556              	.LVL38:
 557              	.LFB61:
 336:FreeRTOS/src/cmsis_os.c **** 
 337:FreeRTOS/src/cmsis_os.c **** #if (defined (osFeature_Wait)  &&  (osFeature_Wait != 0)) /* Generic Wait available */
 338:FreeRTOS/src/cmsis_os.c **** /**
 339:FreeRTOS/src/cmsis_os.c **** * @brief  Wait for Signal, Message, Mail, or Timeout
 340:FreeRTOS/src/cmsis_os.c **** * @param   millisec  timeout value or 0 in case of no time-out
 341:FreeRTOS/src/cmsis_os.c **** * @retval  event that contains signal, message, or mail information or error code.
 342:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osWait shall be consistent in every CMSIS-RTOS.
 343:FreeRTOS/src/cmsis_os.c **** */
 344:FreeRTOS/src/cmsis_os.c **** osEvent osWait (uint32_t millisec);
 345:FreeRTOS/src/cmsis_os.c **** 
 346:FreeRTOS/src/cmsis_os.c **** #endif  /* Generic Wait available */
 347:FreeRTOS/src/cmsis_os.c **** 
 348:FreeRTOS/src/cmsis_os.c **** /***********************  Timer Management Functions ***************************/
 349:FreeRTOS/src/cmsis_os.c **** /**
 350:FreeRTOS/src/cmsis_os.c **** * @brief  Create a timer.
 351:FreeRTOS/src/cmsis_os.c **** * @param  timer_def     timer object referenced with \ref osTimer.
 352:FreeRTOS/src/cmsis_os.c **** * @param  type          osTimerOnce for one-shot or osTimerPeriodic for periodic behavior.
 353:FreeRTOS/src/cmsis_os.c **** * @param  argument      argument to the timer call back function.
 354:FreeRTOS/src/cmsis_os.c **** * @retval  timer ID for reference by other functions or NULL in case of error.
 355:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osTimerCreate shall be consistent in every CMSIS-RTOS.
 356:FreeRTOS/src/cmsis_os.c **** */
 357:FreeRTOS/src/cmsis_os.c **** osTimerId osTimerCreate (const osTimerDef_t *timer_def, os_timer_type type, void *argument)
 358:FreeRTOS/src/cmsis_os.c **** {
 558              		.loc 1 358 1 is_stmt 1 view -0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 562              		.loc 1 358 1 is_stmt 0 view .LVU106
 563 0000 00B5     		push	{lr}
 564              	.LCFI11:
 565              		.cfi_def_cfa_offset 4
 566              		.cfi_offset 14, -4
 567 0002 83B0     		sub	sp, sp, #12
 568              	.LCFI12:
 569              		.cfi_def_cfa_offset 16
 570 0004 1346     		mov	r3, r2
 359:FreeRTOS/src/cmsis_os.c **** #if (configUSE_TIMERS == 1)
 360:FreeRTOS/src/cmsis_os.c **** 
 361:FreeRTOS/src/cmsis_os.c **** #if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) 
 362:FreeRTOS/src/cmsis_os.c ****   if(timer_def->controlblock != NULL) {
 363:FreeRTOS/src/cmsis_os.c ****     return xTimerCreateStatic((const char *)"",
 364:FreeRTOS/src/cmsis_os.c ****                       1, // period should be filled when starting the Timer using osTimerStart
 365:FreeRTOS/src/cmsis_os.c ****                       (type == osTimerPeriodic) ? pdTRUE : pdFALSE,
 366:FreeRTOS/src/cmsis_os.c ****                       (void *) argument,
 367:FreeRTOS/src/cmsis_os.c ****                       (TaskFunction_t)timer_def->ptimer,
 368:FreeRTOS/src/cmsis_os.c ****                       (StaticTimer_t *)timer_def->controlblock);
 369:FreeRTOS/src/cmsis_os.c ****   }
 370:FreeRTOS/src/cmsis_os.c ****   else {
 371:FreeRTOS/src/cmsis_os.c ****     return xTimerCreate((const char *)"",
 372:FreeRTOS/src/cmsis_os.c ****                       1, // period should be filled when starting the Timer using osTimerStart
 373:FreeRTOS/src/cmsis_os.c ****                       (type == osTimerPeriodic) ? pdTRUE : pdFALSE,
 374:FreeRTOS/src/cmsis_os.c ****                       (void *) argument,
 375:FreeRTOS/src/cmsis_os.c ****                       (TaskFunction_t)timer_def->ptimer);
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 21


 376:FreeRTOS/src/cmsis_os.c ****  }
 377:FreeRTOS/src/cmsis_os.c **** #elif( configSUPPORT_STATIC_ALLOCATION == 1 )
 378:FreeRTOS/src/cmsis_os.c ****   return xTimerCreateStatic((const char *)"",
 379:FreeRTOS/src/cmsis_os.c ****                       1, // period should be filled when starting the Timer using osTimerStart
 380:FreeRTOS/src/cmsis_os.c ****                       (type == osTimerPeriodic) ? pdTRUE : pdFALSE,
 381:FreeRTOS/src/cmsis_os.c ****                       (void *) argument,
 382:FreeRTOS/src/cmsis_os.c ****                       (TaskFunction_t)timer_def->ptimer,
 383:FreeRTOS/src/cmsis_os.c ****                       (StaticTimer_t *)timer_def->controlblock);  
 384:FreeRTOS/src/cmsis_os.c **** #else
 385:FreeRTOS/src/cmsis_os.c ****   return xTimerCreate((const char *)"",
 571              		.loc 1 385 3 is_stmt 1 view .LVU107
 572              		.loc 1 385 10 is_stmt 0 view .LVU108
 573 0006 0129     		cmp	r1, #1
 574 0008 09D0     		beq	.L43
 575 000a 0022     		movs	r2, #0
 576              	.LVL39:
 577              	.L40:
 386:FreeRTOS/src/cmsis_os.c ****                       1, // period should be filled when starting the Timer using osTimerStart
 387:FreeRTOS/src/cmsis_os.c ****                       (type == osTimerPeriodic) ? pdTRUE : pdFALSE,
 388:FreeRTOS/src/cmsis_os.c ****                       (void *) argument,
 389:FreeRTOS/src/cmsis_os.c ****                       (TaskFunction_t)timer_def->ptimer);
 578              		.loc 1 389 48 discriminator 4 view .LVU109
 579 000c 0168     		ldr	r1, [r0]
 580              	.LVL40:
 385:FreeRTOS/src/cmsis_os.c ****                       1, // period should be filled when starting the Timer using osTimerStart
 581              		.loc 1 385 10 discriminator 4 view .LVU110
 582 000e 0091     		str	r1, [sp]
 583 0010 0121     		movs	r1, #1
 584 0012 0448     		ldr	r0, .L44
 585              	.LVL41:
 385:FreeRTOS/src/cmsis_os.c ****                       1, // period should be filled when starting the Timer using osTimerStart
 586              		.loc 1 385 10 discriminator 4 view .LVU111
 587 0014 FFF7FEFF 		bl	xTimerCreate
 588              	.LVL42:
 390:FreeRTOS/src/cmsis_os.c **** #endif
 391:FreeRTOS/src/cmsis_os.c **** 
 392:FreeRTOS/src/cmsis_os.c **** #else 
 393:FreeRTOS/src/cmsis_os.c **** 	return NULL;
 394:FreeRTOS/src/cmsis_os.c **** #endif
 395:FreeRTOS/src/cmsis_os.c **** }
 589              		.loc 1 395 1 discriminator 4 view .LVU112
 590 0018 03B0     		add	sp, sp, #12
 591              	.LCFI13:
 592              		.cfi_remember_state
 593              		.cfi_def_cfa_offset 4
 594              		@ sp needed
 595 001a 5DF804FB 		ldr	pc, [sp], #4
 596              	.LVL43:
 597              	.L43:
 598              	.LCFI14:
 599              		.cfi_restore_state
 385:FreeRTOS/src/cmsis_os.c ****                       1, // period should be filled when starting the Timer using osTimerStart
 600              		.loc 1 385 10 view .LVU113
 601 001e 0122     		movs	r2, #1
 602              	.LVL44:
 385:FreeRTOS/src/cmsis_os.c ****                       1, // period should be filled when starting the Timer using osTimerStart
 603              		.loc 1 385 10 view .LVU114
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 22


 604 0020 F4E7     		b	.L40
 605              	.L45:
 606 0022 00BF     		.align	2
 607              	.L44:
 608 0024 00000000 		.word	.LC0
 609              		.cfi_endproc
 610              	.LFE61:
 612              		.section	.text.osTimerStart,"ax",%progbits
 613              		.align	1
 614              		.global	osTimerStart
 615              		.syntax unified
 616              		.thumb
 617              		.thumb_func
 618              		.fpu softvfp
 620              	osTimerStart:
 621              	.LVL45:
 622              	.LFB62:
 396:FreeRTOS/src/cmsis_os.c **** 
 397:FreeRTOS/src/cmsis_os.c **** /**
 398:FreeRTOS/src/cmsis_os.c **** * @brief  Start or restart a timer.
 399:FreeRTOS/src/cmsis_os.c **** * @param  timer_id      timer ID obtained by \ref osTimerCreate.
 400:FreeRTOS/src/cmsis_os.c **** * @param  millisec      time delay value of the timer.
 401:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function
 402:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osTimerStart shall be consistent in every CMSIS-RTOS.
 403:FreeRTOS/src/cmsis_os.c **** */
 404:FreeRTOS/src/cmsis_os.c **** osStatus osTimerStart (osTimerId timer_id, uint32_t millisec)
 405:FreeRTOS/src/cmsis_os.c **** {
 623              		.loc 1 405 1 is_stmt 1 view -0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 8
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		.loc 1 405 1 is_stmt 0 view .LVU116
 628 0000 30B5     		push	{r4, r5, lr}
 629              	.LCFI15:
 630              		.cfi_def_cfa_offset 12
 631              		.cfi_offset 4, -12
 632              		.cfi_offset 5, -8
 633              		.cfi_offset 14, -4
 634 0002 85B0     		sub	sp, sp, #20
 635              	.LCFI16:
 636              		.cfi_def_cfa_offset 32
 637 0004 0546     		mov	r5, r0
 406:FreeRTOS/src/cmsis_os.c ****   osStatus result = osOK;
 638              		.loc 1 406 3 is_stmt 1 view .LVU117
 639              	.LVL46:
 407:FreeRTOS/src/cmsis_os.c **** #if (configUSE_TIMERS == 1)  
 408:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 640              		.loc 1 408 3 view .LVU118
 641              		.loc 1 408 17 is_stmt 0 view .LVU119
 642 0006 0023     		movs	r3, #0
 643 0008 0393     		str	r3, [sp, #12]
 409:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks = millisec / portTICK_PERIOD_MS;
 644              		.loc 1 409 3 is_stmt 1 view .LVU120
 645              	.LVL47:
 410:FreeRTOS/src/cmsis_os.c **** 
 411:FreeRTOS/src/cmsis_os.c ****   if (ticks == 0)
 646              		.loc 1 411 3 view .LVU121
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 23


 647              		.loc 1 411 6 is_stmt 0 view .LVU122
 648 000a 0C46     		mov	r4, r1
 649 000c 01B9     		cbnz	r1, .L47
 412:FreeRTOS/src/cmsis_os.c ****     ticks = 1;
 650              		.loc 1 412 11 view .LVU123
 651 000e 0124     		movs	r4, #1
 652              	.L47:
 653              	.LVL48:
 413:FreeRTOS/src/cmsis_os.c ****     
 414:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) 
 654              		.loc 1 414 3 is_stmt 1 view .LVU124
 655              		.loc 1 414 7 is_stmt 0 view .LVU125
 656 0010 FFF7FEFF 		bl	inHandlerMode
 657              	.LVL49:
 658              		.loc 1 414 6 view .LVU126
 659 0014 C0B1     		cbz	r0, .L48
 415:FreeRTOS/src/cmsis_os.c ****   {
 416:FreeRTOS/src/cmsis_os.c ****     if (xTimerChangePeriodFromISR(timer_id, ticks, &taskWoken) != pdPASS)
 660              		.loc 1 416 5 is_stmt 1 view .LVU127
 661              		.loc 1 416 9 is_stmt 0 view .LVU128
 662 0016 0023     		movs	r3, #0
 663 0018 0093     		str	r3, [sp]
 664 001a 03AB     		add	r3, sp, #12
 665 001c 2246     		mov	r2, r4
 666 001e 0921     		movs	r1, #9
 667 0020 2846     		mov	r0, r5
 668 0022 FFF7FEFF 		bl	xTimerGenericCommand
 669              	.LVL50:
 670              		.loc 1 416 8 view .LVU129
 671 0026 0128     		cmp	r0, #1
 672 0028 02D0     		beq	.L55
 417:FreeRTOS/src/cmsis_os.c ****     {
 418:FreeRTOS/src/cmsis_os.c ****       result = osErrorOS;
 673              		.loc 1 418 14 view .LVU130
 674 002a FF20     		movs	r0, #255
 675              	.LVL51:
 676              	.L46:
 419:FreeRTOS/src/cmsis_os.c ****     }
 420:FreeRTOS/src/cmsis_os.c ****     else
 421:FreeRTOS/src/cmsis_os.c ****     {
 422:FreeRTOS/src/cmsis_os.c ****       portEND_SWITCHING_ISR(taskWoken);     
 423:FreeRTOS/src/cmsis_os.c ****     }
 424:FreeRTOS/src/cmsis_os.c ****   }
 425:FreeRTOS/src/cmsis_os.c ****   else 
 426:FreeRTOS/src/cmsis_os.c ****   {
 427:FreeRTOS/src/cmsis_os.c ****     if (xTimerChangePeriod(timer_id, ticks, 0) != pdPASS)
 428:FreeRTOS/src/cmsis_os.c ****       result = osErrorOS;
 429:FreeRTOS/src/cmsis_os.c ****   }
 430:FreeRTOS/src/cmsis_os.c **** 
 431:FreeRTOS/src/cmsis_os.c **** #else 
 432:FreeRTOS/src/cmsis_os.c ****   result = osErrorOS;
 433:FreeRTOS/src/cmsis_os.c **** #endif
 434:FreeRTOS/src/cmsis_os.c ****   return result;
 435:FreeRTOS/src/cmsis_os.c **** }
 677              		.loc 1 435 1 view .LVU131
 678 002c 05B0     		add	sp, sp, #20
 679              	.LCFI17:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 24


 680              		.cfi_remember_state
 681              		.cfi_def_cfa_offset 12
 682              		@ sp needed
 683 002e 30BD     		pop	{r4, r5, pc}
 684              	.LVL52:
 685              	.L55:
 686              	.LCFI18:
 687              		.cfi_restore_state
 422:FreeRTOS/src/cmsis_os.c ****     }
 688              		.loc 1 422 7 is_stmt 1 view .LVU132
 689 0030 039B     		ldr	r3, [sp, #12]
 690 0032 B3B1     		cbz	r3, .L52
 422:FreeRTOS/src/cmsis_os.c ****     }
 691              		.loc 1 422 7 discriminator 1 view .LVU133
 692 0034 0C4B     		ldr	r3, .L57
 693 0036 4FF08052 		mov	r2, #268435456
 694 003a 1A60     		str	r2, [r3]
 422:FreeRTOS/src/cmsis_os.c ****     }
 695              		.loc 1 422 7 discriminator 1 view .LVU134
 696              		.syntax unified
 697              	@ 422 "FreeRTOS/src/cmsis_os.c" 1
 698 003c BFF34F8F 		dsb
 699              	@ 0 "" 2
 422:FreeRTOS/src/cmsis_os.c ****     }
 700              		.loc 1 422 7 discriminator 1 view .LVU135
 701              	@ 422 "FreeRTOS/src/cmsis_os.c" 1
 702 0040 BFF36F8F 		isb
 703              	@ 0 "" 2
 406:FreeRTOS/src/cmsis_os.c **** #if (configUSE_TIMERS == 1)  
 704              		.loc 1 406 12 is_stmt 0 discriminator 1 view .LVU136
 705              		.thumb
 706              		.syntax unified
 707 0044 0020     		movs	r0, #0
 708 0046 F1E7     		b	.L46
 709              	.L48:
 427:FreeRTOS/src/cmsis_os.c ****       result = osErrorOS;
 710              		.loc 1 427 5 is_stmt 1 view .LVU137
 427:FreeRTOS/src/cmsis_os.c ****       result = osErrorOS;
 711              		.loc 1 427 9 is_stmt 0 view .LVU138
 712 0048 0023     		movs	r3, #0
 713 004a 0093     		str	r3, [sp]
 714 004c 2246     		mov	r2, r4
 715 004e 0421     		movs	r1, #4
 716 0050 2846     		mov	r0, r5
 717 0052 FFF7FEFF 		bl	xTimerGenericCommand
 718              	.LVL53:
 427:FreeRTOS/src/cmsis_os.c ****       result = osErrorOS;
 719              		.loc 1 427 8 view .LVU139
 720 0056 0128     		cmp	r0, #1
 721 0058 01D0     		beq	.L56
 428:FreeRTOS/src/cmsis_os.c ****   }
 722              		.loc 1 428 14 view .LVU140
 723 005a FF20     		movs	r0, #255
 724              	.LVL54:
 434:FreeRTOS/src/cmsis_os.c **** }
 725              		.loc 1 434 3 is_stmt 1 view .LVU141
 434:FreeRTOS/src/cmsis_os.c **** }
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 25


 726              		.loc 1 434 10 is_stmt 0 view .LVU142
 727 005c E6E7     		b	.L46
 728              	.LVL55:
 729              	.L56:
 406:FreeRTOS/src/cmsis_os.c **** #if (configUSE_TIMERS == 1)  
 730              		.loc 1 406 12 view .LVU143
 731 005e 0020     		movs	r0, #0
 732 0060 E4E7     		b	.L46
 733              	.L52:
 406:FreeRTOS/src/cmsis_os.c **** #if (configUSE_TIMERS == 1)  
 734              		.loc 1 406 12 view .LVU144
 735 0062 0020     		movs	r0, #0
 736 0064 E2E7     		b	.L46
 737              	.L58:
 738 0066 00BF     		.align	2
 739              	.L57:
 740 0068 04ED00E0 		.word	-536810236
 741              		.cfi_endproc
 742              	.LFE62:
 744              		.section	.text.osTimerStop,"ax",%progbits
 745              		.align	1
 746              		.global	osTimerStop
 747              		.syntax unified
 748              		.thumb
 749              		.thumb_func
 750              		.fpu softvfp
 752              	osTimerStop:
 753              	.LVL56:
 754              	.LFB63:
 436:FreeRTOS/src/cmsis_os.c **** 
 437:FreeRTOS/src/cmsis_os.c **** /**
 438:FreeRTOS/src/cmsis_os.c **** * @brief  Stop a timer.
 439:FreeRTOS/src/cmsis_os.c **** * @param  timer_id      timer ID obtained by \ref osTimerCreate
 440:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 441:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osTimerStop shall be consistent in every CMSIS-RTOS.
 442:FreeRTOS/src/cmsis_os.c **** */
 443:FreeRTOS/src/cmsis_os.c **** osStatus osTimerStop (osTimerId timer_id)
 444:FreeRTOS/src/cmsis_os.c **** {
 755              		.loc 1 444 1 is_stmt 1 view -0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 8
 758              		@ frame_needed = 0, uses_anonymous_args = 0
 759              		.loc 1 444 1 is_stmt 0 view .LVU146
 760 0000 10B5     		push	{r4, lr}
 761              	.LCFI19:
 762              		.cfi_def_cfa_offset 8
 763              		.cfi_offset 4, -8
 764              		.cfi_offset 14, -4
 765 0002 84B0     		sub	sp, sp, #16
 766              	.LCFI20:
 767              		.cfi_def_cfa_offset 24
 768 0004 0446     		mov	r4, r0
 445:FreeRTOS/src/cmsis_os.c ****   osStatus result = osOK;
 769              		.loc 1 445 3 is_stmt 1 view .LVU147
 770              	.LVL57:
 446:FreeRTOS/src/cmsis_os.c **** #if (configUSE_TIMERS == 1)  
 447:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 26


 771              		.loc 1 447 3 view .LVU148
 772              		.loc 1 447 17 is_stmt 0 view .LVU149
 773 0006 0023     		movs	r3, #0
 774 0008 0393     		str	r3, [sp, #12]
 448:FreeRTOS/src/cmsis_os.c **** 
 449:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 775              		.loc 1 449 3 is_stmt 1 view .LVU150
 776              		.loc 1 449 7 is_stmt 0 view .LVU151
 777 000a FFF7FEFF 		bl	inHandlerMode
 778              	.LVL58:
 779              		.loc 1 449 6 view .LVU152
 780 000e A0B1     		cbz	r0, .L60
 450:FreeRTOS/src/cmsis_os.c ****     if (xTimerStopFromISR(timer_id, &taskWoken) != pdPASS) {
 781              		.loc 1 450 5 is_stmt 1 view .LVU153
 782              		.loc 1 450 9 is_stmt 0 view .LVU154
 783 0010 0022     		movs	r2, #0
 784 0012 0092     		str	r2, [sp]
 785 0014 03AB     		add	r3, sp, #12
 786 0016 0821     		movs	r1, #8
 787 0018 2046     		mov	r0, r4
 788 001a FFF7FEFF 		bl	xTimerGenericCommand
 789              	.LVL59:
 790              		.loc 1 450 8 view .LVU155
 791 001e 0128     		cmp	r0, #1
 792 0020 19D1     		bne	.L62
 451:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 452:FreeRTOS/src/cmsis_os.c ****     }
 453:FreeRTOS/src/cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 793              		.loc 1 453 5 is_stmt 1 view .LVU156
 794 0022 039B     		ldr	r3, [sp, #12]
 795 0024 CBB1     		cbz	r3, .L63
 796              		.loc 1 453 5 discriminator 1 view .LVU157
 797 0026 0E4B     		ldr	r3, .L67
 798 0028 4FF08052 		mov	r2, #268435456
 799 002c 1A60     		str	r2, [r3]
 800              		.loc 1 453 5 discriminator 1 view .LVU158
 801              		.syntax unified
 802              	@ 453 "FreeRTOS/src/cmsis_os.c" 1
 803 002e BFF34F8F 		dsb
 804              	@ 0 "" 2
 805              		.loc 1 453 5 discriminator 1 view .LVU159
 806              	@ 453 "FreeRTOS/src/cmsis_os.c" 1
 807 0032 BFF36F8F 		isb
 808              	@ 0 "" 2
 445:FreeRTOS/src/cmsis_os.c **** #if (configUSE_TIMERS == 1)  
 809              		.loc 1 445 12 is_stmt 0 discriminator 1 view .LVU160
 810              		.thumb
 811              		.syntax unified
 812 0036 0020     		movs	r0, #0
 813 0038 09E0     		b	.L59
 814              	.L60:
 454:FreeRTOS/src/cmsis_os.c ****   }
 455:FreeRTOS/src/cmsis_os.c ****   else {
 456:FreeRTOS/src/cmsis_os.c ****     if (xTimerStop(timer_id, 0) != pdPASS) {
 815              		.loc 1 456 5 is_stmt 1 view .LVU161
 816              		.loc 1 456 9 is_stmt 0 view .LVU162
 817 003a 0022     		movs	r2, #0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 27


 818 003c 0092     		str	r2, [sp]
 819 003e 1346     		mov	r3, r2
 820 0040 0321     		movs	r1, #3
 821 0042 2046     		mov	r0, r4
 822 0044 FFF7FEFF 		bl	xTimerGenericCommand
 823              	.LVL60:
 824              		.loc 1 456 8 view .LVU163
 825 0048 0128     		cmp	r0, #1
 826 004a 02D0     		beq	.L66
 457:FreeRTOS/src/cmsis_os.c ****       result = osErrorOS;
 827              		.loc 1 457 14 view .LVU164
 828 004c FF20     		movs	r0, #255
 829              	.L59:
 458:FreeRTOS/src/cmsis_os.c ****     }
 459:FreeRTOS/src/cmsis_os.c ****   }
 460:FreeRTOS/src/cmsis_os.c **** #else 
 461:FreeRTOS/src/cmsis_os.c ****   result = osErrorOS;
 462:FreeRTOS/src/cmsis_os.c **** #endif 
 463:FreeRTOS/src/cmsis_os.c ****   return result;
 464:FreeRTOS/src/cmsis_os.c **** }
 830              		.loc 1 464 1 view .LVU165
 831 004e 04B0     		add	sp, sp, #16
 832              	.LCFI21:
 833              		.cfi_remember_state
 834              		.cfi_def_cfa_offset 8
 835              		@ sp needed
 836 0050 10BD     		pop	{r4, pc}
 837              	.LVL61:
 838              	.L66:
 839              	.LCFI22:
 840              		.cfi_restore_state
 445:FreeRTOS/src/cmsis_os.c **** #if (configUSE_TIMERS == 1)  
 841              		.loc 1 445 12 view .LVU166
 842 0052 0020     		movs	r0, #0
 843 0054 FBE7     		b	.L59
 844              	.L62:
 451:FreeRTOS/src/cmsis_os.c ****     }
 845              		.loc 1 451 14 view .LVU167
 846 0056 FF20     		movs	r0, #255
 847 0058 F9E7     		b	.L59
 848              	.L63:
 445:FreeRTOS/src/cmsis_os.c **** #if (configUSE_TIMERS == 1)  
 849              		.loc 1 445 12 view .LVU168
 850 005a 0020     		movs	r0, #0
 851 005c F7E7     		b	.L59
 852              	.L68:
 853 005e 00BF     		.align	2
 854              	.L67:
 855 0060 04ED00E0 		.word	-536810236
 856              		.cfi_endproc
 857              	.LFE63:
 859              		.section	.text.osTimerDelete,"ax",%progbits
 860              		.align	1
 861              		.global	osTimerDelete
 862              		.syntax unified
 863              		.thumb
 864              		.thumb_func
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 28


 865              		.fpu softvfp
 867              	osTimerDelete:
 868              	.LVL62:
 869              	.LFB64:
 465:FreeRTOS/src/cmsis_os.c **** 
 466:FreeRTOS/src/cmsis_os.c **** /**
 467:FreeRTOS/src/cmsis_os.c **** * @brief  Delete a timer.
 468:FreeRTOS/src/cmsis_os.c **** * @param  timer_id      timer ID obtained by \ref osTimerCreate
 469:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 470:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osTimerDelete shall be consistent in every CMSIS-RTOS.
 471:FreeRTOS/src/cmsis_os.c **** */
 472:FreeRTOS/src/cmsis_os.c **** osStatus osTimerDelete (osTimerId timer_id)
 473:FreeRTOS/src/cmsis_os.c **** {
 870              		.loc 1 473 1 is_stmt 1 view -0
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 0
 873              		@ frame_needed = 0, uses_anonymous_args = 0
 874              		.loc 1 473 1 is_stmt 0 view .LVU170
 875 0000 10B5     		push	{r4, lr}
 876              	.LCFI23:
 877              		.cfi_def_cfa_offset 8
 878              		.cfi_offset 4, -8
 879              		.cfi_offset 14, -4
 880 0002 82B0     		sub	sp, sp, #8
 881              	.LCFI24:
 882              		.cfi_def_cfa_offset 16
 883 0004 0446     		mov	r4, r0
 474:FreeRTOS/src/cmsis_os.c **** osStatus result = osOK;
 884              		.loc 1 474 1 is_stmt 1 view .LVU171
 885              	.LVL63:
 475:FreeRTOS/src/cmsis_os.c **** 
 476:FreeRTOS/src/cmsis_os.c **** #if (configUSE_TIMERS == 1)
 477:FreeRTOS/src/cmsis_os.c **** 
 478:FreeRTOS/src/cmsis_os.c ****    if (inHandlerMode()) {
 886              		.loc 1 478 4 view .LVU172
 887              		.loc 1 478 8 is_stmt 0 view .LVU173
 888 0006 FFF7FEFF 		bl	inHandlerMode
 889              	.LVL64:
 890              		.loc 1 478 7 view .LVU174
 891 000a 70B9     		cbnz	r0, .L71
 479:FreeRTOS/src/cmsis_os.c ****      return osErrorISR;
 480:FreeRTOS/src/cmsis_os.c ****   }
 481:FreeRTOS/src/cmsis_os.c ****   else { 
 482:FreeRTOS/src/cmsis_os.c ****     if ((xTimerDelete(timer_id, osWaitForever )) != pdPASS) {
 892              		.loc 1 482 5 is_stmt 1 view .LVU175
 893              		.loc 1 482 10 is_stmt 0 view .LVU176
 894 000c 4FF0FF33 		mov	r3, #-1
 895 0010 0093     		str	r3, [sp]
 896 0012 0023     		movs	r3, #0
 897 0014 1A46     		mov	r2, r3
 898 0016 0521     		movs	r1, #5
 899 0018 2046     		mov	r0, r4
 900 001a FFF7FEFF 		bl	xTimerGenericCommand
 901              	.LVL65:
 902              		.loc 1 482 8 view .LVU177
 903 001e 0128     		cmp	r0, #1
 904 0020 01D0     		beq	.L74
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 29


 483:FreeRTOS/src/cmsis_os.c ****       result = osErrorOS;
 905              		.loc 1 483 14 view .LVU178
 906 0022 FF20     		movs	r0, #255
 907 0024 02E0     		b	.L69
 908              	.L74:
 474:FreeRTOS/src/cmsis_os.c **** 
 909              		.loc 1 474 10 view .LVU179
 910 0026 0020     		movs	r0, #0
 911 0028 00E0     		b	.L69
 912              	.L71:
 479:FreeRTOS/src/cmsis_os.c ****      return osErrorISR;
 913              		.loc 1 479 13 view .LVU180
 914 002a 8220     		movs	r0, #130
 915              	.L69:
 484:FreeRTOS/src/cmsis_os.c ****     }
 485:FreeRTOS/src/cmsis_os.c ****   } 
 486:FreeRTOS/src/cmsis_os.c ****     
 487:FreeRTOS/src/cmsis_os.c **** #else 
 488:FreeRTOS/src/cmsis_os.c ****   result = osErrorOS;
 489:FreeRTOS/src/cmsis_os.c **** #endif 
 490:FreeRTOS/src/cmsis_os.c ****  
 491:FreeRTOS/src/cmsis_os.c ****   return result;
 492:FreeRTOS/src/cmsis_os.c **** }
 916              		.loc 1 492 1 view .LVU181
 917 002c 02B0     		add	sp, sp, #8
 918              	.LCFI25:
 919              		.cfi_def_cfa_offset 8
 920              		@ sp needed
 921 002e 10BD     		pop	{r4, pc}
 922              		.loc 1 492 1 view .LVU182
 923              		.cfi_endproc
 924              	.LFE64:
 926              		.section	.text.osSignalSet,"ax",%progbits
 927              		.align	1
 928              		.global	osSignalSet
 929              		.syntax unified
 930              		.thumb
 931              		.thumb_func
 932              		.fpu softvfp
 934              	osSignalSet:
 935              	.LVL66:
 936              	.LFB65:
 493:FreeRTOS/src/cmsis_os.c **** 
 494:FreeRTOS/src/cmsis_os.c **** /***************************  Signal Management ********************************/
 495:FreeRTOS/src/cmsis_os.c **** /**
 496:FreeRTOS/src/cmsis_os.c **** * @brief  Set the specified Signal Flags of an active thread.
 497:FreeRTOS/src/cmsis_os.c **** * @param  thread_id     thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
 498:FreeRTOS/src/cmsis_os.c **** * @param  signals       specifies the signal flags of the thread that should be set.
 499:FreeRTOS/src/cmsis_os.c **** * @retval previous signal flags of the specified thread or 0x80000000 in case of incorrect paramete
 500:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSignalSet shall be consistent in every CMSIS-RTOS.
 501:FreeRTOS/src/cmsis_os.c **** */
 502:FreeRTOS/src/cmsis_os.c **** int32_t osSignalSet (osThreadId thread_id, int32_t signal)
 503:FreeRTOS/src/cmsis_os.c **** {
 937              		.loc 1 503 1 is_stmt 1 view -0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 8
 940              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 30


 941              		.loc 1 503 1 is_stmt 0 view .LVU184
 942 0000 30B5     		push	{r4, r5, lr}
 943              	.LCFI26:
 944              		.cfi_def_cfa_offset 12
 945              		.cfi_offset 4, -12
 946              		.cfi_offset 5, -8
 947              		.cfi_offset 14, -4
 948 0002 85B0     		sub	sp, sp, #20
 949              	.LCFI27:
 950              		.cfi_def_cfa_offset 32
 951 0004 0446     		mov	r4, r0
 952 0006 0D46     		mov	r5, r1
 504:FreeRTOS/src/cmsis_os.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )	
 505:FreeRTOS/src/cmsis_os.c ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 953              		.loc 1 505 3 is_stmt 1 view .LVU185
 954              		.loc 1 505 14 is_stmt 0 view .LVU186
 955 0008 0023     		movs	r3, #0
 956 000a 0393     		str	r3, [sp, #12]
 506:FreeRTOS/src/cmsis_os.c ****   uint32_t ulPreviousNotificationValue = 0;
 957              		.loc 1 506 3 is_stmt 1 view .LVU187
 958              		.loc 1 506 12 is_stmt 0 view .LVU188
 959 000c 0293     		str	r3, [sp, #8]
 507:FreeRTOS/src/cmsis_os.c ****   
 508:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode())
 960              		.loc 1 508 3 is_stmt 1 view .LVU189
 961              		.loc 1 508 7 is_stmt 0 view .LVU190
 962 000e FFF7FEFF 		bl	inHandlerMode
 963              	.LVL67:
 964              		.loc 1 508 6 view .LVU191
 965 0012 A0B1     		cbz	r0, .L76
 509:FreeRTOS/src/cmsis_os.c ****   {
 510:FreeRTOS/src/cmsis_os.c ****     if(xTaskGenericNotifyFromISR( thread_id , (uint32_t)signal, eSetBits, &ulPreviousNotificationVa
 966              		.loc 1 510 5 is_stmt 1 view .LVU192
 967              		.loc 1 510 8 is_stmt 0 view .LVU193
 968 0014 03AB     		add	r3, sp, #12
 969 0016 0093     		str	r3, [sp]
 970 0018 02AB     		add	r3, sp, #8
 971 001a 0122     		movs	r2, #1
 972 001c 2946     		mov	r1, r5
 973 001e 2046     		mov	r0, r4
 974 0020 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 975              	.LVL68:
 976              		.loc 1 510 7 view .LVU194
 977 0024 0128     		cmp	r0, #1
 978 0026 15D1     		bne	.L79
 511:FreeRTOS/src/cmsis_os.c ****       return 0x80000000;
 512:FreeRTOS/src/cmsis_os.c ****     
 513:FreeRTOS/src/cmsis_os.c ****     portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 979              		.loc 1 513 5 is_stmt 1 view .LVU195
 980 0028 039B     		ldr	r3, [sp, #12]
 981 002a 83B1     		cbz	r3, .L78
 982              		.loc 1 513 5 discriminator 1 view .LVU196
 983 002c 0C4B     		ldr	r3, .L82
 984 002e 4FF08052 		mov	r2, #268435456
 985 0032 1A60     		str	r2, [r3]
 986              		.loc 1 513 5 discriminator 1 view .LVU197
 987              		.syntax unified
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 31


 988              	@ 513 "FreeRTOS/src/cmsis_os.c" 1
 989 0034 BFF34F8F 		dsb
 990              	@ 0 "" 2
 991              		.loc 1 513 5 discriminator 1 view .LVU198
 992              	@ 513 "FreeRTOS/src/cmsis_os.c" 1
 993 0038 BFF36F8F 		isb
 994              	@ 0 "" 2
 995              		.thumb
 996              		.syntax unified
 997 003c 07E0     		b	.L78
 998              	.L76:
 514:FreeRTOS/src/cmsis_os.c ****   }  
 515:FreeRTOS/src/cmsis_os.c ****   else if(xTaskGenericNotify( thread_id , (uint32_t)signal, eSetBits, &ulPreviousNotificationValue)
 999              		.loc 1 515 8 view .LVU199
 1000              		.loc 1 515 11 is_stmt 0 view .LVU200
 1001 003e 02AB     		add	r3, sp, #8
 1002 0040 0122     		movs	r2, #1
 1003 0042 2946     		mov	r1, r5
 1004 0044 2046     		mov	r0, r4
 1005 0046 FFF7FEFF 		bl	xTaskGenericNotify
 1006              	.LVL69:
 1007              		.loc 1 515 10 view .LVU201
 1008 004a 0128     		cmp	r0, #1
 1009 004c 05D1     		bne	.L80
 1010              	.L78:
 516:FreeRTOS/src/cmsis_os.c ****     return 0x80000000;
 517:FreeRTOS/src/cmsis_os.c ****   
 518:FreeRTOS/src/cmsis_os.c ****   return ulPreviousNotificationValue;
 1011              		.loc 1 518 3 is_stmt 1 view .LVU202
 1012              		.loc 1 518 10 is_stmt 0 view .LVU203
 1013 004e 0298     		ldr	r0, [sp, #8]
 1014              	.L75:
 519:FreeRTOS/src/cmsis_os.c **** #else
 520:FreeRTOS/src/cmsis_os.c ****   (void) thread_id;
 521:FreeRTOS/src/cmsis_os.c ****   (void) signal;
 522:FreeRTOS/src/cmsis_os.c **** 
 523:FreeRTOS/src/cmsis_os.c ****   return 0x80000000; /* Task Notification not supported */ 	
 524:FreeRTOS/src/cmsis_os.c **** #endif
 525:FreeRTOS/src/cmsis_os.c **** }
 1015              		.loc 1 525 1 view .LVU204
 1016 0050 05B0     		add	sp, sp, #20
 1017              	.LCFI28:
 1018              		.cfi_remember_state
 1019              		.cfi_def_cfa_offset 12
 1020              		@ sp needed
 1021 0052 30BD     		pop	{r4, r5, pc}
 1022              	.LVL70:
 1023              	.L79:
 1024              	.LCFI29:
 1025              		.cfi_restore_state
 511:FreeRTOS/src/cmsis_os.c ****     
 1026              		.loc 1 511 14 view .LVU205
 1027 0054 4FF00040 		mov	r0, #-2147483648
 1028 0058 FAE7     		b	.L75
 1029              	.L80:
 516:FreeRTOS/src/cmsis_os.c ****     return 0x80000000;
 1030              		.loc 1 516 12 view .LVU206
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 32


 1031 005a 4FF00040 		mov	r0, #-2147483648
 1032 005e F7E7     		b	.L75
 1033              	.L83:
 1034              		.align	2
 1035              	.L82:
 1036 0060 04ED00E0 		.word	-536810236
 1037              		.cfi_endproc
 1038              	.LFE65:
 1040              		.section	.text.osSignalWait,"ax",%progbits
 1041              		.align	1
 1042              		.global	osSignalWait
 1043              		.syntax unified
 1044              		.thumb
 1045              		.thumb_func
 1046              		.fpu softvfp
 1048              	osSignalWait:
 1049              	.LVL71:
 1050              	.LFB66:
 526:FreeRTOS/src/cmsis_os.c **** 
 527:FreeRTOS/src/cmsis_os.c **** /**
 528:FreeRTOS/src/cmsis_os.c **** * @brief  Clear the specified Signal Flags of an active thread.
 529:FreeRTOS/src/cmsis_os.c **** * @param  thread_id  thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
 530:FreeRTOS/src/cmsis_os.c **** * @param  signals    specifies the signal flags of the thread that shall be cleared.
 531:FreeRTOS/src/cmsis_os.c **** * @retval  previous signal flags of the specified thread or 0x80000000 in case of incorrect paramet
 532:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSignalClear shall be consistent in every CMSIS-RTOS.
 533:FreeRTOS/src/cmsis_os.c **** */
 534:FreeRTOS/src/cmsis_os.c **** int32_t osSignalClear (osThreadId thread_id, int32_t signal);
 535:FreeRTOS/src/cmsis_os.c **** 
 536:FreeRTOS/src/cmsis_os.c **** /**
 537:FreeRTOS/src/cmsis_os.c **** * @brief  Wait for one or more Signal Flags to become signaled for the current \b RUNNING thread.
 538:FreeRTOS/src/cmsis_os.c **** * @param  signals   wait until all specified signal flags set or 0 for any single signal flag.
 539:FreeRTOS/src/cmsis_os.c **** * @param  millisec  timeout value or 0 in case of no time-out.
 540:FreeRTOS/src/cmsis_os.c **** * @retval  event flag information or error code.
 541:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSignalWait shall be consistent in every CMSIS-RTOS.
 542:FreeRTOS/src/cmsis_os.c **** */
 543:FreeRTOS/src/cmsis_os.c **** osEvent osSignalWait (int32_t signals, uint32_t millisec)
 544:FreeRTOS/src/cmsis_os.c **** {
 1051              		.loc 1 544 1 is_stmt 1 view -0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 16
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055              		.loc 1 544 1 is_stmt 0 view .LVU208
 1056 0000 70B5     		push	{r4, r5, r6, lr}
 1057              	.LCFI30:
 1058              		.cfi_def_cfa_offset 16
 1059              		.cfi_offset 4, -16
 1060              		.cfi_offset 5, -12
 1061              		.cfi_offset 6, -8
 1062              		.cfi_offset 14, -4
 1063 0002 84B0     		sub	sp, sp, #16
 1064              	.LCFI31:
 1065              		.cfi_def_cfa_offset 32
 1066 0004 0446     		mov	r4, r0
 1067 0006 0E46     		mov	r6, r1
 545:FreeRTOS/src/cmsis_os.c ****   osEvent ret;
 1068              		.loc 1 545 3 is_stmt 1 view .LVU209
 546:FreeRTOS/src/cmsis_os.c **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 33


 547:FreeRTOS/src/cmsis_os.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
 548:FreeRTOS/src/cmsis_os.c **** 	
 549:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 1069              		.loc 1 549 3 view .LVU210
 550:FreeRTOS/src/cmsis_os.c **** 
 551:FreeRTOS/src/cmsis_os.c ****   ret.value.signals = 0;  
 1070              		.loc 1 551 3 view .LVU211
 1071              		.loc 1 551 21 is_stmt 0 view .LVU212
 1072 0008 0023     		movs	r3, #0
 1073 000a 0293     		str	r3, [sp, #8]
 552:FreeRTOS/src/cmsis_os.c ****   ticks = 0;
 1074              		.loc 1 552 3 is_stmt 1 view .LVU213
 1075              	.LVL72:
 553:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 1076              		.loc 1 553 3 view .LVU214
 1077              		.loc 1 553 6 is_stmt 0 view .LVU215
 1078 000c B2F1FF3F 		cmp	r2, #-1
 1079 0010 03D0     		beq	.L91
 1080 0012 1546     		mov	r5, r2
 554:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
 555:FreeRTOS/src/cmsis_os.c ****   }
 556:FreeRTOS/src/cmsis_os.c ****   else if (millisec != 0) {
 1081              		.loc 1 556 8 is_stmt 1 view .LVU216
 1082              		.loc 1 556 11 is_stmt 0 view .LVU217
 1083 0014 1AB9     		cbnz	r2, .L85
 552:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 1084              		.loc 1 552 9 view .LVU218
 1085 0016 1D46     		mov	r5, r3
 1086 0018 01E0     		b	.L85
 1087              	.L91:
 554:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
 1088              		.loc 1 554 11 view .LVU219
 1089 001a 4FF0FF35 		mov	r5, #-1
 1090              	.L85:
 1091              	.LVL73:
 557:FreeRTOS/src/cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
 558:FreeRTOS/src/cmsis_os.c ****     if (ticks == 0) {
 559:FreeRTOS/src/cmsis_os.c ****       ticks = 1;
 560:FreeRTOS/src/cmsis_os.c ****     }
 561:FreeRTOS/src/cmsis_os.c ****   }  
 562:FreeRTOS/src/cmsis_os.c ****   
 563:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode())
 1092              		.loc 1 563 3 is_stmt 1 view .LVU220
 1093              		.loc 1 563 7 is_stmt 0 view .LVU221
 1094 001e FFF7FEFF 		bl	inHandlerMode
 1095              	.LVL74:
 1096              		.loc 1 563 6 view .LVU222
 1097 0022 48B1     		cbz	r0, .L86
 564:FreeRTOS/src/cmsis_os.c ****   {
 565:FreeRTOS/src/cmsis_os.c ****     ret.status = osErrorISR;  /*Not allowed in ISR*/
 1098              		.loc 1 565 5 is_stmt 1 view .LVU223
 1099              		.loc 1 565 16 is_stmt 0 view .LVU224
 1100 0024 8223     		movs	r3, #130
 1101 0026 0193     		str	r3, [sp, #4]
 1102              	.L87:
 566:FreeRTOS/src/cmsis_os.c ****   }
 567:FreeRTOS/src/cmsis_os.c ****   else
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 34


 568:FreeRTOS/src/cmsis_os.c ****   {
 569:FreeRTOS/src/cmsis_os.c ****     if(xTaskNotifyWait( 0,(uint32_t) signals, (uint32_t *)&ret.value.signals, ticks) != pdTRUE)
 570:FreeRTOS/src/cmsis_os.c ****     {
 571:FreeRTOS/src/cmsis_os.c ****       if(ticks == 0)  ret.status = osOK;
 572:FreeRTOS/src/cmsis_os.c ****       else  ret.status = osEventTimeout;
 573:FreeRTOS/src/cmsis_os.c ****     }
 574:FreeRTOS/src/cmsis_os.c ****     else if(ret.value.signals < 0)
 575:FreeRTOS/src/cmsis_os.c ****     {
 576:FreeRTOS/src/cmsis_os.c ****       ret.status =  osErrorValue;     
 577:FreeRTOS/src/cmsis_os.c ****     }
 578:FreeRTOS/src/cmsis_os.c ****     else  ret.status =  osEventSignal;
 579:FreeRTOS/src/cmsis_os.c ****   }
 580:FreeRTOS/src/cmsis_os.c **** #else
 581:FreeRTOS/src/cmsis_os.c ****   (void) signals;
 582:FreeRTOS/src/cmsis_os.c ****   (void) millisec;
 583:FreeRTOS/src/cmsis_os.c **** 	
 584:FreeRTOS/src/cmsis_os.c ****   ret.status =  osErrorOS;	/* Task Notification not supported */
 585:FreeRTOS/src/cmsis_os.c **** #endif
 586:FreeRTOS/src/cmsis_os.c ****   
 587:FreeRTOS/src/cmsis_os.c ****   return ret;
 1103              		.loc 1 587 3 is_stmt 1 view .LVU225
 1104              		.loc 1 587 10 is_stmt 0 view .LVU226
 1105 0028 04AB     		add	r3, sp, #16
 1106 002a 13E90700 		ldmdb	r3, {r0, r1, r2}
 1107 002e 84E80700 		stm	r4, {r0, r1, r2}
 588:FreeRTOS/src/cmsis_os.c **** }
 1108              		.loc 1 588 1 view .LVU227
 1109 0032 2046     		mov	r0, r4
 1110 0034 04B0     		add	sp, sp, #16
 1111              	.LCFI32:
 1112              		.cfi_remember_state
 1113              		.cfi_def_cfa_offset 16
 1114              		@ sp needed
 1115 0036 70BD     		pop	{r4, r5, r6, pc}
 1116              	.LVL75:
 1117              	.L86:
 1118              	.LCFI33:
 1119              		.cfi_restore_state
 569:FreeRTOS/src/cmsis_os.c ****     {
 1120              		.loc 1 569 5 is_stmt 1 view .LVU228
 569:FreeRTOS/src/cmsis_os.c ****     {
 1121              		.loc 1 569 8 is_stmt 0 view .LVU229
 1122 0038 2B46     		mov	r3, r5
 1123 003a 02AA     		add	r2, sp, #8
 1124 003c 3146     		mov	r1, r6
 1125 003e 0020     		movs	r0, #0
 1126 0040 FFF7FEFF 		bl	xTaskNotifyWait
 1127              	.LVL76:
 569:FreeRTOS/src/cmsis_os.c ****     {
 1128              		.loc 1 569 7 view .LVU230
 1129 0044 0128     		cmp	r0, #1
 1130 0046 06D0     		beq	.L88
 571:FreeRTOS/src/cmsis_os.c ****       else  ret.status = osEventTimeout;
 1131              		.loc 1 571 7 is_stmt 1 view .LVU231
 571:FreeRTOS/src/cmsis_os.c ****       else  ret.status = osEventTimeout;
 1132              		.loc 1 571 9 is_stmt 0 view .LVU232
 1133 0048 15B9     		cbnz	r5, .L89
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 35


 571:FreeRTOS/src/cmsis_os.c ****       else  ret.status = osEventTimeout;
 1134              		.loc 1 571 23 is_stmt 1 discriminator 1 view .LVU233
 571:FreeRTOS/src/cmsis_os.c ****       else  ret.status = osEventTimeout;
 1135              		.loc 1 571 34 is_stmt 0 discriminator 1 view .LVU234
 1136 004a 0023     		movs	r3, #0
 1137 004c 0193     		str	r3, [sp, #4]
 1138 004e EBE7     		b	.L87
 1139              	.L89:
 572:FreeRTOS/src/cmsis_os.c ****     }
 1140              		.loc 1 572 13 is_stmt 1 view .LVU235
 572:FreeRTOS/src/cmsis_os.c ****     }
 1141              		.loc 1 572 24 is_stmt 0 view .LVU236
 1142 0050 4023     		movs	r3, #64
 1143 0052 0193     		str	r3, [sp, #4]
 1144 0054 E8E7     		b	.L87
 1145              	.L88:
 574:FreeRTOS/src/cmsis_os.c ****     {
 1146              		.loc 1 574 10 is_stmt 1 view .LVU237
 574:FreeRTOS/src/cmsis_os.c ****     {
 1147              		.loc 1 574 22 is_stmt 0 view .LVU238
 1148 0056 029B     		ldr	r3, [sp, #8]
 574:FreeRTOS/src/cmsis_os.c ****     {
 1149              		.loc 1 574 12 view .LVU239
 1150 0058 002B     		cmp	r3, #0
 1151 005a 02DB     		blt	.L93
 578:FreeRTOS/src/cmsis_os.c ****   }
 1152              		.loc 1 578 11 is_stmt 1 view .LVU240
 578:FreeRTOS/src/cmsis_os.c ****   }
 1153              		.loc 1 578 22 is_stmt 0 view .LVU241
 1154 005c 0823     		movs	r3, #8
 1155 005e 0193     		str	r3, [sp, #4]
 1156 0060 E2E7     		b	.L87
 1157              	.L93:
 576:FreeRTOS/src/cmsis_os.c ****     }
 1158              		.loc 1 576 7 is_stmt 1 view .LVU242
 576:FreeRTOS/src/cmsis_os.c ****     }
 1159              		.loc 1 576 18 is_stmt 0 view .LVU243
 1160 0062 8623     		movs	r3, #134
 1161 0064 0193     		str	r3, [sp, #4]
 1162 0066 DFE7     		b	.L87
 1163              		.cfi_endproc
 1164              	.LFE66:
 1166              		.section	.text.osMutexCreate,"ax",%progbits
 1167              		.align	1
 1168              		.global	osMutexCreate
 1169              		.syntax unified
 1170              		.thumb
 1171              		.thumb_func
 1172              		.fpu softvfp
 1174              	osMutexCreate:
 1175              	.LVL77:
 1176              	.LFB67:
 589:FreeRTOS/src/cmsis_os.c **** 
 590:FreeRTOS/src/cmsis_os.c **** /****************************  Mutex Management ********************************/
 591:FreeRTOS/src/cmsis_os.c **** /**
 592:FreeRTOS/src/cmsis_os.c **** * @brief  Create and Initialize a Mutex object
 593:FreeRTOS/src/cmsis_os.c **** * @param  mutex_def     mutex definition referenced with \ref osMutex.
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 36


 594:FreeRTOS/src/cmsis_os.c **** * @retval  mutex ID for reference by other functions or NULL in case of error.
 595:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMutexCreate shall be consistent in every CMSIS-RTOS.
 596:FreeRTOS/src/cmsis_os.c **** */
 597:FreeRTOS/src/cmsis_os.c **** osMutexId osMutexCreate (const osMutexDef_t *mutex_def)
 598:FreeRTOS/src/cmsis_os.c **** {
 1177              		.loc 1 598 1 is_stmt 1 view -0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 0
 1180              		@ frame_needed = 0, uses_anonymous_args = 0
 1181              		.loc 1 598 1 is_stmt 0 view .LVU245
 1182 0000 08B5     		push	{r3, lr}
 1183              	.LCFI34:
 1184              		.cfi_def_cfa_offset 8
 1185              		.cfi_offset 3, -8
 1186              		.cfi_offset 14, -4
 599:FreeRTOS/src/cmsis_os.c **** #if ( configUSE_MUTEXES == 1)
 600:FreeRTOS/src/cmsis_os.c **** 
 601:FreeRTOS/src/cmsis_os.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 602:FreeRTOS/src/cmsis_os.c **** 
 603:FreeRTOS/src/cmsis_os.c ****   if (mutex_def->controlblock != NULL) {
 604:FreeRTOS/src/cmsis_os.c ****     return xSemaphoreCreateMutexStatic( mutex_def->controlblock );
 605:FreeRTOS/src/cmsis_os.c ****      }
 606:FreeRTOS/src/cmsis_os.c ****   else {
 607:FreeRTOS/src/cmsis_os.c ****     return xSemaphoreCreateMutex(); 
 608:FreeRTOS/src/cmsis_os.c ****   }
 609:FreeRTOS/src/cmsis_os.c **** #elif ( configSUPPORT_STATIC_ALLOCATION == 1 )
 610:FreeRTOS/src/cmsis_os.c ****   return xSemaphoreCreateMutexStatic( mutex_def->controlblock );
 611:FreeRTOS/src/cmsis_os.c **** #else  
 612:FreeRTOS/src/cmsis_os.c ****     return xSemaphoreCreateMutex(); 
 1187              		.loc 1 612 5 is_stmt 1 view .LVU246
 1188              		.loc 1 612 12 is_stmt 0 view .LVU247
 1189 0002 0120     		movs	r0, #1
 1190              	.LVL78:
 1191              		.loc 1 612 12 view .LVU248
 1192 0004 FFF7FEFF 		bl	xQueueCreateMutex
 1193              	.LVL79:
 613:FreeRTOS/src/cmsis_os.c **** #endif
 614:FreeRTOS/src/cmsis_os.c **** #else
 615:FreeRTOS/src/cmsis_os.c ****   return NULL;
 616:FreeRTOS/src/cmsis_os.c **** #endif
 617:FreeRTOS/src/cmsis_os.c **** }
 1194              		.loc 1 617 1 view .LVU249
 1195 0008 08BD     		pop	{r3, pc}
 1196              		.cfi_endproc
 1197              	.LFE67:
 1199              		.section	.text.osMutexWait,"ax",%progbits
 1200              		.align	1
 1201              		.global	osMutexWait
 1202              		.syntax unified
 1203              		.thumb
 1204              		.thumb_func
 1205              		.fpu softvfp
 1207              	osMutexWait:
 1208              	.LVL80:
 1209              	.LFB68:
 618:FreeRTOS/src/cmsis_os.c **** 
 619:FreeRTOS/src/cmsis_os.c **** /**
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 37


 620:FreeRTOS/src/cmsis_os.c **** * @brief Wait until a Mutex becomes available
 621:FreeRTOS/src/cmsis_os.c **** * @param mutex_id      mutex ID obtained by \ref osMutexCreate.
 622:FreeRTOS/src/cmsis_os.c **** * @param millisec      timeout value or 0 in case of no time-out.
 623:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 624:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMutexWait shall be consistent in every CMSIS-RTOS.
 625:FreeRTOS/src/cmsis_os.c **** */
 626:FreeRTOS/src/cmsis_os.c **** osStatus osMutexWait (osMutexId mutex_id, uint32_t millisec)
 627:FreeRTOS/src/cmsis_os.c **** {
 1210              		.loc 1 627 1 is_stmt 1 view -0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 8
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              		.loc 1 627 1 is_stmt 0 view .LVU251
 1215 0000 30B5     		push	{r4, r5, lr}
 1216              	.LCFI35:
 1217              		.cfi_def_cfa_offset 12
 1218              		.cfi_offset 4, -12
 1219              		.cfi_offset 5, -8
 1220              		.cfi_offset 14, -4
 1221 0002 83B0     		sub	sp, sp, #12
 1222              	.LCFI36:
 1223              		.cfi_def_cfa_offset 24
 628:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 1224              		.loc 1 628 3 is_stmt 1 view .LVU252
 629:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;  
 1225              		.loc 1 629 3 view .LVU253
 1226              		.loc 1 629 17 is_stmt 0 view .LVU254
 1227 0004 0023     		movs	r3, #0
 1228 0006 0193     		str	r3, [sp, #4]
 630:FreeRTOS/src/cmsis_os.c ****   
 631:FreeRTOS/src/cmsis_os.c ****   
 632:FreeRTOS/src/cmsis_os.c ****   if (mutex_id == NULL) {
 1229              		.loc 1 632 3 is_stmt 1 view .LVU255
 1230              		.loc 1 632 6 is_stmt 0 view .LVU256
 1231 0008 40B3     		cbz	r0, .L100
 1232 000a 0C46     		mov	r4, r1
 1233 000c 0546     		mov	r5, r0
 633:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
 634:FreeRTOS/src/cmsis_os.c ****   }
 635:FreeRTOS/src/cmsis_os.c ****   
 636:FreeRTOS/src/cmsis_os.c ****   ticks = 0;
 1234              		.loc 1 636 3 is_stmt 1 view .LVU257
 1235              	.LVL81:
 637:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 1236              		.loc 1 637 3 view .LVU258
 1237              		.loc 1 637 6 is_stmt 0 view .LVU259
 1238 000e B1F1FF3F 		cmp	r1, #-1
 1239 0012 02D0     		beq	.L101
 638:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
 639:FreeRTOS/src/cmsis_os.c ****   }
 640:FreeRTOS/src/cmsis_os.c ****   else if (millisec != 0) {
 1240              		.loc 1 640 8 is_stmt 1 view .LVU260
 1241              		.loc 1 640 11 is_stmt 0 view .LVU261
 1242 0014 19B9     		cbnz	r1, .L98
 636:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 1243              		.loc 1 636 9 view .LVU262
 1244 0016 1C46     		mov	r4, r3
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 38


 1245 0018 01E0     		b	.L98
 1246              	.L101:
 638:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
 1247              		.loc 1 638 11 view .LVU263
 1248 001a 4FF0FF34 		mov	r4, #-1
 1249              	.L98:
 1250              	.LVL82:
 641:FreeRTOS/src/cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
 642:FreeRTOS/src/cmsis_os.c ****     if (ticks == 0) {
 643:FreeRTOS/src/cmsis_os.c ****       ticks = 1;
 644:FreeRTOS/src/cmsis_os.c ****     }
 645:FreeRTOS/src/cmsis_os.c ****   }
 646:FreeRTOS/src/cmsis_os.c ****   
 647:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 1251              		.loc 1 647 3 is_stmt 1 view .LVU264
 1252              		.loc 1 647 7 is_stmt 0 view .LVU265
 1253 001e FFF7FEFF 		bl	inHandlerMode
 1254              	.LVL83:
 1255              		.loc 1 647 6 view .LVU266
 1256 0022 90B1     		cbz	r0, .L99
 648:FreeRTOS/src/cmsis_os.c ****     if (xSemaphoreTakeFromISR(mutex_id, &taskWoken) != pdTRUE) {
 1257              		.loc 1 648 5 is_stmt 1 view .LVU267
 1258              		.loc 1 648 9 is_stmt 0 view .LVU268
 1259 0024 01AA     		add	r2, sp, #4
 1260 0026 0021     		movs	r1, #0
 1261 0028 2846     		mov	r0, r5
 1262 002a FFF7FEFF 		bl	xQueueReceiveFromISR
 1263              	.LVL84:
 1264              		.loc 1 648 8 view .LVU269
 1265 002e 0128     		cmp	r0, #1
 1266 0030 16D1     		bne	.L102
 649:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 650:FreeRTOS/src/cmsis_os.c ****     }
 651:FreeRTOS/src/cmsis_os.c **** 	portEND_SWITCHING_ISR(taskWoken);
 1267              		.loc 1 651 2 is_stmt 1 view .LVU270
 1268 0032 019B     		ldr	r3, [sp, #4]
 1269 0034 B3B1     		cbz	r3, .L103
 1270              		.loc 1 651 2 discriminator 1 view .LVU271
 1271 0036 0D4B     		ldr	r3, .L106
 1272 0038 4FF08052 		mov	r2, #268435456
 1273 003c 1A60     		str	r2, [r3]
 1274              		.loc 1 651 2 discriminator 1 view .LVU272
 1275              		.syntax unified
 1276              	@ 651 "FreeRTOS/src/cmsis_os.c" 1
 1277 003e BFF34F8F 		dsb
 1278              	@ 0 "" 2
 1279              		.loc 1 651 2 discriminator 1 view .LVU273
 1280              	@ 651 "FreeRTOS/src/cmsis_os.c" 1
 1281 0042 BFF36F8F 		isb
 1282              	@ 0 "" 2
 652:FreeRTOS/src/cmsis_os.c ****   } 
 653:FreeRTOS/src/cmsis_os.c ****   else if (xSemaphoreTake(mutex_id, ticks) != pdTRUE) {
 654:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 655:FreeRTOS/src/cmsis_os.c ****   }
 656:FreeRTOS/src/cmsis_os.c ****   
 657:FreeRTOS/src/cmsis_os.c ****   return osOK;
 1283              		.loc 1 657 10 is_stmt 0 discriminator 1 view .LVU274
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 39


 1284              		.thumb
 1285              		.syntax unified
 1286 0046 0020     		movs	r0, #0
 1287 0048 06E0     		b	.L96
 1288              	.L99:
 653:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 1289              		.loc 1 653 8 is_stmt 1 view .LVU275
 653:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 1290              		.loc 1 653 12 is_stmt 0 view .LVU276
 1291 004a 2146     		mov	r1, r4
 1292 004c 2846     		mov	r0, r5
 1293 004e FFF7FEFF 		bl	xQueueSemaphoreTake
 1294              	.LVL85:
 653:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 1295              		.loc 1 653 11 view .LVU277
 1296 0052 0128     		cmp	r0, #1
 1297 0054 08D1     		bne	.L104
 1298              		.loc 1 657 10 view .LVU278
 1299 0056 0020     		movs	r0, #0
 1300              	.LVL86:
 1301              	.L96:
 658:FreeRTOS/src/cmsis_os.c **** }
 1302              		.loc 1 658 1 view .LVU279
 1303 0058 03B0     		add	sp, sp, #12
 1304              	.LCFI37:
 1305              		.cfi_remember_state
 1306              		.cfi_def_cfa_offset 12
 1307              		@ sp needed
 1308 005a 30BD     		pop	{r4, r5, pc}
 1309              	.LVL87:
 1310              	.L100:
 1311              	.LCFI38:
 1312              		.cfi_restore_state
 633:FreeRTOS/src/cmsis_os.c ****   }
 1313              		.loc 1 633 12 view .LVU280
 1314 005c 8020     		movs	r0, #128
 1315              	.LVL88:
 633:FreeRTOS/src/cmsis_os.c ****   }
 1316              		.loc 1 633 12 view .LVU281
 1317 005e FBE7     		b	.L96
 1318              	.LVL89:
 1319              	.L102:
 649:FreeRTOS/src/cmsis_os.c ****     }
 1320              		.loc 1 649 14 view .LVU282
 1321 0060 FF20     		movs	r0, #255
 1322 0062 F9E7     		b	.L96
 1323              	.L103:
 657:FreeRTOS/src/cmsis_os.c **** }
 1324              		.loc 1 657 10 view .LVU283
 1325 0064 0020     		movs	r0, #0
 1326 0066 F7E7     		b	.L96
 1327              	.L104:
 654:FreeRTOS/src/cmsis_os.c ****   }
 1328              		.loc 1 654 12 view .LVU284
 1329 0068 FF20     		movs	r0, #255
 1330 006a F5E7     		b	.L96
 1331              	.L107:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 40


 1332              		.align	2
 1333              	.L106:
 1334 006c 04ED00E0 		.word	-536810236
 1335              		.cfi_endproc
 1336              	.LFE68:
 1338              		.section	.text.osMutexRelease,"ax",%progbits
 1339              		.align	1
 1340              		.global	osMutexRelease
 1341              		.syntax unified
 1342              		.thumb
 1343              		.thumb_func
 1344              		.fpu softvfp
 1346              	osMutexRelease:
 1347              	.LVL90:
 1348              	.LFB69:
 659:FreeRTOS/src/cmsis_os.c **** 
 660:FreeRTOS/src/cmsis_os.c **** /**
 661:FreeRTOS/src/cmsis_os.c **** * @brief Release a Mutex that was obtained by \ref osMutexWait
 662:FreeRTOS/src/cmsis_os.c **** * @param mutex_id      mutex ID obtained by \ref osMutexCreate.
 663:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 664:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMutexRelease shall be consistent in every CMSIS-RTOS.
 665:FreeRTOS/src/cmsis_os.c **** */
 666:FreeRTOS/src/cmsis_os.c **** osStatus osMutexRelease (osMutexId mutex_id)
 667:FreeRTOS/src/cmsis_os.c **** {
 1349              		.loc 1 667 1 is_stmt 1 view -0
 1350              		.cfi_startproc
 1351              		@ args = 0, pretend = 0, frame = 8
 1352              		@ frame_needed = 0, uses_anonymous_args = 0
 1353              		.loc 1 667 1 is_stmt 0 view .LVU286
 1354 0000 10B5     		push	{r4, lr}
 1355              	.LCFI39:
 1356              		.cfi_def_cfa_offset 8
 1357              		.cfi_offset 4, -8
 1358              		.cfi_offset 14, -4
 1359 0002 82B0     		sub	sp, sp, #8
 1360              	.LCFI40:
 1361              		.cfi_def_cfa_offset 16
 1362 0004 0446     		mov	r4, r0
 668:FreeRTOS/src/cmsis_os.c ****   osStatus result = osOK;
 1363              		.loc 1 668 3 is_stmt 1 view .LVU287
 1364              	.LVL91:
 669:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1365              		.loc 1 669 3 view .LVU288
 1366              		.loc 1 669 17 is_stmt 0 view .LVU289
 1367 0006 0023     		movs	r3, #0
 1368 0008 0193     		str	r3, [sp, #4]
 670:FreeRTOS/src/cmsis_os.c ****   
 671:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 1369              		.loc 1 671 3 is_stmt 1 view .LVU290
 1370              		.loc 1 671 7 is_stmt 0 view .LVU291
 1371 000a FFF7FEFF 		bl	inHandlerMode
 1372              	.LVL92:
 1373              		.loc 1 671 6 view .LVU292
 1374 000e 88B1     		cbz	r0, .L109
 672:FreeRTOS/src/cmsis_os.c ****     if (xSemaphoreGiveFromISR(mutex_id, &taskWoken) != pdTRUE) {
 1375              		.loc 1 672 5 is_stmt 1 view .LVU293
 1376              		.loc 1 672 9 is_stmt 0 view .LVU294
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 41


 1377 0010 01A9     		add	r1, sp, #4
 1378 0012 2046     		mov	r0, r4
 1379 0014 FFF7FEFF 		bl	xQueueGiveFromISR
 1380              	.LVL93:
 1381              		.loc 1 672 8 view .LVU295
 1382 0018 0128     		cmp	r0, #1
 1383 001a 18D1     		bne	.L111
 673:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 674:FreeRTOS/src/cmsis_os.c ****     }
 675:FreeRTOS/src/cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 1384              		.loc 1 675 5 is_stmt 1 view .LVU296
 1385 001c 019B     		ldr	r3, [sp, #4]
 1386 001e C3B1     		cbz	r3, .L112
 1387              		.loc 1 675 5 discriminator 1 view .LVU297
 1388 0020 0D4B     		ldr	r3, .L116
 1389 0022 4FF08052 		mov	r2, #268435456
 1390 0026 1A60     		str	r2, [r3]
 1391              		.loc 1 675 5 discriminator 1 view .LVU298
 1392              		.syntax unified
 1393              	@ 675 "FreeRTOS/src/cmsis_os.c" 1
 1394 0028 BFF34F8F 		dsb
 1395              	@ 0 "" 2
 1396              		.loc 1 675 5 discriminator 1 view .LVU299
 1397              	@ 675 "FreeRTOS/src/cmsis_os.c" 1
 1398 002c BFF36F8F 		isb
 1399              	@ 0 "" 2
 668:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1400              		.loc 1 668 12 is_stmt 0 discriminator 1 view .LVU300
 1401              		.thumb
 1402              		.syntax unified
 1403 0030 0020     		movs	r0, #0
 1404 0032 08E0     		b	.L108
 1405              	.L109:
 676:FreeRTOS/src/cmsis_os.c ****   }
 677:FreeRTOS/src/cmsis_os.c ****   else if (xSemaphoreGive(mutex_id) != pdTRUE) 
 1406              		.loc 1 677 8 is_stmt 1 view .LVU301
 1407              		.loc 1 677 12 is_stmt 0 view .LVU302
 1408 0034 0023     		movs	r3, #0
 1409 0036 1A46     		mov	r2, r3
 1410 0038 1946     		mov	r1, r3
 1411 003a 2046     		mov	r0, r4
 1412 003c FFF7FEFF 		bl	xQueueGenericSend
 1413              	.LVL94:
 1414              		.loc 1 677 11 view .LVU303
 1415 0040 0128     		cmp	r0, #1
 1416 0042 02D0     		beq	.L115
 678:FreeRTOS/src/cmsis_os.c ****   {
 679:FreeRTOS/src/cmsis_os.c ****     result = osErrorOS;
 1417              		.loc 1 679 12 view .LVU304
 1418 0044 FF20     		movs	r0, #255
 1419              	.L108:
 680:FreeRTOS/src/cmsis_os.c ****   }
 681:FreeRTOS/src/cmsis_os.c ****   return result;
 682:FreeRTOS/src/cmsis_os.c **** }
 1420              		.loc 1 682 1 view .LVU305
 1421 0046 02B0     		add	sp, sp, #8
 1422              	.LCFI41:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 42


 1423              		.cfi_remember_state
 1424              		.cfi_def_cfa_offset 8
 1425              		@ sp needed
 1426 0048 10BD     		pop	{r4, pc}
 1427              	.LVL95:
 1428              	.L115:
 1429              	.LCFI42:
 1430              		.cfi_restore_state
 668:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1431              		.loc 1 668 12 view .LVU306
 1432 004a 0020     		movs	r0, #0
 1433 004c FBE7     		b	.L108
 1434              	.L111:
 673:FreeRTOS/src/cmsis_os.c ****     }
 1435              		.loc 1 673 14 view .LVU307
 1436 004e FF20     		movs	r0, #255
 1437 0050 F9E7     		b	.L108
 1438              	.L112:
 668:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1439              		.loc 1 668 12 view .LVU308
 1440 0052 0020     		movs	r0, #0
 1441 0054 F7E7     		b	.L108
 1442              	.L117:
 1443 0056 00BF     		.align	2
 1444              	.L116:
 1445 0058 04ED00E0 		.word	-536810236
 1446              		.cfi_endproc
 1447              	.LFE69:
 1449              		.section	.text.osMutexDelete,"ax",%progbits
 1450              		.align	1
 1451              		.global	osMutexDelete
 1452              		.syntax unified
 1453              		.thumb
 1454              		.thumb_func
 1455              		.fpu softvfp
 1457              	osMutexDelete:
 1458              	.LVL96:
 1459              	.LFB70:
 683:FreeRTOS/src/cmsis_os.c **** 
 684:FreeRTOS/src/cmsis_os.c **** /**
 685:FreeRTOS/src/cmsis_os.c **** * @brief Delete a Mutex
 686:FreeRTOS/src/cmsis_os.c **** * @param mutex_id  mutex ID obtained by \ref osMutexCreate.
 687:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 688:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMutexDelete shall be consistent in every CMSIS-RTOS.
 689:FreeRTOS/src/cmsis_os.c **** */
 690:FreeRTOS/src/cmsis_os.c **** osStatus osMutexDelete (osMutexId mutex_id)
 691:FreeRTOS/src/cmsis_os.c **** {
 1460              		.loc 1 691 1 is_stmt 1 view -0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 0
 1463              		@ frame_needed = 0, uses_anonymous_args = 0
 1464              		.loc 1 691 1 is_stmt 0 view .LVU310
 1465 0000 10B5     		push	{r4, lr}
 1466              	.LCFI43:
 1467              		.cfi_def_cfa_offset 8
 1468              		.cfi_offset 4, -8
 1469              		.cfi_offset 14, -4
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 43


 1470 0002 0446     		mov	r4, r0
 692:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 1471              		.loc 1 692 3 is_stmt 1 view .LVU311
 1472              		.loc 1 692 7 is_stmt 0 view .LVU312
 1473 0004 FFF7FEFF 		bl	inHandlerMode
 1474              	.LVL97:
 1475              		.loc 1 692 6 view .LVU313
 1476 0008 20B9     		cbnz	r0, .L120
 693:FreeRTOS/src/cmsis_os.c ****     return osErrorISR;
 694:FreeRTOS/src/cmsis_os.c ****   }
 695:FreeRTOS/src/cmsis_os.c **** 
 696:FreeRTOS/src/cmsis_os.c ****   vQueueDelete(mutex_id);
 1477              		.loc 1 696 3 is_stmt 1 view .LVU314
 1478 000a 2046     		mov	r0, r4
 1479 000c FFF7FEFF 		bl	vQueueDelete
 1480              	.LVL98:
 697:FreeRTOS/src/cmsis_os.c **** 
 698:FreeRTOS/src/cmsis_os.c ****   return osOK;
 1481              		.loc 1 698 3 view .LVU315
 1482              		.loc 1 698 10 is_stmt 0 view .LVU316
 1483 0010 0020     		movs	r0, #0
 1484              	.L118:
 699:FreeRTOS/src/cmsis_os.c **** }
 1485              		.loc 1 699 1 view .LVU317
 1486 0012 10BD     		pop	{r4, pc}
 1487              	.LVL99:
 1488              	.L120:
 693:FreeRTOS/src/cmsis_os.c ****     return osErrorISR;
 1489              		.loc 1 693 12 view .LVU318
 1490 0014 8220     		movs	r0, #130
 1491 0016 FCE7     		b	.L118
 1492              		.cfi_endproc
 1493              	.LFE70:
 1495              		.section	.text.osSemaphoreCreate,"ax",%progbits
 1496              		.align	1
 1497              		.global	osSemaphoreCreate
 1498              		.syntax unified
 1499              		.thumb
 1500              		.thumb_func
 1501              		.fpu softvfp
 1503              	osSemaphoreCreate:
 1504              	.LVL100:
 1505              	.LFB71:
 700:FreeRTOS/src/cmsis_os.c **** 
 701:FreeRTOS/src/cmsis_os.c **** /********************  Semaphore Management Functions **************************/
 702:FreeRTOS/src/cmsis_os.c **** 
 703:FreeRTOS/src/cmsis_os.c **** #if (defined (osFeature_Semaphore)  &&  (osFeature_Semaphore != 0))
 704:FreeRTOS/src/cmsis_os.c **** 
 705:FreeRTOS/src/cmsis_os.c **** /**
 706:FreeRTOS/src/cmsis_os.c **** * @brief Create and Initialize a Semaphore object used for managing resources
 707:FreeRTOS/src/cmsis_os.c **** * @param semaphore_def semaphore definition referenced with \ref osSemaphore.
 708:FreeRTOS/src/cmsis_os.c **** * @param count         number of available resources.
 709:FreeRTOS/src/cmsis_os.c **** * @retval  semaphore ID for reference by other functions or NULL in case of error.
 710:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSemaphoreCreate shall be consistent in every CMSIS-RTOS.
 711:FreeRTOS/src/cmsis_os.c **** */
 712:FreeRTOS/src/cmsis_os.c **** osSemaphoreId osSemaphoreCreate (const osSemaphoreDef_t *semaphore_def, int32_t count)
 713:FreeRTOS/src/cmsis_os.c **** { 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 44


 1506              		.loc 1 713 1 is_stmt 1 view -0
 1507              		.cfi_startproc
 1508              		@ args = 0, pretend = 0, frame = 0
 1509              		@ frame_needed = 0, uses_anonymous_args = 0
 1510              		.loc 1 713 1 is_stmt 0 view .LVU320
 1511 0000 10B5     		push	{r4, lr}
 1512              	.LCFI44:
 1513              		.cfi_def_cfa_offset 8
 1514              		.cfi_offset 4, -8
 1515              		.cfi_offset 14, -4
 1516 0002 0846     		mov	r0, r1
 1517              	.LVL101:
 714:FreeRTOS/src/cmsis_os.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 715:FreeRTOS/src/cmsis_os.c **** 
 716:FreeRTOS/src/cmsis_os.c ****   osSemaphoreId sema;
 717:FreeRTOS/src/cmsis_os.c ****   
 718:FreeRTOS/src/cmsis_os.c ****   if (semaphore_def->controlblock != NULL){
 719:FreeRTOS/src/cmsis_os.c ****     if (count == 1) {
 720:FreeRTOS/src/cmsis_os.c ****       return xSemaphoreCreateBinaryStatic( semaphore_def->controlblock );
 721:FreeRTOS/src/cmsis_os.c ****     }
 722:FreeRTOS/src/cmsis_os.c ****     else {
 723:FreeRTOS/src/cmsis_os.c **** #if (configUSE_COUNTING_SEMAPHORES == 1 )
 724:FreeRTOS/src/cmsis_os.c ****       return xSemaphoreCreateCountingStatic( count, count, semaphore_def->controlblock );
 725:FreeRTOS/src/cmsis_os.c **** #else
 726:FreeRTOS/src/cmsis_os.c ****       return NULL;
 727:FreeRTOS/src/cmsis_os.c **** #endif
 728:FreeRTOS/src/cmsis_os.c ****     }
 729:FreeRTOS/src/cmsis_os.c ****   }
 730:FreeRTOS/src/cmsis_os.c ****   else {
 731:FreeRTOS/src/cmsis_os.c ****     if (count == 1) {
 732:FreeRTOS/src/cmsis_os.c ****       vSemaphoreCreateBinary(sema);
 733:FreeRTOS/src/cmsis_os.c ****       return sema;
 734:FreeRTOS/src/cmsis_os.c ****     }
 735:FreeRTOS/src/cmsis_os.c ****     else {
 736:FreeRTOS/src/cmsis_os.c **** #if (configUSE_COUNTING_SEMAPHORES == 1 )	
 737:FreeRTOS/src/cmsis_os.c ****       return xSemaphoreCreateCounting(count, count);
 738:FreeRTOS/src/cmsis_os.c **** #else
 739:FreeRTOS/src/cmsis_os.c ****       return NULL;
 740:FreeRTOS/src/cmsis_os.c **** #endif    
 741:FreeRTOS/src/cmsis_os.c ****     }
 742:FreeRTOS/src/cmsis_os.c ****   }
 743:FreeRTOS/src/cmsis_os.c **** #elif ( configSUPPORT_STATIC_ALLOCATION == 1 ) // configSUPPORT_DYNAMIC_ALLOCATION == 0
 744:FreeRTOS/src/cmsis_os.c ****   if(count == 1) {
 745:FreeRTOS/src/cmsis_os.c ****     return xSemaphoreCreateBinaryStatic( semaphore_def->controlblock );
 746:FreeRTOS/src/cmsis_os.c ****   }
 747:FreeRTOS/src/cmsis_os.c ****   else
 748:FreeRTOS/src/cmsis_os.c ****   {
 749:FreeRTOS/src/cmsis_os.c **** #if (configUSE_COUNTING_SEMAPHORES == 1 )
 750:FreeRTOS/src/cmsis_os.c ****       return xSemaphoreCreateCountingStatic( count, count, semaphore_def->controlblock );
 751:FreeRTOS/src/cmsis_os.c **** #else
 752:FreeRTOS/src/cmsis_os.c ****       return NULL;
 753:FreeRTOS/src/cmsis_os.c **** #endif    
 754:FreeRTOS/src/cmsis_os.c ****   }
 755:FreeRTOS/src/cmsis_os.c **** #else  // configSUPPORT_STATIC_ALLOCATION == 0  && configSUPPORT_DYNAMIC_ALLOCATION == 1
 756:FreeRTOS/src/cmsis_os.c ****   osSemaphoreId sema;
 1518              		.loc 1 756 3 is_stmt 1 view .LVU321
 757:FreeRTOS/src/cmsis_os.c ****  
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 45


 758:FreeRTOS/src/cmsis_os.c ****   if (count == 1) {
 1519              		.loc 1 758 3 view .LVU322
 1520              		.loc 1 758 6 is_stmt 0 view .LVU323
 1521 0004 0129     		cmp	r1, #1
 1522 0006 04D0     		beq	.L127
 759:FreeRTOS/src/cmsis_os.c ****     vSemaphoreCreateBinary(sema);
 760:FreeRTOS/src/cmsis_os.c ****     return sema;
 761:FreeRTOS/src/cmsis_os.c ****   }
 762:FreeRTOS/src/cmsis_os.c ****   else {
 763:FreeRTOS/src/cmsis_os.c **** #if (configUSE_COUNTING_SEMAPHORES == 1 )	
 764:FreeRTOS/src/cmsis_os.c ****     return xSemaphoreCreateCounting(count, count);
 1523              		.loc 1 764 5 is_stmt 1 view .LVU324
 1524              		.loc 1 764 12 is_stmt 0 view .LVU325
 1525 0008 FFF7FEFF 		bl	xQueueCreateCountingSemaphore
 1526              	.LVL102:
 1527              		.loc 1 764 12 view .LVU326
 1528 000c 0446     		mov	r4, r0
 1529              	.L122:
 765:FreeRTOS/src/cmsis_os.c **** #else
 766:FreeRTOS/src/cmsis_os.c ****     return NULL;
 767:FreeRTOS/src/cmsis_os.c **** #endif
 768:FreeRTOS/src/cmsis_os.c ****   }
 769:FreeRTOS/src/cmsis_os.c **** #endif
 770:FreeRTOS/src/cmsis_os.c **** }
 1530              		.loc 1 770 1 view .LVU327
 1531 000e 2046     		mov	r0, r4
 1532 0010 10BD     		pop	{r4, pc}
 1533              	.LVL103:
 1534              	.L127:
 759:FreeRTOS/src/cmsis_os.c ****     vSemaphoreCreateBinary(sema);
 1535              		.loc 1 759 5 is_stmt 1 view .LVU328
 1536 0012 0322     		movs	r2, #3
 1537 0014 0021     		movs	r1, #0
 1538 0016 FFF7FEFF 		bl	xQueueGenericCreate
 1539              	.LVL104:
 759:FreeRTOS/src/cmsis_os.c ****     vSemaphoreCreateBinary(sema);
 1540              		.loc 1 759 5 view .LVU329
 1541 001a 0446     		mov	r4, r0
 1542 001c 0028     		cmp	r0, #0
 1543 001e F6D0     		beq	.L122
 759:FreeRTOS/src/cmsis_os.c ****     vSemaphoreCreateBinary(sema);
 1544              		.loc 1 759 5 discriminator 1 view .LVU330
 1545 0020 0023     		movs	r3, #0
 1546 0022 1A46     		mov	r2, r3
 1547 0024 1946     		mov	r1, r3
 1548 0026 FFF7FEFF 		bl	xQueueGenericSend
 1549              	.LVL105:
 759:FreeRTOS/src/cmsis_os.c ****     vSemaphoreCreateBinary(sema);
 1550              		.loc 1 759 33 discriminator 1 view .LVU331
 760:FreeRTOS/src/cmsis_os.c ****   }
 1551              		.loc 1 760 5 discriminator 1 view .LVU332
 760:FreeRTOS/src/cmsis_os.c ****   }
 1552              		.loc 1 760 12 is_stmt 0 discriminator 1 view .LVU333
 1553 002a F0E7     		b	.L122
 1554              		.cfi_endproc
 1555              	.LFE71:
 1557              		.section	.text.osSemaphoreWait,"ax",%progbits
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 46


 1558              		.align	1
 1559              		.global	osSemaphoreWait
 1560              		.syntax unified
 1561              		.thumb
 1562              		.thumb_func
 1563              		.fpu softvfp
 1565              	osSemaphoreWait:
 1566              	.LVL106:
 1567              	.LFB72:
 771:FreeRTOS/src/cmsis_os.c **** 
 772:FreeRTOS/src/cmsis_os.c **** /**
 773:FreeRTOS/src/cmsis_os.c **** * @brief Wait until a Semaphore token becomes available
 774:FreeRTOS/src/cmsis_os.c **** * @param  semaphore_id  semaphore object referenced with \ref osSemaphore.
 775:FreeRTOS/src/cmsis_os.c **** * @param  millisec      timeout value or 0 in case of no time-out.
 776:FreeRTOS/src/cmsis_os.c **** * @retval  number of available tokens, or -1 in case of incorrect parameters.
 777:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSemaphoreWait shall be consistent in every CMSIS-RTOS.
 778:FreeRTOS/src/cmsis_os.c **** */
 779:FreeRTOS/src/cmsis_os.c **** int32_t osSemaphoreWait (osSemaphoreId semaphore_id, uint32_t millisec)
 780:FreeRTOS/src/cmsis_os.c **** {
 1568              		.loc 1 780 1 is_stmt 1 view -0
 1569              		.cfi_startproc
 1570              		@ args = 0, pretend = 0, frame = 8
 1571              		@ frame_needed = 0, uses_anonymous_args = 0
 1572              		.loc 1 780 1 is_stmt 0 view .LVU335
 1573 0000 30B5     		push	{r4, r5, lr}
 1574              	.LCFI45:
 1575              		.cfi_def_cfa_offset 12
 1576              		.cfi_offset 4, -12
 1577              		.cfi_offset 5, -8
 1578              		.cfi_offset 14, -4
 1579 0002 83B0     		sub	sp, sp, #12
 1580              	.LCFI46:
 1581              		.cfi_def_cfa_offset 24
 781:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 1582              		.loc 1 781 3 is_stmt 1 view .LVU336
 782:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;  
 1583              		.loc 1 782 3 view .LVU337
 1584              		.loc 1 782 17 is_stmt 0 view .LVU338
 1585 0004 0023     		movs	r3, #0
 1586 0006 0193     		str	r3, [sp, #4]
 783:FreeRTOS/src/cmsis_os.c ****   
 784:FreeRTOS/src/cmsis_os.c ****   
 785:FreeRTOS/src/cmsis_os.c ****   if (semaphore_id == NULL) {
 1587              		.loc 1 785 3 is_stmt 1 view .LVU339
 1588              		.loc 1 785 6 is_stmt 0 view .LVU340
 1589 0008 40B3     		cbz	r0, .L132
 1590 000a 0C46     		mov	r4, r1
 1591 000c 0546     		mov	r5, r0
 786:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
 787:FreeRTOS/src/cmsis_os.c ****   }
 788:FreeRTOS/src/cmsis_os.c ****   
 789:FreeRTOS/src/cmsis_os.c ****   ticks = 0;
 1592              		.loc 1 789 3 is_stmt 1 view .LVU341
 1593              	.LVL107:
 790:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 1594              		.loc 1 790 3 view .LVU342
 1595              		.loc 1 790 6 is_stmt 0 view .LVU343
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 47


 1596 000e B1F1FF3F 		cmp	r1, #-1
 1597 0012 02D0     		beq	.L133
 791:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
 792:FreeRTOS/src/cmsis_os.c ****   }
 793:FreeRTOS/src/cmsis_os.c ****   else if (millisec != 0) {
 1598              		.loc 1 793 8 is_stmt 1 view .LVU344
 1599              		.loc 1 793 11 is_stmt 0 view .LVU345
 1600 0014 19B9     		cbnz	r1, .L130
 789:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 1601              		.loc 1 789 9 view .LVU346
 1602 0016 1C46     		mov	r4, r3
 1603 0018 01E0     		b	.L130
 1604              	.L133:
 791:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
 1605              		.loc 1 791 11 view .LVU347
 1606 001a 4FF0FF34 		mov	r4, #-1
 1607              	.L130:
 1608              	.LVL108:
 794:FreeRTOS/src/cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
 795:FreeRTOS/src/cmsis_os.c ****     if (ticks == 0) {
 796:FreeRTOS/src/cmsis_os.c ****       ticks = 1;
 797:FreeRTOS/src/cmsis_os.c ****     }
 798:FreeRTOS/src/cmsis_os.c ****   }
 799:FreeRTOS/src/cmsis_os.c ****   
 800:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 1609              		.loc 1 800 3 is_stmt 1 view .LVU348
 1610              		.loc 1 800 7 is_stmt 0 view .LVU349
 1611 001e FFF7FEFF 		bl	inHandlerMode
 1612              	.LVL109:
 1613              		.loc 1 800 6 view .LVU350
 1614 0022 90B1     		cbz	r0, .L131
 801:FreeRTOS/src/cmsis_os.c ****     if (xSemaphoreTakeFromISR(semaphore_id, &taskWoken) != pdTRUE) {
 1615              		.loc 1 801 5 is_stmt 1 view .LVU351
 1616              		.loc 1 801 9 is_stmt 0 view .LVU352
 1617 0024 01AA     		add	r2, sp, #4
 1618 0026 0021     		movs	r1, #0
 1619 0028 2846     		mov	r0, r5
 1620 002a FFF7FEFF 		bl	xQueueReceiveFromISR
 1621              	.LVL110:
 1622              		.loc 1 801 8 view .LVU353
 1623 002e 0128     		cmp	r0, #1
 1624 0030 16D1     		bne	.L134
 802:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 803:FreeRTOS/src/cmsis_os.c ****     }
 804:FreeRTOS/src/cmsis_os.c **** 	portEND_SWITCHING_ISR(taskWoken);
 1625              		.loc 1 804 2 is_stmt 1 view .LVU354
 1626 0032 019B     		ldr	r3, [sp, #4]
 1627 0034 B3B1     		cbz	r3, .L135
 1628              		.loc 1 804 2 discriminator 1 view .LVU355
 1629 0036 0D4B     		ldr	r3, .L138
 1630 0038 4FF08052 		mov	r2, #268435456
 1631 003c 1A60     		str	r2, [r3]
 1632              		.loc 1 804 2 discriminator 1 view .LVU356
 1633              		.syntax unified
 1634              	@ 804 "FreeRTOS/src/cmsis_os.c" 1
 1635 003e BFF34F8F 		dsb
 1636              	@ 0 "" 2
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 48


 1637              		.loc 1 804 2 discriminator 1 view .LVU357
 1638              	@ 804 "FreeRTOS/src/cmsis_os.c" 1
 1639 0042 BFF36F8F 		isb
 1640              	@ 0 "" 2
 805:FreeRTOS/src/cmsis_os.c ****   }  
 806:FreeRTOS/src/cmsis_os.c ****   else if (xSemaphoreTake(semaphore_id, ticks) != pdTRUE) {
 807:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 808:FreeRTOS/src/cmsis_os.c ****   }
 809:FreeRTOS/src/cmsis_os.c ****   
 810:FreeRTOS/src/cmsis_os.c ****   return osOK;
 1641              		.loc 1 810 10 is_stmt 0 discriminator 1 view .LVU358
 1642              		.thumb
 1643              		.syntax unified
 1644 0046 0020     		movs	r0, #0
 1645 0048 06E0     		b	.L128
 1646              	.L131:
 806:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 1647              		.loc 1 806 8 is_stmt 1 view .LVU359
 806:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 1648              		.loc 1 806 12 is_stmt 0 view .LVU360
 1649 004a 2146     		mov	r1, r4
 1650 004c 2846     		mov	r0, r5
 1651 004e FFF7FEFF 		bl	xQueueSemaphoreTake
 1652              	.LVL111:
 806:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 1653              		.loc 1 806 11 view .LVU361
 1654 0052 0128     		cmp	r0, #1
 1655 0054 08D1     		bne	.L136
 1656              		.loc 1 810 10 view .LVU362
 1657 0056 0020     		movs	r0, #0
 1658              	.LVL112:
 1659              	.L128:
 811:FreeRTOS/src/cmsis_os.c **** }
 1660              		.loc 1 811 1 view .LVU363
 1661 0058 03B0     		add	sp, sp, #12
 1662              	.LCFI47:
 1663              		.cfi_remember_state
 1664              		.cfi_def_cfa_offset 12
 1665              		@ sp needed
 1666 005a 30BD     		pop	{r4, r5, pc}
 1667              	.LVL113:
 1668              	.L132:
 1669              	.LCFI48:
 1670              		.cfi_restore_state
 786:FreeRTOS/src/cmsis_os.c ****   }
 1671              		.loc 1 786 12 view .LVU364
 1672 005c 8020     		movs	r0, #128
 1673              	.LVL114:
 786:FreeRTOS/src/cmsis_os.c ****   }
 1674              		.loc 1 786 12 view .LVU365
 1675 005e FBE7     		b	.L128
 1676              	.LVL115:
 1677              	.L134:
 802:FreeRTOS/src/cmsis_os.c ****     }
 1678              		.loc 1 802 14 view .LVU366
 1679 0060 FF20     		movs	r0, #255
 1680 0062 F9E7     		b	.L128
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 49


 1681              	.L135:
 810:FreeRTOS/src/cmsis_os.c **** }
 1682              		.loc 1 810 10 view .LVU367
 1683 0064 0020     		movs	r0, #0
 1684 0066 F7E7     		b	.L128
 1685              	.L136:
 807:FreeRTOS/src/cmsis_os.c ****   }
 1686              		.loc 1 807 12 view .LVU368
 1687 0068 FF20     		movs	r0, #255
 1688 006a F5E7     		b	.L128
 1689              	.L139:
 1690              		.align	2
 1691              	.L138:
 1692 006c 04ED00E0 		.word	-536810236
 1693              		.cfi_endproc
 1694              	.LFE72:
 1696              		.section	.text.osSemaphoreRelease,"ax",%progbits
 1697              		.align	1
 1698              		.global	osSemaphoreRelease
 1699              		.syntax unified
 1700              		.thumb
 1701              		.thumb_func
 1702              		.fpu softvfp
 1704              	osSemaphoreRelease:
 1705              	.LVL116:
 1706              	.LFB73:
 812:FreeRTOS/src/cmsis_os.c **** 
 813:FreeRTOS/src/cmsis_os.c **** /**
 814:FreeRTOS/src/cmsis_os.c **** * @brief Release a Semaphore token
 815:FreeRTOS/src/cmsis_os.c **** * @param  semaphore_id  semaphore object referenced with \ref osSemaphore.
 816:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 817:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSemaphoreRelease shall be consistent in every CMSIS-RTOS.
 818:FreeRTOS/src/cmsis_os.c **** */
 819:FreeRTOS/src/cmsis_os.c **** osStatus osSemaphoreRelease (osSemaphoreId semaphore_id)
 820:FreeRTOS/src/cmsis_os.c **** {
 1707              		.loc 1 820 1 is_stmt 1 view -0
 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 8
 1710              		@ frame_needed = 0, uses_anonymous_args = 0
 1711              		.loc 1 820 1 is_stmt 0 view .LVU370
 1712 0000 10B5     		push	{r4, lr}
 1713              	.LCFI49:
 1714              		.cfi_def_cfa_offset 8
 1715              		.cfi_offset 4, -8
 1716              		.cfi_offset 14, -4
 1717 0002 82B0     		sub	sp, sp, #8
 1718              	.LCFI50:
 1719              		.cfi_def_cfa_offset 16
 1720 0004 0446     		mov	r4, r0
 821:FreeRTOS/src/cmsis_os.c ****   osStatus result = osOK;
 1721              		.loc 1 821 3 is_stmt 1 view .LVU371
 1722              	.LVL117:
 822:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1723              		.loc 1 822 3 view .LVU372
 1724              		.loc 1 822 17 is_stmt 0 view .LVU373
 1725 0006 0023     		movs	r3, #0
 1726 0008 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 50


 823:FreeRTOS/src/cmsis_os.c ****   
 824:FreeRTOS/src/cmsis_os.c ****   
 825:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 1727              		.loc 1 825 3 is_stmt 1 view .LVU374
 1728              		.loc 1 825 7 is_stmt 0 view .LVU375
 1729 000a FFF7FEFF 		bl	inHandlerMode
 1730              	.LVL118:
 1731              		.loc 1 825 6 view .LVU376
 1732 000e 88B1     		cbz	r0, .L141
 826:FreeRTOS/src/cmsis_os.c ****     if (xSemaphoreGiveFromISR(semaphore_id, &taskWoken) != pdTRUE) {
 1733              		.loc 1 826 5 is_stmt 1 view .LVU377
 1734              		.loc 1 826 9 is_stmt 0 view .LVU378
 1735 0010 01A9     		add	r1, sp, #4
 1736 0012 2046     		mov	r0, r4
 1737 0014 FFF7FEFF 		bl	xQueueGiveFromISR
 1738              	.LVL119:
 1739              		.loc 1 826 8 view .LVU379
 1740 0018 0128     		cmp	r0, #1
 1741 001a 18D1     		bne	.L143
 827:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 828:FreeRTOS/src/cmsis_os.c ****     }
 829:FreeRTOS/src/cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 1742              		.loc 1 829 5 is_stmt 1 view .LVU380
 1743 001c 019B     		ldr	r3, [sp, #4]
 1744 001e C3B1     		cbz	r3, .L144
 1745              		.loc 1 829 5 discriminator 1 view .LVU381
 1746 0020 0D4B     		ldr	r3, .L148
 1747 0022 4FF08052 		mov	r2, #268435456
 1748 0026 1A60     		str	r2, [r3]
 1749              		.loc 1 829 5 discriminator 1 view .LVU382
 1750              		.syntax unified
 1751              	@ 829 "FreeRTOS/src/cmsis_os.c" 1
 1752 0028 BFF34F8F 		dsb
 1753              	@ 0 "" 2
 1754              		.loc 1 829 5 discriminator 1 view .LVU383
 1755              	@ 829 "FreeRTOS/src/cmsis_os.c" 1
 1756 002c BFF36F8F 		isb
 1757              	@ 0 "" 2
 821:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1758              		.loc 1 821 12 is_stmt 0 discriminator 1 view .LVU384
 1759              		.thumb
 1760              		.syntax unified
 1761 0030 0020     		movs	r0, #0
 1762 0032 08E0     		b	.L140
 1763              	.L141:
 830:FreeRTOS/src/cmsis_os.c ****   }
 831:FreeRTOS/src/cmsis_os.c ****   else {
 832:FreeRTOS/src/cmsis_os.c ****     if (xSemaphoreGive(semaphore_id) != pdTRUE) {
 1764              		.loc 1 832 5 is_stmt 1 view .LVU385
 1765              		.loc 1 832 9 is_stmt 0 view .LVU386
 1766 0034 0023     		movs	r3, #0
 1767 0036 1A46     		mov	r2, r3
 1768 0038 1946     		mov	r1, r3
 1769 003a 2046     		mov	r0, r4
 1770 003c FFF7FEFF 		bl	xQueueGenericSend
 1771              	.LVL120:
 1772              		.loc 1 832 8 view .LVU387
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 51


 1773 0040 0128     		cmp	r0, #1
 1774 0042 02D0     		beq	.L147
 833:FreeRTOS/src/cmsis_os.c ****       result = osErrorOS;
 1775              		.loc 1 833 14 view .LVU388
 1776 0044 FF20     		movs	r0, #255
 1777              	.L140:
 834:FreeRTOS/src/cmsis_os.c ****     }
 835:FreeRTOS/src/cmsis_os.c ****   }
 836:FreeRTOS/src/cmsis_os.c ****   
 837:FreeRTOS/src/cmsis_os.c ****   return result;
 838:FreeRTOS/src/cmsis_os.c **** }
 1778              		.loc 1 838 1 view .LVU389
 1779 0046 02B0     		add	sp, sp, #8
 1780              	.LCFI51:
 1781              		.cfi_remember_state
 1782              		.cfi_def_cfa_offset 8
 1783              		@ sp needed
 1784 0048 10BD     		pop	{r4, pc}
 1785              	.LVL121:
 1786              	.L147:
 1787              	.LCFI52:
 1788              		.cfi_restore_state
 821:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1789              		.loc 1 821 12 view .LVU390
 1790 004a 0020     		movs	r0, #0
 1791 004c FBE7     		b	.L140
 1792              	.L143:
 827:FreeRTOS/src/cmsis_os.c ****     }
 1793              		.loc 1 827 14 view .LVU391
 1794 004e FF20     		movs	r0, #255
 1795 0050 F9E7     		b	.L140
 1796              	.L144:
 821:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1797              		.loc 1 821 12 view .LVU392
 1798 0052 0020     		movs	r0, #0
 1799 0054 F7E7     		b	.L140
 1800              	.L149:
 1801 0056 00BF     		.align	2
 1802              	.L148:
 1803 0058 04ED00E0 		.word	-536810236
 1804              		.cfi_endproc
 1805              	.LFE73:
 1807              		.section	.text.osSemaphoreDelete,"ax",%progbits
 1808              		.align	1
 1809              		.global	osSemaphoreDelete
 1810              		.syntax unified
 1811              		.thumb
 1812              		.thumb_func
 1813              		.fpu softvfp
 1815              	osSemaphoreDelete:
 1816              	.LVL122:
 1817              	.LFB74:
 839:FreeRTOS/src/cmsis_os.c **** 
 840:FreeRTOS/src/cmsis_os.c **** /**
 841:FreeRTOS/src/cmsis_os.c **** * @brief Delete a Semaphore
 842:FreeRTOS/src/cmsis_os.c **** * @param  semaphore_id  semaphore object referenced with \ref osSemaphore.
 843:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 52


 844:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSemaphoreDelete shall be consistent in every CMSIS-RTOS.
 845:FreeRTOS/src/cmsis_os.c **** */
 846:FreeRTOS/src/cmsis_os.c **** osStatus osSemaphoreDelete (osSemaphoreId semaphore_id)
 847:FreeRTOS/src/cmsis_os.c **** {
 1818              		.loc 1 847 1 is_stmt 1 view -0
 1819              		.cfi_startproc
 1820              		@ args = 0, pretend = 0, frame = 0
 1821              		@ frame_needed = 0, uses_anonymous_args = 0
 1822              		.loc 1 847 1 is_stmt 0 view .LVU394
 1823 0000 10B5     		push	{r4, lr}
 1824              	.LCFI53:
 1825              		.cfi_def_cfa_offset 8
 1826              		.cfi_offset 4, -8
 1827              		.cfi_offset 14, -4
 1828 0002 0446     		mov	r4, r0
 848:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 1829              		.loc 1 848 3 is_stmt 1 view .LVU395
 1830              		.loc 1 848 7 is_stmt 0 view .LVU396
 1831 0004 FFF7FEFF 		bl	inHandlerMode
 1832              	.LVL123:
 1833              		.loc 1 848 6 view .LVU397
 1834 0008 20B9     		cbnz	r0, .L152
 849:FreeRTOS/src/cmsis_os.c ****     return osErrorISR;
 850:FreeRTOS/src/cmsis_os.c ****   }
 851:FreeRTOS/src/cmsis_os.c **** 
 852:FreeRTOS/src/cmsis_os.c ****   vSemaphoreDelete(semaphore_id);
 1835              		.loc 1 852 3 is_stmt 1 view .LVU398
 1836 000a 2046     		mov	r0, r4
 1837 000c FFF7FEFF 		bl	vQueueDelete
 1838              	.LVL124:
 853:FreeRTOS/src/cmsis_os.c **** 
 854:FreeRTOS/src/cmsis_os.c ****   return osOK; 
 1839              		.loc 1 854 3 view .LVU399
 1840              		.loc 1 854 10 is_stmt 0 view .LVU400
 1841 0010 0020     		movs	r0, #0
 1842              	.L150:
 855:FreeRTOS/src/cmsis_os.c **** }
 1843              		.loc 1 855 1 view .LVU401
 1844 0012 10BD     		pop	{r4, pc}
 1845              	.LVL125:
 1846              	.L152:
 849:FreeRTOS/src/cmsis_os.c ****     return osErrorISR;
 1847              		.loc 1 849 12 view .LVU402
 1848 0014 8220     		movs	r0, #130
 1849 0016 FCE7     		b	.L150
 1850              		.cfi_endproc
 1851              	.LFE74:
 1853              		.section	.text.osPoolCreate,"ax",%progbits
 1854              		.align	1
 1855              		.global	osPoolCreate
 1856              		.syntax unified
 1857              		.thumb
 1858              		.thumb_func
 1859              		.fpu softvfp
 1861              	osPoolCreate:
 1862              	.LVL126:
 1863              	.LFB75:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 53


 856:FreeRTOS/src/cmsis_os.c **** 
 857:FreeRTOS/src/cmsis_os.c **** #endif    /* Use Semaphores */
 858:FreeRTOS/src/cmsis_os.c **** 
 859:FreeRTOS/src/cmsis_os.c **** /*******************   Memory Pool Management Functions  ***********************/
 860:FreeRTOS/src/cmsis_os.c **** 
 861:FreeRTOS/src/cmsis_os.c **** #if (defined (osFeature_Pool)  &&  (osFeature_Pool != 0)) 
 862:FreeRTOS/src/cmsis_os.c **** 
 863:FreeRTOS/src/cmsis_os.c **** //TODO
 864:FreeRTOS/src/cmsis_os.c **** //This is a primitive and inefficient wrapper around the existing FreeRTOS memory management.
 865:FreeRTOS/src/cmsis_os.c **** //A better implementation will have to modify heap_x.c!
 866:FreeRTOS/src/cmsis_os.c **** 
 867:FreeRTOS/src/cmsis_os.c **** 
 868:FreeRTOS/src/cmsis_os.c **** typedef struct os_pool_cb {
 869:FreeRTOS/src/cmsis_os.c ****   void *pool;
 870:FreeRTOS/src/cmsis_os.c ****   uint8_t *markers;
 871:FreeRTOS/src/cmsis_os.c ****   uint32_t pool_sz;
 872:FreeRTOS/src/cmsis_os.c ****   uint32_t item_sz;
 873:FreeRTOS/src/cmsis_os.c ****   uint32_t currentIndex;
 874:FreeRTOS/src/cmsis_os.c **** } os_pool_cb_t;
 875:FreeRTOS/src/cmsis_os.c **** 
 876:FreeRTOS/src/cmsis_os.c **** 
 877:FreeRTOS/src/cmsis_os.c **** /**
 878:FreeRTOS/src/cmsis_os.c **** * @brief Create and Initialize a memory pool
 879:FreeRTOS/src/cmsis_os.c **** * @param  pool_def      memory pool definition referenced with \ref osPool.
 880:FreeRTOS/src/cmsis_os.c **** * @retval  memory pool ID for reference by other functions or NULL in case of error.
 881:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osPoolCreate shall be consistent in every CMSIS-RTOS.
 882:FreeRTOS/src/cmsis_os.c **** */
 883:FreeRTOS/src/cmsis_os.c **** osPoolId osPoolCreate (const osPoolDef_t *pool_def)
 884:FreeRTOS/src/cmsis_os.c **** {
 1864              		.loc 1 884 1 is_stmt 1 view -0
 1865              		.cfi_startproc
 1866              		@ args = 0, pretend = 0, frame = 0
 1867              		@ frame_needed = 0, uses_anonymous_args = 0
 1868              		.loc 1 884 1 is_stmt 0 view .LVU404
 1869 0000 70B5     		push	{r4, r5, r6, lr}
 1870              	.LCFI54:
 1871              		.cfi_def_cfa_offset 16
 1872              		.cfi_offset 4, -16
 1873              		.cfi_offset 5, -12
 1874              		.cfi_offset 6, -8
 1875              		.cfi_offset 14, -4
 1876 0002 0546     		mov	r5, r0
 885:FreeRTOS/src/cmsis_os.c **** #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
 886:FreeRTOS/src/cmsis_os.c ****   osPoolId thePool;
 1877              		.loc 1 886 3 is_stmt 1 view .LVU405
 887:FreeRTOS/src/cmsis_os.c ****   int itemSize = 4 * ((pool_def->item_sz + 3) / 4);
 1878              		.loc 1 887 3 view .LVU406
 1879              		.loc 1 887 32 is_stmt 0 view .LVU407
 1880 0004 4368     		ldr	r3, [r0, #4]
 1881              		.loc 1 887 42 view .LVU408
 1882 0006 0333     		adds	r3, r3, #3
 1883              		.loc 1 887 7 view .LVU409
 1884 0008 23F00306 		bic	r6, r3, #3
 1885              	.LVL127:
 888:FreeRTOS/src/cmsis_os.c ****   uint32_t i;
 1886              		.loc 1 888 3 is_stmt 1 view .LVU410
 889:FreeRTOS/src/cmsis_os.c ****   
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 54


 890:FreeRTOS/src/cmsis_os.c ****   /* First have to allocate memory for the pool control block. */
 891:FreeRTOS/src/cmsis_os.c ****  thePool = pvPortMalloc(sizeof(os_pool_cb_t));
 1887              		.loc 1 891 2 view .LVU411
 1888              		.loc 1 891 12 is_stmt 0 view .LVU412
 1889 000c 1420     		movs	r0, #20
 1890              	.LVL128:
 1891              		.loc 1 891 12 view .LVU413
 1892 000e FFF7FEFF 		bl	pvPortMalloc
 1893              	.LVL129:
 892:FreeRTOS/src/cmsis_os.c **** 
 893:FreeRTOS/src/cmsis_os.c ****   
 894:FreeRTOS/src/cmsis_os.c ****   if (thePool) {
 1894              		.loc 1 894 3 is_stmt 1 view .LVU414
 1895              		.loc 1 894 6 is_stmt 0 view .LVU415
 1896 0012 0446     		mov	r4, r0
 1897 0014 28B3     		cbz	r0, .L154
 895:FreeRTOS/src/cmsis_os.c ****     thePool->pool_sz = pool_def->pool_sz;
 1898              		.loc 1 895 5 is_stmt 1 view .LVU416
 1899              		.loc 1 895 32 is_stmt 0 view .LVU417
 1900 0016 2B68     		ldr	r3, [r5]
 1901              		.loc 1 895 22 view .LVU418
 1902 0018 8360     		str	r3, [r0, #8]
 896:FreeRTOS/src/cmsis_os.c ****     thePool->item_sz = itemSize;
 1903              		.loc 1 896 5 is_stmt 1 view .LVU419
 1904              		.loc 1 896 22 is_stmt 0 view .LVU420
 1905 001a C660     		str	r6, [r0, #12]
 897:FreeRTOS/src/cmsis_os.c ****     thePool->currentIndex = 0;
 1906              		.loc 1 897 5 is_stmt 1 view .LVU421
 1907              		.loc 1 897 27 is_stmt 0 view .LVU422
 1908 001c 0023     		movs	r3, #0
 1909 001e 0361     		str	r3, [r0, #16]
 898:FreeRTOS/src/cmsis_os.c ****     
 899:FreeRTOS/src/cmsis_os.c ****     /* Memory for markers */
 900:FreeRTOS/src/cmsis_os.c ****     thePool->markers = pvPortMalloc(pool_def->pool_sz);
 1910              		.loc 1 900 5 is_stmt 1 view .LVU423
 1911              		.loc 1 900 24 is_stmt 0 view .LVU424
 1912 0020 2868     		ldr	r0, [r5]
 1913              	.LVL130:
 1914              		.loc 1 900 24 view .LVU425
 1915 0022 FFF7FEFF 		bl	pvPortMalloc
 1916              	.LVL131:
 1917              		.loc 1 900 22 view .LVU426
 1918 0026 6060     		str	r0, [r4, #4]
 901:FreeRTOS/src/cmsis_os.c ****    
 902:FreeRTOS/src/cmsis_os.c ****     if (thePool->markers) {
 1919              		.loc 1 902 5 is_stmt 1 view .LVU427
 1920              		.loc 1 902 8 is_stmt 0 view .LVU428
 1921 0028 B8B1     		cbz	r0, .L156
 903:FreeRTOS/src/cmsis_os.c ****       /* Now allocate the pool itself. */
 904:FreeRTOS/src/cmsis_os.c ****      thePool->pool = pvPortMalloc(pool_def->pool_sz * itemSize);
 1922              		.loc 1 904 6 is_stmt 1 view .LVU429
 1923              		.loc 1 904 43 is_stmt 0 view .LVU430
 1924 002a 2868     		ldr	r0, [r5]
 1925              		.loc 1 904 22 view .LVU431
 1926 002c 00FB06F0 		mul	r0, r0, r6
 1927 0030 FFF7FEFF 		bl	pvPortMalloc
 1928              	.LVL132:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 55


 1929              		.loc 1 904 20 view .LVU432
 1930 0034 2060     		str	r0, [r4]
 905:FreeRTOS/src/cmsis_os.c ****       
 906:FreeRTOS/src/cmsis_os.c ****       if (thePool->pool) {
 1931              		.loc 1 906 7 is_stmt 1 view .LVU433
 1932              		.loc 1 906 10 is_stmt 0 view .LVU434
 1933 0036 40B1     		cbz	r0, .L163
 907:FreeRTOS/src/cmsis_os.c ****         for (i = 0; i < pool_def->pool_sz; i++) {
 1934              		.loc 1 907 16 view .LVU435
 1935 0038 0023     		movs	r3, #0
 1936              	.L157:
 1937              	.LVL133:
 1938              		.loc 1 907 33 discriminator 1 view .LVU436
 1939 003a 2A68     		ldr	r2, [r5]
 1940              		.loc 1 907 9 discriminator 1 view .LVU437
 1941 003c 9A42     		cmp	r2, r3
 1942 003e 10D9     		bls	.L154
 908:FreeRTOS/src/cmsis_os.c ****           thePool->markers[i] = 0;
 1943              		.loc 1 908 11 is_stmt 1 discriminator 3 view .LVU438
 1944              		.loc 1 908 18 is_stmt 0 discriminator 3 view .LVU439
 1945 0040 6268     		ldr	r2, [r4, #4]
 1946              		.loc 1 908 31 discriminator 3 view .LVU440
 1947 0042 0021     		movs	r1, #0
 1948 0044 D154     		strb	r1, [r2, r3]
 907:FreeRTOS/src/cmsis_os.c ****         for (i = 0; i < pool_def->pool_sz; i++) {
 1949              		.loc 1 907 45 discriminator 3 view .LVU441
 1950 0046 0133     		adds	r3, r3, #1
 1951              	.LVL134:
 907:FreeRTOS/src/cmsis_os.c ****         for (i = 0; i < pool_def->pool_sz; i++) {
 1952              		.loc 1 907 45 discriminator 3 view .LVU442
 1953 0048 F7E7     		b	.L157
 1954              	.LVL135:
 1955              	.L163:
 909:FreeRTOS/src/cmsis_os.c ****         }
 910:FreeRTOS/src/cmsis_os.c ****       }
 911:FreeRTOS/src/cmsis_os.c ****       else {
 912:FreeRTOS/src/cmsis_os.c ****         vPortFree(thePool->markers);
 1956              		.loc 1 912 9 is_stmt 1 view .LVU443
 1957 004a 6068     		ldr	r0, [r4, #4]
 1958 004c FFF7FEFF 		bl	vPortFree
 1959              	.LVL136:
 913:FreeRTOS/src/cmsis_os.c ****         vPortFree(thePool);
 1960              		.loc 1 913 9 view .LVU444
 1961 0050 2046     		mov	r0, r4
 1962 0052 FFF7FEFF 		bl	vPortFree
 1963              	.LVL137:
 914:FreeRTOS/src/cmsis_os.c ****         thePool = NULL;
 1964              		.loc 1 914 9 view .LVU445
 1965              		.loc 1 914 17 is_stmt 0 view .LVU446
 1966 0056 0024     		movs	r4, #0
 1967 0058 03E0     		b	.L154
 1968              	.LVL138:
 1969              	.L156:
 915:FreeRTOS/src/cmsis_os.c ****       }
 916:FreeRTOS/src/cmsis_os.c ****     }
 917:FreeRTOS/src/cmsis_os.c ****     else {
 918:FreeRTOS/src/cmsis_os.c ****       vPortFree(thePool);
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 56


 1970              		.loc 1 918 7 is_stmt 1 view .LVU447
 1971 005a 2046     		mov	r0, r4
 1972 005c FFF7FEFF 		bl	vPortFree
 1973              	.LVL139:
 919:FreeRTOS/src/cmsis_os.c ****       thePool = NULL;
 1974              		.loc 1 919 7 view .LVU448
 1975              		.loc 1 919 15 is_stmt 0 view .LVU449
 1976 0060 0024     		movs	r4, #0
 920:FreeRTOS/src/cmsis_os.c ****     }
 921:FreeRTOS/src/cmsis_os.c ****   }
 922:FreeRTOS/src/cmsis_os.c **** 
 923:FreeRTOS/src/cmsis_os.c ****   return thePool;
 1977              		.loc 1 923 3 is_stmt 1 view .LVU450
 1978              	.LVL140:
 1979              	.L154:
 924:FreeRTOS/src/cmsis_os.c ****  
 925:FreeRTOS/src/cmsis_os.c **** #else
 926:FreeRTOS/src/cmsis_os.c ****   return NULL;
 927:FreeRTOS/src/cmsis_os.c **** #endif
 928:FreeRTOS/src/cmsis_os.c **** }
 1980              		.loc 1 928 1 is_stmt 0 view .LVU451
 1981 0062 2046     		mov	r0, r4
 1982 0064 70BD     		pop	{r4, r5, r6, pc}
 1983              		.loc 1 928 1 view .LVU452
 1984              		.cfi_endproc
 1985              	.LFE75:
 1987              		.section	.text.osPoolAlloc,"ax",%progbits
 1988              		.align	1
 1989              		.global	osPoolAlloc
 1990              		.syntax unified
 1991              		.thumb
 1992              		.thumb_func
 1993              		.fpu softvfp
 1995              	osPoolAlloc:
 1996              	.LVL141:
 1997              	.LFB76:
 929:FreeRTOS/src/cmsis_os.c **** 
 930:FreeRTOS/src/cmsis_os.c **** /**
 931:FreeRTOS/src/cmsis_os.c **** * @brief Allocate a memory block from a memory pool
 932:FreeRTOS/src/cmsis_os.c **** * @param pool_id       memory pool ID obtain referenced with \ref osPoolCreate.
 933:FreeRTOS/src/cmsis_os.c **** * @retval  address of the allocated memory block or NULL in case of no memory available.
 934:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osPoolAlloc shall be consistent in every CMSIS-RTOS.
 935:FreeRTOS/src/cmsis_os.c **** */
 936:FreeRTOS/src/cmsis_os.c **** void *osPoolAlloc (osPoolId pool_id)
 937:FreeRTOS/src/cmsis_os.c **** {
 1998              		.loc 1 937 1 is_stmt 1 view -0
 1999              		.cfi_startproc
 2000              		@ args = 0, pretend = 0, frame = 0
 2001              		@ frame_needed = 0, uses_anonymous_args = 0
 2002              		.loc 1 937 1 is_stmt 0 view .LVU454
 2003 0000 70B5     		push	{r4, r5, r6, lr}
 2004              	.LCFI55:
 2005              		.cfi_def_cfa_offset 16
 2006              		.cfi_offset 4, -16
 2007              		.cfi_offset 5, -12
 2008              		.cfi_offset 6, -8
 2009              		.cfi_offset 14, -4
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 57


 2010 0002 0446     		mov	r4, r0
 938:FreeRTOS/src/cmsis_os.c ****   int dummy = 0;
 2011              		.loc 1 938 3 is_stmt 1 view .LVU455
 2012              	.LVL142:
 939:FreeRTOS/src/cmsis_os.c ****   void *p = NULL;
 2013              		.loc 1 939 3 view .LVU456
 940:FreeRTOS/src/cmsis_os.c ****   uint32_t i;
 2014              		.loc 1 940 3 view .LVU457
 941:FreeRTOS/src/cmsis_os.c ****   uint32_t index;
 2015              		.loc 1 941 3 view .LVU458
 942:FreeRTOS/src/cmsis_os.c ****   
 943:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 2016              		.loc 1 943 3 view .LVU459
 2017              		.loc 1 943 7 is_stmt 0 view .LVU460
 2018 0004 FFF7FEFF 		bl	inHandlerMode
 2019              	.LVL143:
 2020              		.loc 1 943 6 view .LVU461
 2021 0008 C8B1     		cbz	r0, .L165
 944:FreeRTOS/src/cmsis_os.c ****     dummy = portSET_INTERRUPT_MASK_FROM_ISR();
 2022              		.loc 1 944 5 is_stmt 1 view .LVU462
 2023              	.LBB10:
 2024              	.LBI10:
 2025              		.file 3 "FreeRTOS/inc/portmacro.h"
   1:FreeRTOS/inc/portmacro.h **** /*
   2:FreeRTOS/inc/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:FreeRTOS/inc/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:FreeRTOS/inc/portmacro.h ****  *
   5:FreeRTOS/inc/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:FreeRTOS/inc/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:FreeRTOS/inc/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:FreeRTOS/inc/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:FreeRTOS/inc/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:FreeRTOS/inc/portmacro.h ****  * subject to the following conditions:
  11:FreeRTOS/inc/portmacro.h ****  *
  12:FreeRTOS/inc/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:FreeRTOS/inc/portmacro.h ****  * copies or substantial portions of the Software.
  14:FreeRTOS/inc/portmacro.h ****  *
  15:FreeRTOS/inc/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:FreeRTOS/inc/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:FreeRTOS/inc/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:FreeRTOS/inc/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:FreeRTOS/inc/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:FreeRTOS/inc/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:FreeRTOS/inc/portmacro.h ****  *
  22:FreeRTOS/inc/portmacro.h ****  * http://www.FreeRTOS.org
  23:FreeRTOS/inc/portmacro.h ****  * http://aws.amazon.com/freertos
  24:FreeRTOS/inc/portmacro.h ****  *
  25:FreeRTOS/inc/portmacro.h ****  * 1 tab == 4 spaces!
  26:FreeRTOS/inc/portmacro.h ****  */
  27:FreeRTOS/inc/portmacro.h **** 
  28:FreeRTOS/inc/portmacro.h **** 
  29:FreeRTOS/inc/portmacro.h **** #ifndef PORTMACRO_H
  30:FreeRTOS/inc/portmacro.h **** #define PORTMACRO_H
  31:FreeRTOS/inc/portmacro.h **** 
  32:FreeRTOS/inc/portmacro.h **** #ifdef __cplusplus
  33:FreeRTOS/inc/portmacro.h **** extern "C" {
  34:FreeRTOS/inc/portmacro.h **** #endif
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 58


  35:FreeRTOS/inc/portmacro.h **** 
  36:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------
  37:FreeRTOS/inc/portmacro.h ****  * Port specific definitions.
  38:FreeRTOS/inc/portmacro.h ****  *
  39:FreeRTOS/inc/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:FreeRTOS/inc/portmacro.h ****  * given hardware and compiler.
  41:FreeRTOS/inc/portmacro.h ****  *
  42:FreeRTOS/inc/portmacro.h ****  * These settings should not be altered.
  43:FreeRTOS/inc/portmacro.h ****  *-----------------------------------------------------------
  44:FreeRTOS/inc/portmacro.h ****  */
  45:FreeRTOS/inc/portmacro.h **** 
  46:FreeRTOS/inc/portmacro.h **** /* Type definitions. */
  47:FreeRTOS/inc/portmacro.h **** #define portCHAR		char
  48:FreeRTOS/inc/portmacro.h **** #define portFLOAT		float
  49:FreeRTOS/inc/portmacro.h **** #define portDOUBLE		double
  50:FreeRTOS/inc/portmacro.h **** #define portLONG		long
  51:FreeRTOS/inc/portmacro.h **** #define portSHORT		short
  52:FreeRTOS/inc/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:FreeRTOS/inc/portmacro.h **** #define portBASE_TYPE	long
  54:FreeRTOS/inc/portmacro.h **** 
  55:FreeRTOS/inc/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:FreeRTOS/inc/portmacro.h **** typedef long BaseType_t;
  57:FreeRTOS/inc/portmacro.h **** typedef unsigned long UBaseType_t;
  58:FreeRTOS/inc/portmacro.h **** 
  59:FreeRTOS/inc/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:FreeRTOS/inc/portmacro.h **** 	typedef uint16_t TickType_t;
  61:FreeRTOS/inc/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:FreeRTOS/inc/portmacro.h **** #else
  63:FreeRTOS/inc/portmacro.h **** 	typedef uint32_t TickType_t;
  64:FreeRTOS/inc/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:FreeRTOS/inc/portmacro.h **** 
  66:FreeRTOS/inc/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:FreeRTOS/inc/portmacro.h **** 	not need to be guarded with a critical section. */
  68:FreeRTOS/inc/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:FreeRTOS/inc/portmacro.h **** #endif
  70:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
  71:FreeRTOS/inc/portmacro.h **** 
  72:FreeRTOS/inc/portmacro.h **** /* Architecture specifics. */
  73:FreeRTOS/inc/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:FreeRTOS/inc/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:FreeRTOS/inc/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
  77:FreeRTOS/inc/portmacro.h **** 
  78:FreeRTOS/inc/portmacro.h **** /* Scheduler utilities. */
  79:FreeRTOS/inc/portmacro.h **** #define portYIELD() 															\
  80:FreeRTOS/inc/portmacro.h **** {																				\
  81:FreeRTOS/inc/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:FreeRTOS/inc/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:FreeRTOS/inc/portmacro.h **** 																				\
  84:FreeRTOS/inc/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:FreeRTOS/inc/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:FreeRTOS/inc/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:FreeRTOS/inc/portmacro.h **** 	__asm volatile( "isb" );													\
  88:FreeRTOS/inc/portmacro.h **** }
  89:FreeRTOS/inc/portmacro.h **** 
  90:FreeRTOS/inc/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:FreeRTOS/inc/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 59


  92:FreeRTOS/inc/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:FreeRTOS/inc/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
  95:FreeRTOS/inc/portmacro.h **** 
  96:FreeRTOS/inc/portmacro.h **** /* Critical section management. */
  97:FreeRTOS/inc/portmacro.h **** extern void vPortEnterCritical( void );
  98:FreeRTOS/inc/portmacro.h **** extern void vPortExitCritical( void );
  99:FreeRTOS/inc/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:FreeRTOS/inc/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:FreeRTOS/inc/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:FreeRTOS/inc/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:FreeRTOS/inc/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:FreeRTOS/inc/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:FreeRTOS/inc/portmacro.h **** 
 106:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 107:FreeRTOS/inc/portmacro.h **** 
 108:FreeRTOS/inc/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:FreeRTOS/inc/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:FreeRTOS/inc/portmacro.h **** (which build with all the ports) will build. */
 111:FreeRTOS/inc/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:FreeRTOS/inc/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 114:FreeRTOS/inc/portmacro.h **** 
 115:FreeRTOS/inc/portmacro.h **** /* Tickless idle/low power functionality. */
 116:FreeRTOS/inc/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:FreeRTOS/inc/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:FreeRTOS/inc/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:FreeRTOS/inc/portmacro.h **** #endif
 120:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 121:FreeRTOS/inc/portmacro.h **** 
 122:FreeRTOS/inc/portmacro.h **** /* Architecture specific optimisations. */
 123:FreeRTOS/inc/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:FreeRTOS/inc/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:FreeRTOS/inc/portmacro.h **** #endif
 126:FreeRTOS/inc/portmacro.h **** 
 127:FreeRTOS/inc/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:FreeRTOS/inc/portmacro.h **** 
 129:FreeRTOS/inc/portmacro.h **** 	/* Generic helper function. */
 130:FreeRTOS/inc/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:FreeRTOS/inc/portmacro.h **** 	{
 132:FreeRTOS/inc/portmacro.h **** 	uint8_t ucReturn;
 133:FreeRTOS/inc/portmacro.h **** 
 134:FreeRTOS/inc/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:FreeRTOS/inc/portmacro.h **** 		return ucReturn;
 136:FreeRTOS/inc/portmacro.h **** 	}
 137:FreeRTOS/inc/portmacro.h **** 
 138:FreeRTOS/inc/portmacro.h **** 	/* Check the configuration. */
 139:FreeRTOS/inc/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:FreeRTOS/inc/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:FreeRTOS/inc/portmacro.h **** 	#endif
 142:FreeRTOS/inc/portmacro.h **** 
 143:FreeRTOS/inc/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:FreeRTOS/inc/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:FreeRTOS/inc/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:FreeRTOS/inc/portmacro.h **** 
 147:FreeRTOS/inc/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:FreeRTOS/inc/portmacro.h **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 60


 149:FreeRTOS/inc/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:FreeRTOS/inc/portmacro.h **** 
 151:FreeRTOS/inc/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:FreeRTOS/inc/portmacro.h **** 
 153:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 154:FreeRTOS/inc/portmacro.h **** 
 155:FreeRTOS/inc/portmacro.h **** #ifdef configASSERT
 156:FreeRTOS/inc/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:FreeRTOS/inc/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:FreeRTOS/inc/portmacro.h **** #endif
 159:FreeRTOS/inc/portmacro.h **** 
 160:FreeRTOS/inc/portmacro.h **** /* portNOP() is not required by this port. */
 161:FreeRTOS/inc/portmacro.h **** #define portNOP()
 162:FreeRTOS/inc/portmacro.h **** 
 163:FreeRTOS/inc/portmacro.h **** #define portINLINE	__inline
 164:FreeRTOS/inc/portmacro.h **** 
 165:FreeRTOS/inc/portmacro.h **** #ifndef portFORCE_INLINE
 166:FreeRTOS/inc/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:FreeRTOS/inc/portmacro.h **** #endif
 168:FreeRTOS/inc/portmacro.h **** 
 169:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 170:FreeRTOS/inc/portmacro.h **** 
 171:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:FreeRTOS/inc/portmacro.h **** {
 173:FreeRTOS/inc/portmacro.h **** uint32_t ulCurrentInterrupt;
 174:FreeRTOS/inc/portmacro.h **** BaseType_t xReturn;
 175:FreeRTOS/inc/portmacro.h **** 
 176:FreeRTOS/inc/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 177:FreeRTOS/inc/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 178:FreeRTOS/inc/portmacro.h **** 
 179:FreeRTOS/inc/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 180:FreeRTOS/inc/portmacro.h **** 	{
 181:FreeRTOS/inc/portmacro.h **** 		xReturn = pdFALSE;
 182:FreeRTOS/inc/portmacro.h **** 	}
 183:FreeRTOS/inc/portmacro.h **** 	else
 184:FreeRTOS/inc/portmacro.h **** 	{
 185:FreeRTOS/inc/portmacro.h **** 		xReturn = pdTRUE;
 186:FreeRTOS/inc/portmacro.h **** 	}
 187:FreeRTOS/inc/portmacro.h **** 
 188:FreeRTOS/inc/portmacro.h **** 	return xReturn;
 189:FreeRTOS/inc/portmacro.h **** }
 190:FreeRTOS/inc/portmacro.h **** 
 191:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 192:FreeRTOS/inc/portmacro.h **** 
 193:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:FreeRTOS/inc/portmacro.h **** {
 195:FreeRTOS/inc/portmacro.h **** uint32_t ulNewBASEPRI;
 196:FreeRTOS/inc/portmacro.h **** 
 197:FreeRTOS/inc/portmacro.h **** 	__asm volatile
 198:FreeRTOS/inc/portmacro.h **** 	(
 199:FreeRTOS/inc/portmacro.h **** 		"	mov %0, %1												\n" \
 200:FreeRTOS/inc/portmacro.h **** 		"	msr basepri, %0											\n" \
 201:FreeRTOS/inc/portmacro.h **** 		"	isb														\n" \
 202:FreeRTOS/inc/portmacro.h **** 		"	dsb														\n" \
 203:FreeRTOS/inc/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 204:FreeRTOS/inc/portmacro.h **** 	);
 205:FreeRTOS/inc/portmacro.h **** }
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 61


 206:FreeRTOS/inc/portmacro.h **** 
 207:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 208:FreeRTOS/inc/portmacro.h **** 
 209:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 2026              		.loc 3 209 34 view .LVU463
 2027              	.LBB11:
 210:FreeRTOS/inc/portmacro.h **** {
 211:FreeRTOS/inc/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 2028              		.loc 3 211 1 view .LVU464
 212:FreeRTOS/inc/portmacro.h **** 
 213:FreeRTOS/inc/portmacro.h **** 	__asm volatile
 2029              		.loc 3 213 2 view .LVU465
 2030              		.syntax unified
 2031              	@ 213 "FreeRTOS/inc/portmacro.h" 1
 2032 000a EFF31185 			mrs r5, basepri											
 2033 000e 4FF0BF03 		mov r3, #191												
 2034 0012 83F31188 		msr basepri, r3											
 2035 0016 BFF36F8F 		isb														
 2036 001a BFF34F8F 		dsb														
 2037              	
 2038              	@ 0 "" 2
 2039              	.LVL144:
 214:FreeRTOS/inc/portmacro.h **** 	(
 215:FreeRTOS/inc/portmacro.h **** 		"	mrs %0, basepri											\n" \
 216:FreeRTOS/inc/portmacro.h **** 		"	mov %1, %2												\n" \
 217:FreeRTOS/inc/portmacro.h **** 		"	msr basepri, %1											\n" \
 218:FreeRTOS/inc/portmacro.h **** 		"	isb														\n" \
 219:FreeRTOS/inc/portmacro.h **** 		"	dsb														\n" \
 220:FreeRTOS/inc/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 221:FreeRTOS/inc/portmacro.h **** 	);
 222:FreeRTOS/inc/portmacro.h **** 
 223:FreeRTOS/inc/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 224:FreeRTOS/inc/portmacro.h **** 	warnings. */
 225:FreeRTOS/inc/portmacro.h **** 	return ulOriginalBASEPRI;
 2040              		.loc 3 225 2 view .LVU466
 2041              		.thumb
 2042              		.syntax unified
 2043              	.L166:
 2044              		.loc 3 225 2 is_stmt 0 view .LVU467
 2045              	.LBE11:
 2046              	.LBE10:
 945:FreeRTOS/src/cmsis_os.c ****   }
 946:FreeRTOS/src/cmsis_os.c ****   else {
 947:FreeRTOS/src/cmsis_os.c ****     vPortEnterCritical();
 948:FreeRTOS/src/cmsis_os.c ****   }
 949:FreeRTOS/src/cmsis_os.c ****   
 950:FreeRTOS/src/cmsis_os.c ****   for (i = 0; i < pool_id->pool_sz; i++) {
 2047              		.loc 1 950 3 is_stmt 1 view .LVU468
 2048              		.loc 1 950 10 is_stmt 0 view .LVU469
 2049 001e 0020     		movs	r0, #0
 2050              	.LVL145:
 2051              	.L167:
 2052              		.loc 1 950 26 discriminator 1 view .LVU470
 2053 0020 A168     		ldr	r1, [r4, #8]
 2054              		.loc 1 950 3 discriminator 1 view .LVU471
 2055 0022 8142     		cmp	r1, r0
 2056 0024 17D9     		bls	.L174
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 62


 951:FreeRTOS/src/cmsis_os.c ****     index = (pool_id->currentIndex + i) % pool_id->pool_sz;
 2057              		.loc 1 951 5 is_stmt 1 view .LVU472
 2058              		.loc 1 951 21 is_stmt 0 view .LVU473
 2059 0026 2369     		ldr	r3, [r4, #16]
 2060              		.loc 1 951 36 view .LVU474
 2061 0028 1A18     		adds	r2, r3, r0
 2062              		.loc 1 951 11 view .LVU475
 2063 002a B2FBF1F3 		udiv	r3, r2, r1
 2064 002e 01FB1323 		mls	r3, r1, r3, r2
 2065              	.LVL146:
 952:FreeRTOS/src/cmsis_os.c ****     
 953:FreeRTOS/src/cmsis_os.c ****     if (pool_id->markers[index] == 0) {
 2066              		.loc 1 953 5 is_stmt 1 view .LVU476
 2067              		.loc 1 953 16 is_stmt 0 view .LVU477
 2068 0032 6268     		ldr	r2, [r4, #4]
 2069              		.loc 1 953 25 view .LVU478
 2070 0034 D118     		adds	r1, r2, r3
 2071 0036 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2072              		.loc 1 953 8 view .LVU479
 2073 0038 2AB1     		cbz	r2, .L175
 950:FreeRTOS/src/cmsis_os.c ****     index = (pool_id->currentIndex + i) % pool_id->pool_sz;
 2074              		.loc 1 950 38 discriminator 2 view .LVU480
 2075 003a 0130     		adds	r0, r0, #1
 2076              	.LVL147:
 950:FreeRTOS/src/cmsis_os.c ****     index = (pool_id->currentIndex + i) % pool_id->pool_sz;
 2077              		.loc 1 950 38 discriminator 2 view .LVU481
 2078 003c F0E7     		b	.L167
 2079              	.LVL148:
 2080              	.L165:
 950:FreeRTOS/src/cmsis_os.c ****     index = (pool_id->currentIndex + i) % pool_id->pool_sz;
 2081              		.loc 1 950 38 discriminator 2 view .LVU482
 2082 003e 0546     		mov	r5, r0
 947:FreeRTOS/src/cmsis_os.c ****   }
 2083              		.loc 1 947 5 is_stmt 1 view .LVU483
 2084 0040 FFF7FEFF 		bl	vPortEnterCritical
 2085              	.LVL149:
 2086 0044 EBE7     		b	.L166
 2087              	.LVL150:
 2088              	.L175:
 954:FreeRTOS/src/cmsis_os.c ****       pool_id->markers[index] = 1;
 2089              		.loc 1 954 7 view .LVU484
 2090              		.loc 1 954 31 is_stmt 0 view .LVU485
 2091 0046 0122     		movs	r2, #1
 2092 0048 0A70     		strb	r2, [r1]
 955:FreeRTOS/src/cmsis_os.c ****       p = (void *)((uint32_t)(pool_id->pool) + (index * pool_id->item_sz));
 2093              		.loc 1 955 7 is_stmt 1 view .LVU486
 2094              		.loc 1 955 38 is_stmt 0 view .LVU487
 2095 004a 2268     		ldr	r2, [r4]
 2096              		.loc 1 955 64 view .LVU488
 2097 004c E668     		ldr	r6, [r4, #12]
 2098              		.loc 1 955 46 view .LVU489
 2099 004e 03FB0626 		mla	r6, r3, r6, r2
 2100              	.LVL151:
 956:FreeRTOS/src/cmsis_os.c ****       pool_id->currentIndex = index;
 2101              		.loc 1 956 7 is_stmt 1 view .LVU490
 2102              		.loc 1 956 29 is_stmt 0 view .LVU491
 2103 0052 2361     		str	r3, [r4, #16]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 63


 957:FreeRTOS/src/cmsis_os.c ****       break;
 2104              		.loc 1 957 7 is_stmt 1 view .LVU492
 2105 0054 00E0     		b	.L169
 2106              	.LVL152:
 2107              	.L174:
 939:FreeRTOS/src/cmsis_os.c ****   uint32_t i;
 2108              		.loc 1 939 9 is_stmt 0 view .LVU493
 2109 0056 0026     		movs	r6, #0
 2110              	.LVL153:
 2111              	.L169:
 958:FreeRTOS/src/cmsis_os.c ****     }
 959:FreeRTOS/src/cmsis_os.c ****   }
 960:FreeRTOS/src/cmsis_os.c ****   
 961:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 2112              		.loc 1 961 3 is_stmt 1 view .LVU494
 2113              		.loc 1 961 7 is_stmt 0 view .LVU495
 2114 0058 FFF7FEFF 		bl	inHandlerMode
 2115              	.LVL154:
 2116              		.loc 1 961 6 view .LVU496
 2117 005c 18B1     		cbz	r0, .L171
 962:FreeRTOS/src/cmsis_os.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR(dummy);
 2118              		.loc 1 962 5 is_stmt 1 view .LVU497
 2119              	.LVL155:
 2120              	.LBB12:
 2121              	.LBI12:
 226:FreeRTOS/inc/portmacro.h **** }
 227:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 228:FreeRTOS/inc/portmacro.h **** 
 229:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 2122              		.loc 3 229 30 view .LVU498
 2123              	.LBB13:
 230:FreeRTOS/inc/portmacro.h **** {
 231:FreeRTOS/inc/portmacro.h **** 	__asm volatile
 2124              		.loc 3 231 2 view .LVU499
 2125              		.syntax unified
 2126              	@ 231 "FreeRTOS/inc/portmacro.h" 1
 2127 005e 85F31188 			msr basepri, r5	
 2128              	@ 0 "" 2
 2129              	.LVL156:
 2130              		.thumb
 2131              		.syntax unified
 2132              	.L164:
 2133              		.loc 3 231 2 is_stmt 0 view .LVU500
 2134              	.LBE13:
 2135              	.LBE12:
 963:FreeRTOS/src/cmsis_os.c ****   }
 964:FreeRTOS/src/cmsis_os.c ****   else {
 965:FreeRTOS/src/cmsis_os.c ****     vPortExitCritical();
 966:FreeRTOS/src/cmsis_os.c ****   }
 967:FreeRTOS/src/cmsis_os.c ****   
 968:FreeRTOS/src/cmsis_os.c ****   return p;
 969:FreeRTOS/src/cmsis_os.c **** }
 2136              		.loc 1 969 1 view .LVU501
 2137 0062 3046     		mov	r0, r6
 2138 0064 70BD     		pop	{r4, r5, r6, pc}
 2139              	.LVL157:
 2140              	.L171:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 64


 965:FreeRTOS/src/cmsis_os.c ****   }
 2141              		.loc 1 965 5 is_stmt 1 view .LVU502
 2142 0066 FFF7FEFF 		bl	vPortExitCritical
 2143              	.LVL158:
 968:FreeRTOS/src/cmsis_os.c **** }
 2144              		.loc 1 968 3 view .LVU503
 968:FreeRTOS/src/cmsis_os.c **** }
 2145              		.loc 1 968 10 is_stmt 0 view .LVU504
 2146 006a FAE7     		b	.L164
 2147              		.cfi_endproc
 2148              	.LFE76:
 2150              		.section	.text.osPoolCAlloc,"ax",%progbits
 2151              		.align	1
 2152              		.global	osPoolCAlloc
 2153              		.syntax unified
 2154              		.thumb
 2155              		.thumb_func
 2156              		.fpu softvfp
 2158              	osPoolCAlloc:
 2159              	.LVL159:
 2160              	.LFB77:
 970:FreeRTOS/src/cmsis_os.c **** 
 971:FreeRTOS/src/cmsis_os.c **** /**
 972:FreeRTOS/src/cmsis_os.c **** * @brief Allocate a memory block from a memory pool and set memory block to zero
 973:FreeRTOS/src/cmsis_os.c **** * @param  pool_id       memory pool ID obtain referenced with \ref osPoolCreate.
 974:FreeRTOS/src/cmsis_os.c **** * @retval  address of the allocated memory block or NULL in case of no memory available.
 975:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osPoolCAlloc shall be consistent in every CMSIS-RTOS.
 976:FreeRTOS/src/cmsis_os.c **** */
 977:FreeRTOS/src/cmsis_os.c **** void *osPoolCAlloc (osPoolId pool_id)
 978:FreeRTOS/src/cmsis_os.c **** {
 2161              		.loc 1 978 1 is_stmt 1 view -0
 2162              		.cfi_startproc
 2163              		@ args = 0, pretend = 0, frame = 0
 2164              		@ frame_needed = 0, uses_anonymous_args = 0
 2165              		.loc 1 978 1 is_stmt 0 view .LVU506
 2166 0000 08B5     		push	{r3, lr}
 2167              	.LCFI56:
 2168              		.cfi_def_cfa_offset 8
 2169              		.cfi_offset 3, -8
 2170              		.cfi_offset 14, -4
 979:FreeRTOS/src/cmsis_os.c ****   void *p = osPoolAlloc(pool_id);
 2171              		.loc 1 979 3 is_stmt 1 view .LVU507
 2172              		.loc 1 979 13 is_stmt 0 view .LVU508
 2173 0002 FFF7FEFF 		bl	osPoolAlloc
 2174              	.LVL160:
 980:FreeRTOS/src/cmsis_os.c ****   
 981:FreeRTOS/src/cmsis_os.c ****   if (p != NULL)
 2175              		.loc 1 981 3 is_stmt 1 view .LVU509
 2176              		.loc 1 981 6 is_stmt 0 view .LVU510
 2177 0006 0346     		mov	r3, r0
 2178 0008 08B1     		cbz	r0, .L176
 982:FreeRTOS/src/cmsis_os.c ****   {
 983:FreeRTOS/src/cmsis_os.c ****     memset(p, 0, sizeof(pool_id->pool_sz));
 2179              		.loc 1 983 5 is_stmt 1 view .LVU511
 2180 000a 0022     		movs	r2, #0
 2181 000c 0260     		str	r2, [r0]	@ unaligned
 984:FreeRTOS/src/cmsis_os.c ****   }
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 65


 985:FreeRTOS/src/cmsis_os.c ****   
 986:FreeRTOS/src/cmsis_os.c ****   return p;
 2182              		.loc 1 986 3 view .LVU512
 2183              	.L176:
 987:FreeRTOS/src/cmsis_os.c **** }
 2184              		.loc 1 987 1 is_stmt 0 view .LVU513
 2185 000e 1846     		mov	r0, r3
 2186              	.LVL161:
 2187              		.loc 1 987 1 view .LVU514
 2188 0010 08BD     		pop	{r3, pc}
 2189              		.loc 1 987 1 view .LVU515
 2190              		.cfi_endproc
 2191              	.LFE77:
 2193              		.section	.text.osPoolFree,"ax",%progbits
 2194              		.align	1
 2195              		.global	osPoolFree
 2196              		.syntax unified
 2197              		.thumb
 2198              		.thumb_func
 2199              		.fpu softvfp
 2201              	osPoolFree:
 2202              	.LVL162:
 2203              	.LFB78:
 988:FreeRTOS/src/cmsis_os.c **** 
 989:FreeRTOS/src/cmsis_os.c **** /**
 990:FreeRTOS/src/cmsis_os.c **** * @brief Return an allocated memory block back to a specific memory pool
 991:FreeRTOS/src/cmsis_os.c **** * @param  pool_id       memory pool ID obtain referenced with \ref osPoolCreate.
 992:FreeRTOS/src/cmsis_os.c **** * @param  block         address of the allocated memory block that is returned to the memory pool.
 993:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 994:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osPoolFree shall be consistent in every CMSIS-RTOS.
 995:FreeRTOS/src/cmsis_os.c **** */
 996:FreeRTOS/src/cmsis_os.c **** osStatus osPoolFree (osPoolId pool_id, void *block)
 997:FreeRTOS/src/cmsis_os.c **** {
 2204              		.loc 1 997 1 is_stmt 1 view -0
 2205              		.cfi_startproc
 2206              		@ args = 0, pretend = 0, frame = 0
 2207              		@ frame_needed = 0, uses_anonymous_args = 0
 2208              		@ link register save eliminated.
 998:FreeRTOS/src/cmsis_os.c ****   uint32_t index;
 2209              		.loc 1 998 3 view .LVU517
 999:FreeRTOS/src/cmsis_os.c ****   
1000:FreeRTOS/src/cmsis_os.c ****   if (pool_id == NULL) {
 2210              		.loc 1 1000 3 view .LVU518
 2211              		.loc 1 1000 6 is_stmt 0 view .LVU519
 2212 0000 0346     		mov	r3, r0
 2213 0002 98B1     		cbz	r0, .L181
1001:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1002:FreeRTOS/src/cmsis_os.c ****   }
1003:FreeRTOS/src/cmsis_os.c ****   
1004:FreeRTOS/src/cmsis_os.c ****   if (block == NULL) {
 2214              		.loc 1 1004 3 is_stmt 1 view .LVU520
 2215              		.loc 1 1004 6 is_stmt 0 view .LVU521
 2216 0004 A1B1     		cbz	r1, .L182
1005:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1006:FreeRTOS/src/cmsis_os.c ****   }
1007:FreeRTOS/src/cmsis_os.c ****   
1008:FreeRTOS/src/cmsis_os.c ****   if (block < pool_id->pool) {
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 66


 2217              		.loc 1 1008 3 is_stmt 1 view .LVU522
 2218              		.loc 1 1008 22 is_stmt 0 view .LVU523
 2219 0006 0268     		ldr	r2, [r0]
 2220              		.loc 1 1008 6 view .LVU524
 2221 0008 8A42     		cmp	r2, r1
 2222 000a 13D8     		bhi	.L183
1009:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1010:FreeRTOS/src/cmsis_os.c ****   }
1011:FreeRTOS/src/cmsis_os.c ****   
1012:FreeRTOS/src/cmsis_os.c ****   index = (uint32_t)block - (uint32_t)(pool_id->pool);
 2223              		.loc 1 1012 3 is_stmt 1 view .LVU525
 2224              		.loc 1 1012 9 is_stmt 0 view .LVU526
 2225 000c 891A     		subs	r1, r1, r2
 2226              	.LVL163:
1013:FreeRTOS/src/cmsis_os.c ****   if (index % pool_id->item_sz) {
 2227              		.loc 1 1013 3 is_stmt 1 view .LVU527
 2228              		.loc 1 1013 22 is_stmt 0 view .LVU528
 2229 000e C068     		ldr	r0, [r0, #12]
 2230              	.LVL164:
 2231              		.loc 1 1013 13 view .LVU529
 2232 0010 B1FBF0F2 		udiv	r2, r1, r0
 2233 0014 00FB1212 		mls	r2, r0, r2, r1
 2234              		.loc 1 1013 6 view .LVU530
 2235 0018 72B9     		cbnz	r2, .L184
1014:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1015:FreeRTOS/src/cmsis_os.c ****   }
1016:FreeRTOS/src/cmsis_os.c ****   index = index / pool_id->item_sz;
 2236              		.loc 1 1016 3 is_stmt 1 view .LVU531
 2237              		.loc 1 1016 9 is_stmt 0 view .LVU532
 2238 001a B1FBF0F1 		udiv	r1, r1, r0
 2239              	.LVL165:
1017:FreeRTOS/src/cmsis_os.c ****   if (index >= pool_id->pool_sz) {
 2240              		.loc 1 1017 3 is_stmt 1 view .LVU533
 2241              		.loc 1 1017 23 is_stmt 0 view .LVU534
 2242 001e 9A68     		ldr	r2, [r3, #8]
 2243              		.loc 1 1017 6 view .LVU535
 2244 0020 8A42     		cmp	r2, r1
 2245 0022 0BD9     		bls	.L185
1018:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1019:FreeRTOS/src/cmsis_os.c ****   }
1020:FreeRTOS/src/cmsis_os.c ****   
1021:FreeRTOS/src/cmsis_os.c ****   pool_id->markers[index] = 0;
 2246              		.loc 1 1021 3 is_stmt 1 view .LVU536
 2247              		.loc 1 1021 10 is_stmt 0 view .LVU537
 2248 0024 5B68     		ldr	r3, [r3, #4]
 2249              	.LVL166:
 2250              		.loc 1 1021 27 view .LVU538
 2251 0026 0020     		movs	r0, #0
 2252 0028 5854     		strb	r0, [r3, r1]
1022:FreeRTOS/src/cmsis_os.c ****   
1023:FreeRTOS/src/cmsis_os.c ****   return osOK;
 2253              		.loc 1 1023 3 is_stmt 1 view .LVU539
 2254              		.loc 1 1023 10 is_stmt 0 view .LVU540
 2255 002a 7047     		bx	lr
 2256              	.LVL167:
 2257              	.L181:
1001:FreeRTOS/src/cmsis_os.c ****   }
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 67


 2258              		.loc 1 1001 12 view .LVU541
 2259 002c 8020     		movs	r0, #128
 2260              	.LVL168:
1001:FreeRTOS/src/cmsis_os.c ****   }
 2261              		.loc 1 1001 12 view .LVU542
 2262 002e 7047     		bx	lr
 2263              	.LVL169:
 2264              	.L182:
1005:FreeRTOS/src/cmsis_os.c ****   }
 2265              		.loc 1 1005 12 view .LVU543
 2266 0030 8020     		movs	r0, #128
 2267              	.LVL170:
1005:FreeRTOS/src/cmsis_os.c ****   }
 2268              		.loc 1 1005 12 view .LVU544
 2269 0032 7047     		bx	lr
 2270              	.LVL171:
 2271              	.L183:
1009:FreeRTOS/src/cmsis_os.c ****   }
 2272              		.loc 1 1009 12 view .LVU545
 2273 0034 8020     		movs	r0, #128
 2274              	.LVL172:
1009:FreeRTOS/src/cmsis_os.c ****   }
 2275              		.loc 1 1009 12 view .LVU546
 2276 0036 7047     		bx	lr
 2277              	.LVL173:
 2278              	.L184:
1014:FreeRTOS/src/cmsis_os.c ****   }
 2279              		.loc 1 1014 12 view .LVU547
 2280 0038 8020     		movs	r0, #128
 2281 003a 7047     		bx	lr
 2282              	.L185:
1018:FreeRTOS/src/cmsis_os.c ****   }
 2283              		.loc 1 1018 12 view .LVU548
 2284 003c 8020     		movs	r0, #128
1024:FreeRTOS/src/cmsis_os.c **** }
 2285              		.loc 1 1024 1 view .LVU549
 2286 003e 7047     		bx	lr
 2287              		.cfi_endproc
 2288              	.LFE78:
 2290              		.section	.text.osMessageCreate,"ax",%progbits
 2291              		.align	1
 2292              		.global	osMessageCreate
 2293              		.syntax unified
 2294              		.thumb
 2295              		.thumb_func
 2296              		.fpu softvfp
 2298              	osMessageCreate:
 2299              	.LVL174:
 2300              	.LFB79:
1025:FreeRTOS/src/cmsis_os.c **** 
1026:FreeRTOS/src/cmsis_os.c **** 
1027:FreeRTOS/src/cmsis_os.c **** #endif   /* Use Memory Pool Management */
1028:FreeRTOS/src/cmsis_os.c **** 
1029:FreeRTOS/src/cmsis_os.c **** /*******************   Message Queue Management Functions  *********************/
1030:FreeRTOS/src/cmsis_os.c **** 
1031:FreeRTOS/src/cmsis_os.c **** #if (defined (osFeature_MessageQ)  &&  (osFeature_MessageQ != 0)) /* Use Message Queues */
1032:FreeRTOS/src/cmsis_os.c **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 68


1033:FreeRTOS/src/cmsis_os.c **** /**
1034:FreeRTOS/src/cmsis_os.c **** * @brief Create and Initialize a Message Queue
1035:FreeRTOS/src/cmsis_os.c **** * @param queue_def     queue definition referenced with \ref osMessageQ.
1036:FreeRTOS/src/cmsis_os.c **** * @param  thread_id     thread ID (obtained by \ref osThreadCreate or \ref osThreadGetId) or NULL.
1037:FreeRTOS/src/cmsis_os.c **** * @retval  message queue ID for reference by other functions or NULL in case of error.
1038:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMessageCreate shall be consistent in every CMSIS-RTOS.
1039:FreeRTOS/src/cmsis_os.c **** */
1040:FreeRTOS/src/cmsis_os.c **** osMessageQId osMessageCreate (const osMessageQDef_t *queue_def, osThreadId thread_id)
1041:FreeRTOS/src/cmsis_os.c **** {
 2301              		.loc 1 1041 1 is_stmt 1 view -0
 2302              		.cfi_startproc
 2303              		@ args = 0, pretend = 0, frame = 0
 2304              		@ frame_needed = 0, uses_anonymous_args = 0
 2305              		.loc 1 1041 1 is_stmt 0 view .LVU551
 2306 0000 08B5     		push	{r3, lr}
 2307              	.LCFI57:
 2308              		.cfi_def_cfa_offset 8
 2309              		.cfi_offset 3, -8
 2310              		.cfi_offset 14, -4
1042:FreeRTOS/src/cmsis_os.c ****   (void) thread_id;
 2311              		.loc 1 1042 3 is_stmt 1 view .LVU552
1043:FreeRTOS/src/cmsis_os.c ****   
1044:FreeRTOS/src/cmsis_os.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
1045:FreeRTOS/src/cmsis_os.c **** 
1046:FreeRTOS/src/cmsis_os.c ****   if ((queue_def->buffer != NULL) && (queue_def->controlblock != NULL)) {
1047:FreeRTOS/src/cmsis_os.c ****     return xQueueCreateStatic(queue_def->queue_sz, queue_def->item_sz, queue_def->buffer, queue_def
1048:FreeRTOS/src/cmsis_os.c ****   }
1049:FreeRTOS/src/cmsis_os.c ****   else {
1050:FreeRTOS/src/cmsis_os.c ****     return xQueueCreate(queue_def->queue_sz, queue_def->item_sz);
1051:FreeRTOS/src/cmsis_os.c ****   }
1052:FreeRTOS/src/cmsis_os.c **** #elif ( configSUPPORT_STATIC_ALLOCATION == 1 )
1053:FreeRTOS/src/cmsis_os.c ****   return xQueueCreateStatic(queue_def->queue_sz, queue_def->item_sz, queue_def->buffer, queue_def->
1054:FreeRTOS/src/cmsis_os.c **** #else  
1055:FreeRTOS/src/cmsis_os.c ****   return xQueueCreate(queue_def->queue_sz, queue_def->item_sz);
 2312              		.loc 1 1055 3 view .LVU553
 2313              		.loc 1 1055 10 is_stmt 0 view .LVU554
 2314 0002 0022     		movs	r2, #0
 2315 0004 4168     		ldr	r1, [r0, #4]
 2316              	.LVL175:
 2317              		.loc 1 1055 10 view .LVU555
 2318 0006 0068     		ldr	r0, [r0]
 2319              	.LVL176:
 2320              		.loc 1 1055 10 view .LVU556
 2321 0008 FFF7FEFF 		bl	xQueueGenericCreate
 2322              	.LVL177:
1056:FreeRTOS/src/cmsis_os.c **** #endif
1057:FreeRTOS/src/cmsis_os.c **** }
 2323              		.loc 1 1057 1 view .LVU557
 2324 000c 08BD     		pop	{r3, pc}
 2325              		.cfi_endproc
 2326              	.LFE79:
 2328              		.section	.text.osMessagePut,"ax",%progbits
 2329              		.align	1
 2330              		.global	osMessagePut
 2331              		.syntax unified
 2332              		.thumb
 2333              		.thumb_func
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 69


 2334              		.fpu softvfp
 2336              	osMessagePut:
 2337              	.LVL178:
 2338              	.LFB80:
1058:FreeRTOS/src/cmsis_os.c **** 
1059:FreeRTOS/src/cmsis_os.c **** /**
1060:FreeRTOS/src/cmsis_os.c **** * @brief Put a Message to a Queue.
1061:FreeRTOS/src/cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
1062:FreeRTOS/src/cmsis_os.c **** * @param  info      message information.
1063:FreeRTOS/src/cmsis_os.c **** * @param  millisec  timeout value or 0 in case of no time-out.
1064:FreeRTOS/src/cmsis_os.c **** * @retval status code that indicates the execution status of the function.
1065:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMessagePut shall be consistent in every CMSIS-RTOS.
1066:FreeRTOS/src/cmsis_os.c **** */
1067:FreeRTOS/src/cmsis_os.c **** osStatus osMessagePut (osMessageQId queue_id, uint32_t info, uint32_t millisec)
1068:FreeRTOS/src/cmsis_os.c **** {
 2339              		.loc 1 1068 1 is_stmt 1 view -0
 2340              		.cfi_startproc
 2341              		@ args = 0, pretend = 0, frame = 16
 2342              		@ frame_needed = 0, uses_anonymous_args = 0
 2343              		.loc 1 1068 1 is_stmt 0 view .LVU559
 2344 0000 30B5     		push	{r4, r5, lr}
 2345              	.LCFI58:
 2346              		.cfi_def_cfa_offset 12
 2347              		.cfi_offset 4, -12
 2348              		.cfi_offset 5, -8
 2349              		.cfi_offset 14, -4
 2350 0002 85B0     		sub	sp, sp, #20
 2351              	.LCFI59:
 2352              		.cfi_def_cfa_offset 32
 2353 0004 0446     		mov	r4, r0
 2354 0006 0191     		str	r1, [sp, #4]
1069:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 2355              		.loc 1 1069 3 is_stmt 1 view .LVU560
 2356              		.loc 1 1069 17 is_stmt 0 view .LVU561
 2357 0008 0023     		movs	r3, #0
 2358 000a 0393     		str	r3, [sp, #12]
1070:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 2359              		.loc 1 1070 3 is_stmt 1 view .LVU562
1071:FreeRTOS/src/cmsis_os.c ****   
1072:FreeRTOS/src/cmsis_os.c ****   ticks = millisec / portTICK_PERIOD_MS;
 2360              		.loc 1 1072 3 view .LVU563
 2361              	.LVL179:
1073:FreeRTOS/src/cmsis_os.c ****   if (ticks == 0) {
 2362              		.loc 1 1073 3 view .LVU564
 2363              		.loc 1 1073 6 is_stmt 0 view .LVU565
 2364 000c 1546     		mov	r5, r2
 2365 000e 02B9     		cbnz	r2, .L189
1074:FreeRTOS/src/cmsis_os.c ****     ticks = 1;
 2366              		.loc 1 1074 11 view .LVU566
 2367 0010 0125     		movs	r5, #1
 2368              	.L189:
 2369              	.LVL180:
1075:FreeRTOS/src/cmsis_os.c ****   }
1076:FreeRTOS/src/cmsis_os.c ****   
1077:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 2370              		.loc 1 1077 3 is_stmt 1 view .LVU567
 2371              		.loc 1 1077 7 is_stmt 0 view .LVU568
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 70


 2372 0012 FFF7FEFF 		bl	inHandlerMode
 2373              	.LVL181:
 2374              		.loc 1 1077 6 view .LVU569
 2375 0016 98B1     		cbz	r0, .L190
1078:FreeRTOS/src/cmsis_os.c ****     if (xQueueSendFromISR(queue_id, &info, &taskWoken) != pdTRUE) {
 2376              		.loc 1 1078 5 is_stmt 1 view .LVU570
 2377              		.loc 1 1078 9 is_stmt 0 view .LVU571
 2378 0018 0023     		movs	r3, #0
 2379 001a 03AA     		add	r2, sp, #12
 2380 001c 01A9     		add	r1, sp, #4
 2381 001e 2046     		mov	r0, r4
 2382 0020 FFF7FEFF 		bl	xQueueGenericSendFromISR
 2383              	.LVL182:
 2384              		.loc 1 1078 8 view .LVU572
 2385 0024 0128     		cmp	r0, #1
 2386 0026 16D1     		bne	.L193
1079:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
1080:FreeRTOS/src/cmsis_os.c ****     }
1081:FreeRTOS/src/cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 2387              		.loc 1 1081 5 is_stmt 1 view .LVU573
 2388 0028 039B     		ldr	r3, [sp, #12]
 2389 002a B3B1     		cbz	r3, .L194
 2390              		.loc 1 1081 5 discriminator 1 view .LVU574
 2391 002c 0D4B     		ldr	r3, .L197
 2392 002e 4FF08052 		mov	r2, #268435456
 2393 0032 1A60     		str	r2, [r3]
 2394              		.loc 1 1081 5 discriminator 1 view .LVU575
 2395              		.syntax unified
 2396              	@ 1081 "FreeRTOS/src/cmsis_os.c" 1
 2397 0034 BFF34F8F 		dsb
 2398              	@ 0 "" 2
 2399              		.loc 1 1081 5 discriminator 1 view .LVU576
 2400              	@ 1081 "FreeRTOS/src/cmsis_os.c" 1
 2401 0038 BFF36F8F 		isb
 2402              	@ 0 "" 2
1082:FreeRTOS/src/cmsis_os.c ****   }
1083:FreeRTOS/src/cmsis_os.c ****   else {
1084:FreeRTOS/src/cmsis_os.c ****     if (xQueueSend(queue_id, &info, ticks) != pdTRUE) {
1085:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
1086:FreeRTOS/src/cmsis_os.c ****     }
1087:FreeRTOS/src/cmsis_os.c ****   }
1088:FreeRTOS/src/cmsis_os.c ****   
1089:FreeRTOS/src/cmsis_os.c ****   return osOK;
 2403              		.loc 1 1089 10 is_stmt 0 discriminator 1 view .LVU577
 2404              		.thumb
 2405              		.syntax unified
 2406 003c 0020     		movs	r0, #0
 2407 003e 08E0     		b	.L188
 2408              	.L190:
1084:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 2409              		.loc 1 1084 5 is_stmt 1 view .LVU578
1084:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 2410              		.loc 1 1084 9 is_stmt 0 view .LVU579
 2411 0040 0023     		movs	r3, #0
 2412 0042 2A46     		mov	r2, r5
 2413 0044 01A9     		add	r1, sp, #4
 2414 0046 2046     		mov	r0, r4
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 71


 2415 0048 FFF7FEFF 		bl	xQueueGenericSend
 2416              	.LVL183:
1084:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 2417              		.loc 1 1084 8 view .LVU580
 2418 004c 0128     		cmp	r0, #1
 2419 004e 06D1     		bne	.L195
 2420              		.loc 1 1089 10 view .LVU581
 2421 0050 0020     		movs	r0, #0
 2422              	.L188:
1090:FreeRTOS/src/cmsis_os.c **** }
 2423              		.loc 1 1090 1 view .LVU582
 2424 0052 05B0     		add	sp, sp, #20
 2425              	.LCFI60:
 2426              		.cfi_remember_state
 2427              		.cfi_def_cfa_offset 12
 2428              		@ sp needed
 2429 0054 30BD     		pop	{r4, r5, pc}
 2430              	.LVL184:
 2431              	.L193:
 2432              	.LCFI61:
 2433              		.cfi_restore_state
1079:FreeRTOS/src/cmsis_os.c ****     }
 2434              		.loc 1 1079 14 view .LVU583
 2435 0056 FF20     		movs	r0, #255
 2436 0058 FBE7     		b	.L188
 2437              	.L194:
1089:FreeRTOS/src/cmsis_os.c **** }
 2438              		.loc 1 1089 10 view .LVU584
 2439 005a 0020     		movs	r0, #0
 2440 005c F9E7     		b	.L188
 2441              	.L195:
1085:FreeRTOS/src/cmsis_os.c ****     }
 2442              		.loc 1 1085 14 view .LVU585
 2443 005e FF20     		movs	r0, #255
 2444 0060 F7E7     		b	.L188
 2445              	.L198:
 2446 0062 00BF     		.align	2
 2447              	.L197:
 2448 0064 04ED00E0 		.word	-536810236
 2449              		.cfi_endproc
 2450              	.LFE80:
 2452              		.section	.text.osMessageGet,"ax",%progbits
 2453              		.align	1
 2454              		.global	osMessageGet
 2455              		.syntax unified
 2456              		.thumb
 2457              		.thumb_func
 2458              		.fpu softvfp
 2460              	osMessageGet:
 2461              	.LVL185:
 2462              	.LFB81:
1091:FreeRTOS/src/cmsis_os.c **** 
1092:FreeRTOS/src/cmsis_os.c **** /**
1093:FreeRTOS/src/cmsis_os.c **** * @brief Get a Message or Wait for a Message from a Queue.
1094:FreeRTOS/src/cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
1095:FreeRTOS/src/cmsis_os.c **** * @param  millisec  timeout value or 0 in case of no time-out.
1096:FreeRTOS/src/cmsis_os.c **** * @retval event information that includes status code.
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 72


1097:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMessageGet shall be consistent in every CMSIS-RTOS.
1098:FreeRTOS/src/cmsis_os.c **** */
1099:FreeRTOS/src/cmsis_os.c **** osEvent osMessageGet (osMessageQId queue_id, uint32_t millisec)
1100:FreeRTOS/src/cmsis_os.c **** {
 2463              		.loc 1 1100 1 is_stmt 1 view -0
 2464              		.cfi_startproc
 2465              		@ args = 0, pretend = 0, frame = 16
 2466              		@ frame_needed = 0, uses_anonymous_args = 0
 2467              		.loc 1 1100 1 is_stmt 0 view .LVU587
 2468 0000 70B5     		push	{r4, r5, r6, lr}
 2469              	.LCFI62:
 2470              		.cfi_def_cfa_offset 16
 2471              		.cfi_offset 4, -16
 2472              		.cfi_offset 5, -12
 2473              		.cfi_offset 6, -8
 2474              		.cfi_offset 14, -4
 2475 0002 84B0     		sub	sp, sp, #16
 2476              	.LCFI63:
 2477              		.cfi_def_cfa_offset 32
 2478 0004 0446     		mov	r4, r0
1101:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken;
 2479              		.loc 1 1101 3 is_stmt 1 view .LVU588
1102:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 2480              		.loc 1 1102 3 view .LVU589
1103:FreeRTOS/src/cmsis_os.c ****   osEvent event;
 2481              		.loc 1 1103 3 view .LVU590
1104:FreeRTOS/src/cmsis_os.c ****   
1105:FreeRTOS/src/cmsis_os.c ****   event.def.message_id = queue_id;
 2482              		.loc 1 1105 3 view .LVU591
 2483              		.loc 1 1105 24 is_stmt 0 view .LVU592
 2484 0006 0291     		str	r1, [sp, #8]
1106:FreeRTOS/src/cmsis_os.c ****   event.value.v = 0;
 2485              		.loc 1 1106 3 is_stmt 1 view .LVU593
 2486              		.loc 1 1106 17 is_stmt 0 view .LVU594
 2487 0008 0023     		movs	r3, #0
 2488 000a 0193     		str	r3, [sp, #4]
1107:FreeRTOS/src/cmsis_os.c ****   
1108:FreeRTOS/src/cmsis_os.c ****   if (queue_id == NULL) {
 2489              		.loc 1 1108 3 is_stmt 1 view .LVU595
 2490              		.loc 1 1108 6 is_stmt 0 view .LVU596
 2491 000c 49B1     		cbz	r1, .L212
 2492 000e 0D46     		mov	r5, r1
 2493 0010 1646     		mov	r6, r2
1109:FreeRTOS/src/cmsis_os.c ****     event.status = osErrorParameter;
1110:FreeRTOS/src/cmsis_os.c ****     return event;
1111:FreeRTOS/src/cmsis_os.c ****   }
1112:FreeRTOS/src/cmsis_os.c ****   
1113:FreeRTOS/src/cmsis_os.c ****   taskWoken = pdFALSE;
 2494              		.loc 1 1113 3 is_stmt 1 view .LVU597
 2495              		.loc 1 1113 13 is_stmt 0 view .LVU598
 2496 0012 0023     		movs	r3, #0
 2497 0014 0393     		str	r3, [sp, #12]
1114:FreeRTOS/src/cmsis_os.c ****   
1115:FreeRTOS/src/cmsis_os.c ****   ticks = 0;
 2498              		.loc 1 1115 3 is_stmt 1 view .LVU599
 2499              	.LVL186:
1116:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 73


 2500              		.loc 1 1116 3 view .LVU600
 2501              		.loc 1 1116 6 is_stmt 0 view .LVU601
 2502 0016 B2F1FF3F 		cmp	r2, #-1
 2503 001a 0AD0     		beq	.L209
1117:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
1118:FreeRTOS/src/cmsis_os.c ****   }
1119:FreeRTOS/src/cmsis_os.c ****   else if (millisec != 0) {
 2504              		.loc 1 1119 8 is_stmt 1 view .LVU602
 2505              		.loc 1 1119 11 is_stmt 0 view .LVU603
 2506 001c 5AB9     		cbnz	r2, .L202
1115:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 2507              		.loc 1 1115 9 view .LVU604
 2508 001e 1E46     		mov	r6, r3
 2509 0020 09E0     		b	.L202
 2510              	.LVL187:
 2511              	.L212:
1109:FreeRTOS/src/cmsis_os.c ****     return event;
 2512              		.loc 1 1109 5 is_stmt 1 view .LVU605
1109:FreeRTOS/src/cmsis_os.c ****     return event;
 2513              		.loc 1 1109 18 is_stmt 0 view .LVU606
 2514 0022 8023     		movs	r3, #128
 2515 0024 0093     		str	r3, [sp]
1110:FreeRTOS/src/cmsis_os.c ****   }
 2516              		.loc 1 1110 5 is_stmt 1 view .LVU607
1110:FreeRTOS/src/cmsis_os.c ****   }
 2517              		.loc 1 1110 12 is_stmt 0 view .LVU608
 2518 0026 6B46     		mov	r3, sp
 2519 0028 93E80700 		ldm	r3, {r0, r1, r2}
 2520              	.LVL188:
1110:FreeRTOS/src/cmsis_os.c ****   }
 2521              		.loc 1 1110 12 view .LVU609
 2522 002c 84E80700 		stm	r4, {r0, r1, r2}
 2523 0030 2AE0     		b	.L199
 2524              	.LVL189:
 2525              	.L209:
1117:FreeRTOS/src/cmsis_os.c ****   }
 2526              		.loc 1 1117 11 view .LVU610
 2527 0032 4FF0FF36 		mov	r6, #-1
 2528              	.L202:
 2529              	.LVL190:
1120:FreeRTOS/src/cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
1121:FreeRTOS/src/cmsis_os.c ****     if (ticks == 0) {
1122:FreeRTOS/src/cmsis_os.c ****       ticks = 1;
1123:FreeRTOS/src/cmsis_os.c ****     }
1124:FreeRTOS/src/cmsis_os.c ****   }
1125:FreeRTOS/src/cmsis_os.c ****   
1126:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 2530              		.loc 1 1126 3 is_stmt 1 view .LVU611
 2531              		.loc 1 1126 7 is_stmt 0 view .LVU612
 2532 0036 FFF7FEFF 		bl	inHandlerMode
 2533              	.LVL191:
 2534              		.loc 1 1126 6 view .LVU613
 2535 003a B0B1     		cbz	r0, .L203
1127:FreeRTOS/src/cmsis_os.c ****     if (xQueueReceiveFromISR(queue_id, &event.value.v, &taskWoken) == pdTRUE) {
 2536              		.loc 1 1127 5 is_stmt 1 view .LVU614
 2537              		.loc 1 1127 9 is_stmt 0 view .LVU615
 2538 003c 03AA     		add	r2, sp, #12
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 74


 2539 003e 01A9     		add	r1, sp, #4
 2540 0040 2846     		mov	r0, r5
 2541 0042 FFF7FEFF 		bl	xQueueReceiveFromISR
 2542              	.LVL192:
 2543              		.loc 1 1127 8 view .LVU616
 2544 0046 0128     		cmp	r0, #1
 2545 0048 0CD0     		beq	.L213
1128:FreeRTOS/src/cmsis_os.c ****       /* We have mail */
1129:FreeRTOS/src/cmsis_os.c ****       event.status = osEventMessage;
1130:FreeRTOS/src/cmsis_os.c ****     }
1131:FreeRTOS/src/cmsis_os.c ****     else {
1132:FreeRTOS/src/cmsis_os.c ****       event.status = osOK;
 2546              		.loc 1 1132 7 is_stmt 1 view .LVU617
 2547              		.loc 1 1132 20 is_stmt 0 view .LVU618
 2548 004a 0023     		movs	r3, #0
 2549 004c 0093     		str	r3, [sp]
 2550              	.L205:
1133:FreeRTOS/src/cmsis_os.c ****     }
1134:FreeRTOS/src/cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 2551              		.loc 1 1134 5 is_stmt 1 view .LVU619
 2552 004e 039B     		ldr	r3, [sp, #12]
 2553 0050 ABB1     		cbz	r3, .L206
 2554              		.loc 1 1134 5 discriminator 1 view .LVU620
 2555 0052 114B     		ldr	r3, .L215
 2556 0054 4FF08052 		mov	r2, #268435456
 2557 0058 1A60     		str	r2, [r3]
 2558              		.loc 1 1134 5 discriminator 1 view .LVU621
 2559              		.syntax unified
 2560              	@ 1134 "FreeRTOS/src/cmsis_os.c" 1
 2561 005a BFF34F8F 		dsb
 2562              	@ 0 "" 2
 2563              		.loc 1 1134 5 discriminator 1 view .LVU622
 2564              	@ 1134 "FreeRTOS/src/cmsis_os.c" 1
 2565 005e BFF36F8F 		isb
 2566              	@ 0 "" 2
 2567              		.thumb
 2568              		.syntax unified
 2569 0062 0CE0     		b	.L206
 2570              	.L213:
1129:FreeRTOS/src/cmsis_os.c ****     }
 2571              		.loc 1 1129 7 view .LVU623
1129:FreeRTOS/src/cmsis_os.c ****     }
 2572              		.loc 1 1129 20 is_stmt 0 view .LVU624
 2573 0064 1023     		movs	r3, #16
 2574 0066 0093     		str	r3, [sp]
 2575 0068 F1E7     		b	.L205
 2576              	.L203:
1135:FreeRTOS/src/cmsis_os.c ****   }
1136:FreeRTOS/src/cmsis_os.c ****   else {
1137:FreeRTOS/src/cmsis_os.c ****     if (xQueueReceive(queue_id, &event.value.v, ticks) == pdTRUE) {
 2577              		.loc 1 1137 5 is_stmt 1 view .LVU625
 2578              		.loc 1 1137 9 is_stmt 0 view .LVU626
 2579 006a 3246     		mov	r2, r6
 2580 006c 01A9     		add	r1, sp, #4
 2581 006e 2846     		mov	r0, r5
 2582 0070 FFF7FEFF 		bl	xQueueReceive
 2583              	.LVL193:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 75


 2584              		.loc 1 1137 8 view .LVU627
 2585 0074 0128     		cmp	r0, #1
 2586 0076 0AD0     		beq	.L214
1138:FreeRTOS/src/cmsis_os.c ****       /* We have mail */
1139:FreeRTOS/src/cmsis_os.c ****       event.status = osEventMessage;
1140:FreeRTOS/src/cmsis_os.c ****     }
1141:FreeRTOS/src/cmsis_os.c ****     else {
1142:FreeRTOS/src/cmsis_os.c ****       event.status = (ticks == 0) ? osOK : osEventTimeout;
 2587              		.loc 1 1142 7 is_stmt 1 view .LVU628
 2588              		.loc 1 1142 42 is_stmt 0 view .LVU629
 2589 0078 66B9     		cbnz	r6, .L210
 2590 007a 0023     		movs	r3, #0
 2591              	.L208:
 2592              		.loc 1 1142 20 discriminator 4 view .LVU630
 2593 007c 0093     		str	r3, [sp]
 2594              	.L206:
1143:FreeRTOS/src/cmsis_os.c ****     }
1144:FreeRTOS/src/cmsis_os.c ****   }
1145:FreeRTOS/src/cmsis_os.c ****   
1146:FreeRTOS/src/cmsis_os.c ****   return event;
 2595              		.loc 1 1146 3 is_stmt 1 view .LVU631
 2596              		.loc 1 1146 10 is_stmt 0 view .LVU632
 2597 007e 6B46     		mov	r3, sp
 2598 0080 93E80700 		ldm	r3, {r0, r1, r2}
 2599 0084 84E80700 		stm	r4, {r0, r1, r2}
 2600              	.LVL194:
 2601              	.L199:
1147:FreeRTOS/src/cmsis_os.c **** }
 2602              		.loc 1 1147 1 view .LVU633
 2603 0088 2046     		mov	r0, r4
 2604 008a 04B0     		add	sp, sp, #16
 2605              	.LCFI64:
 2606              		.cfi_remember_state
 2607              		.cfi_def_cfa_offset 16
 2608              		@ sp needed
 2609 008c 70BD     		pop	{r4, r5, r6, pc}
 2610              	.LVL195:
 2611              	.L214:
 2612              	.LCFI65:
 2613              		.cfi_restore_state
1139:FreeRTOS/src/cmsis_os.c ****     }
 2614              		.loc 1 1139 7 is_stmt 1 view .LVU634
1139:FreeRTOS/src/cmsis_os.c ****     }
 2615              		.loc 1 1139 20 is_stmt 0 view .LVU635
 2616 008e 1023     		movs	r3, #16
 2617 0090 0093     		str	r3, [sp]
 2618 0092 F4E7     		b	.L206
 2619              	.L210:
1142:FreeRTOS/src/cmsis_os.c ****     }
 2620              		.loc 1 1142 42 view .LVU636
 2621 0094 4023     		movs	r3, #64
 2622 0096 F1E7     		b	.L208
 2623              	.L216:
 2624              		.align	2
 2625              	.L215:
 2626 0098 04ED00E0 		.word	-536810236
 2627              		.cfi_endproc
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 76


 2628              	.LFE81:
 2630              		.section	.text.osMailCreate,"ax",%progbits
 2631              		.align	1
 2632              		.global	osMailCreate
 2633              		.syntax unified
 2634              		.thumb
 2635              		.thumb_func
 2636              		.fpu softvfp
 2638              	osMailCreate:
 2639              	.LVL196:
 2640              	.LFB82:
1148:FreeRTOS/src/cmsis_os.c **** 
1149:FreeRTOS/src/cmsis_os.c **** #endif     /* Use Message Queues */
1150:FreeRTOS/src/cmsis_os.c **** 
1151:FreeRTOS/src/cmsis_os.c **** /********************   Mail Queue Management Functions  ***********************/
1152:FreeRTOS/src/cmsis_os.c **** #if (defined (osFeature_MailQ)  &&  (osFeature_MailQ != 0))  /* Use Mail Queues */
1153:FreeRTOS/src/cmsis_os.c **** 
1154:FreeRTOS/src/cmsis_os.c **** 
1155:FreeRTOS/src/cmsis_os.c **** typedef struct os_mailQ_cb {
1156:FreeRTOS/src/cmsis_os.c ****   const osMailQDef_t *queue_def;
1157:FreeRTOS/src/cmsis_os.c ****   QueueHandle_t handle;
1158:FreeRTOS/src/cmsis_os.c ****   osPoolId pool;
1159:FreeRTOS/src/cmsis_os.c **** } os_mailQ_cb_t;
1160:FreeRTOS/src/cmsis_os.c **** 
1161:FreeRTOS/src/cmsis_os.c **** /**
1162:FreeRTOS/src/cmsis_os.c **** * @brief Create and Initialize mail queue
1163:FreeRTOS/src/cmsis_os.c **** * @param  queue_def     reference to the mail queue definition obtain with \ref osMailQ
1164:FreeRTOS/src/cmsis_os.c **** * @param   thread_id     thread ID (obtained by \ref osThreadCreate or \ref osThreadGetId) or NULL.
1165:FreeRTOS/src/cmsis_os.c **** * @retval mail queue ID for reference by other functions or NULL in case of error.
1166:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailCreate shall be consistent in every CMSIS-RTOS.
1167:FreeRTOS/src/cmsis_os.c **** */
1168:FreeRTOS/src/cmsis_os.c **** osMailQId osMailCreate (const osMailQDef_t *queue_def, osThreadId thread_id)
1169:FreeRTOS/src/cmsis_os.c **** {
 2641              		.loc 1 1169 1 is_stmt 1 view -0
 2642              		.cfi_startproc
 2643              		@ args = 0, pretend = 0, frame = 16
 2644              		@ frame_needed = 0, uses_anonymous_args = 0
 2645              		.loc 1 1169 1 is_stmt 0 view .LVU638
 2646 0000 30B5     		push	{r4, r5, lr}
 2647              	.LCFI66:
 2648              		.cfi_def_cfa_offset 12
 2649              		.cfi_offset 4, -12
 2650              		.cfi_offset 5, -8
 2651              		.cfi_offset 14, -4
 2652 0002 85B0     		sub	sp, sp, #20
 2653              	.LCFI67:
 2654              		.cfi_def_cfa_offset 32
 2655 0004 0446     		mov	r4, r0
1170:FreeRTOS/src/cmsis_os.c **** #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
1171:FreeRTOS/src/cmsis_os.c ****   (void) thread_id;
 2656              		.loc 1 1171 3 is_stmt 1 view .LVU639
1172:FreeRTOS/src/cmsis_os.c ****   
1173:FreeRTOS/src/cmsis_os.c ****   osPoolDef_t pool_def = {queue_def->queue_sz, queue_def->item_sz, NULL};
 2657              		.loc 1 1173 3 view .LVU640
 2658              		.loc 1 1173 36 is_stmt 0 view .LVU641
 2659 0006 0368     		ldr	r3, [r0]
 2660              		.loc 1 1173 15 view .LVU642
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 77


 2661 0008 0193     		str	r3, [sp, #4]
 2662              		.loc 1 1173 57 view .LVU643
 2663 000a 4368     		ldr	r3, [r0, #4]
 2664              		.loc 1 1173 15 view .LVU644
 2665 000c 0293     		str	r3, [sp, #8]
 2666 000e 0023     		movs	r3, #0
 2667 0010 0393     		str	r3, [sp, #12]
1174:FreeRTOS/src/cmsis_os.c ****   
1175:FreeRTOS/src/cmsis_os.c ****   /* Create a mail queue control block */
1176:FreeRTOS/src/cmsis_os.c **** 
1177:FreeRTOS/src/cmsis_os.c ****   *(queue_def->cb) = pvPortMalloc(sizeof(struct os_mailQ_cb));
 2668              		.loc 1 1177 3 is_stmt 1 view .LVU645
 2669              		.loc 1 1177 14 is_stmt 0 view .LVU646
 2670 0012 8568     		ldr	r5, [r0, #8]
 2671              		.loc 1 1177 22 view .LVU647
 2672 0014 0C20     		movs	r0, #12
 2673              	.LVL197:
 2674              		.loc 1 1177 22 view .LVU648
 2675 0016 FFF7FEFF 		bl	pvPortMalloc
 2676              	.LVL198:
 2677              		.loc 1 1177 20 view .LVU649
 2678 001a 2860     		str	r0, [r5]
1178:FreeRTOS/src/cmsis_os.c **** 
1179:FreeRTOS/src/cmsis_os.c ****   if (*(queue_def->cb) == NULL) {
 2679              		.loc 1 1179 3 is_stmt 1 view .LVU650
 2680              		.loc 1 1179 18 is_stmt 0 view .LVU651
 2681 001c A368     		ldr	r3, [r4, #8]
 2682              		.loc 1 1179 7 view .LVU652
 2683 001e 1B68     		ldr	r3, [r3]
 2684              		.loc 1 1179 6 view .LVU653
 2685 0020 FBB1     		cbz	r3, .L220
1180:FreeRTOS/src/cmsis_os.c ****     return NULL;
1181:FreeRTOS/src/cmsis_os.c ****   }
1182:FreeRTOS/src/cmsis_os.c ****   (*(queue_def->cb))->queue_def = queue_def;
 2686              		.loc 1 1182 3 is_stmt 1 view .LVU654
 2687              		.loc 1 1182 33 is_stmt 0 view .LVU655
 2688 0022 1C60     		str	r4, [r3]
1183:FreeRTOS/src/cmsis_os.c ****   
1184:FreeRTOS/src/cmsis_os.c ****   /* Create a queue in FreeRTOS */
1185:FreeRTOS/src/cmsis_os.c ****   (*(queue_def->cb))->handle = xQueueCreate(queue_def->queue_sz, sizeof(void *));
 2689              		.loc 1 1185 3 is_stmt 1 view .LVU656
 2690              		.loc 1 1185 15 is_stmt 0 view .LVU657
 2691 0024 A368     		ldr	r3, [r4, #8]
 2692              		.loc 1 1185 4 view .LVU658
 2693 0026 1D68     		ldr	r5, [r3]
 2694              		.loc 1 1185 32 view .LVU659
 2695 0028 0022     		movs	r2, #0
 2696 002a 0421     		movs	r1, #4
 2697 002c 2068     		ldr	r0, [r4]
 2698 002e FFF7FEFF 		bl	xQueueGenericCreate
 2699              	.LVL199:
 2700              		.loc 1 1185 30 view .LVU660
 2701 0032 6860     		str	r0, [r5, #4]
1186:FreeRTOS/src/cmsis_os.c **** 
1187:FreeRTOS/src/cmsis_os.c **** 
1188:FreeRTOS/src/cmsis_os.c ****   if ((*(queue_def->cb))->handle == NULL) {
 2702              		.loc 1 1188 3 is_stmt 1 view .LVU661
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 78


 2703              		.loc 1 1188 19 is_stmt 0 view .LVU662
 2704 0034 A368     		ldr	r3, [r4, #8]
 2705              		.loc 1 1188 8 view .LVU663
 2706 0036 1D68     		ldr	r5, [r3]
 2707              		.loc 1 1188 25 view .LVU664
 2708 0038 6B68     		ldr	r3, [r5, #4]
 2709              		.loc 1 1188 6 view .LVU665
 2710 003a 4BB1     		cbz	r3, .L222
1189:FreeRTOS/src/cmsis_os.c ****     vPortFree(*(queue_def->cb));
1190:FreeRTOS/src/cmsis_os.c ****     return NULL;
1191:FreeRTOS/src/cmsis_os.c ****   }
1192:FreeRTOS/src/cmsis_os.c ****   
1193:FreeRTOS/src/cmsis_os.c ****   /* Create a mail pool */
1194:FreeRTOS/src/cmsis_os.c ****   (*(queue_def->cb))->pool = osPoolCreate(&pool_def);
 2711              		.loc 1 1194 3 is_stmt 1 view .LVU666
 2712              		.loc 1 1194 30 is_stmt 0 view .LVU667
 2713 003c 01A8     		add	r0, sp, #4
 2714 003e FFF7FEFF 		bl	osPoolCreate
 2715              	.LVL200:
 2716              		.loc 1 1194 28 view .LVU668
 2717 0042 A860     		str	r0, [r5, #8]
1195:FreeRTOS/src/cmsis_os.c ****   if ((*(queue_def->cb))->pool == NULL) {
 2718              		.loc 1 1195 3 is_stmt 1 view .LVU669
 2719              		.loc 1 1195 19 is_stmt 0 view .LVU670
 2720 0044 A368     		ldr	r3, [r4, #8]
 2721              		.loc 1 1195 8 view .LVU671
 2722 0046 1868     		ldr	r0, [r3]
 2723              		.loc 1 1195 25 view .LVU672
 2724 0048 8368     		ldr	r3, [r0, #8]
 2725              		.loc 1 1195 6 view .LVU673
 2726 004a 33B1     		cbz	r3, .L223
 2727              	.L217:
1196:FreeRTOS/src/cmsis_os.c ****     //TODO: Delete queue. How to do it in FreeRTOS?
1197:FreeRTOS/src/cmsis_os.c ****     vPortFree(*(queue_def->cb));
1198:FreeRTOS/src/cmsis_os.c ****     return NULL;
1199:FreeRTOS/src/cmsis_os.c ****   }
1200:FreeRTOS/src/cmsis_os.c ****   
1201:FreeRTOS/src/cmsis_os.c ****   return *(queue_def->cb);
1202:FreeRTOS/src/cmsis_os.c **** #else
1203:FreeRTOS/src/cmsis_os.c ****   return NULL;
1204:FreeRTOS/src/cmsis_os.c **** #endif
1205:FreeRTOS/src/cmsis_os.c **** }
 2728              		.loc 1 1205 1 view .LVU674
 2729 004c 05B0     		add	sp, sp, #20
 2730              	.LCFI68:
 2731              		.cfi_remember_state
 2732              		.cfi_def_cfa_offset 12
 2733              		@ sp needed
 2734 004e 30BD     		pop	{r4, r5, pc}
 2735              	.LVL201:
 2736              	.L222:
 2737              	.LCFI69:
 2738              		.cfi_restore_state
1189:FreeRTOS/src/cmsis_os.c ****     return NULL;
 2739              		.loc 1 1189 5 is_stmt 1 view .LVU675
 2740 0050 2846     		mov	r0, r5
 2741 0052 FFF7FEFF 		bl	vPortFree
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 79


 2742              	.LVL202:
1190:FreeRTOS/src/cmsis_os.c ****   }
 2743              		.loc 1 1190 5 view .LVU676
1190:FreeRTOS/src/cmsis_os.c ****   }
 2744              		.loc 1 1190 12 is_stmt 0 view .LVU677
 2745 0056 0020     		movs	r0, #0
 2746 0058 F8E7     		b	.L217
 2747              	.L223:
1197:FreeRTOS/src/cmsis_os.c ****     return NULL;
 2748              		.loc 1 1197 5 is_stmt 1 view .LVU678
 2749 005a FFF7FEFF 		bl	vPortFree
 2750              	.LVL203:
1198:FreeRTOS/src/cmsis_os.c ****   }
 2751              		.loc 1 1198 5 view .LVU679
1198:FreeRTOS/src/cmsis_os.c ****   }
 2752              		.loc 1 1198 12 is_stmt 0 view .LVU680
 2753 005e 0020     		movs	r0, #0
 2754 0060 F4E7     		b	.L217
 2755              	.L220:
1180:FreeRTOS/src/cmsis_os.c ****   }
 2756              		.loc 1 1180 12 view .LVU681
 2757 0062 0020     		movs	r0, #0
 2758 0064 F2E7     		b	.L217
 2759              		.cfi_endproc
 2760              	.LFE82:
 2762              		.section	.text.osMailAlloc,"ax",%progbits
 2763              		.align	1
 2764              		.global	osMailAlloc
 2765              		.syntax unified
 2766              		.thumb
 2767              		.thumb_func
 2768              		.fpu softvfp
 2770              	osMailAlloc:
 2771              	.LVL204:
 2772              	.LFB83:
1206:FreeRTOS/src/cmsis_os.c **** 
1207:FreeRTOS/src/cmsis_os.c **** /**
1208:FreeRTOS/src/cmsis_os.c **** * @brief Allocate a memory block from a mail
1209:FreeRTOS/src/cmsis_os.c **** * @param  queue_id      mail queue ID obtained with \ref osMailCreate.
1210:FreeRTOS/src/cmsis_os.c **** * @param  millisec      timeout value or 0 in case of no time-out.
1211:FreeRTOS/src/cmsis_os.c **** * @retval pointer to memory block that can be filled with mail or NULL in case error.
1212:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailAlloc shall be consistent in every CMSIS-RTOS.
1213:FreeRTOS/src/cmsis_os.c **** */
1214:FreeRTOS/src/cmsis_os.c **** void *osMailAlloc (osMailQId queue_id, uint32_t millisec)
1215:FreeRTOS/src/cmsis_os.c **** {
 2773              		.loc 1 1215 1 is_stmt 1 view -0
 2774              		.cfi_startproc
 2775              		@ args = 0, pretend = 0, frame = 0
 2776              		@ frame_needed = 0, uses_anonymous_args = 0
1216:FreeRTOS/src/cmsis_os.c ****   (void) millisec;
 2777              		.loc 1 1216 3 view .LVU683
1217:FreeRTOS/src/cmsis_os.c ****   void *p;
 2778              		.loc 1 1217 3 view .LVU684
1218:FreeRTOS/src/cmsis_os.c ****   
1219:FreeRTOS/src/cmsis_os.c ****   
1220:FreeRTOS/src/cmsis_os.c ****   if (queue_id == NULL) {
 2779              		.loc 1 1220 3 view .LVU685
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 80


 2780              		.loc 1 1220 6 is_stmt 0 view .LVU686
 2781 0000 20B1     		cbz	r0, .L226
1215:FreeRTOS/src/cmsis_os.c ****   (void) millisec;
 2782              		.loc 1 1215 1 view .LVU687
 2783 0002 08B5     		push	{r3, lr}
 2784              	.LCFI70:
 2785              		.cfi_def_cfa_offset 8
 2786              		.cfi_offset 3, -8
 2787              		.cfi_offset 14, -4
1221:FreeRTOS/src/cmsis_os.c ****     return NULL;
1222:FreeRTOS/src/cmsis_os.c ****   }
1223:FreeRTOS/src/cmsis_os.c ****   
1224:FreeRTOS/src/cmsis_os.c ****   p = osPoolAlloc(queue_id->pool);
 2788              		.loc 1 1224 3 is_stmt 1 view .LVU688
 2789              		.loc 1 1224 7 is_stmt 0 view .LVU689
 2790 0004 8068     		ldr	r0, [r0, #8]
 2791              	.LVL205:
 2792              		.loc 1 1224 7 view .LVU690
 2793 0006 FFF7FEFF 		bl	osPoolAlloc
 2794              	.LVL206:
1225:FreeRTOS/src/cmsis_os.c ****   
1226:FreeRTOS/src/cmsis_os.c ****   return p;
 2795              		.loc 1 1226 3 is_stmt 1 view .LVU691
1227:FreeRTOS/src/cmsis_os.c **** }
 2796              		.loc 1 1227 1 is_stmt 0 view .LVU692
 2797 000a 08BD     		pop	{r3, pc}
 2798              	.LVL207:
 2799              	.L226:
 2800              	.LCFI71:
 2801              		.cfi_def_cfa_offset 0
 2802              		.cfi_restore 3
 2803              		.cfi_restore 14
1221:FreeRTOS/src/cmsis_os.c ****     return NULL;
 2804              		.loc 1 1221 12 view .LVU693
 2805 000c 0020     		movs	r0, #0
 2806              	.LVL208:
 2807              		.loc 1 1227 1 view .LVU694
 2808 000e 7047     		bx	lr
 2809              		.cfi_endproc
 2810              	.LFE83:
 2812              		.section	.text.osMailCAlloc,"ax",%progbits
 2813              		.align	1
 2814              		.global	osMailCAlloc
 2815              		.syntax unified
 2816              		.thumb
 2817              		.thumb_func
 2818              		.fpu softvfp
 2820              	osMailCAlloc:
 2821              	.LVL209:
 2822              	.LFB84:
1228:FreeRTOS/src/cmsis_os.c **** 
1229:FreeRTOS/src/cmsis_os.c **** /**
1230:FreeRTOS/src/cmsis_os.c **** * @brief Allocate a memory block from a mail and set memory block to zero
1231:FreeRTOS/src/cmsis_os.c **** * @param  queue_id      mail queue ID obtained with \ref osMailCreate.
1232:FreeRTOS/src/cmsis_os.c **** * @param  millisec      timeout value or 0 in case of no time-out.
1233:FreeRTOS/src/cmsis_os.c **** * @retval pointer to memory block that can be filled with mail or NULL in case error.
1234:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailCAlloc shall be consistent in every CMSIS-RTOS.
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 81


1235:FreeRTOS/src/cmsis_os.c **** */
1236:FreeRTOS/src/cmsis_os.c **** void *osMailCAlloc (osMailQId queue_id, uint32_t millisec)
1237:FreeRTOS/src/cmsis_os.c **** {
 2823              		.loc 1 1237 1 is_stmt 1 view -0
 2824              		.cfi_startproc
 2825              		@ args = 0, pretend = 0, frame = 0
 2826              		@ frame_needed = 0, uses_anonymous_args = 0
 2827              		.loc 1 1237 1 is_stmt 0 view .LVU696
 2828 0000 10B5     		push	{r4, lr}
 2829              	.LCFI72:
 2830              		.cfi_def_cfa_offset 8
 2831              		.cfi_offset 4, -8
 2832              		.cfi_offset 14, -4
 2833 0002 0446     		mov	r4, r0
1238:FreeRTOS/src/cmsis_os.c ****   uint32_t i;
 2834              		.loc 1 1238 3 is_stmt 1 view .LVU697
1239:FreeRTOS/src/cmsis_os.c ****   void *p = osMailAlloc(queue_id, millisec);
 2835              		.loc 1 1239 3 view .LVU698
 2836              		.loc 1 1239 13 is_stmt 0 view .LVU699
 2837 0004 FFF7FEFF 		bl	osMailAlloc
 2838              	.LVL210:
1240:FreeRTOS/src/cmsis_os.c ****   
1241:FreeRTOS/src/cmsis_os.c ****   if (p) {
 2839              		.loc 1 1241 3 is_stmt 1 view .LVU700
 2840              		.loc 1 1241 6 is_stmt 0 view .LVU701
 2841 0008 0146     		mov	r1, r0
 2842 000a 40B1     		cbz	r0, .L231
1242:FreeRTOS/src/cmsis_os.c ****     for (i = 0; i < queue_id->queue_def->item_sz; i++) {
 2843              		.loc 1 1242 12 view .LVU702
 2844 000c 0023     		movs	r3, #0
 2845              	.L232:
 2846              	.LVL211:
 2847              		.loc 1 1242 29 discriminator 1 view .LVU703
 2848 000e 2268     		ldr	r2, [r4]
 2849              		.loc 1 1242 40 discriminator 1 view .LVU704
 2850 0010 5268     		ldr	r2, [r2, #4]
 2851              		.loc 1 1242 5 discriminator 1 view .LVU705
 2852 0012 9A42     		cmp	r2, r3
 2853 0014 03D9     		bls	.L231
1243:FreeRTOS/src/cmsis_os.c ****       ((uint8_t *)p)[i] = 0;
 2854              		.loc 1 1243 7 is_stmt 1 discriminator 3 view .LVU706
 2855              		.loc 1 1243 25 is_stmt 0 discriminator 3 view .LVU707
 2856 0016 0022     		movs	r2, #0
 2857 0018 CA54     		strb	r2, [r1, r3]
1242:FreeRTOS/src/cmsis_os.c ****     for (i = 0; i < queue_id->queue_def->item_sz; i++) {
 2858              		.loc 1 1242 52 discriminator 3 view .LVU708
 2859 001a 0133     		adds	r3, r3, #1
 2860              	.LVL212:
1242:FreeRTOS/src/cmsis_os.c ****     for (i = 0; i < queue_id->queue_def->item_sz; i++) {
 2861              		.loc 1 1242 52 discriminator 3 view .LVU709
 2862 001c F7E7     		b	.L232
 2863              	.LVL213:
 2864              	.L231:
1244:FreeRTOS/src/cmsis_os.c ****     }
1245:FreeRTOS/src/cmsis_os.c ****   }
1246:FreeRTOS/src/cmsis_os.c ****   
1247:FreeRTOS/src/cmsis_os.c ****   return p;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 82


1248:FreeRTOS/src/cmsis_os.c **** }
 2865              		.loc 1 1248 1 view .LVU710
 2866 001e 0846     		mov	r0, r1
 2867              	.LVL214:
 2868              		.loc 1 1248 1 view .LVU711
 2869 0020 10BD     		pop	{r4, pc}
 2870              		.loc 1 1248 1 view .LVU712
 2871              		.cfi_endproc
 2872              	.LFE84:
 2874              		.section	.text.osMailPut,"ax",%progbits
 2875              		.align	1
 2876              		.global	osMailPut
 2877              		.syntax unified
 2878              		.thumb
 2879              		.thumb_func
 2880              		.fpu softvfp
 2882              	osMailPut:
 2883              	.LVL215:
 2884              	.LFB85:
1249:FreeRTOS/src/cmsis_os.c **** 
1250:FreeRTOS/src/cmsis_os.c **** /**
1251:FreeRTOS/src/cmsis_os.c **** * @brief Put a mail to a queue
1252:FreeRTOS/src/cmsis_os.c **** * @param  queue_id      mail queue ID obtained with \ref osMailCreate.
1253:FreeRTOS/src/cmsis_os.c **** * @param  mail          memory block previously allocated with \ref osMailAlloc or \ref osMailCAllo
1254:FreeRTOS/src/cmsis_os.c **** * @retval status code that indicates the execution status of the function.
1255:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailPut shall be consistent in every CMSIS-RTOS.
1256:FreeRTOS/src/cmsis_os.c **** */
1257:FreeRTOS/src/cmsis_os.c **** osStatus osMailPut (osMailQId queue_id, void *mail)
1258:FreeRTOS/src/cmsis_os.c **** {
 2885              		.loc 1 1258 1 is_stmt 1 view -0
 2886              		.cfi_startproc
 2887              		@ args = 0, pretend = 0, frame = 16
 2888              		@ frame_needed = 0, uses_anonymous_args = 0
 2889              		.loc 1 1258 1 is_stmt 0 view .LVU714
 2890 0000 10B5     		push	{r4, lr}
 2891              	.LCFI73:
 2892              		.cfi_def_cfa_offset 8
 2893              		.cfi_offset 4, -8
 2894              		.cfi_offset 14, -4
 2895 0002 84B0     		sub	sp, sp, #16
 2896              	.LCFI74:
 2897              		.cfi_def_cfa_offset 24
 2898 0004 0191     		str	r1, [sp, #4]
1259:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken;
 2899              		.loc 1 1259 3 is_stmt 1 view .LVU715
1260:FreeRTOS/src/cmsis_os.c ****   
1261:FreeRTOS/src/cmsis_os.c ****   
1262:FreeRTOS/src/cmsis_os.c ****   if (queue_id == NULL) {
 2900              		.loc 1 1262 3 view .LVU716
 2901              		.loc 1 1262 6 is_stmt 0 view .LVU717
 2902 0006 20B3     		cbz	r0, .L240
 2903 0008 0446     		mov	r4, r0
1263:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1264:FreeRTOS/src/cmsis_os.c ****   }
1265:FreeRTOS/src/cmsis_os.c ****   
1266:FreeRTOS/src/cmsis_os.c ****   taskWoken = pdFALSE;
 2904              		.loc 1 1266 3 is_stmt 1 view .LVU718
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 83


 2905              		.loc 1 1266 13 is_stmt 0 view .LVU719
 2906 000a 0023     		movs	r3, #0
 2907 000c 0393     		str	r3, [sp, #12]
1267:FreeRTOS/src/cmsis_os.c ****   
1268:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 2908              		.loc 1 1268 3 is_stmt 1 view .LVU720
 2909              		.loc 1 1268 7 is_stmt 0 view .LVU721
 2910 000e FFF7FEFF 		bl	inHandlerMode
 2911              	.LVL216:
 2912              		.loc 1 1268 6 view .LVU722
 2913 0012 98B1     		cbz	r0, .L239
1269:FreeRTOS/src/cmsis_os.c ****     if (xQueueSendFromISR(queue_id->handle, &mail, &taskWoken) != pdTRUE) {
 2914              		.loc 1 1269 5 is_stmt 1 view .LVU723
 2915              		.loc 1 1269 9 is_stmt 0 view .LVU724
 2916 0014 0023     		movs	r3, #0
 2917 0016 03AA     		add	r2, sp, #12
 2918 0018 01A9     		add	r1, sp, #4
 2919 001a 6068     		ldr	r0, [r4, #4]
 2920 001c FFF7FEFF 		bl	xQueueGenericSendFromISR
 2921              	.LVL217:
 2922              		.loc 1 1269 8 view .LVU725
 2923 0020 0128     		cmp	r0, #1
 2924 0022 18D1     		bne	.L241
1270:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
1271:FreeRTOS/src/cmsis_os.c ****     }
1272:FreeRTOS/src/cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 2925              		.loc 1 1272 5 is_stmt 1 view .LVU726
 2926 0024 039B     		ldr	r3, [sp, #12]
 2927 0026 C3B1     		cbz	r3, .L242
 2928              		.loc 1 1272 5 discriminator 1 view .LVU727
 2929 0028 0E4B     		ldr	r3, .L245
 2930 002a 4FF08052 		mov	r2, #268435456
 2931 002e 1A60     		str	r2, [r3]
 2932              		.loc 1 1272 5 discriminator 1 view .LVU728
 2933              		.syntax unified
 2934              	@ 1272 "FreeRTOS/src/cmsis_os.c" 1
 2935 0030 BFF34F8F 		dsb
 2936              	@ 0 "" 2
 2937              		.loc 1 1272 5 discriminator 1 view .LVU729
 2938              	@ 1272 "FreeRTOS/src/cmsis_os.c" 1
 2939 0034 BFF36F8F 		isb
 2940              	@ 0 "" 2
1273:FreeRTOS/src/cmsis_os.c ****   }
1274:FreeRTOS/src/cmsis_os.c ****   else {
1275:FreeRTOS/src/cmsis_os.c ****     if (xQueueSend(queue_id->handle, &mail, 0) != pdTRUE) { 
1276:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
1277:FreeRTOS/src/cmsis_os.c ****     }
1278:FreeRTOS/src/cmsis_os.c ****   }
1279:FreeRTOS/src/cmsis_os.c ****   
1280:FreeRTOS/src/cmsis_os.c ****   return osOK;
 2941              		.loc 1 1280 10 is_stmt 0 discriminator 1 view .LVU730
 2942              		.thumb
 2943              		.syntax unified
 2944 0038 0020     		movs	r0, #0
 2945 003a 08E0     		b	.L237
 2946              	.L239:
1275:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 84


 2947              		.loc 1 1275 5 is_stmt 1 view .LVU731
1275:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 2948              		.loc 1 1275 9 is_stmt 0 view .LVU732
 2949 003c 0023     		movs	r3, #0
 2950 003e 1A46     		mov	r2, r3
 2951 0040 01A9     		add	r1, sp, #4
 2952 0042 6068     		ldr	r0, [r4, #4]
 2953 0044 FFF7FEFF 		bl	xQueueGenericSend
 2954              	.LVL218:
1275:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 2955              		.loc 1 1275 8 view .LVU733
 2956 0048 0128     		cmp	r0, #1
 2957 004a 08D1     		bne	.L243
 2958              		.loc 1 1280 10 view .LVU734
 2959 004c 0020     		movs	r0, #0
 2960              	.LVL219:
 2961              	.L237:
1281:FreeRTOS/src/cmsis_os.c **** }
 2962              		.loc 1 1281 1 view .LVU735
 2963 004e 04B0     		add	sp, sp, #16
 2964              	.LCFI75:
 2965              		.cfi_remember_state
 2966              		.cfi_def_cfa_offset 8
 2967              		@ sp needed
 2968 0050 10BD     		pop	{r4, pc}
 2969              	.LVL220:
 2970              	.L240:
 2971              	.LCFI76:
 2972              		.cfi_restore_state
1263:FreeRTOS/src/cmsis_os.c ****   }
 2973              		.loc 1 1263 12 view .LVU736
 2974 0052 8020     		movs	r0, #128
 2975              	.LVL221:
1263:FreeRTOS/src/cmsis_os.c ****   }
 2976              		.loc 1 1263 12 view .LVU737
 2977 0054 FBE7     		b	.L237
 2978              	.LVL222:
 2979              	.L241:
1270:FreeRTOS/src/cmsis_os.c ****     }
 2980              		.loc 1 1270 14 view .LVU738
 2981 0056 FF20     		movs	r0, #255
 2982 0058 F9E7     		b	.L237
 2983              	.L242:
1280:FreeRTOS/src/cmsis_os.c **** }
 2984              		.loc 1 1280 10 view .LVU739
 2985 005a 0020     		movs	r0, #0
 2986 005c F7E7     		b	.L237
 2987              	.L243:
1276:FreeRTOS/src/cmsis_os.c ****     }
 2988              		.loc 1 1276 14 view .LVU740
 2989 005e FF20     		movs	r0, #255
 2990 0060 F5E7     		b	.L237
 2991              	.L246:
 2992 0062 00BF     		.align	2
 2993              	.L245:
 2994 0064 04ED00E0 		.word	-536810236
 2995              		.cfi_endproc
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 85


 2996              	.LFE85:
 2998              		.section	.text.osMailGet,"ax",%progbits
 2999              		.align	1
 3000              		.global	osMailGet
 3001              		.syntax unified
 3002              		.thumb
 3003              		.thumb_func
 3004              		.fpu softvfp
 3006              	osMailGet:
 3007              	.LVL223:
 3008              	.LFB86:
1282:FreeRTOS/src/cmsis_os.c **** 
1283:FreeRTOS/src/cmsis_os.c **** /**
1284:FreeRTOS/src/cmsis_os.c **** * @brief Get a mail from a queue
1285:FreeRTOS/src/cmsis_os.c **** * @param  queue_id   mail queue ID obtained with \ref osMailCreate.
1286:FreeRTOS/src/cmsis_os.c **** * @param millisec    timeout value or 0 in case of no time-out
1287:FreeRTOS/src/cmsis_os.c **** * @retval event that contains mail information or error code.
1288:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailGet shall be consistent in every CMSIS-RTOS.
1289:FreeRTOS/src/cmsis_os.c **** */
1290:FreeRTOS/src/cmsis_os.c **** osEvent osMailGet (osMailQId queue_id, uint32_t millisec)
1291:FreeRTOS/src/cmsis_os.c **** {
 3009              		.loc 1 1291 1 is_stmt 1 view -0
 3010              		.cfi_startproc
 3011              		@ args = 0, pretend = 0, frame = 16
 3012              		@ frame_needed = 0, uses_anonymous_args = 0
 3013              		.loc 1 1291 1 is_stmt 0 view .LVU742
 3014 0000 70B5     		push	{r4, r5, r6, lr}
 3015              	.LCFI77:
 3016              		.cfi_def_cfa_offset 16
 3017              		.cfi_offset 4, -16
 3018              		.cfi_offset 5, -12
 3019              		.cfi_offset 6, -8
 3020              		.cfi_offset 14, -4
 3021 0002 84B0     		sub	sp, sp, #16
 3022              	.LCFI78:
 3023              		.cfi_def_cfa_offset 32
 3024 0004 0446     		mov	r4, r0
1292:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken;
 3025              		.loc 1 1292 3 is_stmt 1 view .LVU743
1293:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 3026              		.loc 1 1293 3 view .LVU744
1294:FreeRTOS/src/cmsis_os.c ****   osEvent event;
 3027              		.loc 1 1294 3 view .LVU745
1295:FreeRTOS/src/cmsis_os.c ****   
1296:FreeRTOS/src/cmsis_os.c ****   event.def.mail_id = queue_id;
 3028              		.loc 1 1296 3 view .LVU746
 3029              		.loc 1 1296 21 is_stmt 0 view .LVU747
 3030 0006 0291     		str	r1, [sp, #8]
1297:FreeRTOS/src/cmsis_os.c ****   
1298:FreeRTOS/src/cmsis_os.c ****   if (queue_id == NULL) {
 3031              		.loc 1 1298 3 is_stmt 1 view .LVU748
 3032              		.loc 1 1298 6 is_stmt 0 view .LVU749
 3033 0008 49B1     		cbz	r1, .L260
 3034 000a 0D46     		mov	r5, r1
 3035 000c 1646     		mov	r6, r2
1299:FreeRTOS/src/cmsis_os.c ****     event.status = osErrorParameter;
1300:FreeRTOS/src/cmsis_os.c ****     return event;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 86


1301:FreeRTOS/src/cmsis_os.c ****   }
1302:FreeRTOS/src/cmsis_os.c ****   
1303:FreeRTOS/src/cmsis_os.c ****   taskWoken = pdFALSE;
 3036              		.loc 1 1303 3 is_stmt 1 view .LVU750
 3037              		.loc 1 1303 13 is_stmt 0 view .LVU751
 3038 000e 0023     		movs	r3, #0
 3039 0010 0393     		str	r3, [sp, #12]
1304:FreeRTOS/src/cmsis_os.c ****   
1305:FreeRTOS/src/cmsis_os.c ****   ticks = 0;
 3040              		.loc 1 1305 3 is_stmt 1 view .LVU752
 3041              	.LVL224:
1306:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 3042              		.loc 1 1306 3 view .LVU753
 3043              		.loc 1 1306 6 is_stmt 0 view .LVU754
 3044 0012 B2F1FF3F 		cmp	r2, #-1
 3045 0016 0AD0     		beq	.L257
1307:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
1308:FreeRTOS/src/cmsis_os.c ****   }
1309:FreeRTOS/src/cmsis_os.c ****   else if (millisec != 0) {
 3046              		.loc 1 1309 8 is_stmt 1 view .LVU755
 3047              		.loc 1 1309 11 is_stmt 0 view .LVU756
 3048 0018 5AB9     		cbnz	r2, .L250
1305:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 3049              		.loc 1 1305 9 view .LVU757
 3050 001a 1E46     		mov	r6, r3
 3051 001c 09E0     		b	.L250
 3052              	.LVL225:
 3053              	.L260:
1299:FreeRTOS/src/cmsis_os.c ****     return event;
 3054              		.loc 1 1299 5 is_stmt 1 view .LVU758
1299:FreeRTOS/src/cmsis_os.c ****     return event;
 3055              		.loc 1 1299 18 is_stmt 0 view .LVU759
 3056 001e 8023     		movs	r3, #128
 3057 0020 0093     		str	r3, [sp]
1300:FreeRTOS/src/cmsis_os.c ****   }
 3058              		.loc 1 1300 5 is_stmt 1 view .LVU760
1300:FreeRTOS/src/cmsis_os.c ****   }
 3059              		.loc 1 1300 12 is_stmt 0 view .LVU761
 3060 0022 6B46     		mov	r3, sp
 3061 0024 93E80700 		ldm	r3, {r0, r1, r2}
 3062              	.LVL226:
1300:FreeRTOS/src/cmsis_os.c ****   }
 3063              		.loc 1 1300 12 view .LVU762
 3064 0028 84E80700 		stm	r4, {r0, r1, r2}
 3065 002c 2AE0     		b	.L247
 3066              	.LVL227:
 3067              	.L257:
1307:FreeRTOS/src/cmsis_os.c ****   }
 3068              		.loc 1 1307 11 view .LVU763
 3069 002e 4FF0FF36 		mov	r6, #-1
 3070              	.L250:
 3071              	.LVL228:
1310:FreeRTOS/src/cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
1311:FreeRTOS/src/cmsis_os.c ****     if (ticks == 0) {
1312:FreeRTOS/src/cmsis_os.c ****       ticks = 1;
1313:FreeRTOS/src/cmsis_os.c ****     }
1314:FreeRTOS/src/cmsis_os.c ****   }
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 87


1315:FreeRTOS/src/cmsis_os.c ****   
1316:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 3072              		.loc 1 1316 3 is_stmt 1 view .LVU764
 3073              		.loc 1 1316 7 is_stmt 0 view .LVU765
 3074 0032 FFF7FEFF 		bl	inHandlerMode
 3075              	.LVL229:
 3076              		.loc 1 1316 6 view .LVU766
 3077 0036 B0B1     		cbz	r0, .L251
1317:FreeRTOS/src/cmsis_os.c ****     if (xQueueReceiveFromISR(queue_id->handle, &event.value.p, &taskWoken) == pdTRUE) {
 3078              		.loc 1 1317 5 is_stmt 1 view .LVU767
 3079              		.loc 1 1317 9 is_stmt 0 view .LVU768
 3080 0038 03AA     		add	r2, sp, #12
 3081 003a 01A9     		add	r1, sp, #4
 3082 003c 6868     		ldr	r0, [r5, #4]
 3083 003e FFF7FEFF 		bl	xQueueReceiveFromISR
 3084              	.LVL230:
 3085              		.loc 1 1317 8 view .LVU769
 3086 0042 0128     		cmp	r0, #1
 3087 0044 0CD0     		beq	.L261
1318:FreeRTOS/src/cmsis_os.c ****       /* We have mail */
1319:FreeRTOS/src/cmsis_os.c ****       event.status = osEventMail;
1320:FreeRTOS/src/cmsis_os.c ****     }
1321:FreeRTOS/src/cmsis_os.c ****     else {
1322:FreeRTOS/src/cmsis_os.c ****       event.status = osOK;
 3088              		.loc 1 1322 7 is_stmt 1 view .LVU770
 3089              		.loc 1 1322 20 is_stmt 0 view .LVU771
 3090 0046 0023     		movs	r3, #0
 3091 0048 0093     		str	r3, [sp]
 3092              	.L253:
1323:FreeRTOS/src/cmsis_os.c ****     }
1324:FreeRTOS/src/cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 3093              		.loc 1 1324 5 is_stmt 1 view .LVU772
 3094 004a 039B     		ldr	r3, [sp, #12]
 3095 004c ABB1     		cbz	r3, .L254
 3096              		.loc 1 1324 5 discriminator 1 view .LVU773
 3097 004e 114B     		ldr	r3, .L263
 3098 0050 4FF08052 		mov	r2, #268435456
 3099 0054 1A60     		str	r2, [r3]
 3100              		.loc 1 1324 5 discriminator 1 view .LVU774
 3101              		.syntax unified
 3102              	@ 1324 "FreeRTOS/src/cmsis_os.c" 1
 3103 0056 BFF34F8F 		dsb
 3104              	@ 0 "" 2
 3105              		.loc 1 1324 5 discriminator 1 view .LVU775
 3106              	@ 1324 "FreeRTOS/src/cmsis_os.c" 1
 3107 005a BFF36F8F 		isb
 3108              	@ 0 "" 2
 3109              		.thumb
 3110              		.syntax unified
 3111 005e 0CE0     		b	.L254
 3112              	.L261:
1319:FreeRTOS/src/cmsis_os.c ****     }
 3113              		.loc 1 1319 7 view .LVU776
1319:FreeRTOS/src/cmsis_os.c ****     }
 3114              		.loc 1 1319 20 is_stmt 0 view .LVU777
 3115 0060 2023     		movs	r3, #32
 3116 0062 0093     		str	r3, [sp]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 88


 3117 0064 F1E7     		b	.L253
 3118              	.L251:
1325:FreeRTOS/src/cmsis_os.c ****   }
1326:FreeRTOS/src/cmsis_os.c ****   else {
1327:FreeRTOS/src/cmsis_os.c ****     if (xQueueReceive(queue_id->handle, &event.value.p, ticks) == pdTRUE) {
 3119              		.loc 1 1327 5 is_stmt 1 view .LVU778
 3120              		.loc 1 1327 9 is_stmt 0 view .LVU779
 3121 0066 3246     		mov	r2, r6
 3122 0068 01A9     		add	r1, sp, #4
 3123 006a 6868     		ldr	r0, [r5, #4]
 3124 006c FFF7FEFF 		bl	xQueueReceive
 3125              	.LVL231:
 3126              		.loc 1 1327 8 view .LVU780
 3127 0070 0128     		cmp	r0, #1
 3128 0072 0AD0     		beq	.L262
1328:FreeRTOS/src/cmsis_os.c ****       /* We have mail */
1329:FreeRTOS/src/cmsis_os.c ****       event.status = osEventMail;
1330:FreeRTOS/src/cmsis_os.c ****     }
1331:FreeRTOS/src/cmsis_os.c ****     else {
1332:FreeRTOS/src/cmsis_os.c ****       event.status = (ticks == 0) ? osOK : osEventTimeout;
 3129              		.loc 1 1332 7 is_stmt 1 view .LVU781
 3130              		.loc 1 1332 42 is_stmt 0 view .LVU782
 3131 0074 66B9     		cbnz	r6, .L258
 3132 0076 0023     		movs	r3, #0
 3133              	.L256:
 3134              		.loc 1 1332 20 discriminator 4 view .LVU783
 3135 0078 0093     		str	r3, [sp]
 3136              	.L254:
1333:FreeRTOS/src/cmsis_os.c ****     }
1334:FreeRTOS/src/cmsis_os.c ****   }
1335:FreeRTOS/src/cmsis_os.c ****   
1336:FreeRTOS/src/cmsis_os.c ****   return event;
 3137              		.loc 1 1336 3 is_stmt 1 view .LVU784
 3138              		.loc 1 1336 10 is_stmt 0 view .LVU785
 3139 007a 6B46     		mov	r3, sp
 3140 007c 93E80700 		ldm	r3, {r0, r1, r2}
 3141 0080 84E80700 		stm	r4, {r0, r1, r2}
 3142              	.LVL232:
 3143              	.L247:
1337:FreeRTOS/src/cmsis_os.c **** }
 3144              		.loc 1 1337 1 view .LVU786
 3145 0084 2046     		mov	r0, r4
 3146 0086 04B0     		add	sp, sp, #16
 3147              	.LCFI79:
 3148              		.cfi_remember_state
 3149              		.cfi_def_cfa_offset 16
 3150              		@ sp needed
 3151 0088 70BD     		pop	{r4, r5, r6, pc}
 3152              	.LVL233:
 3153              	.L262:
 3154              	.LCFI80:
 3155              		.cfi_restore_state
1329:FreeRTOS/src/cmsis_os.c ****     }
 3156              		.loc 1 1329 7 is_stmt 1 view .LVU787
1329:FreeRTOS/src/cmsis_os.c ****     }
 3157              		.loc 1 1329 20 is_stmt 0 view .LVU788
 3158 008a 2023     		movs	r3, #32
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 89


 3159 008c 0093     		str	r3, [sp]
 3160 008e F4E7     		b	.L254
 3161              	.L258:
1332:FreeRTOS/src/cmsis_os.c ****     }
 3162              		.loc 1 1332 42 view .LVU789
 3163 0090 4023     		movs	r3, #64
 3164 0092 F1E7     		b	.L256
 3165              	.L264:
 3166              		.align	2
 3167              	.L263:
 3168 0094 04ED00E0 		.word	-536810236
 3169              		.cfi_endproc
 3170              	.LFE86:
 3172              		.section	.text.osMailFree,"ax",%progbits
 3173              		.align	1
 3174              		.global	osMailFree
 3175              		.syntax unified
 3176              		.thumb
 3177              		.thumb_func
 3178              		.fpu softvfp
 3180              	osMailFree:
 3181              	.LVL234:
 3182              	.LFB87:
1338:FreeRTOS/src/cmsis_os.c **** 
1339:FreeRTOS/src/cmsis_os.c **** /**
1340:FreeRTOS/src/cmsis_os.c **** * @brief Free a memory block from a mail
1341:FreeRTOS/src/cmsis_os.c **** * @param  queue_id mail queue ID obtained with \ref osMailCreate.
1342:FreeRTOS/src/cmsis_os.c **** * @param  mail     pointer to the memory block that was obtained with \ref osMailGet.
1343:FreeRTOS/src/cmsis_os.c **** * @retval status code that indicates the execution status of the function.
1344:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailFree shall be consistent in every CMSIS-RTOS.
1345:FreeRTOS/src/cmsis_os.c **** */
1346:FreeRTOS/src/cmsis_os.c **** osStatus osMailFree (osMailQId queue_id, void *mail)
1347:FreeRTOS/src/cmsis_os.c **** {
 3183              		.loc 1 1347 1 is_stmt 1 view -0
 3184              		.cfi_startproc
 3185              		@ args = 0, pretend = 0, frame = 0
 3186              		@ frame_needed = 0, uses_anonymous_args = 0
1348:FreeRTOS/src/cmsis_os.c ****   if (queue_id == NULL) {
 3187              		.loc 1 1348 3 view .LVU791
 3188              		.loc 1 1348 6 is_stmt 0 view .LVU792
 3189 0000 20B1     		cbz	r0, .L267
1347:FreeRTOS/src/cmsis_os.c ****   if (queue_id == NULL) {
 3190              		.loc 1 1347 1 view .LVU793
 3191 0002 08B5     		push	{r3, lr}
 3192              	.LCFI81:
 3193              		.cfi_def_cfa_offset 8
 3194              		.cfi_offset 3, -8
 3195              		.cfi_offset 14, -4
1349:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1350:FreeRTOS/src/cmsis_os.c ****   }
1351:FreeRTOS/src/cmsis_os.c ****   
1352:FreeRTOS/src/cmsis_os.c ****   return osPoolFree(queue_id->pool, mail);
 3196              		.loc 1 1352 3 is_stmt 1 view .LVU794
 3197              		.loc 1 1352 10 is_stmt 0 view .LVU795
 3198 0004 8068     		ldr	r0, [r0, #8]
 3199              	.LVL235:
 3200              		.loc 1 1352 10 view .LVU796
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 90


 3201 0006 FFF7FEFF 		bl	osPoolFree
 3202              	.LVL236:
1353:FreeRTOS/src/cmsis_os.c **** }
 3203              		.loc 1 1353 1 view .LVU797
 3204 000a 08BD     		pop	{r3, pc}
 3205              	.LVL237:
 3206              	.L267:
 3207              	.LCFI82:
 3208              		.cfi_def_cfa_offset 0
 3209              		.cfi_restore 3
 3210              		.cfi_restore 14
1349:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
 3211              		.loc 1 1349 12 view .LVU798
 3212 000c 8020     		movs	r0, #128
 3213              	.LVL238:
 3214              		.loc 1 1353 1 view .LVU799
 3215 000e 7047     		bx	lr
 3216              		.cfi_endproc
 3217              	.LFE87:
 3219              		.section	.text.osSystickHandler,"ax",%progbits
 3220              		.align	1
 3221              		.global	osSystickHandler
 3222              		.syntax unified
 3223              		.thumb
 3224              		.thumb_func
 3225              		.fpu softvfp
 3227              	osSystickHandler:
 3228              	.LFB88:
1354:FreeRTOS/src/cmsis_os.c **** #endif  /* Use Mail Queues */
1355:FreeRTOS/src/cmsis_os.c **** 
1356:FreeRTOS/src/cmsis_os.c **** /*************************** Additional specific APIs to Free RTOS ************/
1357:FreeRTOS/src/cmsis_os.c **** /**
1358:FreeRTOS/src/cmsis_os.c **** * @brief  Handles the tick increment
1359:FreeRTOS/src/cmsis_os.c **** * @param  none.
1360:FreeRTOS/src/cmsis_os.c **** * @retval none.
1361:FreeRTOS/src/cmsis_os.c **** */
1362:FreeRTOS/src/cmsis_os.c **** void osSystickHandler(void)
1363:FreeRTOS/src/cmsis_os.c **** {
 3229              		.loc 1 1363 1 is_stmt 1 view -0
 3230              		.cfi_startproc
 3231              		@ args = 0, pretend = 0, frame = 0
 3232              		@ frame_needed = 0, uses_anonymous_args = 0
 3233 0000 08B5     		push	{r3, lr}
 3234              	.LCFI83:
 3235              		.cfi_def_cfa_offset 8
 3236              		.cfi_offset 3, -8
 3237              		.cfi_offset 14, -4
1364:FreeRTOS/src/cmsis_os.c **** 
1365:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_xTaskGetSchedulerState  == 1 )
1366:FreeRTOS/src/cmsis_os.c ****   if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 3238              		.loc 1 1366 3 view .LVU801
 3239              		.loc 1 1366 7 is_stmt 0 view .LVU802
 3240 0002 FFF7FEFF 		bl	xTaskGetSchedulerState
 3241              	.LVL239:
 3242              		.loc 1 1366 6 view .LVU803
 3243 0006 0128     		cmp	r0, #1
 3244 0008 00D1     		bne	.L275
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 91


 3245              	.L272:
1367:FreeRTOS/src/cmsis_os.c ****   {
1368:FreeRTOS/src/cmsis_os.c **** #endif  /* INCLUDE_xTaskGetSchedulerState */  
1369:FreeRTOS/src/cmsis_os.c ****     xPortSysTickHandler();
1370:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_xTaskGetSchedulerState  == 1 )
1371:FreeRTOS/src/cmsis_os.c ****   }
1372:FreeRTOS/src/cmsis_os.c **** #endif  /* INCLUDE_xTaskGetSchedulerState */  
1373:FreeRTOS/src/cmsis_os.c **** }
 3246              		.loc 1 1373 1 view .LVU804
 3247 000a 08BD     		pop	{r3, pc}
 3248              	.L275:
1369:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_xTaskGetSchedulerState  == 1 )
 3249              		.loc 1 1369 5 is_stmt 1 view .LVU805
 3250 000c FFF7FEFF 		bl	SysTick_Handler
 3251              	.LVL240:
 3252              		.loc 1 1373 1 is_stmt 0 view .LVU806
 3253 0010 FBE7     		b	.L272
 3254              		.cfi_endproc
 3255              	.LFE88:
 3257              		.section	.text.osThreadSuspend,"ax",%progbits
 3258              		.align	1
 3259              		.global	osThreadSuspend
 3260              		.syntax unified
 3261              		.thumb
 3262              		.thumb_func
 3263              		.fpu softvfp
 3265              	osThreadSuspend:
 3266              	.LVL241:
 3267              	.LFB89:
1374:FreeRTOS/src/cmsis_os.c **** 
1375:FreeRTOS/src/cmsis_os.c **** #if ( INCLUDE_eTaskGetState == 1 )
1376:FreeRTOS/src/cmsis_os.c **** /**
1377:FreeRTOS/src/cmsis_os.c **** * @brief  Obtain the state of any thread.
1378:FreeRTOS/src/cmsis_os.c **** * @param   thread_id   thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
1379:FreeRTOS/src/cmsis_os.c **** * @retval  the stae of the thread, states are encoded by the osThreadState enumerated type.
1380:FreeRTOS/src/cmsis_os.c **** */
1381:FreeRTOS/src/cmsis_os.c **** osThreadState osThreadGetState(osThreadId thread_id)
1382:FreeRTOS/src/cmsis_os.c **** {
1383:FreeRTOS/src/cmsis_os.c ****   eTaskState ThreadState;
1384:FreeRTOS/src/cmsis_os.c ****   osThreadState result;
1385:FreeRTOS/src/cmsis_os.c ****   
1386:FreeRTOS/src/cmsis_os.c ****   ThreadState = eTaskGetState(thread_id);
1387:FreeRTOS/src/cmsis_os.c ****   
1388:FreeRTOS/src/cmsis_os.c ****   switch (ThreadState)
1389:FreeRTOS/src/cmsis_os.c ****   {
1390:FreeRTOS/src/cmsis_os.c ****   case eRunning :
1391:FreeRTOS/src/cmsis_os.c ****     result = osThreadRunning;
1392:FreeRTOS/src/cmsis_os.c ****     break;
1393:FreeRTOS/src/cmsis_os.c ****   case eReady :
1394:FreeRTOS/src/cmsis_os.c ****     result = osThreadReady;
1395:FreeRTOS/src/cmsis_os.c ****     break;
1396:FreeRTOS/src/cmsis_os.c ****   case eBlocked :
1397:FreeRTOS/src/cmsis_os.c ****     result = osThreadBlocked;
1398:FreeRTOS/src/cmsis_os.c ****     break;
1399:FreeRTOS/src/cmsis_os.c ****   case eSuspended :
1400:FreeRTOS/src/cmsis_os.c ****     result = osThreadSuspended;
1401:FreeRTOS/src/cmsis_os.c ****     break;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 92


1402:FreeRTOS/src/cmsis_os.c ****   case eDeleted :
1403:FreeRTOS/src/cmsis_os.c ****     result = osThreadDeleted;
1404:FreeRTOS/src/cmsis_os.c ****     break;
1405:FreeRTOS/src/cmsis_os.c ****   default:
1406:FreeRTOS/src/cmsis_os.c ****     result = osThreadError;
1407:FreeRTOS/src/cmsis_os.c ****   } 
1408:FreeRTOS/src/cmsis_os.c ****   
1409:FreeRTOS/src/cmsis_os.c ****   return result;
1410:FreeRTOS/src/cmsis_os.c **** }
1411:FreeRTOS/src/cmsis_os.c **** #endif /* INCLUDE_eTaskGetState */
1412:FreeRTOS/src/cmsis_os.c **** 
1413:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_eTaskGetState == 1)
1414:FreeRTOS/src/cmsis_os.c **** /**
1415:FreeRTOS/src/cmsis_os.c **** * @brief Check if a thread is already suspended or not.
1416:FreeRTOS/src/cmsis_os.c **** * @param thread_id thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
1417:FreeRTOS/src/cmsis_os.c **** * @retval status code that indicates the execution status of the function.
1418:FreeRTOS/src/cmsis_os.c **** */
1419:FreeRTOS/src/cmsis_os.c **** osStatus osThreadIsSuspended(osThreadId thread_id)
1420:FreeRTOS/src/cmsis_os.c **** {
1421:FreeRTOS/src/cmsis_os.c ****   if (eTaskGetState(thread_id) == eSuspended)
1422:FreeRTOS/src/cmsis_os.c ****     return osOK;
1423:FreeRTOS/src/cmsis_os.c ****   else
1424:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
1425:FreeRTOS/src/cmsis_os.c **** }
1426:FreeRTOS/src/cmsis_os.c **** #endif /* INCLUDE_eTaskGetState */
1427:FreeRTOS/src/cmsis_os.c **** /**
1428:FreeRTOS/src/cmsis_os.c **** * @brief  Suspend execution of a thread.
1429:FreeRTOS/src/cmsis_os.c **** * @param   thread_id   thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
1430:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1431:FreeRTOS/src/cmsis_os.c **** */
1432:FreeRTOS/src/cmsis_os.c **** osStatus osThreadSuspend (osThreadId thread_id)
1433:FreeRTOS/src/cmsis_os.c **** {
 3268              		.loc 1 1433 1 is_stmt 1 view -0
 3269              		.cfi_startproc
 3270              		@ args = 0, pretend = 0, frame = 0
 3271              		@ frame_needed = 0, uses_anonymous_args = 0
 3272              		.loc 1 1433 1 is_stmt 0 view .LVU808
 3273 0000 08B5     		push	{r3, lr}
 3274              	.LCFI84:
 3275              		.cfi_def_cfa_offset 8
 3276              		.cfi_offset 3, -8
 3277              		.cfi_offset 14, -4
1434:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_vTaskSuspend == 1)
1435:FreeRTOS/src/cmsis_os.c ****     vTaskSuspend(thread_id);
 3278              		.loc 1 1435 5 is_stmt 1 view .LVU809
 3279 0002 FFF7FEFF 		bl	vTaskSuspend
 3280              	.LVL242:
1436:FreeRTOS/src/cmsis_os.c ****   
1437:FreeRTOS/src/cmsis_os.c ****   return osOK;
 3281              		.loc 1 1437 3 view .LVU810
1438:FreeRTOS/src/cmsis_os.c **** #else
1439:FreeRTOS/src/cmsis_os.c ****   return osErrorResource;
1440:FreeRTOS/src/cmsis_os.c **** #endif
1441:FreeRTOS/src/cmsis_os.c **** }
 3282              		.loc 1 1441 1 is_stmt 0 view .LVU811
 3283 0006 0020     		movs	r0, #0
 3284 0008 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 93


 3285              		.cfi_endproc
 3286              	.LFE89:
 3288              		.section	.text.osThreadResume,"ax",%progbits
 3289              		.align	1
 3290              		.global	osThreadResume
 3291              		.syntax unified
 3292              		.thumb
 3293              		.thumb_func
 3294              		.fpu softvfp
 3296              	osThreadResume:
 3297              	.LVL243:
 3298              	.LFB90:
1442:FreeRTOS/src/cmsis_os.c **** 
1443:FreeRTOS/src/cmsis_os.c **** /**
1444:FreeRTOS/src/cmsis_os.c **** * @brief  Resume execution of a suspended thread.
1445:FreeRTOS/src/cmsis_os.c **** * @param   thread_id   thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
1446:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1447:FreeRTOS/src/cmsis_os.c **** */
1448:FreeRTOS/src/cmsis_os.c **** osStatus osThreadResume (osThreadId thread_id)
1449:FreeRTOS/src/cmsis_os.c **** {
 3299              		.loc 1 1449 1 is_stmt 1 view -0
 3300              		.cfi_startproc
 3301              		@ args = 0, pretend = 0, frame = 0
 3302              		@ frame_needed = 0, uses_anonymous_args = 0
 3303              		.loc 1 1449 1 is_stmt 0 view .LVU813
 3304 0000 10B5     		push	{r4, lr}
 3305              	.LCFI85:
 3306              		.cfi_def_cfa_offset 8
 3307              		.cfi_offset 4, -8
 3308              		.cfi_offset 14, -4
 3309 0002 0446     		mov	r4, r0
1450:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_vTaskSuspend == 1)  
1451:FreeRTOS/src/cmsis_os.c ****   if(inHandlerMode())
 3310              		.loc 1 1451 3 is_stmt 1 view .LVU814
 3311              		.loc 1 1451 6 is_stmt 0 view .LVU815
 3312 0004 FFF7FEFF 		bl	inHandlerMode
 3313              	.LVL244:
 3314              		.loc 1 1451 5 view .LVU816
 3315 0008 68B1     		cbz	r0, .L279
1452:FreeRTOS/src/cmsis_os.c ****   {
1453:FreeRTOS/src/cmsis_os.c ****     if (xTaskResumeFromISR(thread_id) == pdTRUE)
 3316              		.loc 1 1453 5 is_stmt 1 view .LVU817
 3317              		.loc 1 1453 9 is_stmt 0 view .LVU818
 3318 000a 2046     		mov	r0, r4
 3319 000c FFF7FEFF 		bl	xTaskResumeFromISR
 3320              	.LVL245:
 3321              		.loc 1 1453 8 view .LVU819
 3322 0010 0128     		cmp	r0, #1
 3323 0012 0BD1     		bne	.L280
1454:FreeRTOS/src/cmsis_os.c ****     {
1455:FreeRTOS/src/cmsis_os.c ****       portYIELD_FROM_ISR(pdTRUE);
 3324              		.loc 1 1455 7 is_stmt 1 discriminator 1 view .LVU820
 3325              		.loc 1 1455 7 discriminator 1 view .LVU821
 3326 0014 064B     		ldr	r3, .L282
 3327 0016 4FF08052 		mov	r2, #268435456
 3328 001a 1A60     		str	r2, [r3]
 3329              		.loc 1 1455 7 discriminator 1 view .LVU822
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 94


 3330              		.syntax unified
 3331              	@ 1455 "FreeRTOS/src/cmsis_os.c" 1
 3332 001c BFF34F8F 		dsb
 3333              	@ 0 "" 2
 3334              		.loc 1 1455 7 discriminator 1 view .LVU823
 3335              	@ 1455 "FreeRTOS/src/cmsis_os.c" 1
 3336 0020 BFF36F8F 		isb
 3337              	@ 0 "" 2
 3338              		.thumb
 3339              		.syntax unified
 3340 0024 02E0     		b	.L280
 3341              	.L279:
1456:FreeRTOS/src/cmsis_os.c ****     }
1457:FreeRTOS/src/cmsis_os.c ****   }
1458:FreeRTOS/src/cmsis_os.c ****   else
1459:FreeRTOS/src/cmsis_os.c ****   {
1460:FreeRTOS/src/cmsis_os.c ****     vTaskResume(thread_id);
 3342              		.loc 1 1460 5 view .LVU824
 3343 0026 2046     		mov	r0, r4
 3344 0028 FFF7FEFF 		bl	vTaskResume
 3345              	.LVL246:
 3346              	.L280:
1461:FreeRTOS/src/cmsis_os.c ****   }
1462:FreeRTOS/src/cmsis_os.c ****   return osOK;
 3347              		.loc 1 1462 3 view .LVU825
1463:FreeRTOS/src/cmsis_os.c **** #else
1464:FreeRTOS/src/cmsis_os.c ****   return osErrorResource;
1465:FreeRTOS/src/cmsis_os.c **** #endif
1466:FreeRTOS/src/cmsis_os.c **** }
 3348              		.loc 1 1466 1 is_stmt 0 view .LVU826
 3349 002c 0020     		movs	r0, #0
 3350 002e 10BD     		pop	{r4, pc}
 3351              	.LVL247:
 3352              	.L283:
 3353              		.loc 1 1466 1 view .LVU827
 3354              		.align	2
 3355              	.L282:
 3356 0030 04ED00E0 		.word	-536810236
 3357              		.cfi_endproc
 3358              	.LFE90:
 3360              		.section	.text.osThreadSuspendAll,"ax",%progbits
 3361              		.align	1
 3362              		.global	osThreadSuspendAll
 3363              		.syntax unified
 3364              		.thumb
 3365              		.thumb_func
 3366              		.fpu softvfp
 3368              	osThreadSuspendAll:
 3369              	.LFB91:
1467:FreeRTOS/src/cmsis_os.c **** 
1468:FreeRTOS/src/cmsis_os.c **** /**
1469:FreeRTOS/src/cmsis_os.c **** * @brief  Suspend execution of a all active threads.
1470:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1471:FreeRTOS/src/cmsis_os.c **** */
1472:FreeRTOS/src/cmsis_os.c **** osStatus osThreadSuspendAll (void)
1473:FreeRTOS/src/cmsis_os.c **** {
 3370              		.loc 1 1473 1 is_stmt 1 view -0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 95


 3371              		.cfi_startproc
 3372              		@ args = 0, pretend = 0, frame = 0
 3373              		@ frame_needed = 0, uses_anonymous_args = 0
 3374 0000 08B5     		push	{r3, lr}
 3375              	.LCFI86:
 3376              		.cfi_def_cfa_offset 8
 3377              		.cfi_offset 3, -8
 3378              		.cfi_offset 14, -4
1474:FreeRTOS/src/cmsis_os.c ****   vTaskSuspendAll();
 3379              		.loc 1 1474 3 view .LVU829
 3380 0002 FFF7FEFF 		bl	vTaskSuspendAll
 3381              	.LVL248:
1475:FreeRTOS/src/cmsis_os.c ****   
1476:FreeRTOS/src/cmsis_os.c ****   return osOK;
 3382              		.loc 1 1476 3 view .LVU830
1477:FreeRTOS/src/cmsis_os.c **** }
 3383              		.loc 1 1477 1 is_stmt 0 view .LVU831
 3384 0006 0020     		movs	r0, #0
 3385 0008 08BD     		pop	{r3, pc}
 3386              		.cfi_endproc
 3387              	.LFE91:
 3389              		.section	.text.osThreadResumeAll,"ax",%progbits
 3390              		.align	1
 3391              		.global	osThreadResumeAll
 3392              		.syntax unified
 3393              		.thumb
 3394              		.thumb_func
 3395              		.fpu softvfp
 3397              	osThreadResumeAll:
 3398              	.LFB92:
1478:FreeRTOS/src/cmsis_os.c **** 
1479:FreeRTOS/src/cmsis_os.c **** /**
1480:FreeRTOS/src/cmsis_os.c **** * @brief  Resume execution of a all suspended threads.
1481:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1482:FreeRTOS/src/cmsis_os.c **** */
1483:FreeRTOS/src/cmsis_os.c **** osStatus osThreadResumeAll (void)
1484:FreeRTOS/src/cmsis_os.c **** {
 3399              		.loc 1 1484 1 is_stmt 1 view -0
 3400              		.cfi_startproc
 3401              		@ args = 0, pretend = 0, frame = 0
 3402              		@ frame_needed = 0, uses_anonymous_args = 0
 3403 0000 08B5     		push	{r3, lr}
 3404              	.LCFI87:
 3405              		.cfi_def_cfa_offset 8
 3406              		.cfi_offset 3, -8
 3407              		.cfi_offset 14, -4
1485:FreeRTOS/src/cmsis_os.c ****   if (xTaskResumeAll() == pdTRUE)
 3408              		.loc 1 1485 3 view .LVU833
 3409              		.loc 1 1485 7 is_stmt 0 view .LVU834
 3410 0002 FFF7FEFF 		bl	xTaskResumeAll
 3411              	.LVL249:
 3412              		.loc 1 1485 6 view .LVU835
 3413 0006 0128     		cmp	r0, #1
 3414 0008 01D0     		beq	.L290
1486:FreeRTOS/src/cmsis_os.c ****     return osOK;
1487:FreeRTOS/src/cmsis_os.c ****   else
1488:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 96


 3415              		.loc 1 1488 12 view .LVU836
 3416 000a FF20     		movs	r0, #255
 3417              	.L286:
1489:FreeRTOS/src/cmsis_os.c ****   
1490:FreeRTOS/src/cmsis_os.c **** }
 3418              		.loc 1 1490 1 view .LVU837
 3419 000c 08BD     		pop	{r3, pc}
 3420              	.L290:
1486:FreeRTOS/src/cmsis_os.c ****     return osOK;
 3421              		.loc 1 1486 12 view .LVU838
 3422 000e 0020     		movs	r0, #0
 3423 0010 FCE7     		b	.L286
 3424              		.cfi_endproc
 3425              	.LFE92:
 3427              		.section	.text.osDelayUntil,"ax",%progbits
 3428              		.align	1
 3429              		.global	osDelayUntil
 3430              		.syntax unified
 3431              		.thumb
 3432              		.thumb_func
 3433              		.fpu softvfp
 3435              	osDelayUntil:
 3436              	.LVL250:
 3437              	.LFB93:
1491:FreeRTOS/src/cmsis_os.c **** 
1492:FreeRTOS/src/cmsis_os.c **** /**
1493:FreeRTOS/src/cmsis_os.c **** * @brief  Delay a task until a specified time
1494:FreeRTOS/src/cmsis_os.c **** * @param   PreviousWakeTime   Pointer to a variable that holds the time at which the 
1495:FreeRTOS/src/cmsis_os.c **** *          task was last unblocked. PreviousWakeTime must be initialised with the current time
1496:FreeRTOS/src/cmsis_os.c **** *          prior to its first use (PreviousWakeTime = osKernelSysTick() )
1497:FreeRTOS/src/cmsis_os.c **** * @param   millisec    time delay value
1498:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1499:FreeRTOS/src/cmsis_os.c **** */
1500:FreeRTOS/src/cmsis_os.c **** osStatus osDelayUntil (uint32_t *PreviousWakeTime, uint32_t millisec)
1501:FreeRTOS/src/cmsis_os.c **** {
 3438              		.loc 1 1501 1 is_stmt 1 view -0
 3439              		.cfi_startproc
 3440              		@ args = 0, pretend = 0, frame = 0
 3441              		@ frame_needed = 0, uses_anonymous_args = 0
 3442              		.loc 1 1501 1 is_stmt 0 view .LVU840
 3443 0000 08B5     		push	{r3, lr}
 3444              	.LCFI88:
 3445              		.cfi_def_cfa_offset 8
 3446              		.cfi_offset 3, -8
 3447              		.cfi_offset 14, -4
1502:FreeRTOS/src/cmsis_os.c **** #if INCLUDE_vTaskDelayUntil
1503:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks = (millisec / portTICK_PERIOD_MS);
 3448              		.loc 1 1503 3 is_stmt 1 view .LVU841
 3449              	.LVL251:
1504:FreeRTOS/src/cmsis_os.c ****   vTaskDelayUntil((TickType_t *) PreviousWakeTime, ticks ? ticks : 1);
 3450              		.loc 1 1504 3 view .LVU842
 3451 0002 0B46     		mov	r3, r1
 3452 0004 01B9     		cbnz	r1, .L292
 3453 0006 0123     		movs	r3, #1
 3454              	.L292:
 3455              		.loc 1 1504 3 is_stmt 0 discriminator 4 view .LVU843
 3456 0008 1946     		mov	r1, r3
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 97


 3457              	.LVL252:
 3458              		.loc 1 1504 3 discriminator 4 view .LVU844
 3459 000a FFF7FEFF 		bl	vTaskDelayUntil
 3460              	.LVL253:
1505:FreeRTOS/src/cmsis_os.c ****   
1506:FreeRTOS/src/cmsis_os.c ****   return osOK;
 3461              		.loc 1 1506 3 is_stmt 1 discriminator 4 view .LVU845
1507:FreeRTOS/src/cmsis_os.c **** #else
1508:FreeRTOS/src/cmsis_os.c ****   (void) millisec;
1509:FreeRTOS/src/cmsis_os.c ****   (void) PreviousWakeTime;
1510:FreeRTOS/src/cmsis_os.c ****   
1511:FreeRTOS/src/cmsis_os.c ****   return osErrorResource;
1512:FreeRTOS/src/cmsis_os.c **** #endif
1513:FreeRTOS/src/cmsis_os.c **** }
 3462              		.loc 1 1513 1 is_stmt 0 discriminator 4 view .LVU846
 3463 000e 0020     		movs	r0, #0
 3464 0010 08BD     		pop	{r3, pc}
 3465              		.cfi_endproc
 3466              	.LFE93:
 3468              		.section	.text.osAbortDelay,"ax",%progbits
 3469              		.align	1
 3470              		.global	osAbortDelay
 3471              		.syntax unified
 3472              		.thumb
 3473              		.thumb_func
 3474              		.fpu softvfp
 3476              	osAbortDelay:
 3477              	.LVL254:
 3478              	.LFB94:
1514:FreeRTOS/src/cmsis_os.c **** 
1515:FreeRTOS/src/cmsis_os.c **** /**
1516:FreeRTOS/src/cmsis_os.c **** * @brief   Abort the delay for a specific thread
1517:FreeRTOS/src/cmsis_os.c **** * @param   thread_id   thread ID obtained by \ref osThreadCreate or \ref osThreadGetId   
1518:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1519:FreeRTOS/src/cmsis_os.c **** */
1520:FreeRTOS/src/cmsis_os.c **** osStatus osAbortDelay(osThreadId thread_id)
1521:FreeRTOS/src/cmsis_os.c **** {
 3479              		.loc 1 1521 1 is_stmt 1 view -0
 3480              		.cfi_startproc
 3481              		@ args = 0, pretend = 0, frame = 0
 3482              		@ frame_needed = 0, uses_anonymous_args = 0
 3483              		@ link register save eliminated.
1522:FreeRTOS/src/cmsis_os.c **** #if INCLUDE_xTaskAbortDelay
1523:FreeRTOS/src/cmsis_os.c ****   
1524:FreeRTOS/src/cmsis_os.c ****   xTaskAbortDelay(thread_id);
1525:FreeRTOS/src/cmsis_os.c ****   
1526:FreeRTOS/src/cmsis_os.c ****   return osOK;
1527:FreeRTOS/src/cmsis_os.c **** #else
1528:FreeRTOS/src/cmsis_os.c ****   (void) thread_id;
 3484              		.loc 1 1528 3 view .LVU848
1529:FreeRTOS/src/cmsis_os.c ****   
1530:FreeRTOS/src/cmsis_os.c ****   return osErrorResource;
 3485              		.loc 1 1530 3 view .LVU849
1531:FreeRTOS/src/cmsis_os.c **** #endif
1532:FreeRTOS/src/cmsis_os.c **** }
 3486              		.loc 1 1532 1 is_stmt 0 view .LVU850
 3487 0000 8120     		movs	r0, #129
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 98


 3488              	.LVL255:
 3489              		.loc 1 1532 1 view .LVU851
 3490 0002 7047     		bx	lr
 3491              		.cfi_endproc
 3492              	.LFE94:
 3494              		.section	.text.osThreadList,"ax",%progbits
 3495              		.align	1
 3496              		.global	osThreadList
 3497              		.syntax unified
 3498              		.thumb
 3499              		.thumb_func
 3500              		.fpu softvfp
 3502              	osThreadList:
 3503              	.LVL256:
 3504              	.LFB95:
1533:FreeRTOS/src/cmsis_os.c **** 
1534:FreeRTOS/src/cmsis_os.c **** /**
1535:FreeRTOS/src/cmsis_os.c **** * @brief   Lists all the current threads, along with their current state 
1536:FreeRTOS/src/cmsis_os.c **** *          and stack usage high water mark.
1537:FreeRTOS/src/cmsis_os.c **** * @param   buffer   A buffer into which the above mentioned details
1538:FreeRTOS/src/cmsis_os.c **** *          will be written
1539:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1540:FreeRTOS/src/cmsis_os.c **** */
1541:FreeRTOS/src/cmsis_os.c **** osStatus osThreadList (uint8_t *buffer)
1542:FreeRTOS/src/cmsis_os.c **** {
 3505              		.loc 1 1542 1 is_stmt 1 view -0
 3506              		.cfi_startproc
 3507              		@ args = 0, pretend = 0, frame = 0
 3508              		@ frame_needed = 0, uses_anonymous_args = 0
 3509              		@ link register save eliminated.
1543:FreeRTOS/src/cmsis_os.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) )
1544:FreeRTOS/src/cmsis_os.c ****   vTaskList((char *)buffer);
1545:FreeRTOS/src/cmsis_os.c **** #endif
1546:FreeRTOS/src/cmsis_os.c ****   return osOK;
 3510              		.loc 1 1546 3 view .LVU853
1547:FreeRTOS/src/cmsis_os.c **** }
 3511              		.loc 1 1547 1 is_stmt 0 view .LVU854
 3512 0000 0020     		movs	r0, #0
 3513              	.LVL257:
 3514              		.loc 1 1547 1 view .LVU855
 3515 0002 7047     		bx	lr
 3516              		.cfi_endproc
 3517              	.LFE95:
 3519              		.section	.text.osMessagePeek,"ax",%progbits
 3520              		.align	1
 3521              		.global	osMessagePeek
 3522              		.syntax unified
 3523              		.thumb
 3524              		.thumb_func
 3525              		.fpu softvfp
 3527              	osMessagePeek:
 3528              	.LVL258:
 3529              	.LFB96:
1548:FreeRTOS/src/cmsis_os.c **** 
1549:FreeRTOS/src/cmsis_os.c **** /**
1550:FreeRTOS/src/cmsis_os.c **** * @brief  Receive an item from a queue without removing the item from the queue.
1551:FreeRTOS/src/cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 99


1552:FreeRTOS/src/cmsis_os.c **** * @param  millisec  timeout value or 0 in case of no time-out.
1553:FreeRTOS/src/cmsis_os.c **** * @retval event information that includes status code.
1554:FreeRTOS/src/cmsis_os.c **** */
1555:FreeRTOS/src/cmsis_os.c **** osEvent osMessagePeek (osMessageQId queue_id, uint32_t millisec)
1556:FreeRTOS/src/cmsis_os.c **** {
 3530              		.loc 1 1556 1 is_stmt 1 view -0
 3531              		.cfi_startproc
 3532              		@ args = 0, pretend = 0, frame = 16
 3533              		@ frame_needed = 0, uses_anonymous_args = 0
 3534              		.loc 1 1556 1 is_stmt 0 view .LVU857
 3535 0000 30B5     		push	{r4, r5, lr}
 3536              	.LCFI89:
 3537              		.cfi_def_cfa_offset 12
 3538              		.cfi_offset 4, -12
 3539              		.cfi_offset 5, -8
 3540              		.cfi_offset 14, -4
 3541 0002 85B0     		sub	sp, sp, #20
 3542              	.LCFI90:
 3543              		.cfi_def_cfa_offset 32
 3544 0004 0446     		mov	r4, r0
1557:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 3545              		.loc 1 1557 3 is_stmt 1 view .LVU858
1558:FreeRTOS/src/cmsis_os.c ****   osEvent event;
 3546              		.loc 1 1558 3 view .LVU859
1559:FreeRTOS/src/cmsis_os.c ****   
1560:FreeRTOS/src/cmsis_os.c ****   event.def.message_id = queue_id;
 3547              		.loc 1 1560 3 view .LVU860
 3548              		.loc 1 1560 24 is_stmt 0 view .LVU861
 3549 0006 0391     		str	r1, [sp, #12]
1561:FreeRTOS/src/cmsis_os.c ****   
1562:FreeRTOS/src/cmsis_os.c ****   if (queue_id == NULL) {
 3550              		.loc 1 1562 3 is_stmt 1 view .LVU862
 3551              		.loc 1 1562 6 is_stmt 0 view .LVU863
 3552 0008 A9B1     		cbz	r1, .L307
 3553 000a 0846     		mov	r0, r1
 3554              	.LVL259:
 3555              		.loc 1 1562 6 view .LVU864
 3556 000c 1546     		mov	r5, r2
1563:FreeRTOS/src/cmsis_os.c ****     event.status = osErrorParameter;
1564:FreeRTOS/src/cmsis_os.c ****     return event;
1565:FreeRTOS/src/cmsis_os.c ****   }
1566:FreeRTOS/src/cmsis_os.c ****   
1567:FreeRTOS/src/cmsis_os.c ****   ticks = 0;
 3557              		.loc 1 1567 3 is_stmt 1 view .LVU865
 3558              	.LVL260:
1568:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 3559              		.loc 1 1568 3 view .LVU866
 3560              		.loc 1 1568 6 is_stmt 0 view .LVU867
 3561 000e B2F1FF3F 		cmp	r2, #-1
 3562 0012 18D0     		beq	.L308
 3563              	.L300:
 3564              	.LVL261:
1569:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
1570:FreeRTOS/src/cmsis_os.c ****   }
1571:FreeRTOS/src/cmsis_os.c ****   else if (millisec != 0) {
1572:FreeRTOS/src/cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
1573:FreeRTOS/src/cmsis_os.c ****     if (ticks == 0) {
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 100


1574:FreeRTOS/src/cmsis_os.c ****       ticks = 1;
1575:FreeRTOS/src/cmsis_os.c ****     }
1576:FreeRTOS/src/cmsis_os.c ****   }
1577:FreeRTOS/src/cmsis_os.c ****   
1578:FreeRTOS/src/cmsis_os.c ****   if (xQueuePeek(queue_id, &event.value.v, ticks) == pdTRUE) 
 3565              		.loc 1 1578 3 is_stmt 1 view .LVU868
 3566              		.loc 1 1578 7 is_stmt 0 view .LVU869
 3567 0014 2A46     		mov	r2, r5
 3568              	.LVL262:
 3569              		.loc 1 1578 7 view .LVU870
 3570 0016 02A9     		add	r1, sp, #8
 3571              	.LVL263:
 3572              		.loc 1 1578 7 view .LVU871
 3573 0018 FFF7FEFF 		bl	xQueuePeek
 3574              	.LVL264:
 3575              		.loc 1 1578 6 view .LVU872
 3576 001c 0128     		cmp	r0, #1
 3577 001e 15D0     		beq	.L309
1579:FreeRTOS/src/cmsis_os.c ****   {
1580:FreeRTOS/src/cmsis_os.c ****     /* We have mail */
1581:FreeRTOS/src/cmsis_os.c ****     event.status = osEventMessage;
1582:FreeRTOS/src/cmsis_os.c ****   }
1583:FreeRTOS/src/cmsis_os.c ****   else 
1584:FreeRTOS/src/cmsis_os.c ****   {
1585:FreeRTOS/src/cmsis_os.c ****     event.status = (ticks == 0) ? osOK : osEventTimeout;
 3578              		.loc 1 1585 5 is_stmt 1 view .LVU873
 3579              		.loc 1 1585 40 is_stmt 0 view .LVU874
 3580 0020 BDB9     		cbnz	r5, .L305
 3581 0022 0023     		movs	r3, #0
 3582              	.L303:
 3583              		.loc 1 1585 18 discriminator 4 view .LVU875
 3584 0024 0193     		str	r3, [sp, #4]
 3585              	.L302:
1586:FreeRTOS/src/cmsis_os.c ****   }
1587:FreeRTOS/src/cmsis_os.c ****   
1588:FreeRTOS/src/cmsis_os.c ****   return event;
 3586              		.loc 1 1588 3 is_stmt 1 view .LVU876
 3587              		.loc 1 1588 10 is_stmt 0 view .LVU877
 3588 0026 04AB     		add	r3, sp, #16
 3589 0028 13E90700 		ldmdb	r3, {r0, r1, r2}
 3590 002c 84E80700 		stm	r4, {r0, r1, r2}
 3591              	.LVL265:
 3592              	.L297:
1589:FreeRTOS/src/cmsis_os.c **** }
 3593              		.loc 1 1589 1 view .LVU878
 3594 0030 2046     		mov	r0, r4
 3595 0032 05B0     		add	sp, sp, #20
 3596              	.LCFI91:
 3597              		.cfi_remember_state
 3598              		.cfi_def_cfa_offset 12
 3599              		@ sp needed
 3600 0034 30BD     		pop	{r4, r5, pc}
 3601              	.LVL266:
 3602              	.L307:
 3603              	.LCFI92:
 3604              		.cfi_restore_state
1563:FreeRTOS/src/cmsis_os.c ****     return event;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 101


 3605              		.loc 1 1563 5 is_stmt 1 view .LVU879
1563:FreeRTOS/src/cmsis_os.c ****     return event;
 3606              		.loc 1 1563 18 is_stmt 0 view .LVU880
 3607 0036 8023     		movs	r3, #128
 3608 0038 0193     		str	r3, [sp, #4]
1564:FreeRTOS/src/cmsis_os.c ****   }
 3609              		.loc 1 1564 5 is_stmt 1 view .LVU881
1564:FreeRTOS/src/cmsis_os.c ****   }
 3610              		.loc 1 1564 12 is_stmt 0 view .LVU882
 3611 003a 04AB     		add	r3, sp, #16
 3612 003c 13E90700 		ldmdb	r3, {r0, r1, r2}
 3613              	.LVL267:
1564:FreeRTOS/src/cmsis_os.c ****   }
 3614              		.loc 1 1564 12 view .LVU883
 3615 0040 84E80700 		stm	r4, {r0, r1, r2}
 3616 0044 F4E7     		b	.L297
 3617              	.LVL268:
 3618              	.L308:
1569:FreeRTOS/src/cmsis_os.c ****   }
 3619              		.loc 1 1569 11 view .LVU884
 3620 0046 4FF0FF35 		mov	r5, #-1
 3621 004a E3E7     		b	.L300
 3622              	.LVL269:
 3623              	.L309:
1581:FreeRTOS/src/cmsis_os.c ****   }
 3624              		.loc 1 1581 5 is_stmt 1 view .LVU885
1581:FreeRTOS/src/cmsis_os.c ****   }
 3625              		.loc 1 1581 18 is_stmt 0 view .LVU886
 3626 004c 1023     		movs	r3, #16
 3627 004e 0193     		str	r3, [sp, #4]
 3628 0050 E9E7     		b	.L302
 3629              	.L305:
1585:FreeRTOS/src/cmsis_os.c ****   }
 3630              		.loc 1 1585 40 view .LVU887
 3631 0052 4023     		movs	r3, #64
 3632 0054 E6E7     		b	.L303
 3633              		.cfi_endproc
 3634              	.LFE96:
 3636              		.section	.text.osMessageWaiting,"ax",%progbits
 3637              		.align	1
 3638              		.global	osMessageWaiting
 3639              		.syntax unified
 3640              		.thumb
 3641              		.thumb_func
 3642              		.fpu softvfp
 3644              	osMessageWaiting:
 3645              	.LVL270:
 3646              	.LFB97:
1590:FreeRTOS/src/cmsis_os.c **** 
1591:FreeRTOS/src/cmsis_os.c **** /**
1592:FreeRTOS/src/cmsis_os.c **** * @brief  Get the number of messaged stored in a queue.
1593:FreeRTOS/src/cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
1594:FreeRTOS/src/cmsis_os.c **** * @retval number of messages stored in a queue.
1595:FreeRTOS/src/cmsis_os.c **** */
1596:FreeRTOS/src/cmsis_os.c **** uint32_t osMessageWaiting(osMessageQId queue_id)
1597:FreeRTOS/src/cmsis_os.c **** {
 3647              		.loc 1 1597 1 is_stmt 1 view -0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 102


 3648              		.cfi_startproc
 3649              		@ args = 0, pretend = 0, frame = 0
 3650              		@ frame_needed = 0, uses_anonymous_args = 0
 3651              		.loc 1 1597 1 is_stmt 0 view .LVU889
 3652 0000 10B5     		push	{r4, lr}
 3653              	.LCFI93:
 3654              		.cfi_def_cfa_offset 8
 3655              		.cfi_offset 4, -8
 3656              		.cfi_offset 14, -4
 3657 0002 0446     		mov	r4, r0
1598:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 3658              		.loc 1 1598 3 is_stmt 1 view .LVU890
 3659              		.loc 1 1598 7 is_stmt 0 view .LVU891
 3660 0004 FFF7FEFF 		bl	inHandlerMode
 3661              	.LVL271:
 3662              		.loc 1 1598 6 view .LVU892
 3663 0008 18B1     		cbz	r0, .L311
1599:FreeRTOS/src/cmsis_os.c ****     return uxQueueMessagesWaitingFromISR(queue_id);
 3664              		.loc 1 1599 5 is_stmt 1 view .LVU893
 3665              		.loc 1 1599 12 is_stmt 0 view .LVU894
 3666 000a 2046     		mov	r0, r4
 3667 000c FFF7FEFF 		bl	uxQueueMessagesWaitingFromISR
 3668              	.LVL272:
 3669              	.L310:
1600:FreeRTOS/src/cmsis_os.c ****   }
1601:FreeRTOS/src/cmsis_os.c ****   else
1602:FreeRTOS/src/cmsis_os.c ****   {
1603:FreeRTOS/src/cmsis_os.c ****     return uxQueueMessagesWaiting(queue_id);
1604:FreeRTOS/src/cmsis_os.c ****   }
1605:FreeRTOS/src/cmsis_os.c **** }
 3670              		.loc 1 1605 1 view .LVU895
 3671 0010 10BD     		pop	{r4, pc}
 3672              	.LVL273:
 3673              	.L311:
1603:FreeRTOS/src/cmsis_os.c ****   }
 3674              		.loc 1 1603 5 is_stmt 1 view .LVU896
1603:FreeRTOS/src/cmsis_os.c ****   }
 3675              		.loc 1 1603 12 is_stmt 0 view .LVU897
 3676 0012 2046     		mov	r0, r4
 3677 0014 FFF7FEFF 		bl	uxQueueMessagesWaiting
 3678              	.LVL274:
 3679 0018 FAE7     		b	.L310
 3680              		.cfi_endproc
 3681              	.LFE97:
 3683              		.section	.text.osMessageAvailableSpace,"ax",%progbits
 3684              		.align	1
 3685              		.global	osMessageAvailableSpace
 3686              		.syntax unified
 3687              		.thumb
 3688              		.thumb_func
 3689              		.fpu softvfp
 3691              	osMessageAvailableSpace:
 3692              	.LVL275:
 3693              	.LFB98:
1606:FreeRTOS/src/cmsis_os.c **** 
1607:FreeRTOS/src/cmsis_os.c **** /**
1608:FreeRTOS/src/cmsis_os.c **** * @brief  Get the available space in a message queue.
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 103


1609:FreeRTOS/src/cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
1610:FreeRTOS/src/cmsis_os.c **** * @retval available space in a message queue.
1611:FreeRTOS/src/cmsis_os.c **** */
1612:FreeRTOS/src/cmsis_os.c **** uint32_t osMessageAvailableSpace(osMessageQId queue_id)  
1613:FreeRTOS/src/cmsis_os.c **** {
 3694              		.loc 1 1613 1 is_stmt 1 view -0
 3695              		.cfi_startproc
 3696              		@ args = 0, pretend = 0, frame = 0
 3697              		@ frame_needed = 0, uses_anonymous_args = 0
 3698              		.loc 1 1613 1 is_stmt 0 view .LVU899
 3699 0000 08B5     		push	{r3, lr}
 3700              	.LCFI94:
 3701              		.cfi_def_cfa_offset 8
 3702              		.cfi_offset 3, -8
 3703              		.cfi_offset 14, -4
1614:FreeRTOS/src/cmsis_os.c ****   return uxQueueSpacesAvailable(queue_id);
 3704              		.loc 1 1614 3 is_stmt 1 view .LVU900
 3705              		.loc 1 1614 10 is_stmt 0 view .LVU901
 3706 0002 FFF7FEFF 		bl	uxQueueSpacesAvailable
 3707              	.LVL276:
1615:FreeRTOS/src/cmsis_os.c **** }
 3708              		.loc 1 1615 1 view .LVU902
 3709 0006 08BD     		pop	{r3, pc}
 3710              		.cfi_endproc
 3711              	.LFE98:
 3713              		.section	.text.osMessageDelete,"ax",%progbits
 3714              		.align	1
 3715              		.global	osMessageDelete
 3716              		.syntax unified
 3717              		.thumb
 3718              		.thumb_func
 3719              		.fpu softvfp
 3721              	osMessageDelete:
 3722              	.LVL277:
 3723              	.LFB99:
1616:FreeRTOS/src/cmsis_os.c **** 
1617:FreeRTOS/src/cmsis_os.c **** /**
1618:FreeRTOS/src/cmsis_os.c **** * @brief Delete a Message Queue
1619:FreeRTOS/src/cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
1620:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1621:FreeRTOS/src/cmsis_os.c **** */
1622:FreeRTOS/src/cmsis_os.c **** osStatus osMessageDelete (osMessageQId queue_id)
1623:FreeRTOS/src/cmsis_os.c **** {
 3724              		.loc 1 1623 1 is_stmt 1 view -0
 3725              		.cfi_startproc
 3726              		@ args = 0, pretend = 0, frame = 0
 3727              		@ frame_needed = 0, uses_anonymous_args = 0
 3728              		.loc 1 1623 1 is_stmt 0 view .LVU904
 3729 0000 10B5     		push	{r4, lr}
 3730              	.LCFI95:
 3731              		.cfi_def_cfa_offset 8
 3732              		.cfi_offset 4, -8
 3733              		.cfi_offset 14, -4
 3734 0002 0446     		mov	r4, r0
1624:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 3735              		.loc 1 1624 3 is_stmt 1 view .LVU905
 3736              		.loc 1 1624 7 is_stmt 0 view .LVU906
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 104


 3737 0004 FFF7FEFF 		bl	inHandlerMode
 3738              	.LVL278:
 3739              		.loc 1 1624 6 view .LVU907
 3740 0008 20B9     		cbnz	r0, .L318
1625:FreeRTOS/src/cmsis_os.c ****     return osErrorISR;
1626:FreeRTOS/src/cmsis_os.c ****   }
1627:FreeRTOS/src/cmsis_os.c **** 
1628:FreeRTOS/src/cmsis_os.c ****   vQueueDelete(queue_id);
 3741              		.loc 1 1628 3 is_stmt 1 view .LVU908
 3742 000a 2046     		mov	r0, r4
 3743 000c FFF7FEFF 		bl	vQueueDelete
 3744              	.LVL279:
1629:FreeRTOS/src/cmsis_os.c **** 
1630:FreeRTOS/src/cmsis_os.c ****   return osOK; 
 3745              		.loc 1 1630 3 view .LVU909
 3746              		.loc 1 1630 10 is_stmt 0 view .LVU910
 3747 0010 0020     		movs	r0, #0
 3748              	.L316:
1631:FreeRTOS/src/cmsis_os.c **** }
 3749              		.loc 1 1631 1 view .LVU911
 3750 0012 10BD     		pop	{r4, pc}
 3751              	.LVL280:
 3752              	.L318:
1625:FreeRTOS/src/cmsis_os.c ****     return osErrorISR;
 3753              		.loc 1 1625 12 view .LVU912
 3754 0014 8220     		movs	r0, #130
 3755 0016 FCE7     		b	.L316
 3756              		.cfi_endproc
 3757              	.LFE99:
 3759              		.section	.text.osRecursiveMutexCreate,"ax",%progbits
 3760              		.align	1
 3761              		.global	osRecursiveMutexCreate
 3762              		.syntax unified
 3763              		.thumb
 3764              		.thumb_func
 3765              		.fpu softvfp
 3767              	osRecursiveMutexCreate:
 3768              	.LVL281:
 3769              	.LFB100:
1632:FreeRTOS/src/cmsis_os.c **** 
1633:FreeRTOS/src/cmsis_os.c **** /**
1634:FreeRTOS/src/cmsis_os.c **** * @brief  Create and Initialize a Recursive Mutex
1635:FreeRTOS/src/cmsis_os.c **** * @param  mutex_def     mutex definition referenced with \ref osMutex.
1636:FreeRTOS/src/cmsis_os.c **** * @retval  mutex ID for reference by other functions or NULL in case of error..
1637:FreeRTOS/src/cmsis_os.c **** */
1638:FreeRTOS/src/cmsis_os.c **** osMutexId osRecursiveMutexCreate (const osMutexDef_t *mutex_def)
1639:FreeRTOS/src/cmsis_os.c **** {
 3770              		.loc 1 1639 1 is_stmt 1 view -0
 3771              		.cfi_startproc
 3772              		@ args = 0, pretend = 0, frame = 0
 3773              		@ frame_needed = 0, uses_anonymous_args = 0
 3774              		.loc 1 1639 1 is_stmt 0 view .LVU914
 3775 0000 08B5     		push	{r3, lr}
 3776              	.LCFI96:
 3777              		.cfi_def_cfa_offset 8
 3778              		.cfi_offset 3, -8
 3779              		.cfi_offset 14, -4
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 105


1640:FreeRTOS/src/cmsis_os.c **** #if (configUSE_RECURSIVE_MUTEXES == 1)
1641:FreeRTOS/src/cmsis_os.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
1642:FreeRTOS/src/cmsis_os.c **** 
1643:FreeRTOS/src/cmsis_os.c ****   if (mutex_def->controlblock != NULL){
1644:FreeRTOS/src/cmsis_os.c ****     return xSemaphoreCreateRecursiveMutexStatic( mutex_def->controlblock );
1645:FreeRTOS/src/cmsis_os.c ****   }
1646:FreeRTOS/src/cmsis_os.c ****   else {
1647:FreeRTOS/src/cmsis_os.c ****     return xSemaphoreCreateRecursiveMutex();
1648:FreeRTOS/src/cmsis_os.c ****   }
1649:FreeRTOS/src/cmsis_os.c **** #elif ( configSUPPORT_STATIC_ALLOCATION == 1 )
1650:FreeRTOS/src/cmsis_os.c ****   return xSemaphoreCreateRecursiveMutexStatic( mutex_def->controlblock );
1651:FreeRTOS/src/cmsis_os.c **** #else 
1652:FreeRTOS/src/cmsis_os.c ****   return xSemaphoreCreateRecursiveMutex();
 3780              		.loc 1 1652 3 is_stmt 1 view .LVU915
 3781              		.loc 1 1652 10 is_stmt 0 view .LVU916
 3782 0002 0420     		movs	r0, #4
 3783              	.LVL282:
 3784              		.loc 1 1652 10 view .LVU917
 3785 0004 FFF7FEFF 		bl	xQueueCreateMutex
 3786              	.LVL283:
1653:FreeRTOS/src/cmsis_os.c **** #endif
1654:FreeRTOS/src/cmsis_os.c **** #else
1655:FreeRTOS/src/cmsis_os.c ****   return NULL;
1656:FreeRTOS/src/cmsis_os.c **** #endif	
1657:FreeRTOS/src/cmsis_os.c **** }
 3787              		.loc 1 1657 1 view .LVU918
 3788 0008 08BD     		pop	{r3, pc}
 3789              		.cfi_endproc
 3790              	.LFE100:
 3792              		.section	.text.osRecursiveMutexRelease,"ax",%progbits
 3793              		.align	1
 3794              		.global	osRecursiveMutexRelease
 3795              		.syntax unified
 3796              		.thumb
 3797              		.thumb_func
 3798              		.fpu softvfp
 3800              	osRecursiveMutexRelease:
 3801              	.LVL284:
 3802              	.LFB101:
1658:FreeRTOS/src/cmsis_os.c **** 
1659:FreeRTOS/src/cmsis_os.c **** /**
1660:FreeRTOS/src/cmsis_os.c **** * @brief  Release a Recursive Mutex
1661:FreeRTOS/src/cmsis_os.c **** * @param   mutex_id      mutex ID obtained by \ref osRecursiveMutexCreate.
1662:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1663:FreeRTOS/src/cmsis_os.c **** */
1664:FreeRTOS/src/cmsis_os.c **** osStatus osRecursiveMutexRelease (osMutexId mutex_id)
1665:FreeRTOS/src/cmsis_os.c **** {
 3803              		.loc 1 1665 1 is_stmt 1 view -0
 3804              		.cfi_startproc
 3805              		@ args = 0, pretend = 0, frame = 0
 3806              		@ frame_needed = 0, uses_anonymous_args = 0
 3807              		.loc 1 1665 1 is_stmt 0 view .LVU920
 3808 0000 08B5     		push	{r3, lr}
 3809              	.LCFI97:
 3810              		.cfi_def_cfa_offset 8
 3811              		.cfi_offset 3, -8
 3812              		.cfi_offset 14, -4
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 106


1666:FreeRTOS/src/cmsis_os.c **** #if (configUSE_RECURSIVE_MUTEXES == 1)
1667:FreeRTOS/src/cmsis_os.c ****   osStatus result = osOK;
 3813              		.loc 1 1667 3 is_stmt 1 view .LVU921
 3814              	.LVL285:
1668:FreeRTOS/src/cmsis_os.c ****  
1669:FreeRTOS/src/cmsis_os.c ****   if (xSemaphoreGiveRecursive(mutex_id) != pdTRUE) 
 3815              		.loc 1 1669 3 view .LVU922
 3816              		.loc 1 1669 7 is_stmt 0 view .LVU923
 3817 0002 FFF7FEFF 		bl	xQueueGiveMutexRecursive
 3818              	.LVL286:
 3819              		.loc 1 1669 6 view .LVU924
 3820 0006 0128     		cmp	r0, #1
 3821 0008 01D0     		beq	.L326
1670:FreeRTOS/src/cmsis_os.c ****   {
1671:FreeRTOS/src/cmsis_os.c ****     result = osErrorOS;
 3822              		.loc 1 1671 12 view .LVU925
 3823 000a FF20     		movs	r0, #255
 3824              	.LVL287:
1672:FreeRTOS/src/cmsis_os.c ****   }
1673:FreeRTOS/src/cmsis_os.c ****   return result;
 3825              		.loc 1 1673 3 is_stmt 1 view .LVU926
 3826              	.L322:
1674:FreeRTOS/src/cmsis_os.c **** #else
1675:FreeRTOS/src/cmsis_os.c **** 	return osErrorResource;
1676:FreeRTOS/src/cmsis_os.c **** #endif
1677:FreeRTOS/src/cmsis_os.c **** }
 3827              		.loc 1 1677 1 is_stmt 0 view .LVU927
 3828 000c 08BD     		pop	{r3, pc}
 3829              	.LVL288:
 3830              	.L326:
1667:FreeRTOS/src/cmsis_os.c ****  
 3831              		.loc 1 1667 12 view .LVU928
 3832 000e 0020     		movs	r0, #0
 3833 0010 FCE7     		b	.L322
 3834              		.cfi_endproc
 3835              	.LFE101:
 3837              		.section	.text.osRecursiveMutexWait,"ax",%progbits
 3838              		.align	1
 3839              		.global	osRecursiveMutexWait
 3840              		.syntax unified
 3841              		.thumb
 3842              		.thumb_func
 3843              		.fpu softvfp
 3845              	osRecursiveMutexWait:
 3846              	.LVL289:
 3847              	.LFB102:
1678:FreeRTOS/src/cmsis_os.c **** 
1679:FreeRTOS/src/cmsis_os.c **** /**
1680:FreeRTOS/src/cmsis_os.c **** * @brief  Release a Recursive Mutex
1681:FreeRTOS/src/cmsis_os.c **** * @param   mutex_id    mutex ID obtained by \ref osRecursiveMutexCreate.
1682:FreeRTOS/src/cmsis_os.c **** * @param millisec      timeout value or 0 in case of no time-out.
1683:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1684:FreeRTOS/src/cmsis_os.c **** */
1685:FreeRTOS/src/cmsis_os.c **** osStatus osRecursiveMutexWait (osMutexId mutex_id, uint32_t millisec)
1686:FreeRTOS/src/cmsis_os.c **** {
 3848              		.loc 1 1686 1 is_stmt 1 view -0
 3849              		.cfi_startproc
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 107


 3850              		@ args = 0, pretend = 0, frame = 0
 3851              		@ frame_needed = 0, uses_anonymous_args = 0
1687:FreeRTOS/src/cmsis_os.c **** #if (configUSE_RECURSIVE_MUTEXES == 1)
1688:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 3852              		.loc 1 1688 3 view .LVU930
1689:FreeRTOS/src/cmsis_os.c ****   
1690:FreeRTOS/src/cmsis_os.c ****   if (mutex_id == NULL)
 3853              		.loc 1 1690 3 view .LVU931
 3854              		.loc 1 1690 6 is_stmt 0 view .LVU932
 3855 0000 70B1     		cbz	r0, .L330
1686:FreeRTOS/src/cmsis_os.c **** #if (configUSE_RECURSIVE_MUTEXES == 1)
 3856              		.loc 1 1686 1 view .LVU933
 3857 0002 08B5     		push	{r3, lr}
 3858              	.LCFI98:
 3859              		.cfi_def_cfa_offset 8
 3860              		.cfi_offset 3, -8
 3861              		.cfi_offset 14, -4
 3862 0004 0346     		mov	r3, r0
1691:FreeRTOS/src/cmsis_os.c ****   {
1692:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1693:FreeRTOS/src/cmsis_os.c ****   }
1694:FreeRTOS/src/cmsis_os.c ****   
1695:FreeRTOS/src/cmsis_os.c ****   ticks = 0;
 3863              		.loc 1 1695 3 is_stmt 1 view .LVU934
 3864              	.LVL290:
1696:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) 
 3865              		.loc 1 1696 3 view .LVU935
 3866              		.loc 1 1696 6 is_stmt 0 view .LVU936
 3867 0006 B1F1FF3F 		cmp	r1, #-1
 3868 000a 06D0     		beq	.L337
 3869              	.LVL291:
 3870              	.L329:
1697:FreeRTOS/src/cmsis_os.c ****   {
1698:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
1699:FreeRTOS/src/cmsis_os.c ****   }
1700:FreeRTOS/src/cmsis_os.c ****   else if (millisec != 0) 
1701:FreeRTOS/src/cmsis_os.c ****   {
1702:FreeRTOS/src/cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
1703:FreeRTOS/src/cmsis_os.c ****     if (ticks == 0) 
1704:FreeRTOS/src/cmsis_os.c ****     {
1705:FreeRTOS/src/cmsis_os.c ****       ticks = 1;
1706:FreeRTOS/src/cmsis_os.c ****     }
1707:FreeRTOS/src/cmsis_os.c ****   }
1708:FreeRTOS/src/cmsis_os.c ****   
1709:FreeRTOS/src/cmsis_os.c ****   if (xSemaphoreTakeRecursive(mutex_id, ticks) != pdTRUE) 
 3871              		.loc 1 1709 3 is_stmt 1 view .LVU937
 3872              		.loc 1 1709 7 is_stmt 0 view .LVU938
 3873 000c 1846     		mov	r0, r3
 3874              	.LVL292:
 3875              		.loc 1 1709 7 view .LVU939
 3876 000e FFF7FEFF 		bl	xQueueTakeMutexRecursive
 3877              	.LVL293:
 3878              		.loc 1 1709 6 view .LVU940
 3879 0012 0128     		cmp	r0, #1
 3880 0014 06D1     		bne	.L332
1710:FreeRTOS/src/cmsis_os.c ****   {
1711:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 108


1712:FreeRTOS/src/cmsis_os.c ****   }
1713:FreeRTOS/src/cmsis_os.c ****   return osOK;
 3881              		.loc 1 1713 10 view .LVU941
 3882 0016 0020     		movs	r0, #0
 3883              	.L327:
1714:FreeRTOS/src/cmsis_os.c **** #else
1715:FreeRTOS/src/cmsis_os.c **** 	return osErrorResource;
1716:FreeRTOS/src/cmsis_os.c **** #endif
1717:FreeRTOS/src/cmsis_os.c **** }
 3884              		.loc 1 1717 1 view .LVU942
 3885 0018 08BD     		pop	{r3, pc}
 3886              	.LVL294:
 3887              	.L337:
1698:FreeRTOS/src/cmsis_os.c ****   }
 3888              		.loc 1 1698 11 view .LVU943
 3889 001a 4FF0FF31 		mov	r1, #-1
 3890              	.LVL295:
1698:FreeRTOS/src/cmsis_os.c ****   }
 3891              		.loc 1 1698 11 view .LVU944
 3892 001e F5E7     		b	.L329
 3893              	.LVL296:
 3894              	.L330:
 3895              	.LCFI99:
 3896              		.cfi_def_cfa_offset 0
 3897              		.cfi_restore 3
 3898              		.cfi_restore 14
1692:FreeRTOS/src/cmsis_os.c ****   }
 3899              		.loc 1 1692 12 view .LVU945
 3900 0020 8020     		movs	r0, #128
 3901              	.LVL297:
 3902              		.loc 1 1717 1 view .LVU946
 3903 0022 7047     		bx	lr
 3904              	.LVL298:
 3905              	.L332:
 3906              	.LCFI100:
 3907              		.cfi_def_cfa_offset 8
 3908              		.cfi_offset 3, -8
 3909              		.cfi_offset 14, -4
1711:FreeRTOS/src/cmsis_os.c ****   }
 3910              		.loc 1 1711 12 view .LVU947
 3911 0024 FF20     		movs	r0, #255
 3912 0026 F7E7     		b	.L327
 3913              		.cfi_endproc
 3914              	.LFE102:
 3916              		.section	.text.osSemaphoreGetCount,"ax",%progbits
 3917              		.align	1
 3918              		.global	osSemaphoreGetCount
 3919              		.syntax unified
 3920              		.thumb
 3921              		.thumb_func
 3922              		.fpu softvfp
 3924              	osSemaphoreGetCount:
 3925              	.LVL299:
 3926              	.LFB103:
1718:FreeRTOS/src/cmsis_os.c **** 
1719:FreeRTOS/src/cmsis_os.c **** /**
1720:FreeRTOS/src/cmsis_os.c **** * @brief  Returns the current count value of a counting semaphore
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 109


1721:FreeRTOS/src/cmsis_os.c **** * @param  semaphore_id  semaphore_id ID obtained by \ref osSemaphoreCreate.
1722:FreeRTOS/src/cmsis_os.c **** * @retval  count value
1723:FreeRTOS/src/cmsis_os.c **** */
1724:FreeRTOS/src/cmsis_os.c **** uint32_t osSemaphoreGetCount(osSemaphoreId semaphore_id)
1725:FreeRTOS/src/cmsis_os.c **** {
 3927              		.loc 1 1725 1 is_stmt 1 view -0
 3928              		.cfi_startproc
 3929              		@ args = 0, pretend = 0, frame = 0
 3930              		@ frame_needed = 0, uses_anonymous_args = 0
 3931              		.loc 1 1725 1 is_stmt 0 view .LVU949
 3932 0000 08B5     		push	{r3, lr}
 3933              	.LCFI101:
 3934              		.cfi_def_cfa_offset 8
 3935              		.cfi_offset 3, -8
 3936              		.cfi_offset 14, -4
1726:FreeRTOS/src/cmsis_os.c ****   return uxSemaphoreGetCount(semaphore_id);
 3937              		.loc 1 1726 3 is_stmt 1 view .LVU950
 3938              		.loc 1 1726 10 is_stmt 0 view .LVU951
 3939 0002 FFF7FEFF 		bl	uxQueueMessagesWaiting
 3940              	.LVL300:
1727:FreeRTOS/src/cmsis_os.c **** }
 3941              		.loc 1 1727 1 view .LVU952
 3942 0006 08BD     		pop	{r3, pc}
 3943              		.cfi_endproc
 3944              	.LFE103:
 3946              		.section	.rodata.osTimerCreate.str1.4,"aMS",%progbits,1
 3947              		.align	2
 3948              	.LC0:
 3949 0000 00       		.ascii	"\000"
 3950              		.text
 3951              	.Letext0:
 3952              		.file 4 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\lock.h"
 3953              		.file 5 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\_types.h"
 3954              		.file 6 "c:\\software\\embeddedgcc\\arm_gcc\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 3955              		.file 7 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\reent.h"
 3956              		.file 8 "FreeRTOS/inc/stdint.h"
 3957              		.file 9 "FreeRTOS/inc/projdefs.h"
 3958              		.file 10 "FreeRTOS/inc/task.h"
 3959              		.file 11 "FreeRTOS/inc/timers.h"
 3960              		.file 12 "FreeRTOS/inc/queue.h"
 3961              		.file 13 "FreeRTOS/inc/semphr.h"
 3962              		.file 14 "FreeRTOS/inc/cmsis_os.h"
 3963              		.file 15 "FreeRTOS/inc/portable.h"
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 110


DEFINED SYMBOLS
                            *ABS*:0000000000000000 cmsis_os.c
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:16     .text.makeFreeRtosPriority:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:23     .text.makeFreeRtosPriority:0000000000000000 makeFreeRtosPriority
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:55     .text.makeCmsisPriority:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:61     .text.makeCmsisPriority:0000000000000000 makeCmsisPriority
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:95     .text.inHandlerMode:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:101    .text.inHandlerMode:0000000000000000 inHandlerMode
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:136    .text.osKernelStart:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:143    .text.osKernelStart:0000000000000000 osKernelStart
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:165    .text.osKernelRunning:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:172    .text.osKernelRunning:0000000000000000 osKernelRunning
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:203    .text.osKernelSysTick:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:210    .text.osKernelSysTick:0000000000000000 osKernelSysTick
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:244    .text.osThreadCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:251    .text.osThreadCreate:0000000000000000 osThreadCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:320    .text.osThreadGetId:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:327    .text.osThreadGetId:0000000000000000 osThreadGetId
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:348    .text.osThreadTerminate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:355    .text.osThreadTerminate:0000000000000000 osThreadTerminate
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:373    .text.osThreadYield:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:380    .text.osThreadYield:0000000000000000 osThreadYield
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:410    .text.osThreadYield:0000000000000014 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:415    .text.osThreadSetPriority:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:422    .text.osThreadSetPriority:0000000000000000 osThreadSetPriority
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:456    .text.osThreadGetPriority:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:463    .text.osThreadGetPriority:0000000000000000 osThreadGetPriority
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:507    .text.osDelay:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:514    .text.osDelay:0000000000000000 osDelay
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:548    .text.osTimerCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:555    .text.osTimerCreate:0000000000000000 osTimerCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:608    .text.osTimerCreate:0000000000000024 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:613    .text.osTimerStart:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:620    .text.osTimerStart:0000000000000000 osTimerStart
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:740    .text.osTimerStart:0000000000000068 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:745    .text.osTimerStop:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:752    .text.osTimerStop:0000000000000000 osTimerStop
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:855    .text.osTimerStop:0000000000000060 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:860    .text.osTimerDelete:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:867    .text.osTimerDelete:0000000000000000 osTimerDelete
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:927    .text.osSignalSet:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:934    .text.osSignalSet:0000000000000000 osSignalSet
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1036   .text.osSignalSet:0000000000000060 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1041   .text.osSignalWait:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1048   .text.osSignalWait:0000000000000000 osSignalWait
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1167   .text.osMutexCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1174   .text.osMutexCreate:0000000000000000 osMutexCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1200   .text.osMutexWait:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1207   .text.osMutexWait:0000000000000000 osMutexWait
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1334   .text.osMutexWait:000000000000006c $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1339   .text.osMutexRelease:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1346   .text.osMutexRelease:0000000000000000 osMutexRelease
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1445   .text.osMutexRelease:0000000000000058 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1450   .text.osMutexDelete:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1457   .text.osMutexDelete:0000000000000000 osMutexDelete
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1496   .text.osSemaphoreCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1503   .text.osSemaphoreCreate:0000000000000000 osSemaphoreCreate
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 111


C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1558   .text.osSemaphoreWait:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1565   .text.osSemaphoreWait:0000000000000000 osSemaphoreWait
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1692   .text.osSemaphoreWait:000000000000006c $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1697   .text.osSemaphoreRelease:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1704   .text.osSemaphoreRelease:0000000000000000 osSemaphoreRelease
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1803   .text.osSemaphoreRelease:0000000000000058 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1808   .text.osSemaphoreDelete:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1815   .text.osSemaphoreDelete:0000000000000000 osSemaphoreDelete
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1854   .text.osPoolCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1861   .text.osPoolCreate:0000000000000000 osPoolCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1988   .text.osPoolAlloc:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:1995   .text.osPoolAlloc:0000000000000000 osPoolAlloc
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2151   .text.osPoolCAlloc:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2158   .text.osPoolCAlloc:0000000000000000 osPoolCAlloc
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2194   .text.osPoolFree:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2201   .text.osPoolFree:0000000000000000 osPoolFree
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2291   .text.osMessageCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2298   .text.osMessageCreate:0000000000000000 osMessageCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2329   .text.osMessagePut:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2336   .text.osMessagePut:0000000000000000 osMessagePut
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2448   .text.osMessagePut:0000000000000064 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2453   .text.osMessageGet:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2460   .text.osMessageGet:0000000000000000 osMessageGet
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2626   .text.osMessageGet:0000000000000098 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2631   .text.osMailCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2638   .text.osMailCreate:0000000000000000 osMailCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2763   .text.osMailAlloc:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2770   .text.osMailAlloc:0000000000000000 osMailAlloc
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2813   .text.osMailCAlloc:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2820   .text.osMailCAlloc:0000000000000000 osMailCAlloc
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2875   .text.osMailPut:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2882   .text.osMailPut:0000000000000000 osMailPut
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2994   .text.osMailPut:0000000000000064 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:2999   .text.osMailGet:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3006   .text.osMailGet:0000000000000000 osMailGet
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3168   .text.osMailGet:0000000000000094 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3173   .text.osMailFree:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3180   .text.osMailFree:0000000000000000 osMailFree
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3220   .text.osSystickHandler:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3227   .text.osSystickHandler:0000000000000000 osSystickHandler
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3258   .text.osThreadSuspend:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3265   .text.osThreadSuspend:0000000000000000 osThreadSuspend
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3289   .text.osThreadResume:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3296   .text.osThreadResume:0000000000000000 osThreadResume
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3356   .text.osThreadResume:0000000000000030 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3361   .text.osThreadSuspendAll:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3368   .text.osThreadSuspendAll:0000000000000000 osThreadSuspendAll
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3390   .text.osThreadResumeAll:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3397   .text.osThreadResumeAll:0000000000000000 osThreadResumeAll
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3428   .text.osDelayUntil:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3435   .text.osDelayUntil:0000000000000000 osDelayUntil
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3469   .text.osAbortDelay:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3476   .text.osAbortDelay:0000000000000000 osAbortDelay
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3495   .text.osThreadList:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3502   .text.osThreadList:0000000000000000 osThreadList
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3520   .text.osMessagePeek:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3527   .text.osMessagePeek:0000000000000000 osMessagePeek
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 112


C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3637   .text.osMessageWaiting:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3644   .text.osMessageWaiting:0000000000000000 osMessageWaiting
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3684   .text.osMessageAvailableSpace:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3691   .text.osMessageAvailableSpace:0000000000000000 osMessageAvailableSpace
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3714   .text.osMessageDelete:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3721   .text.osMessageDelete:0000000000000000 osMessageDelete
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3760   .text.osRecursiveMutexCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3767   .text.osRecursiveMutexCreate:0000000000000000 osRecursiveMutexCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3793   .text.osRecursiveMutexRelease:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3800   .text.osRecursiveMutexRelease:0000000000000000 osRecursiveMutexRelease
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3838   .text.osRecursiveMutexWait:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3845   .text.osRecursiveMutexWait:0000000000000000 osRecursiveMutexWait
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3917   .text.osSemaphoreGetCount:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3924   .text.osSemaphoreGetCount:0000000000000000 osSemaphoreGetCount
C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s:3947   .rodata.osTimerCreate.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
vTaskStartScheduler
xTaskGetSchedulerState
xTaskGetTickCountFromISR
xTaskGetTickCount
xTaskCreate
xTaskGetCurrentTaskHandle
vTaskPrioritySet
uxTaskPriorityGetFromISR
uxTaskPriorityGet
vTaskDelay
xTimerCreate
xTimerGenericCommand
xTaskGenericNotifyFromISR
xTaskGenericNotify
xTaskNotifyWait
xQueueCreateMutex
xQueueReceiveFromISR
xQueueSemaphoreTake
xQueueGiveFromISR
xQueueGenericSend
vQueueDelete
xQueueCreateCountingSemaphore
xQueueGenericCreate
pvPortMalloc
vPortFree
vPortEnterCritical
vPortExitCritical
xQueueGenericSendFromISR
xQueueReceive
SysTick_Handler
vTaskSuspend
xTaskResumeFromISR
vTaskResume
vTaskSuspendAll
xTaskResumeAll
vTaskDelayUntil
xQueuePeek
uxQueueMessagesWaitingFromISR
uxQueueMessagesWaiting
uxQueueSpacesAvailable
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccWlHYeB.s 			page 113


xQueueGiveMutexRecursive
xQueueTakeMutexRecursive
