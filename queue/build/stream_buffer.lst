ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stream_buffer.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvBytesInBuffer,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	prvBytesInBuffer:
  24              	.LVL0:
  25              	.LFB23:
  26              		.file 1 "FreeRTOS/src/stream_buffer.c"
   1:FreeRTOS/src/stream_buffer.c **** /*
   2:FreeRTOS/src/stream_buffer.c ****  * FreeRTOS Kernel V10.3.1
   3:FreeRTOS/src/stream_buffer.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:FreeRTOS/src/stream_buffer.c ****  *
   5:FreeRTOS/src/stream_buffer.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:FreeRTOS/src/stream_buffer.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:FreeRTOS/src/stream_buffer.c ****  * the Software without restriction, including without limitation the rights to
   8:FreeRTOS/src/stream_buffer.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:FreeRTOS/src/stream_buffer.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:FreeRTOS/src/stream_buffer.c ****  * subject to the following conditions:
  11:FreeRTOS/src/stream_buffer.c ****  *
  12:FreeRTOS/src/stream_buffer.c ****  * The above copyright notice and this permission notice shall be included in all
  13:FreeRTOS/src/stream_buffer.c ****  * copies or substantial portions of the Software.
  14:FreeRTOS/src/stream_buffer.c ****  *
  15:FreeRTOS/src/stream_buffer.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:FreeRTOS/src/stream_buffer.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:FreeRTOS/src/stream_buffer.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:FreeRTOS/src/stream_buffer.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:FreeRTOS/src/stream_buffer.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:FreeRTOS/src/stream_buffer.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:FreeRTOS/src/stream_buffer.c ****  *
  22:FreeRTOS/src/stream_buffer.c ****  * http://www.FreeRTOS.org
  23:FreeRTOS/src/stream_buffer.c ****  * http://aws.amazon.com/freertos
  24:FreeRTOS/src/stream_buffer.c ****  *
  25:FreeRTOS/src/stream_buffer.c ****  * 1 tab == 4 spaces!
  26:FreeRTOS/src/stream_buffer.c ****  */
  27:FreeRTOS/src/stream_buffer.c **** 
  28:FreeRTOS/src/stream_buffer.c **** /* Standard includes. */
  29:FreeRTOS/src/stream_buffer.c **** #include <stdint.h>
  30:FreeRTOS/src/stream_buffer.c **** #include <string.h>
  31:FreeRTOS/src/stream_buffer.c **** 
  32:FreeRTOS/src/stream_buffer.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 2


  33:FreeRTOS/src/stream_buffer.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:FreeRTOS/src/stream_buffer.c **** task.h is included from an application file. */
  35:FreeRTOS/src/stream_buffer.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:FreeRTOS/src/stream_buffer.c **** 
  37:FreeRTOS/src/stream_buffer.c **** /* FreeRTOS includes. */
  38:FreeRTOS/src/stream_buffer.c **** #include "FreeRTOS.h"
  39:FreeRTOS/src/stream_buffer.c **** #include "task.h"
  40:FreeRTOS/src/stream_buffer.c **** #include "stream_buffer.h"
  41:FreeRTOS/src/stream_buffer.c **** 
  42:FreeRTOS/src/stream_buffer.c **** #if( configUSE_TASK_NOTIFICATIONS != 1 )
  43:FreeRTOS/src/stream_buffer.c **** 	#error configUSE_TASK_NOTIFICATIONS must be set to 1 to build stream_buffer.c
  44:FreeRTOS/src/stream_buffer.c **** #endif
  45:FreeRTOS/src/stream_buffer.c **** 
  46:FreeRTOS/src/stream_buffer.c **** /* Lint e961, e9021 and e750 are suppressed as a MISRA exception justified
  47:FreeRTOS/src/stream_buffer.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  48:FreeRTOS/src/stream_buffer.c **** for the header files above, but not in this file, in order to generate the
  49:FreeRTOS/src/stream_buffer.c **** correct privileged Vs unprivileged linkage and placement. */
  50:FreeRTOS/src/stream_buffer.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  51:FreeRTOS/src/stream_buffer.c **** 
  52:FreeRTOS/src/stream_buffer.c **** /* If the user has not provided application specific Rx notification macros,
  53:FreeRTOS/src/stream_buffer.c **** or #defined the notification macros away, them provide default implementations
  54:FreeRTOS/src/stream_buffer.c **** that uses task notifications. */
  55:FreeRTOS/src/stream_buffer.c **** /*lint -save -e9026 Function like macros allowed and needed here so they can be overidden. */
  56:FreeRTOS/src/stream_buffer.c **** #ifndef sbRECEIVE_COMPLETED
  57:FreeRTOS/src/stream_buffer.c **** 	#define sbRECEIVE_COMPLETED( pxStreamBuffer )										\
  58:FreeRTOS/src/stream_buffer.c **** 		vTaskSuspendAll();																\
  59:FreeRTOS/src/stream_buffer.c **** 		{																				\
  60:FreeRTOS/src/stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )						\
  61:FreeRTOS/src/stream_buffer.c **** 			{																			\
  62:FreeRTOS/src/stream_buffer.c **** 				( void ) xTaskNotify( ( pxStreamBuffer )->xTaskWaitingToSend,			\
  63:FreeRTOS/src/stream_buffer.c **** 									  ( uint32_t ) 0,									\
  64:FreeRTOS/src/stream_buffer.c **** 									  eNoAction );										\
  65:FreeRTOS/src/stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToSend = NULL;							\
  66:FreeRTOS/src/stream_buffer.c **** 			}																			\
  67:FreeRTOS/src/stream_buffer.c **** 		}																				\
  68:FreeRTOS/src/stream_buffer.c **** 		( void ) xTaskResumeAll();
  69:FreeRTOS/src/stream_buffer.c **** #endif /* sbRECEIVE_COMPLETED */
  70:FreeRTOS/src/stream_buffer.c **** 
  71:FreeRTOS/src/stream_buffer.c **** #ifndef sbRECEIVE_COMPLETED_FROM_ISR
  72:FreeRTOS/src/stream_buffer.c **** 	#define sbRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer,								\
  73:FreeRTOS/src/stream_buffer.c **** 										  pxHigherPriorityTaskWoken )					\
  74:FreeRTOS/src/stream_buffer.c **** 	{																					\
  75:FreeRTOS/src/stream_buffer.c **** 	UBaseType_t uxSavedInterruptStatus;													\
  76:FreeRTOS/src/stream_buffer.c **** 																						\
  77:FreeRTOS/src/stream_buffer.c **** 		uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();		\
  78:FreeRTOS/src/stream_buffer.c **** 		{																				\
  79:FreeRTOS/src/stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )						\
  80:FreeRTOS/src/stream_buffer.c **** 			{																			\
  81:FreeRTOS/src/stream_buffer.c **** 				( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend,	\
  82:FreeRTOS/src/stream_buffer.c **** 											 ( uint32_t ) 0,							\
  83:FreeRTOS/src/stream_buffer.c **** 											 eNoAction,									\
  84:FreeRTOS/src/stream_buffer.c **** 											 pxHigherPriorityTaskWoken );				\
  85:FreeRTOS/src/stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToSend = NULL;							\
  86:FreeRTOS/src/stream_buffer.c **** 			}																			\
  87:FreeRTOS/src/stream_buffer.c **** 		}																				\
  88:FreeRTOS/src/stream_buffer.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );					\
  89:FreeRTOS/src/stream_buffer.c **** 	}
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 3


  90:FreeRTOS/src/stream_buffer.c **** #endif /* sbRECEIVE_COMPLETED_FROM_ISR */
  91:FreeRTOS/src/stream_buffer.c **** 
  92:FreeRTOS/src/stream_buffer.c **** /* If the user has not provided an application specific Tx notification macro,
  93:FreeRTOS/src/stream_buffer.c **** or #defined the notification macro away, them provide a default implementation
  94:FreeRTOS/src/stream_buffer.c **** that uses task notifications. */
  95:FreeRTOS/src/stream_buffer.c **** #ifndef sbSEND_COMPLETED
  96:FreeRTOS/src/stream_buffer.c **** 	#define sbSEND_COMPLETED( pxStreamBuffer )											\
  97:FreeRTOS/src/stream_buffer.c **** 		vTaskSuspendAll();																\
  98:FreeRTOS/src/stream_buffer.c **** 		{																				\
  99:FreeRTOS/src/stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )						\
 100:FreeRTOS/src/stream_buffer.c **** 			{																			\
 101:FreeRTOS/src/stream_buffer.c **** 				( void ) xTaskNotify( ( pxStreamBuffer )->xTaskWaitingToReceive,		\
 102:FreeRTOS/src/stream_buffer.c **** 									  ( uint32_t ) 0,									\
 103:FreeRTOS/src/stream_buffer.c **** 									  eNoAction );										\
 104:FreeRTOS/src/stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToReceive = NULL;						\
 105:FreeRTOS/src/stream_buffer.c **** 			}																			\
 106:FreeRTOS/src/stream_buffer.c **** 		}																				\
 107:FreeRTOS/src/stream_buffer.c **** 		( void ) xTaskResumeAll();
 108:FreeRTOS/src/stream_buffer.c **** #endif /* sbSEND_COMPLETED */
 109:FreeRTOS/src/stream_buffer.c **** 
 110:FreeRTOS/src/stream_buffer.c **** #ifndef sbSEND_COMPLETE_FROM_ISR
 111:FreeRTOS/src/stream_buffer.c **** 	#define sbSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken )		\
 112:FreeRTOS/src/stream_buffer.c **** 	{																					\
 113:FreeRTOS/src/stream_buffer.c **** 	UBaseType_t uxSavedInterruptStatus;													\
 114:FreeRTOS/src/stream_buffer.c **** 																						\
 115:FreeRTOS/src/stream_buffer.c **** 		uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();		\
 116:FreeRTOS/src/stream_buffer.c **** 		{																				\
 117:FreeRTOS/src/stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )						\
 118:FreeRTOS/src/stream_buffer.c **** 			{																			\
 119:FreeRTOS/src/stream_buffer.c **** 				( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive,	\
 120:FreeRTOS/src/stream_buffer.c **** 											 ( uint32_t ) 0,							\
 121:FreeRTOS/src/stream_buffer.c **** 											 eNoAction,									\
 122:FreeRTOS/src/stream_buffer.c **** 											 pxHigherPriorityTaskWoken );				\
 123:FreeRTOS/src/stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToReceive = NULL;						\
 124:FreeRTOS/src/stream_buffer.c **** 			}																			\
 125:FreeRTOS/src/stream_buffer.c **** 		}																				\
 126:FreeRTOS/src/stream_buffer.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );					\
 127:FreeRTOS/src/stream_buffer.c **** 	}
 128:FreeRTOS/src/stream_buffer.c **** #endif /* sbSEND_COMPLETE_FROM_ISR */
 129:FreeRTOS/src/stream_buffer.c **** /*lint -restore (9026) */
 130:FreeRTOS/src/stream_buffer.c **** 
 131:FreeRTOS/src/stream_buffer.c **** /* The number of bytes used to hold the length of a message in the buffer. */
 132:FreeRTOS/src/stream_buffer.c **** #define sbBYTES_TO_STORE_MESSAGE_LENGTH ( sizeof( configMESSAGE_BUFFER_LENGTH_TYPE ) )
 133:FreeRTOS/src/stream_buffer.c **** 
 134:FreeRTOS/src/stream_buffer.c **** /* Bits stored in the ucFlags field of the stream buffer. */
 135:FreeRTOS/src/stream_buffer.c **** #define sbFLAGS_IS_MESSAGE_BUFFER		( ( uint8_t ) 1 ) /* Set if the stream buffer was created as a m
 136:FreeRTOS/src/stream_buffer.c **** #define sbFLAGS_IS_STATICALLY_ALLOCATED ( ( uint8_t ) 2 ) /* Set if the stream buffer was created u
 137:FreeRTOS/src/stream_buffer.c **** 
 138:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 139:FreeRTOS/src/stream_buffer.c **** 
 140:FreeRTOS/src/stream_buffer.c **** /* Structure that hold state information on the buffer. */
 141:FreeRTOS/src/stream_buffer.c **** typedef struct StreamBufferDef_t /*lint !e9058 Style convention uses tag. */
 142:FreeRTOS/src/stream_buffer.c **** {
 143:FreeRTOS/src/stream_buffer.c **** 	volatile size_t xTail;				/* Index to the next item to read within the buffer. */
 144:FreeRTOS/src/stream_buffer.c **** 	volatile size_t xHead;				/* Index to the next item to write within the buffer. */
 145:FreeRTOS/src/stream_buffer.c **** 	size_t xLength;						/* The length of the buffer pointed to by pucBuffer. */
 146:FreeRTOS/src/stream_buffer.c **** 	size_t xTriggerLevelBytes;			/* The number of bytes that must be in the stream buffer before a tas
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 4


 147:FreeRTOS/src/stream_buffer.c **** 	volatile TaskHandle_t xTaskWaitingToReceive; /* Holds the handle of a task waiting for data, or NU
 148:FreeRTOS/src/stream_buffer.c **** 	volatile TaskHandle_t xTaskWaitingToSend;	/* Holds the handle of a task waiting to send data to a 
 149:FreeRTOS/src/stream_buffer.c **** 	uint8_t *pucBuffer;					/* Points to the buffer itself - that is - the RAM that stores the data pa
 150:FreeRTOS/src/stream_buffer.c **** 	uint8_t ucFlags;
 151:FreeRTOS/src/stream_buffer.c **** 
 152:FreeRTOS/src/stream_buffer.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 153:FreeRTOS/src/stream_buffer.c **** 		UBaseType_t uxStreamBufferNumber;		/* Used for tracing purposes. */
 154:FreeRTOS/src/stream_buffer.c **** 	#endif
 155:FreeRTOS/src/stream_buffer.c **** } StreamBuffer_t;
 156:FreeRTOS/src/stream_buffer.c **** 
 157:FreeRTOS/src/stream_buffer.c **** /*
 158:FreeRTOS/src/stream_buffer.c ****  * The number of bytes available to be read from the buffer.
 159:FreeRTOS/src/stream_buffer.c ****  */
 160:FreeRTOS/src/stream_buffer.c **** static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer ) PRIVILEGED_FUNCTION;
 161:FreeRTOS/src/stream_buffer.c **** 
 162:FreeRTOS/src/stream_buffer.c **** /*
 163:FreeRTOS/src/stream_buffer.c ****  * Add xCount bytes from pucData into the pxStreamBuffer message buffer.
 164:FreeRTOS/src/stream_buffer.c ****  * Returns the number of bytes written, which will either equal xCount in the
 165:FreeRTOS/src/stream_buffer.c ****  * success case, or 0 if there was not enough space in the buffer (in which case
 166:FreeRTOS/src/stream_buffer.c ****  * no data is written into the buffer).
 167:FreeRTOS/src/stream_buffer.c ****  */
 168:FreeRTOS/src/stream_buffer.c **** static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer, const uint8_t *pucData,
 169:FreeRTOS/src/stream_buffer.c **** 
 170:FreeRTOS/src/stream_buffer.c **** /*
 171:FreeRTOS/src/stream_buffer.c ****  * If the stream buffer is being used as a message buffer, then reads an entire
 172:FreeRTOS/src/stream_buffer.c ****  * message out of the buffer.  If the stream buffer is being used as a stream
 173:FreeRTOS/src/stream_buffer.c ****  * buffer then read as many bytes as possible from the buffer.
 174:FreeRTOS/src/stream_buffer.c ****  * prvReadBytesFromBuffer() is called to actually extract the bytes from the
 175:FreeRTOS/src/stream_buffer.c ****  * buffer's data storage area.
 176:FreeRTOS/src/stream_buffer.c ****  */
 177:FreeRTOS/src/stream_buffer.c **** static size_t prvReadMessageFromBuffer( StreamBuffer_t *pxStreamBuffer,
 178:FreeRTOS/src/stream_buffer.c **** 										void *pvRxData,
 179:FreeRTOS/src/stream_buffer.c **** 										size_t xBufferLengthBytes,
 180:FreeRTOS/src/stream_buffer.c **** 										size_t xBytesAvailable,
 181:FreeRTOS/src/stream_buffer.c **** 										size_t xBytesToStoreMessageLength ) PRIVILEGED_FUNCTION;
 182:FreeRTOS/src/stream_buffer.c **** 
 183:FreeRTOS/src/stream_buffer.c **** /*
 184:FreeRTOS/src/stream_buffer.c ****  * If the stream buffer is being used as a message buffer, then writes an entire
 185:FreeRTOS/src/stream_buffer.c ****  * message to the buffer.  If the stream buffer is being used as a stream
 186:FreeRTOS/src/stream_buffer.c ****  * buffer then write as many bytes as possible to the buffer.
 187:FreeRTOS/src/stream_buffer.c ****  * prvWriteBytestoBuffer() is called to actually send the bytes to the buffer's
 188:FreeRTOS/src/stream_buffer.c ****  * data storage area.
 189:FreeRTOS/src/stream_buffer.c ****  */
 190:FreeRTOS/src/stream_buffer.c **** static size_t prvWriteMessageToBuffer(  StreamBuffer_t * const pxStreamBuffer,
 191:FreeRTOS/src/stream_buffer.c **** 										const void * pvTxData,
 192:FreeRTOS/src/stream_buffer.c **** 										size_t xDataLengthBytes,
 193:FreeRTOS/src/stream_buffer.c **** 										size_t xSpace,
 194:FreeRTOS/src/stream_buffer.c **** 										size_t xRequiredSpace ) PRIVILEGED_FUNCTION;
 195:FreeRTOS/src/stream_buffer.c **** 
 196:FreeRTOS/src/stream_buffer.c **** /*
 197:FreeRTOS/src/stream_buffer.c ****  * Read xMaxCount bytes from the pxStreamBuffer message buffer and write them
 198:FreeRTOS/src/stream_buffer.c ****  * to pucData.
 199:FreeRTOS/src/stream_buffer.c ****  */
 200:FreeRTOS/src/stream_buffer.c **** static size_t prvReadBytesFromBuffer( StreamBuffer_t *pxStreamBuffer,
 201:FreeRTOS/src/stream_buffer.c **** 									  uint8_t *pucData,
 202:FreeRTOS/src/stream_buffer.c **** 									  size_t xMaxCount,
 203:FreeRTOS/src/stream_buffer.c **** 									  size_t xBytesAvailable ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 5


 204:FreeRTOS/src/stream_buffer.c **** 
 205:FreeRTOS/src/stream_buffer.c **** /*
 206:FreeRTOS/src/stream_buffer.c ****  * Called by both pxStreamBufferCreate() and pxStreamBufferCreateStatic() to
 207:FreeRTOS/src/stream_buffer.c ****  * initialise the members of the newly created stream buffer structure.
 208:FreeRTOS/src/stream_buffer.c ****  */
 209:FreeRTOS/src/stream_buffer.c **** static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,
 210:FreeRTOS/src/stream_buffer.c **** 										  uint8_t * const pucBuffer,
 211:FreeRTOS/src/stream_buffer.c **** 										  size_t xBufferSizeBytes,
 212:FreeRTOS/src/stream_buffer.c **** 										  size_t xTriggerLevelBytes,
 213:FreeRTOS/src/stream_buffer.c **** 										  uint8_t ucFlags ) PRIVILEGED_FUNCTION;
 214:FreeRTOS/src/stream_buffer.c **** 
 215:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 216:FreeRTOS/src/stream_buffer.c **** 
 217:FreeRTOS/src/stream_buffer.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 218:FreeRTOS/src/stream_buffer.c **** 
 219:FreeRTOS/src/stream_buffer.c **** 	StreamBufferHandle_t xStreamBufferGenericCreate( size_t xBufferSizeBytes, size_t xTriggerLevelByte
 220:FreeRTOS/src/stream_buffer.c **** 	{
 221:FreeRTOS/src/stream_buffer.c **** 	uint8_t *pucAllocatedMemory;
 222:FreeRTOS/src/stream_buffer.c **** 	uint8_t ucFlags;
 223:FreeRTOS/src/stream_buffer.c **** 
 224:FreeRTOS/src/stream_buffer.c **** 		/* In case the stream buffer is going to be used as a message buffer
 225:FreeRTOS/src/stream_buffer.c **** 		(that is, it will hold discrete messages with a little meta data that
 226:FreeRTOS/src/stream_buffer.c **** 		says how big the next message is) check the buffer will be large enough
 227:FreeRTOS/src/stream_buffer.c **** 		to hold at least one message. */
 228:FreeRTOS/src/stream_buffer.c **** 		if( xIsMessageBuffer == pdTRUE )
 229:FreeRTOS/src/stream_buffer.c **** 		{
 230:FreeRTOS/src/stream_buffer.c **** 			/* Is a message buffer but not statically allocated. */
 231:FreeRTOS/src/stream_buffer.c **** 			ucFlags = sbFLAGS_IS_MESSAGE_BUFFER;
 232:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 233:FreeRTOS/src/stream_buffer.c **** 		}
 234:FreeRTOS/src/stream_buffer.c **** 		else
 235:FreeRTOS/src/stream_buffer.c **** 		{
 236:FreeRTOS/src/stream_buffer.c **** 			/* Not a message buffer and not statically allocated. */
 237:FreeRTOS/src/stream_buffer.c **** 			ucFlags = 0;
 238:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xBufferSizeBytes > 0 );
 239:FreeRTOS/src/stream_buffer.c **** 		}
 240:FreeRTOS/src/stream_buffer.c **** 		configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 241:FreeRTOS/src/stream_buffer.c **** 
 242:FreeRTOS/src/stream_buffer.c **** 		/* A trigger level of 0 would cause a waiting task to unblock even when
 243:FreeRTOS/src/stream_buffer.c **** 		the buffer was empty. */
 244:FreeRTOS/src/stream_buffer.c **** 		if( xTriggerLevelBytes == ( size_t ) 0 )
 245:FreeRTOS/src/stream_buffer.c **** 		{
 246:FreeRTOS/src/stream_buffer.c **** 			xTriggerLevelBytes = ( size_t ) 1;
 247:FreeRTOS/src/stream_buffer.c **** 		}
 248:FreeRTOS/src/stream_buffer.c **** 
 249:FreeRTOS/src/stream_buffer.c **** 		/* A stream buffer requires a StreamBuffer_t structure and a buffer.
 250:FreeRTOS/src/stream_buffer.c **** 		Both are allocated in a single call to pvPortMalloc().  The
 251:FreeRTOS/src/stream_buffer.c **** 		StreamBuffer_t structure is placed at the start of the allocated memory
 252:FreeRTOS/src/stream_buffer.c **** 		and the buffer follows immediately after.  The requested size is
 253:FreeRTOS/src/stream_buffer.c **** 		incremented so the free space is returned as the user would expect -
 254:FreeRTOS/src/stream_buffer.c **** 		this is a quirk of the implementation that means otherwise the free
 255:FreeRTOS/src/stream_buffer.c **** 		space would be reported as one byte smaller than would be logically
 256:FreeRTOS/src/stream_buffer.c **** 		expected. */
 257:FreeRTOS/src/stream_buffer.c **** 		xBufferSizeBytes++;
 258:FreeRTOS/src/stream_buffer.c **** 		pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffer_t ) ); /
 259:FreeRTOS/src/stream_buffer.c **** 
 260:FreeRTOS/src/stream_buffer.c **** 		if( pucAllocatedMemory != NULL )
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 6


 261:FreeRTOS/src/stream_buffer.c **** 		{
 262:FreeRTOS/src/stream_buffer.c **** 			prvInitialiseNewStreamBuffer( ( StreamBuffer_t * ) pucAllocatedMemory, /* Structure at the start
 263:FreeRTOS/src/stream_buffer.c **** 										   pucAllocatedMemory + sizeof( StreamBuffer_t ),  /* Storage area follows. */ /*lint !e9
 264:FreeRTOS/src/stream_buffer.c **** 										   xBufferSizeBytes,
 265:FreeRTOS/src/stream_buffer.c **** 										   xTriggerLevelBytes,
 266:FreeRTOS/src/stream_buffer.c **** 										   ucFlags );
 267:FreeRTOS/src/stream_buffer.c **** 
 268:FreeRTOS/src/stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE( ( ( StreamBuffer_t * ) pucAllocatedMemory ), xIsMessageBuffer );
 269:FreeRTOS/src/stream_buffer.c **** 		}
 270:FreeRTOS/src/stream_buffer.c **** 		else
 271:FreeRTOS/src/stream_buffer.c **** 		{
 272:FreeRTOS/src/stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE_FAILED( xIsMessageBuffer );
 273:FreeRTOS/src/stream_buffer.c **** 		}
 274:FreeRTOS/src/stream_buffer.c **** 
 275:FreeRTOS/src/stream_buffer.c **** 		return ( StreamBufferHandle_t ) pucAllocatedMemory; /*lint !e9087 !e826 Safe cast as allocated me
 276:FreeRTOS/src/stream_buffer.c **** 	}
 277:FreeRTOS/src/stream_buffer.c **** 
 278:FreeRTOS/src/stream_buffer.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 279:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 280:FreeRTOS/src/stream_buffer.c **** 
 281:FreeRTOS/src/stream_buffer.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 282:FreeRTOS/src/stream_buffer.c **** 
 283:FreeRTOS/src/stream_buffer.c **** 	StreamBufferHandle_t xStreamBufferGenericCreateStatic( size_t xBufferSizeBytes,
 284:FreeRTOS/src/stream_buffer.c **** 														   size_t xTriggerLevelBytes,
 285:FreeRTOS/src/stream_buffer.c **** 														   BaseType_t xIsMessageBuffer,
 286:FreeRTOS/src/stream_buffer.c **** 														   uint8_t * const pucStreamBufferStorageArea,
 287:FreeRTOS/src/stream_buffer.c **** 														   StaticStreamBuffer_t * const pxStaticStreamBuffer )
 288:FreeRTOS/src/stream_buffer.c **** 	{
 289:FreeRTOS/src/stream_buffer.c **** 	StreamBuffer_t * const pxStreamBuffer = ( StreamBuffer_t * ) pxStaticStreamBuffer; /*lint !e740 !e
 290:FreeRTOS/src/stream_buffer.c **** 	StreamBufferHandle_t xReturn;
 291:FreeRTOS/src/stream_buffer.c **** 	uint8_t ucFlags;
 292:FreeRTOS/src/stream_buffer.c **** 
 293:FreeRTOS/src/stream_buffer.c **** 		configASSERT( pucStreamBufferStorageArea );
 294:FreeRTOS/src/stream_buffer.c **** 		configASSERT( pxStaticStreamBuffer );
 295:FreeRTOS/src/stream_buffer.c **** 		configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 296:FreeRTOS/src/stream_buffer.c **** 
 297:FreeRTOS/src/stream_buffer.c **** 		/* A trigger level of 0 would cause a waiting task to unblock even when
 298:FreeRTOS/src/stream_buffer.c **** 		the buffer was empty. */
 299:FreeRTOS/src/stream_buffer.c **** 		if( xTriggerLevelBytes == ( size_t ) 0 )
 300:FreeRTOS/src/stream_buffer.c **** 		{
 301:FreeRTOS/src/stream_buffer.c **** 			xTriggerLevelBytes = ( size_t ) 1;
 302:FreeRTOS/src/stream_buffer.c **** 		}
 303:FreeRTOS/src/stream_buffer.c **** 
 304:FreeRTOS/src/stream_buffer.c **** 		if( xIsMessageBuffer != pdFALSE )
 305:FreeRTOS/src/stream_buffer.c **** 		{
 306:FreeRTOS/src/stream_buffer.c **** 			/* Statically allocated message buffer. */
 307:FreeRTOS/src/stream_buffer.c **** 			ucFlags = sbFLAGS_IS_MESSAGE_BUFFER | sbFLAGS_IS_STATICALLY_ALLOCATED;
 308:FreeRTOS/src/stream_buffer.c **** 		}
 309:FreeRTOS/src/stream_buffer.c **** 		else
 310:FreeRTOS/src/stream_buffer.c **** 		{
 311:FreeRTOS/src/stream_buffer.c **** 			/* Statically allocated stream buffer. */
 312:FreeRTOS/src/stream_buffer.c **** 			ucFlags = sbFLAGS_IS_STATICALLY_ALLOCATED;
 313:FreeRTOS/src/stream_buffer.c **** 		}
 314:FreeRTOS/src/stream_buffer.c **** 
 315:FreeRTOS/src/stream_buffer.c **** 		/* In case the stream buffer is going to be used as a message buffer
 316:FreeRTOS/src/stream_buffer.c **** 		(that is, it will hold discrete messages with a little meta data that
 317:FreeRTOS/src/stream_buffer.c **** 		says how big the next message is) check the buffer will be large enough
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 7


 318:FreeRTOS/src/stream_buffer.c **** 		to hold at least one message. */
 319:FreeRTOS/src/stream_buffer.c **** 		configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 320:FreeRTOS/src/stream_buffer.c **** 
 321:FreeRTOS/src/stream_buffer.c **** 		#if( configASSERT_DEFINED == 1 )
 322:FreeRTOS/src/stream_buffer.c **** 		{
 323:FreeRTOS/src/stream_buffer.c **** 			/* Sanity check that the size of the structure used to declare a
 324:FreeRTOS/src/stream_buffer.c **** 			variable of type StaticStreamBuffer_t equals the size of the real
 325:FreeRTOS/src/stream_buffer.c **** 			message buffer structure. */
 326:FreeRTOS/src/stream_buffer.c **** 			volatile size_t xSize = sizeof( StaticStreamBuffer_t );
 327:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xSize == sizeof( StreamBuffer_t ) );
 328:FreeRTOS/src/stream_buffer.c **** 		} /*lint !e529 xSize is referenced is configASSERT() is defined. */
 329:FreeRTOS/src/stream_buffer.c **** 		#endif /* configASSERT_DEFINED */
 330:FreeRTOS/src/stream_buffer.c **** 
 331:FreeRTOS/src/stream_buffer.c **** 		if( ( pucStreamBufferStorageArea != NULL ) && ( pxStaticStreamBuffer != NULL ) )
 332:FreeRTOS/src/stream_buffer.c **** 		{
 333:FreeRTOS/src/stream_buffer.c **** 			prvInitialiseNewStreamBuffer( pxStreamBuffer,
 334:FreeRTOS/src/stream_buffer.c **** 										  pucStreamBufferStorageArea,
 335:FreeRTOS/src/stream_buffer.c **** 										  xBufferSizeBytes,
 336:FreeRTOS/src/stream_buffer.c **** 										  xTriggerLevelBytes,
 337:FreeRTOS/src/stream_buffer.c **** 										  ucFlags );
 338:FreeRTOS/src/stream_buffer.c **** 
 339:FreeRTOS/src/stream_buffer.c **** 			/* Remember this was statically allocated in case it is ever deleted
 340:FreeRTOS/src/stream_buffer.c **** 			again. */
 341:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->ucFlags |= sbFLAGS_IS_STATICALLY_ALLOCATED;
 342:FreeRTOS/src/stream_buffer.c **** 
 343:FreeRTOS/src/stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE( pxStreamBuffer, xIsMessageBuffer );
 344:FreeRTOS/src/stream_buffer.c **** 
 345:FreeRTOS/src/stream_buffer.c **** 			xReturn = ( StreamBufferHandle_t ) pxStaticStreamBuffer; /*lint !e9087 Data hiding requires cast
 346:FreeRTOS/src/stream_buffer.c **** 		}
 347:FreeRTOS/src/stream_buffer.c **** 		else
 348:FreeRTOS/src/stream_buffer.c **** 		{
 349:FreeRTOS/src/stream_buffer.c **** 			xReturn = NULL;
 350:FreeRTOS/src/stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE_STATIC_FAILED( xReturn, xIsMessageBuffer );
 351:FreeRTOS/src/stream_buffer.c **** 		}
 352:FreeRTOS/src/stream_buffer.c **** 
 353:FreeRTOS/src/stream_buffer.c **** 		return xReturn;
 354:FreeRTOS/src/stream_buffer.c **** 	}
 355:FreeRTOS/src/stream_buffer.c **** 
 356:FreeRTOS/src/stream_buffer.c **** #endif /* ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 357:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 358:FreeRTOS/src/stream_buffer.c **** 
 359:FreeRTOS/src/stream_buffer.c **** void vStreamBufferDelete( StreamBufferHandle_t xStreamBuffer )
 360:FreeRTOS/src/stream_buffer.c **** {
 361:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 362:FreeRTOS/src/stream_buffer.c **** 
 363:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 364:FreeRTOS/src/stream_buffer.c **** 
 365:FreeRTOS/src/stream_buffer.c **** 	traceSTREAM_BUFFER_DELETE( xStreamBuffer );
 366:FreeRTOS/src/stream_buffer.c **** 
 367:FreeRTOS/src/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) pdFALSE )
 368:FreeRTOS/src/stream_buffer.c **** 	{
 369:FreeRTOS/src/stream_buffer.c **** 		#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 370:FreeRTOS/src/stream_buffer.c **** 		{
 371:FreeRTOS/src/stream_buffer.c **** 			/* Both the structure and the buffer were allocated using a single call
 372:FreeRTOS/src/stream_buffer.c **** 			to pvPortMalloc(), hence only one call to vPortFree() is required. */
 373:FreeRTOS/src/stream_buffer.c **** 			vPortFree( ( void * ) pxStreamBuffer ); /*lint !e9087 Standard free() semantics require void *, 
 374:FreeRTOS/src/stream_buffer.c **** 		}
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 8


 375:FreeRTOS/src/stream_buffer.c **** 		#else
 376:FreeRTOS/src/stream_buffer.c **** 		{
 377:FreeRTOS/src/stream_buffer.c **** 			/* Should not be possible to get here, ucFlags must be corrupt.
 378:FreeRTOS/src/stream_buffer.c **** 			Force an assert. */
 379:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xStreamBuffer == ( StreamBufferHandle_t ) ~0 );
 380:FreeRTOS/src/stream_buffer.c **** 		}
 381:FreeRTOS/src/stream_buffer.c **** 		#endif
 382:FreeRTOS/src/stream_buffer.c **** 	}
 383:FreeRTOS/src/stream_buffer.c **** 	else
 384:FreeRTOS/src/stream_buffer.c **** 	{
 385:FreeRTOS/src/stream_buffer.c **** 		/* The structure and buffer were not allocated dynamically and cannot be
 386:FreeRTOS/src/stream_buffer.c **** 		freed - just scrub the structure so future use will assert. */
 387:FreeRTOS/src/stream_buffer.c **** 		( void ) memset( pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) );
 388:FreeRTOS/src/stream_buffer.c **** 	}
 389:FreeRTOS/src/stream_buffer.c **** }
 390:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 391:FreeRTOS/src/stream_buffer.c **** 
 392:FreeRTOS/src/stream_buffer.c **** BaseType_t xStreamBufferReset( StreamBufferHandle_t xStreamBuffer )
 393:FreeRTOS/src/stream_buffer.c **** {
 394:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 395:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn = pdFAIL;
 396:FreeRTOS/src/stream_buffer.c **** 
 397:FreeRTOS/src/stream_buffer.c **** #if( configUSE_TRACE_FACILITY == 1 )
 398:FreeRTOS/src/stream_buffer.c **** 	UBaseType_t uxStreamBufferNumber;
 399:FreeRTOS/src/stream_buffer.c **** #endif
 400:FreeRTOS/src/stream_buffer.c **** 
 401:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 402:FreeRTOS/src/stream_buffer.c **** 
 403:FreeRTOS/src/stream_buffer.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
 404:FreeRTOS/src/stream_buffer.c **** 	{
 405:FreeRTOS/src/stream_buffer.c **** 		/* Store the stream buffer number so it can be restored after the
 406:FreeRTOS/src/stream_buffer.c **** 		reset. */
 407:FreeRTOS/src/stream_buffer.c **** 		uxStreamBufferNumber = pxStreamBuffer->uxStreamBufferNumber;
 408:FreeRTOS/src/stream_buffer.c **** 	}
 409:FreeRTOS/src/stream_buffer.c **** 	#endif
 410:FreeRTOS/src/stream_buffer.c **** 
 411:FreeRTOS/src/stream_buffer.c **** 	/* Can only reset a message buffer if there are no tasks blocked on it. */
 412:FreeRTOS/src/stream_buffer.c **** 	taskENTER_CRITICAL();
 413:FreeRTOS/src/stream_buffer.c **** 	{
 414:FreeRTOS/src/stream_buffer.c **** 		if( pxStreamBuffer->xTaskWaitingToReceive == NULL )
 415:FreeRTOS/src/stream_buffer.c **** 		{
 416:FreeRTOS/src/stream_buffer.c **** 			if( pxStreamBuffer->xTaskWaitingToSend == NULL )
 417:FreeRTOS/src/stream_buffer.c **** 			{
 418:FreeRTOS/src/stream_buffer.c **** 				prvInitialiseNewStreamBuffer( pxStreamBuffer,
 419:FreeRTOS/src/stream_buffer.c **** 											  pxStreamBuffer->pucBuffer,
 420:FreeRTOS/src/stream_buffer.c **** 											  pxStreamBuffer->xLength,
 421:FreeRTOS/src/stream_buffer.c **** 											  pxStreamBuffer->xTriggerLevelBytes,
 422:FreeRTOS/src/stream_buffer.c **** 											  pxStreamBuffer->ucFlags );
 423:FreeRTOS/src/stream_buffer.c **** 				xReturn = pdPASS;
 424:FreeRTOS/src/stream_buffer.c **** 
 425:FreeRTOS/src/stream_buffer.c **** 				#if( configUSE_TRACE_FACILITY == 1 )
 426:FreeRTOS/src/stream_buffer.c **** 				{
 427:FreeRTOS/src/stream_buffer.c **** 					pxStreamBuffer->uxStreamBufferNumber = uxStreamBufferNumber;
 428:FreeRTOS/src/stream_buffer.c **** 				}
 429:FreeRTOS/src/stream_buffer.c **** 				#endif
 430:FreeRTOS/src/stream_buffer.c **** 
 431:FreeRTOS/src/stream_buffer.c **** 				traceSTREAM_BUFFER_RESET( xStreamBuffer );
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 9


 432:FreeRTOS/src/stream_buffer.c **** 			}
 433:FreeRTOS/src/stream_buffer.c **** 		}
 434:FreeRTOS/src/stream_buffer.c **** 	}
 435:FreeRTOS/src/stream_buffer.c **** 	taskEXIT_CRITICAL();
 436:FreeRTOS/src/stream_buffer.c **** 
 437:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 438:FreeRTOS/src/stream_buffer.c **** }
 439:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 440:FreeRTOS/src/stream_buffer.c **** 
 441:FreeRTOS/src/stream_buffer.c **** BaseType_t xStreamBufferSetTriggerLevel( StreamBufferHandle_t xStreamBuffer, size_t xTriggerLevel )
 442:FreeRTOS/src/stream_buffer.c **** {
 443:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 444:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 445:FreeRTOS/src/stream_buffer.c **** 
 446:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 447:FreeRTOS/src/stream_buffer.c **** 
 448:FreeRTOS/src/stream_buffer.c **** 	/* It is not valid for the trigger level to be 0. */
 449:FreeRTOS/src/stream_buffer.c **** 	if( xTriggerLevel == ( size_t ) 0 )
 450:FreeRTOS/src/stream_buffer.c **** 	{
 451:FreeRTOS/src/stream_buffer.c **** 		xTriggerLevel = ( size_t ) 1;
 452:FreeRTOS/src/stream_buffer.c **** 	}
 453:FreeRTOS/src/stream_buffer.c **** 
 454:FreeRTOS/src/stream_buffer.c **** 	/* The trigger level is the number of bytes that must be in the stream
 455:FreeRTOS/src/stream_buffer.c **** 	buffer before a task that is waiting for data is unblocked. */
 456:FreeRTOS/src/stream_buffer.c **** 	if( xTriggerLevel <= pxStreamBuffer->xLength )
 457:FreeRTOS/src/stream_buffer.c **** 	{
 458:FreeRTOS/src/stream_buffer.c **** 		pxStreamBuffer->xTriggerLevelBytes = xTriggerLevel;
 459:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdPASS;
 460:FreeRTOS/src/stream_buffer.c **** 	}
 461:FreeRTOS/src/stream_buffer.c **** 	else
 462:FreeRTOS/src/stream_buffer.c **** 	{
 463:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdFALSE;
 464:FreeRTOS/src/stream_buffer.c **** 	}
 465:FreeRTOS/src/stream_buffer.c **** 
 466:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 467:FreeRTOS/src/stream_buffer.c **** }
 468:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 469:FreeRTOS/src/stream_buffer.c **** 
 470:FreeRTOS/src/stream_buffer.c **** size_t xStreamBufferSpacesAvailable( StreamBufferHandle_t xStreamBuffer )
 471:FreeRTOS/src/stream_buffer.c **** {
 472:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 473:FreeRTOS/src/stream_buffer.c **** size_t xSpace;
 474:FreeRTOS/src/stream_buffer.c **** 
 475:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 476:FreeRTOS/src/stream_buffer.c **** 
 477:FreeRTOS/src/stream_buffer.c **** 	xSpace = pxStreamBuffer->xLength + pxStreamBuffer->xTail;
 478:FreeRTOS/src/stream_buffer.c **** 	xSpace -= pxStreamBuffer->xHead;
 479:FreeRTOS/src/stream_buffer.c **** 	xSpace -= ( size_t ) 1;
 480:FreeRTOS/src/stream_buffer.c **** 
 481:FreeRTOS/src/stream_buffer.c **** 	if( xSpace >= pxStreamBuffer->xLength )
 482:FreeRTOS/src/stream_buffer.c **** 	{
 483:FreeRTOS/src/stream_buffer.c **** 		xSpace -= pxStreamBuffer->xLength;
 484:FreeRTOS/src/stream_buffer.c **** 	}
 485:FreeRTOS/src/stream_buffer.c **** 	else
 486:FreeRTOS/src/stream_buffer.c **** 	{
 487:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 488:FreeRTOS/src/stream_buffer.c **** 	}
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 10


 489:FreeRTOS/src/stream_buffer.c **** 
 490:FreeRTOS/src/stream_buffer.c **** 	return xSpace;
 491:FreeRTOS/src/stream_buffer.c **** }
 492:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 493:FreeRTOS/src/stream_buffer.c **** 
 494:FreeRTOS/src/stream_buffer.c **** size_t xStreamBufferBytesAvailable( StreamBufferHandle_t xStreamBuffer )
 495:FreeRTOS/src/stream_buffer.c **** {
 496:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 497:FreeRTOS/src/stream_buffer.c **** size_t xReturn;
 498:FreeRTOS/src/stream_buffer.c **** 
 499:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 500:FreeRTOS/src/stream_buffer.c **** 
 501:FreeRTOS/src/stream_buffer.c **** 	xReturn = prvBytesInBuffer( pxStreamBuffer );
 502:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 503:FreeRTOS/src/stream_buffer.c **** }
 504:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 505:FreeRTOS/src/stream_buffer.c **** 
 506:FreeRTOS/src/stream_buffer.c **** size_t xStreamBufferSend( StreamBufferHandle_t xStreamBuffer,
 507:FreeRTOS/src/stream_buffer.c **** 						  const void *pvTxData,
 508:FreeRTOS/src/stream_buffer.c **** 						  size_t xDataLengthBytes,
 509:FreeRTOS/src/stream_buffer.c **** 						  TickType_t xTicksToWait )
 510:FreeRTOS/src/stream_buffer.c **** {
 511:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 512:FreeRTOS/src/stream_buffer.c **** size_t xReturn, xSpace = 0;
 513:FreeRTOS/src/stream_buffer.c **** size_t xRequiredSpace = xDataLengthBytes;
 514:FreeRTOS/src/stream_buffer.c **** TimeOut_t xTimeOut;
 515:FreeRTOS/src/stream_buffer.c **** 
 516:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pvTxData );
 517:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 518:FreeRTOS/src/stream_buffer.c **** 
 519:FreeRTOS/src/stream_buffer.c **** 	/* This send function is used to write to both message buffers and stream
 520:FreeRTOS/src/stream_buffer.c **** 	buffers.  If this is a message buffer then the space needed must be
 521:FreeRTOS/src/stream_buffer.c **** 	increased by the amount of bytes needed to store the length of the
 522:FreeRTOS/src/stream_buffer.c **** 	message. */
 523:FreeRTOS/src/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 524:FreeRTOS/src/stream_buffer.c **** 	{
 525:FreeRTOS/src/stream_buffer.c **** 		xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
 526:FreeRTOS/src/stream_buffer.c **** 
 527:FreeRTOS/src/stream_buffer.c **** 		/* Overflow? */
 528:FreeRTOS/src/stream_buffer.c **** 		configASSERT( xRequiredSpace > xDataLengthBytes );
 529:FreeRTOS/src/stream_buffer.c **** 	}
 530:FreeRTOS/src/stream_buffer.c **** 	else
 531:FreeRTOS/src/stream_buffer.c **** 	{
 532:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 533:FreeRTOS/src/stream_buffer.c **** 	}
 534:FreeRTOS/src/stream_buffer.c **** 
 535:FreeRTOS/src/stream_buffer.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 536:FreeRTOS/src/stream_buffer.c **** 	{
 537:FreeRTOS/src/stream_buffer.c **** 		vTaskSetTimeOutState( &xTimeOut );
 538:FreeRTOS/src/stream_buffer.c **** 
 539:FreeRTOS/src/stream_buffer.c **** 		do
 540:FreeRTOS/src/stream_buffer.c **** 		{
 541:FreeRTOS/src/stream_buffer.c **** 			/* Wait until the required number of bytes are free in the message
 542:FreeRTOS/src/stream_buffer.c **** 			buffer. */
 543:FreeRTOS/src/stream_buffer.c **** 			taskENTER_CRITICAL();
 544:FreeRTOS/src/stream_buffer.c **** 			{
 545:FreeRTOS/src/stream_buffer.c **** 				xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 11


 546:FreeRTOS/src/stream_buffer.c **** 
 547:FreeRTOS/src/stream_buffer.c **** 				if( xSpace < xRequiredSpace )
 548:FreeRTOS/src/stream_buffer.c **** 				{
 549:FreeRTOS/src/stream_buffer.c **** 					/* Clear notification state as going to wait for space. */
 550:FreeRTOS/src/stream_buffer.c **** 					( void ) xTaskNotifyStateClear( NULL );
 551:FreeRTOS/src/stream_buffer.c **** 
 552:FreeRTOS/src/stream_buffer.c **** 					/* Should only be one writer. */
 553:FreeRTOS/src/stream_buffer.c **** 					configASSERT( pxStreamBuffer->xTaskWaitingToSend == NULL );
 554:FreeRTOS/src/stream_buffer.c **** 					pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 555:FreeRTOS/src/stream_buffer.c **** 				}
 556:FreeRTOS/src/stream_buffer.c **** 				else
 557:FreeRTOS/src/stream_buffer.c **** 				{
 558:FreeRTOS/src/stream_buffer.c **** 					taskEXIT_CRITICAL();
 559:FreeRTOS/src/stream_buffer.c **** 					break;
 560:FreeRTOS/src/stream_buffer.c **** 				}
 561:FreeRTOS/src/stream_buffer.c **** 			}
 562:FreeRTOS/src/stream_buffer.c **** 			taskEXIT_CRITICAL();
 563:FreeRTOS/src/stream_buffer.c **** 
 564:FreeRTOS/src/stream_buffer.c **** 			traceBLOCKING_ON_STREAM_BUFFER_SEND( xStreamBuffer );
 565:FreeRTOS/src/stream_buffer.c **** 			( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 566:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToSend = NULL;
 567:FreeRTOS/src/stream_buffer.c **** 
 568:FreeRTOS/src/stream_buffer.c **** 		} while( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE );
 569:FreeRTOS/src/stream_buffer.c **** 	}
 570:FreeRTOS/src/stream_buffer.c **** 	else
 571:FreeRTOS/src/stream_buffer.c **** 	{
 572:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 573:FreeRTOS/src/stream_buffer.c **** 	}
 574:FreeRTOS/src/stream_buffer.c **** 
 575:FreeRTOS/src/stream_buffer.c **** 	if( xSpace == ( size_t ) 0 )
 576:FreeRTOS/src/stream_buffer.c **** 	{
 577:FreeRTOS/src/stream_buffer.c **** 		xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 578:FreeRTOS/src/stream_buffer.c **** 	}
 579:FreeRTOS/src/stream_buffer.c **** 	else
 580:FreeRTOS/src/stream_buffer.c **** 	{
 581:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 582:FreeRTOS/src/stream_buffer.c **** 	}
 583:FreeRTOS/src/stream_buffer.c **** 
 584:FreeRTOS/src/stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 585:FreeRTOS/src/stream_buffer.c **** 
 586:FreeRTOS/src/stream_buffer.c **** 	if( xReturn > ( size_t ) 0 )
 587:FreeRTOS/src/stream_buffer.c **** 	{
 588:FreeRTOS/src/stream_buffer.c **** 		traceSTREAM_BUFFER_SEND( xStreamBuffer, xReturn );
 589:FreeRTOS/src/stream_buffer.c **** 
 590:FreeRTOS/src/stream_buffer.c **** 		/* Was a task waiting for the data? */
 591:FreeRTOS/src/stream_buffer.c **** 		if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
 592:FreeRTOS/src/stream_buffer.c **** 		{
 593:FreeRTOS/src/stream_buffer.c **** 			sbSEND_COMPLETED( pxStreamBuffer );
 594:FreeRTOS/src/stream_buffer.c **** 		}
 595:FreeRTOS/src/stream_buffer.c **** 		else
 596:FreeRTOS/src/stream_buffer.c **** 		{
 597:FreeRTOS/src/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 598:FreeRTOS/src/stream_buffer.c **** 		}
 599:FreeRTOS/src/stream_buffer.c **** 	}
 600:FreeRTOS/src/stream_buffer.c **** 	else
 601:FreeRTOS/src/stream_buffer.c **** 	{
 602:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 12


 603:FreeRTOS/src/stream_buffer.c **** 		traceSTREAM_BUFFER_SEND_FAILED( xStreamBuffer );
 604:FreeRTOS/src/stream_buffer.c **** 	}
 605:FreeRTOS/src/stream_buffer.c **** 
 606:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 607:FreeRTOS/src/stream_buffer.c **** }
 608:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 609:FreeRTOS/src/stream_buffer.c **** 
 610:FreeRTOS/src/stream_buffer.c **** size_t xStreamBufferSendFromISR( StreamBufferHandle_t xStreamBuffer,
 611:FreeRTOS/src/stream_buffer.c **** 								 const void *pvTxData,
 612:FreeRTOS/src/stream_buffer.c **** 								 size_t xDataLengthBytes,
 613:FreeRTOS/src/stream_buffer.c **** 								 BaseType_t * const pxHigherPriorityTaskWoken )
 614:FreeRTOS/src/stream_buffer.c **** {
 615:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 616:FreeRTOS/src/stream_buffer.c **** size_t xReturn, xSpace;
 617:FreeRTOS/src/stream_buffer.c **** size_t xRequiredSpace = xDataLengthBytes;
 618:FreeRTOS/src/stream_buffer.c **** 
 619:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pvTxData );
 620:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 621:FreeRTOS/src/stream_buffer.c **** 
 622:FreeRTOS/src/stream_buffer.c **** 	/* This send function is used to write to both message buffers and stream
 623:FreeRTOS/src/stream_buffer.c **** 	buffers.  If this is a message buffer then the space needed must be
 624:FreeRTOS/src/stream_buffer.c **** 	increased by the amount of bytes needed to store the length of the
 625:FreeRTOS/src/stream_buffer.c **** 	message. */
 626:FreeRTOS/src/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 627:FreeRTOS/src/stream_buffer.c **** 	{
 628:FreeRTOS/src/stream_buffer.c **** 		xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
 629:FreeRTOS/src/stream_buffer.c **** 	}
 630:FreeRTOS/src/stream_buffer.c **** 	else
 631:FreeRTOS/src/stream_buffer.c **** 	{
 632:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 633:FreeRTOS/src/stream_buffer.c **** 	}
 634:FreeRTOS/src/stream_buffer.c **** 
 635:FreeRTOS/src/stream_buffer.c **** 	xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 636:FreeRTOS/src/stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 637:FreeRTOS/src/stream_buffer.c **** 
 638:FreeRTOS/src/stream_buffer.c **** 	if( xReturn > ( size_t ) 0 )
 639:FreeRTOS/src/stream_buffer.c **** 	{
 640:FreeRTOS/src/stream_buffer.c **** 		/* Was a task waiting for the data? */
 641:FreeRTOS/src/stream_buffer.c **** 		if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
 642:FreeRTOS/src/stream_buffer.c **** 		{
 643:FreeRTOS/src/stream_buffer.c **** 			sbSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
 644:FreeRTOS/src/stream_buffer.c **** 		}
 645:FreeRTOS/src/stream_buffer.c **** 		else
 646:FreeRTOS/src/stream_buffer.c **** 		{
 647:FreeRTOS/src/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 648:FreeRTOS/src/stream_buffer.c **** 		}
 649:FreeRTOS/src/stream_buffer.c **** 	}
 650:FreeRTOS/src/stream_buffer.c **** 	else
 651:FreeRTOS/src/stream_buffer.c **** 	{
 652:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 653:FreeRTOS/src/stream_buffer.c **** 	}
 654:FreeRTOS/src/stream_buffer.c **** 
 655:FreeRTOS/src/stream_buffer.c **** 	traceSTREAM_BUFFER_SEND_FROM_ISR( xStreamBuffer, xReturn );
 656:FreeRTOS/src/stream_buffer.c **** 
 657:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 658:FreeRTOS/src/stream_buffer.c **** }
 659:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 13


 660:FreeRTOS/src/stream_buffer.c **** 
 661:FreeRTOS/src/stream_buffer.c **** static size_t prvWriteMessageToBuffer( StreamBuffer_t * const pxStreamBuffer,
 662:FreeRTOS/src/stream_buffer.c **** 									   const void * pvTxData,
 663:FreeRTOS/src/stream_buffer.c **** 									   size_t xDataLengthBytes,
 664:FreeRTOS/src/stream_buffer.c **** 									   size_t xSpace,
 665:FreeRTOS/src/stream_buffer.c **** 									   size_t xRequiredSpace )
 666:FreeRTOS/src/stream_buffer.c **** {
 667:FreeRTOS/src/stream_buffer.c **** 	BaseType_t xShouldWrite;
 668:FreeRTOS/src/stream_buffer.c **** 	size_t xReturn;
 669:FreeRTOS/src/stream_buffer.c **** 
 670:FreeRTOS/src/stream_buffer.c **** 	if( xSpace == ( size_t ) 0 )
 671:FreeRTOS/src/stream_buffer.c **** 	{
 672:FreeRTOS/src/stream_buffer.c **** 		/* Doesn't matter if this is a stream buffer or a message buffer, there
 673:FreeRTOS/src/stream_buffer.c **** 		is no space to write. */
 674:FreeRTOS/src/stream_buffer.c **** 		xShouldWrite = pdFALSE;
 675:FreeRTOS/src/stream_buffer.c **** 	}
 676:FreeRTOS/src/stream_buffer.c **** 	else if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) == ( uint8_t ) 0 )
 677:FreeRTOS/src/stream_buffer.c **** 	{
 678:FreeRTOS/src/stream_buffer.c **** 		/* This is a stream buffer, as opposed to a message buffer, so writing a
 679:FreeRTOS/src/stream_buffer.c **** 		stream of bytes rather than discrete messages.  Write as many bytes as
 680:FreeRTOS/src/stream_buffer.c **** 		possible. */
 681:FreeRTOS/src/stream_buffer.c **** 		xShouldWrite = pdTRUE;
 682:FreeRTOS/src/stream_buffer.c **** 		xDataLengthBytes = configMIN( xDataLengthBytes, xSpace );
 683:FreeRTOS/src/stream_buffer.c **** 	}
 684:FreeRTOS/src/stream_buffer.c **** 	else if( xSpace >= xRequiredSpace )
 685:FreeRTOS/src/stream_buffer.c **** 	{
 686:FreeRTOS/src/stream_buffer.c **** 		/* This is a message buffer, as opposed to a stream buffer, and there
 687:FreeRTOS/src/stream_buffer.c **** 		is enough space to write both the message length and the message itself
 688:FreeRTOS/src/stream_buffer.c **** 		into the buffer.  Start by writing the length of the data, the data
 689:FreeRTOS/src/stream_buffer.c **** 		itself will be written later in this function. */
 690:FreeRTOS/src/stream_buffer.c **** 		xShouldWrite = pdTRUE;
 691:FreeRTOS/src/stream_buffer.c **** 		( void ) prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) &( xDataLengthBytes ), sbBYTE
 692:FreeRTOS/src/stream_buffer.c **** 	}
 693:FreeRTOS/src/stream_buffer.c **** 	else
 694:FreeRTOS/src/stream_buffer.c **** 	{
 695:FreeRTOS/src/stream_buffer.c **** 		/* There is space available, but not enough space. */
 696:FreeRTOS/src/stream_buffer.c **** 		xShouldWrite = pdFALSE;
 697:FreeRTOS/src/stream_buffer.c **** 	}
 698:FreeRTOS/src/stream_buffer.c **** 
 699:FreeRTOS/src/stream_buffer.c **** 	if( xShouldWrite != pdFALSE )
 700:FreeRTOS/src/stream_buffer.c **** 	{
 701:FreeRTOS/src/stream_buffer.c **** 		/* Writes the data itself. */
 702:FreeRTOS/src/stream_buffer.c **** 		xReturn = prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) pvTxData, xDataLengthBytes )
 703:FreeRTOS/src/stream_buffer.c **** 	}
 704:FreeRTOS/src/stream_buffer.c **** 	else
 705:FreeRTOS/src/stream_buffer.c **** 	{
 706:FreeRTOS/src/stream_buffer.c **** 		xReturn = 0;
 707:FreeRTOS/src/stream_buffer.c **** 	}
 708:FreeRTOS/src/stream_buffer.c **** 
 709:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 710:FreeRTOS/src/stream_buffer.c **** }
 711:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 712:FreeRTOS/src/stream_buffer.c **** 
 713:FreeRTOS/src/stream_buffer.c **** size_t xStreamBufferReceive( StreamBufferHandle_t xStreamBuffer,
 714:FreeRTOS/src/stream_buffer.c **** 							 void *pvRxData,
 715:FreeRTOS/src/stream_buffer.c **** 							 size_t xBufferLengthBytes,
 716:FreeRTOS/src/stream_buffer.c **** 							 TickType_t xTicksToWait )
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 14


 717:FreeRTOS/src/stream_buffer.c **** {
 718:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 719:FreeRTOS/src/stream_buffer.c **** size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 720:FreeRTOS/src/stream_buffer.c **** 
 721:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pvRxData );
 722:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 723:FreeRTOS/src/stream_buffer.c **** 
 724:FreeRTOS/src/stream_buffer.c **** 	/* This receive function is used by both message buffers, which store
 725:FreeRTOS/src/stream_buffer.c **** 	discrete messages, and stream buffers, which store a continuous stream of
 726:FreeRTOS/src/stream_buffer.c **** 	bytes.  Discrete messages include an additional
 727:FreeRTOS/src/stream_buffer.c **** 	sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
 728:FreeRTOS/src/stream_buffer.c **** 	message. */
 729:FreeRTOS/src/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 730:FreeRTOS/src/stream_buffer.c **** 	{
 731:FreeRTOS/src/stream_buffer.c **** 		xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
 732:FreeRTOS/src/stream_buffer.c **** 	}
 733:FreeRTOS/src/stream_buffer.c **** 	else
 734:FreeRTOS/src/stream_buffer.c **** 	{
 735:FreeRTOS/src/stream_buffer.c **** 		xBytesToStoreMessageLength = 0;
 736:FreeRTOS/src/stream_buffer.c **** 	}
 737:FreeRTOS/src/stream_buffer.c **** 
 738:FreeRTOS/src/stream_buffer.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 739:FreeRTOS/src/stream_buffer.c **** 	{
 740:FreeRTOS/src/stream_buffer.c **** 		/* Checking if there is data and clearing the notification state must be
 741:FreeRTOS/src/stream_buffer.c **** 		performed atomically. */
 742:FreeRTOS/src/stream_buffer.c **** 		taskENTER_CRITICAL();
 743:FreeRTOS/src/stream_buffer.c **** 		{
 744:FreeRTOS/src/stream_buffer.c **** 			xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 745:FreeRTOS/src/stream_buffer.c **** 
 746:FreeRTOS/src/stream_buffer.c **** 			/* If this function was invoked by a message buffer read then
 747:FreeRTOS/src/stream_buffer.c **** 			xBytesToStoreMessageLength holds the number of bytes used to hold
 748:FreeRTOS/src/stream_buffer.c **** 			the length of the next discrete message.  If this function was
 749:FreeRTOS/src/stream_buffer.c **** 			invoked by a stream buffer read then xBytesToStoreMessageLength will
 750:FreeRTOS/src/stream_buffer.c **** 			be 0. */
 751:FreeRTOS/src/stream_buffer.c **** 			if( xBytesAvailable <= xBytesToStoreMessageLength )
 752:FreeRTOS/src/stream_buffer.c **** 			{
 753:FreeRTOS/src/stream_buffer.c **** 				/* Clear notification state as going to wait for data. */
 754:FreeRTOS/src/stream_buffer.c **** 				( void ) xTaskNotifyStateClear( NULL );
 755:FreeRTOS/src/stream_buffer.c **** 
 756:FreeRTOS/src/stream_buffer.c **** 				/* Should only be one reader. */
 757:FreeRTOS/src/stream_buffer.c **** 				configASSERT( pxStreamBuffer->xTaskWaitingToReceive == NULL );
 758:FreeRTOS/src/stream_buffer.c **** 				pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
 759:FreeRTOS/src/stream_buffer.c **** 			}
 760:FreeRTOS/src/stream_buffer.c **** 			else
 761:FreeRTOS/src/stream_buffer.c **** 			{
 762:FreeRTOS/src/stream_buffer.c **** 				mtCOVERAGE_TEST_MARKER();
 763:FreeRTOS/src/stream_buffer.c **** 			}
 764:FreeRTOS/src/stream_buffer.c **** 		}
 765:FreeRTOS/src/stream_buffer.c **** 		taskEXIT_CRITICAL();
 766:FreeRTOS/src/stream_buffer.c **** 
 767:FreeRTOS/src/stream_buffer.c **** 		if( xBytesAvailable <= xBytesToStoreMessageLength )
 768:FreeRTOS/src/stream_buffer.c **** 		{
 769:FreeRTOS/src/stream_buffer.c **** 			/* Wait for data to be available. */
 770:FreeRTOS/src/stream_buffer.c **** 			traceBLOCKING_ON_STREAM_BUFFER_RECEIVE( xStreamBuffer );
 771:FreeRTOS/src/stream_buffer.c **** 			( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 772:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToReceive = NULL;
 773:FreeRTOS/src/stream_buffer.c **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 15


 774:FreeRTOS/src/stream_buffer.c **** 			/* Recheck the data available after blocking. */
 775:FreeRTOS/src/stream_buffer.c **** 			xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 776:FreeRTOS/src/stream_buffer.c **** 		}
 777:FreeRTOS/src/stream_buffer.c **** 		else
 778:FreeRTOS/src/stream_buffer.c **** 		{
 779:FreeRTOS/src/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 780:FreeRTOS/src/stream_buffer.c **** 		}
 781:FreeRTOS/src/stream_buffer.c **** 	}
 782:FreeRTOS/src/stream_buffer.c **** 	else
 783:FreeRTOS/src/stream_buffer.c **** 	{
 784:FreeRTOS/src/stream_buffer.c **** 		xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 785:FreeRTOS/src/stream_buffer.c **** 	}
 786:FreeRTOS/src/stream_buffer.c **** 
 787:FreeRTOS/src/stream_buffer.c **** 	/* Whether receiving a discrete message (where xBytesToStoreMessageLength
 788:FreeRTOS/src/stream_buffer.c **** 	holds the number of bytes used to store the message length) or a stream of
 789:FreeRTOS/src/stream_buffer.c **** 	bytes (where xBytesToStoreMessageLength is zero), the number of bytes
 790:FreeRTOS/src/stream_buffer.c **** 	available must be greater than xBytesToStoreMessageLength to be able to
 791:FreeRTOS/src/stream_buffer.c **** 	read bytes from the buffer. */
 792:FreeRTOS/src/stream_buffer.c **** 	if( xBytesAvailable > xBytesToStoreMessageLength )
 793:FreeRTOS/src/stream_buffer.c **** 	{
 794:FreeRTOS/src/stream_buffer.c **** 		xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, xBytesA
 795:FreeRTOS/src/stream_buffer.c **** 
 796:FreeRTOS/src/stream_buffer.c **** 		/* Was a task waiting for space in the buffer? */
 797:FreeRTOS/src/stream_buffer.c **** 		if( xReceivedLength != ( size_t ) 0 )
 798:FreeRTOS/src/stream_buffer.c **** 		{
 799:FreeRTOS/src/stream_buffer.c **** 			traceSTREAM_BUFFER_RECEIVE( xStreamBuffer, xReceivedLength );
 800:FreeRTOS/src/stream_buffer.c **** 			sbRECEIVE_COMPLETED( pxStreamBuffer );
 801:FreeRTOS/src/stream_buffer.c **** 		}
 802:FreeRTOS/src/stream_buffer.c **** 		else
 803:FreeRTOS/src/stream_buffer.c **** 		{
 804:FreeRTOS/src/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 805:FreeRTOS/src/stream_buffer.c **** 		}
 806:FreeRTOS/src/stream_buffer.c **** 	}
 807:FreeRTOS/src/stream_buffer.c **** 	else
 808:FreeRTOS/src/stream_buffer.c **** 	{
 809:FreeRTOS/src/stream_buffer.c **** 		traceSTREAM_BUFFER_RECEIVE_FAILED( xStreamBuffer );
 810:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 811:FreeRTOS/src/stream_buffer.c **** 	}
 812:FreeRTOS/src/stream_buffer.c **** 
 813:FreeRTOS/src/stream_buffer.c **** 	return xReceivedLength;
 814:FreeRTOS/src/stream_buffer.c **** }
 815:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 816:FreeRTOS/src/stream_buffer.c **** 
 817:FreeRTOS/src/stream_buffer.c **** size_t xStreamBufferNextMessageLengthBytes( StreamBufferHandle_t xStreamBuffer )
 818:FreeRTOS/src/stream_buffer.c **** {
 819:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 820:FreeRTOS/src/stream_buffer.c **** size_t xReturn, xBytesAvailable, xOriginalTail;
 821:FreeRTOS/src/stream_buffer.c **** configMESSAGE_BUFFER_LENGTH_TYPE xTempReturn;
 822:FreeRTOS/src/stream_buffer.c **** 
 823:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 824:FreeRTOS/src/stream_buffer.c **** 
 825:FreeRTOS/src/stream_buffer.c **** 	/* Ensure the stream buffer is being used as a message buffer. */
 826:FreeRTOS/src/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 827:FreeRTOS/src/stream_buffer.c **** 	{
 828:FreeRTOS/src/stream_buffer.c **** 		xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 829:FreeRTOS/src/stream_buffer.c **** 		if( xBytesAvailable > sbBYTES_TO_STORE_MESSAGE_LENGTH )
 830:FreeRTOS/src/stream_buffer.c **** 		{
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 16


 831:FreeRTOS/src/stream_buffer.c **** 			/* The number of bytes available is greater than the number of bytes
 832:FreeRTOS/src/stream_buffer.c **** 			required to hold the length of the next message, so another message
 833:FreeRTOS/src/stream_buffer.c **** 			is available.  Return its length without removing the length bytes
 834:FreeRTOS/src/stream_buffer.c **** 			from the buffer.  A copy of the tail is stored so the buffer can be
 835:FreeRTOS/src/stream_buffer.c **** 			returned to its prior state as the message is not actually being
 836:FreeRTOS/src/stream_buffer.c **** 			removed from the buffer. */
 837:FreeRTOS/src/stream_buffer.c **** 			xOriginalTail = pxStreamBuffer->xTail;
 838:FreeRTOS/src/stream_buffer.c **** 			( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempReturn, sbBYTES_TO_STORE_ME
 839:FreeRTOS/src/stream_buffer.c **** 			xReturn = ( size_t ) xTempReturn;
 840:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTail = xOriginalTail;
 841:FreeRTOS/src/stream_buffer.c **** 		}
 842:FreeRTOS/src/stream_buffer.c **** 		else
 843:FreeRTOS/src/stream_buffer.c **** 		{
 844:FreeRTOS/src/stream_buffer.c **** 			/* The minimum amount of bytes in a message buffer is
 845:FreeRTOS/src/stream_buffer.c **** 			( sbBYTES_TO_STORE_MESSAGE_LENGTH + 1 ), so if xBytesAvailable is
 846:FreeRTOS/src/stream_buffer.c **** 			less than sbBYTES_TO_STORE_MESSAGE_LENGTH the only other valid
 847:FreeRTOS/src/stream_buffer.c **** 			value is 0. */
 848:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xBytesAvailable == 0 );
 849:FreeRTOS/src/stream_buffer.c **** 			xReturn = 0;
 850:FreeRTOS/src/stream_buffer.c **** 		}
 851:FreeRTOS/src/stream_buffer.c **** 	}
 852:FreeRTOS/src/stream_buffer.c **** 	else
 853:FreeRTOS/src/stream_buffer.c **** 	{
 854:FreeRTOS/src/stream_buffer.c **** 		xReturn = 0;
 855:FreeRTOS/src/stream_buffer.c **** 	}
 856:FreeRTOS/src/stream_buffer.c **** 
 857:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 858:FreeRTOS/src/stream_buffer.c **** }
 859:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 860:FreeRTOS/src/stream_buffer.c **** 
 861:FreeRTOS/src/stream_buffer.c **** size_t xStreamBufferReceiveFromISR( StreamBufferHandle_t xStreamBuffer,
 862:FreeRTOS/src/stream_buffer.c **** 									void *pvRxData,
 863:FreeRTOS/src/stream_buffer.c **** 									size_t xBufferLengthBytes,
 864:FreeRTOS/src/stream_buffer.c **** 									BaseType_t * const pxHigherPriorityTaskWoken )
 865:FreeRTOS/src/stream_buffer.c **** {
 866:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 867:FreeRTOS/src/stream_buffer.c **** size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 868:FreeRTOS/src/stream_buffer.c **** 
 869:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pvRxData );
 870:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 871:FreeRTOS/src/stream_buffer.c **** 
 872:FreeRTOS/src/stream_buffer.c **** 	/* This receive function is used by both message buffers, which store
 873:FreeRTOS/src/stream_buffer.c **** 	discrete messages, and stream buffers, which store a continuous stream of
 874:FreeRTOS/src/stream_buffer.c **** 	bytes.  Discrete messages include an additional
 875:FreeRTOS/src/stream_buffer.c **** 	sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
 876:FreeRTOS/src/stream_buffer.c **** 	message. */
 877:FreeRTOS/src/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 878:FreeRTOS/src/stream_buffer.c **** 	{
 879:FreeRTOS/src/stream_buffer.c **** 		xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
 880:FreeRTOS/src/stream_buffer.c **** 	}
 881:FreeRTOS/src/stream_buffer.c **** 	else
 882:FreeRTOS/src/stream_buffer.c **** 	{
 883:FreeRTOS/src/stream_buffer.c **** 		xBytesToStoreMessageLength = 0;
 884:FreeRTOS/src/stream_buffer.c **** 	}
 885:FreeRTOS/src/stream_buffer.c **** 
 886:FreeRTOS/src/stream_buffer.c **** 	xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 887:FreeRTOS/src/stream_buffer.c **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 17


 888:FreeRTOS/src/stream_buffer.c **** 	/* Whether receiving a discrete message (where xBytesToStoreMessageLength
 889:FreeRTOS/src/stream_buffer.c **** 	holds the number of bytes used to store the message length) or a stream of
 890:FreeRTOS/src/stream_buffer.c **** 	bytes (where xBytesToStoreMessageLength is zero), the number of bytes
 891:FreeRTOS/src/stream_buffer.c **** 	available must be greater than xBytesToStoreMessageLength to be able to
 892:FreeRTOS/src/stream_buffer.c **** 	read bytes from the buffer. */
 893:FreeRTOS/src/stream_buffer.c **** 	if( xBytesAvailable > xBytesToStoreMessageLength )
 894:FreeRTOS/src/stream_buffer.c **** 	{
 895:FreeRTOS/src/stream_buffer.c **** 		xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, xBytesA
 896:FreeRTOS/src/stream_buffer.c **** 
 897:FreeRTOS/src/stream_buffer.c **** 		/* Was a task waiting for space in the buffer? */
 898:FreeRTOS/src/stream_buffer.c **** 		if( xReceivedLength != ( size_t ) 0 )
 899:FreeRTOS/src/stream_buffer.c **** 		{
 900:FreeRTOS/src/stream_buffer.c **** 			sbRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
 901:FreeRTOS/src/stream_buffer.c **** 		}
 902:FreeRTOS/src/stream_buffer.c **** 		else
 903:FreeRTOS/src/stream_buffer.c **** 		{
 904:FreeRTOS/src/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 905:FreeRTOS/src/stream_buffer.c **** 		}
 906:FreeRTOS/src/stream_buffer.c **** 	}
 907:FreeRTOS/src/stream_buffer.c **** 	else
 908:FreeRTOS/src/stream_buffer.c **** 	{
 909:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 910:FreeRTOS/src/stream_buffer.c **** 	}
 911:FreeRTOS/src/stream_buffer.c **** 
 912:FreeRTOS/src/stream_buffer.c **** 	traceSTREAM_BUFFER_RECEIVE_FROM_ISR( xStreamBuffer, xReceivedLength );
 913:FreeRTOS/src/stream_buffer.c **** 
 914:FreeRTOS/src/stream_buffer.c **** 	return xReceivedLength;
 915:FreeRTOS/src/stream_buffer.c **** }
 916:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 917:FreeRTOS/src/stream_buffer.c **** 
 918:FreeRTOS/src/stream_buffer.c **** static size_t prvReadMessageFromBuffer( StreamBuffer_t *pxStreamBuffer,
 919:FreeRTOS/src/stream_buffer.c **** 										void *pvRxData,
 920:FreeRTOS/src/stream_buffer.c **** 										size_t xBufferLengthBytes,
 921:FreeRTOS/src/stream_buffer.c **** 										size_t xBytesAvailable,
 922:FreeRTOS/src/stream_buffer.c **** 										size_t xBytesToStoreMessageLength )
 923:FreeRTOS/src/stream_buffer.c **** {
 924:FreeRTOS/src/stream_buffer.c **** size_t xOriginalTail, xReceivedLength, xNextMessageLength;
 925:FreeRTOS/src/stream_buffer.c **** configMESSAGE_BUFFER_LENGTH_TYPE xTempNextMessageLength;
 926:FreeRTOS/src/stream_buffer.c **** 
 927:FreeRTOS/src/stream_buffer.c **** 	if( xBytesToStoreMessageLength != ( size_t ) 0 )
 928:FreeRTOS/src/stream_buffer.c **** 	{
 929:FreeRTOS/src/stream_buffer.c **** 		/* A discrete message is being received.  First receive the length
 930:FreeRTOS/src/stream_buffer.c **** 		of the message.  A copy of the tail is stored so the buffer can be
 931:FreeRTOS/src/stream_buffer.c **** 		returned to its prior state if the length of the message is too
 932:FreeRTOS/src/stream_buffer.c **** 		large for the provided buffer. */
 933:FreeRTOS/src/stream_buffer.c **** 		xOriginalTail = pxStreamBuffer->xTail;
 934:FreeRTOS/src/stream_buffer.c **** 		( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, xBytesToS
 935:FreeRTOS/src/stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 936:FreeRTOS/src/stream_buffer.c **** 
 937:FreeRTOS/src/stream_buffer.c **** 		/* Reduce the number of bytes available by the number of bytes just
 938:FreeRTOS/src/stream_buffer.c **** 		read out. */
 939:FreeRTOS/src/stream_buffer.c **** 		xBytesAvailable -= xBytesToStoreMessageLength;
 940:FreeRTOS/src/stream_buffer.c **** 
 941:FreeRTOS/src/stream_buffer.c **** 		/* Check there is enough space in the buffer provided by the
 942:FreeRTOS/src/stream_buffer.c **** 		user. */
 943:FreeRTOS/src/stream_buffer.c **** 		if( xNextMessageLength > xBufferLengthBytes )
 944:FreeRTOS/src/stream_buffer.c **** 		{
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 18


 945:FreeRTOS/src/stream_buffer.c **** 			/* The user has provided insufficient space to read the message
 946:FreeRTOS/src/stream_buffer.c **** 			so return the buffer to its previous state (so the length of
 947:FreeRTOS/src/stream_buffer.c **** 			the message is in the buffer again). */
 948:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTail = xOriginalTail;
 949:FreeRTOS/src/stream_buffer.c **** 			xNextMessageLength = 0;
 950:FreeRTOS/src/stream_buffer.c **** 		}
 951:FreeRTOS/src/stream_buffer.c **** 		else
 952:FreeRTOS/src/stream_buffer.c **** 		{
 953:FreeRTOS/src/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 954:FreeRTOS/src/stream_buffer.c **** 		}
 955:FreeRTOS/src/stream_buffer.c **** 	}
 956:FreeRTOS/src/stream_buffer.c **** 	else
 957:FreeRTOS/src/stream_buffer.c **** 	{
 958:FreeRTOS/src/stream_buffer.c **** 		/* A stream of bytes is being received (as opposed to a discrete
 959:FreeRTOS/src/stream_buffer.c **** 		message), so read as many bytes as possible. */
 960:FreeRTOS/src/stream_buffer.c **** 		xNextMessageLength = xBufferLengthBytes;
 961:FreeRTOS/src/stream_buffer.c **** 	}
 962:FreeRTOS/src/stream_buffer.c **** 
 963:FreeRTOS/src/stream_buffer.c **** 	/* Read the actual data. */
 964:FreeRTOS/src/stream_buffer.c **** 	xReceivedLength = prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) pvRxData, xNextMessageLeng
 965:FreeRTOS/src/stream_buffer.c **** 
 966:FreeRTOS/src/stream_buffer.c **** 	return xReceivedLength;
 967:FreeRTOS/src/stream_buffer.c **** }
 968:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 969:FreeRTOS/src/stream_buffer.c **** 
 970:FreeRTOS/src/stream_buffer.c **** BaseType_t xStreamBufferIsEmpty( StreamBufferHandle_t xStreamBuffer )
 971:FreeRTOS/src/stream_buffer.c **** {
 972:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 973:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 974:FreeRTOS/src/stream_buffer.c **** size_t xTail;
 975:FreeRTOS/src/stream_buffer.c **** 
 976:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 977:FreeRTOS/src/stream_buffer.c **** 
 978:FreeRTOS/src/stream_buffer.c **** 	/* True if no bytes are available. */
 979:FreeRTOS/src/stream_buffer.c **** 	xTail = pxStreamBuffer->xTail;
 980:FreeRTOS/src/stream_buffer.c **** 	if( pxStreamBuffer->xHead == xTail )
 981:FreeRTOS/src/stream_buffer.c **** 	{
 982:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdTRUE;
 983:FreeRTOS/src/stream_buffer.c **** 	}
 984:FreeRTOS/src/stream_buffer.c **** 	else
 985:FreeRTOS/src/stream_buffer.c **** 	{
 986:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdFALSE;
 987:FreeRTOS/src/stream_buffer.c **** 	}
 988:FreeRTOS/src/stream_buffer.c **** 
 989:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 990:FreeRTOS/src/stream_buffer.c **** }
 991:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 992:FreeRTOS/src/stream_buffer.c **** 
 993:FreeRTOS/src/stream_buffer.c **** BaseType_t xStreamBufferIsFull( StreamBufferHandle_t xStreamBuffer )
 994:FreeRTOS/src/stream_buffer.c **** {
 995:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 996:FreeRTOS/src/stream_buffer.c **** size_t xBytesToStoreMessageLength;
 997:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 998:FreeRTOS/src/stream_buffer.c **** 
 999:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
1000:FreeRTOS/src/stream_buffer.c **** 
1001:FreeRTOS/src/stream_buffer.c **** 	/* This generic version of the receive function is used by both message
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 19


1002:FreeRTOS/src/stream_buffer.c **** 	buffers, which store discrete messages, and stream buffers, which store a
1003:FreeRTOS/src/stream_buffer.c **** 	continuous stream of bytes.  Discrete messages include an additional
1004:FreeRTOS/src/stream_buffer.c **** 	sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the message. */
1005:FreeRTOS/src/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
1006:FreeRTOS/src/stream_buffer.c **** 	{
1007:FreeRTOS/src/stream_buffer.c **** 		xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
1008:FreeRTOS/src/stream_buffer.c **** 	}
1009:FreeRTOS/src/stream_buffer.c **** 	else
1010:FreeRTOS/src/stream_buffer.c **** 	{
1011:FreeRTOS/src/stream_buffer.c **** 		xBytesToStoreMessageLength = 0;
1012:FreeRTOS/src/stream_buffer.c **** 	}
1013:FreeRTOS/src/stream_buffer.c **** 
1014:FreeRTOS/src/stream_buffer.c **** 	/* True if the available space equals zero. */
1015:FreeRTOS/src/stream_buffer.c **** 	if( xStreamBufferSpacesAvailable( xStreamBuffer ) <= xBytesToStoreMessageLength )
1016:FreeRTOS/src/stream_buffer.c **** 	{
1017:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdTRUE;
1018:FreeRTOS/src/stream_buffer.c **** 	}
1019:FreeRTOS/src/stream_buffer.c **** 	else
1020:FreeRTOS/src/stream_buffer.c **** 	{
1021:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdFALSE;
1022:FreeRTOS/src/stream_buffer.c **** 	}
1023:FreeRTOS/src/stream_buffer.c **** 
1024:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
1025:FreeRTOS/src/stream_buffer.c **** }
1026:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
1027:FreeRTOS/src/stream_buffer.c **** 
1028:FreeRTOS/src/stream_buffer.c **** BaseType_t xStreamBufferSendCompletedFromISR( StreamBufferHandle_t xStreamBuffer, BaseType_t *pxHig
1029:FreeRTOS/src/stream_buffer.c **** {
1030:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1031:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
1032:FreeRTOS/src/stream_buffer.c **** UBaseType_t uxSavedInterruptStatus;
1033:FreeRTOS/src/stream_buffer.c **** 
1034:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
1035:FreeRTOS/src/stream_buffer.c **** 
1036:FreeRTOS/src/stream_buffer.c **** 	uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();
1037:FreeRTOS/src/stream_buffer.c **** 	{
1038:FreeRTOS/src/stream_buffer.c **** 		if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )
1039:FreeRTOS/src/stream_buffer.c **** 		{
1040:FreeRTOS/src/stream_buffer.c **** 			( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive,
1041:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
1042:FreeRTOS/src/stream_buffer.c **** 										 eNoAction,
1043:FreeRTOS/src/stream_buffer.c **** 										 pxHigherPriorityTaskWoken );
1044:FreeRTOS/src/stream_buffer.c **** 			( pxStreamBuffer )->xTaskWaitingToReceive = NULL;
1045:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdTRUE;
1046:FreeRTOS/src/stream_buffer.c **** 		}
1047:FreeRTOS/src/stream_buffer.c **** 		else
1048:FreeRTOS/src/stream_buffer.c **** 		{
1049:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdFALSE;
1050:FreeRTOS/src/stream_buffer.c **** 		}
1051:FreeRTOS/src/stream_buffer.c **** 	}
1052:FreeRTOS/src/stream_buffer.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1053:FreeRTOS/src/stream_buffer.c **** 
1054:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
1055:FreeRTOS/src/stream_buffer.c **** }
1056:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
1057:FreeRTOS/src/stream_buffer.c **** 
1058:FreeRTOS/src/stream_buffer.c **** BaseType_t xStreamBufferReceiveCompletedFromISR( StreamBufferHandle_t xStreamBuffer, BaseType_t *px
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 20


1059:FreeRTOS/src/stream_buffer.c **** {
1060:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1061:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
1062:FreeRTOS/src/stream_buffer.c **** UBaseType_t uxSavedInterruptStatus;
1063:FreeRTOS/src/stream_buffer.c **** 
1064:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
1065:FreeRTOS/src/stream_buffer.c **** 
1066:FreeRTOS/src/stream_buffer.c **** 	uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();
1067:FreeRTOS/src/stream_buffer.c **** 	{
1068:FreeRTOS/src/stream_buffer.c **** 		if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )
1069:FreeRTOS/src/stream_buffer.c **** 		{
1070:FreeRTOS/src/stream_buffer.c **** 			( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend,
1071:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
1072:FreeRTOS/src/stream_buffer.c **** 										 eNoAction,
1073:FreeRTOS/src/stream_buffer.c **** 										 pxHigherPriorityTaskWoken );
1074:FreeRTOS/src/stream_buffer.c **** 			( pxStreamBuffer )->xTaskWaitingToSend = NULL;
1075:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdTRUE;
1076:FreeRTOS/src/stream_buffer.c **** 		}
1077:FreeRTOS/src/stream_buffer.c **** 		else
1078:FreeRTOS/src/stream_buffer.c **** 		{
1079:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdFALSE;
1080:FreeRTOS/src/stream_buffer.c **** 		}
1081:FreeRTOS/src/stream_buffer.c **** 	}
1082:FreeRTOS/src/stream_buffer.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1083:FreeRTOS/src/stream_buffer.c **** 
1084:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
1085:FreeRTOS/src/stream_buffer.c **** }
1086:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
1087:FreeRTOS/src/stream_buffer.c **** 
1088:FreeRTOS/src/stream_buffer.c **** static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer, const uint8_t *pucData,
1089:FreeRTOS/src/stream_buffer.c **** {
1090:FreeRTOS/src/stream_buffer.c **** size_t xNextHead, xFirstLength;
1091:FreeRTOS/src/stream_buffer.c **** 
1092:FreeRTOS/src/stream_buffer.c **** 	configASSERT( xCount > ( size_t ) 0 );
1093:FreeRTOS/src/stream_buffer.c **** 
1094:FreeRTOS/src/stream_buffer.c **** 	xNextHead = pxStreamBuffer->xHead;
1095:FreeRTOS/src/stream_buffer.c **** 
1096:FreeRTOS/src/stream_buffer.c **** 	/* Calculate the number of bytes that can be added in the first write -
1097:FreeRTOS/src/stream_buffer.c **** 	which may be less than the total number of bytes that need to be added if
1098:FreeRTOS/src/stream_buffer.c **** 	the buffer will wrap back to the beginning. */
1099:FreeRTOS/src/stream_buffer.c **** 	xFirstLength = configMIN( pxStreamBuffer->xLength - xNextHead, xCount );
1100:FreeRTOS/src/stream_buffer.c **** 
1101:FreeRTOS/src/stream_buffer.c **** 	/* Write as many bytes as can be written in the first write. */
1102:FreeRTOS/src/stream_buffer.c **** 	configASSERT( ( xNextHead + xFirstLength ) <= pxStreamBuffer->xLength );
1103:FreeRTOS/src/stream_buffer.c **** 	( void ) memcpy( ( void* ) ( &( pxStreamBuffer->pucBuffer[ xNextHead ] ) ), ( const void * ) pucDa
1104:FreeRTOS/src/stream_buffer.c **** 
1105:FreeRTOS/src/stream_buffer.c **** 	/* If the number of bytes written was less than the number that could be
1106:FreeRTOS/src/stream_buffer.c **** 	written in the first write... */
1107:FreeRTOS/src/stream_buffer.c **** 	if( xCount > xFirstLength )
1108:FreeRTOS/src/stream_buffer.c **** 	{
1109:FreeRTOS/src/stream_buffer.c **** 		/* ...then write the remaining bytes to the start of the buffer. */
1110:FreeRTOS/src/stream_buffer.c **** 		configASSERT( ( xCount - xFirstLength ) <= pxStreamBuffer->xLength );
1111:FreeRTOS/src/stream_buffer.c **** 		( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstLength 
1112:FreeRTOS/src/stream_buffer.c **** 	}
1113:FreeRTOS/src/stream_buffer.c **** 	else
1114:FreeRTOS/src/stream_buffer.c **** 	{
1115:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 21


1116:FreeRTOS/src/stream_buffer.c **** 	}
1117:FreeRTOS/src/stream_buffer.c **** 
1118:FreeRTOS/src/stream_buffer.c **** 	xNextHead += xCount;
1119:FreeRTOS/src/stream_buffer.c **** 	if( xNextHead >= pxStreamBuffer->xLength )
1120:FreeRTOS/src/stream_buffer.c **** 	{
1121:FreeRTOS/src/stream_buffer.c **** 		xNextHead -= pxStreamBuffer->xLength;
1122:FreeRTOS/src/stream_buffer.c **** 	}
1123:FreeRTOS/src/stream_buffer.c **** 	else
1124:FreeRTOS/src/stream_buffer.c **** 	{
1125:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
1126:FreeRTOS/src/stream_buffer.c **** 	}
1127:FreeRTOS/src/stream_buffer.c **** 
1128:FreeRTOS/src/stream_buffer.c **** 	pxStreamBuffer->xHead = xNextHead;
1129:FreeRTOS/src/stream_buffer.c **** 
1130:FreeRTOS/src/stream_buffer.c **** 	return xCount;
1131:FreeRTOS/src/stream_buffer.c **** }
1132:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
1133:FreeRTOS/src/stream_buffer.c **** 
1134:FreeRTOS/src/stream_buffer.c **** static size_t prvReadBytesFromBuffer( StreamBuffer_t *pxStreamBuffer, uint8_t *pucData, size_t xMax
1135:FreeRTOS/src/stream_buffer.c **** {
1136:FreeRTOS/src/stream_buffer.c **** size_t xCount, xFirstLength, xNextTail;
1137:FreeRTOS/src/stream_buffer.c **** 
1138:FreeRTOS/src/stream_buffer.c **** 	/* Use the minimum of the wanted bytes and the available bytes. */
1139:FreeRTOS/src/stream_buffer.c **** 	xCount = configMIN( xBytesAvailable, xMaxCount );
1140:FreeRTOS/src/stream_buffer.c **** 
1141:FreeRTOS/src/stream_buffer.c **** 	if( xCount > ( size_t ) 0 )
1142:FreeRTOS/src/stream_buffer.c **** 	{
1143:FreeRTOS/src/stream_buffer.c **** 		xNextTail = pxStreamBuffer->xTail;
1144:FreeRTOS/src/stream_buffer.c **** 
1145:FreeRTOS/src/stream_buffer.c **** 		/* Calculate the number of bytes that can be read - which may be
1146:FreeRTOS/src/stream_buffer.c **** 		less than the number wanted if the data wraps around to the start of
1147:FreeRTOS/src/stream_buffer.c **** 		the buffer. */
1148:FreeRTOS/src/stream_buffer.c **** 		xFirstLength = configMIN( pxStreamBuffer->xLength - xNextTail, xCount );
1149:FreeRTOS/src/stream_buffer.c **** 
1150:FreeRTOS/src/stream_buffer.c **** 		/* Obtain the number of bytes it is possible to obtain in the first
1151:FreeRTOS/src/stream_buffer.c **** 		read.  Asserts check bounds of read and write. */
1152:FreeRTOS/src/stream_buffer.c **** 		configASSERT( xFirstLength <= xMaxCount );
1153:FreeRTOS/src/stream_buffer.c **** 		configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
1154:FreeRTOS/src/stream_buffer.c **** 		( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xNextTail ] )
1155:FreeRTOS/src/stream_buffer.c **** 
1156:FreeRTOS/src/stream_buffer.c **** 		/* If the total number of wanted bytes is greater than the number
1157:FreeRTOS/src/stream_buffer.c **** 		that could be read in the first read... */
1158:FreeRTOS/src/stream_buffer.c **** 		if( xCount > xFirstLength )
1159:FreeRTOS/src/stream_buffer.c **** 		{
1160:FreeRTOS/src/stream_buffer.c **** 			/*...then read the remaining bytes from the start of the buffer. */
1161:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xCount <= xMaxCount );
1162:FreeRTOS/src/stream_buffer.c **** 			( void ) memcpy( ( void * ) &( pucData[ xFirstLength ] ), ( void * ) ( pxStreamBuffer->pucBuffer
1163:FreeRTOS/src/stream_buffer.c **** 		}
1164:FreeRTOS/src/stream_buffer.c **** 		else
1165:FreeRTOS/src/stream_buffer.c **** 		{
1166:FreeRTOS/src/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
1167:FreeRTOS/src/stream_buffer.c **** 		}
1168:FreeRTOS/src/stream_buffer.c **** 
1169:FreeRTOS/src/stream_buffer.c **** 		/* Move the tail pointer to effectively remove the data read from
1170:FreeRTOS/src/stream_buffer.c **** 		the buffer. */
1171:FreeRTOS/src/stream_buffer.c **** 		xNextTail += xCount;
1172:FreeRTOS/src/stream_buffer.c **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 22


1173:FreeRTOS/src/stream_buffer.c **** 		if( xNextTail >= pxStreamBuffer->xLength )
1174:FreeRTOS/src/stream_buffer.c **** 		{
1175:FreeRTOS/src/stream_buffer.c **** 			xNextTail -= pxStreamBuffer->xLength;
1176:FreeRTOS/src/stream_buffer.c **** 		}
1177:FreeRTOS/src/stream_buffer.c **** 
1178:FreeRTOS/src/stream_buffer.c **** 		pxStreamBuffer->xTail = xNextTail;
1179:FreeRTOS/src/stream_buffer.c **** 	}
1180:FreeRTOS/src/stream_buffer.c **** 	else
1181:FreeRTOS/src/stream_buffer.c **** 	{
1182:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
1183:FreeRTOS/src/stream_buffer.c **** 	}
1184:FreeRTOS/src/stream_buffer.c **** 
1185:FreeRTOS/src/stream_buffer.c **** 	return xCount;
1186:FreeRTOS/src/stream_buffer.c **** }
1187:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
1188:FreeRTOS/src/stream_buffer.c **** 
1189:FreeRTOS/src/stream_buffer.c **** static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer )
1190:FreeRTOS/src/stream_buffer.c **** {
  27              		.loc 1 1190 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
1191:FreeRTOS/src/stream_buffer.c **** /* Returns the distance between xTail and xHead. */
1192:FreeRTOS/src/stream_buffer.c **** size_t xCount;
  32              		.loc 1 1192 1 view .LVU1
1193:FreeRTOS/src/stream_buffer.c **** 
1194:FreeRTOS/src/stream_buffer.c **** 	xCount = pxStreamBuffer->xLength + pxStreamBuffer->xHead;
  33              		.loc 1 1194 2 view .LVU2
  34              		.loc 1 1194 25 is_stmt 0 view .LVU3
  35 0000 8268     		ldr	r2, [r0, #8]
  36              		.loc 1 1194 51 view .LVU4
  37 0002 4368     		ldr	r3, [r0, #4]
  38              		.loc 1 1194 9 view .LVU5
  39 0004 1344     		add	r3, r3, r2
  40              	.LVL1:
1195:FreeRTOS/src/stream_buffer.c **** 	xCount -= pxStreamBuffer->xTail;
  41              		.loc 1 1195 2 is_stmt 1 view .LVU6
  42              		.loc 1 1195 26 is_stmt 0 view .LVU7
  43 0006 0068     		ldr	r0, [r0]
  44              	.LVL2:
  45              		.loc 1 1195 9 view .LVU8
  46 0008 181A     		subs	r0, r3, r0
  47              	.LVL3:
1196:FreeRTOS/src/stream_buffer.c **** 	if ( xCount >= pxStreamBuffer->xLength )
  48              		.loc 1 1196 2 is_stmt 1 view .LVU9
  49              		.loc 1 1196 5 is_stmt 0 view .LVU10
  50 000a 8242     		cmp	r2, r0
  51 000c 00D8     		bhi	.L1
1197:FreeRTOS/src/stream_buffer.c **** 	{
1198:FreeRTOS/src/stream_buffer.c **** 		xCount -= pxStreamBuffer->xLength;
  52              		.loc 1 1198 3 is_stmt 1 view .LVU11
  53              		.loc 1 1198 10 is_stmt 0 view .LVU12
  54 000e 801A     		subs	r0, r0, r2
  55              	.LVL4:
1199:FreeRTOS/src/stream_buffer.c **** 	}
1200:FreeRTOS/src/stream_buffer.c **** 	else
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 23


1201:FreeRTOS/src/stream_buffer.c **** 	{
1202:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
  56              		.loc 1 1202 27 is_stmt 1 view .LVU13
1203:FreeRTOS/src/stream_buffer.c **** 	}
1204:FreeRTOS/src/stream_buffer.c **** 
1205:FreeRTOS/src/stream_buffer.c **** 	return xCount;
  57              		.loc 1 1205 2 view .LVU14
  58              	.L1:
1206:FreeRTOS/src/stream_buffer.c **** }
  59              		.loc 1 1206 1 is_stmt 0 view .LVU15
  60 0010 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE23:
  64              		.section	.text.prvInitialiseNewStreamBuffer,"ax",%progbits
  65              		.align	1
  66              		.syntax unified
  67              		.thumb
  68              		.thumb_func
  69              		.fpu softvfp
  71              	prvInitialiseNewStreamBuffer:
  72              	.LVL5:
  73              	.LFB24:
1207:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
1208:FreeRTOS/src/stream_buffer.c **** 
1209:FreeRTOS/src/stream_buffer.c **** static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,
1210:FreeRTOS/src/stream_buffer.c **** 										  uint8_t * const pucBuffer,
1211:FreeRTOS/src/stream_buffer.c **** 										  size_t xBufferSizeBytes,
1212:FreeRTOS/src/stream_buffer.c **** 										  size_t xTriggerLevelBytes,
1213:FreeRTOS/src/stream_buffer.c **** 										  uint8_t ucFlags )
1214:FreeRTOS/src/stream_buffer.c **** {
  74              		.loc 1 1214 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		@ args = 4, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		.loc 1 1214 1 is_stmt 0 view .LVU17
  79 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  80              	.LCFI0:
  81              		.cfi_def_cfa_offset 24
  82              		.cfi_offset 3, -24
  83              		.cfi_offset 4, -20
  84              		.cfi_offset 5, -16
  85              		.cfi_offset 6, -12
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 0446     		mov	r4, r0
  89 0004 0F46     		mov	r7, r1
  90 0006 1646     		mov	r6, r2
  91 0008 1D46     		mov	r5, r3
1215:FreeRTOS/src/stream_buffer.c **** 	/* Assert here is deliberately writing to the entire buffer to ensure it can
1216:FreeRTOS/src/stream_buffer.c **** 	be written to without generating exceptions, and is setting the buffer to a
1217:FreeRTOS/src/stream_buffer.c **** 	known value to assist in development/debugging. */
1218:FreeRTOS/src/stream_buffer.c **** 	#if( configASSERT_DEFINED == 1 )
1219:FreeRTOS/src/stream_buffer.c **** 	{
1220:FreeRTOS/src/stream_buffer.c **** 		/* The value written just has to be identifiable when looking at the
1221:FreeRTOS/src/stream_buffer.c **** 		memory.  Don't use 0xA5 as that is the stack fill value and could
1222:FreeRTOS/src/stream_buffer.c **** 		result in confusion as to what is actually being observed. */
1223:FreeRTOS/src/stream_buffer.c **** 		const BaseType_t xWriteValue = 0x55;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 24


1224:FreeRTOS/src/stream_buffer.c **** 		configASSERT( memset( pucBuffer, ( int ) xWriteValue, xBufferSizeBytes ) == pucBuffer );
1225:FreeRTOS/src/stream_buffer.c **** 	} /*lint !e529 !e438 xWriteValue is only used if configASSERT() is defined. */
1226:FreeRTOS/src/stream_buffer.c **** 	#endif
1227:FreeRTOS/src/stream_buffer.c **** 
1228:FreeRTOS/src/stream_buffer.c **** 	( void ) memset( ( void * ) pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) ); /*lint !e9087 memset
  92              		.loc 1 1228 2 is_stmt 1 view .LVU18
  93              		.loc 1 1228 11 is_stmt 0 view .LVU19
  94 000a 2022     		movs	r2, #32
  95              	.LVL6:
  96              		.loc 1 1228 11 view .LVU20
  97 000c 0021     		movs	r1, #0
  98              	.LVL7:
  99              		.loc 1 1228 11 view .LVU21
 100 000e FFF7FEFF 		bl	memset
 101              	.LVL8:
1229:FreeRTOS/src/stream_buffer.c **** 	pxStreamBuffer->pucBuffer = pucBuffer;
 102              		.loc 1 1229 2 is_stmt 1 view .LVU22
 103              		.loc 1 1229 28 is_stmt 0 view .LVU23
 104 0012 A761     		str	r7, [r4, #24]
1230:FreeRTOS/src/stream_buffer.c **** 	pxStreamBuffer->xLength = xBufferSizeBytes;
 105              		.loc 1 1230 2 is_stmt 1 view .LVU24
 106              		.loc 1 1230 26 is_stmt 0 view .LVU25
 107 0014 A660     		str	r6, [r4, #8]
1231:FreeRTOS/src/stream_buffer.c **** 	pxStreamBuffer->xTriggerLevelBytes = xTriggerLevelBytes;
 108              		.loc 1 1231 2 is_stmt 1 view .LVU26
 109              		.loc 1 1231 37 is_stmt 0 view .LVU27
 110 0016 E560     		str	r5, [r4, #12]
1232:FreeRTOS/src/stream_buffer.c **** 	pxStreamBuffer->ucFlags = ucFlags;
 111              		.loc 1 1232 2 is_stmt 1 view .LVU28
 112              		.loc 1 1232 26 is_stmt 0 view .LVU29
 113 0018 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 114 001c 2377     		strb	r3, [r4, #28]
1233:FreeRTOS/src/stream_buffer.c **** }
 115              		.loc 1 1233 1 view .LVU30
 116 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 117              		.loc 1 1233 1 view .LVU31
 118              		.cfi_endproc
 119              	.LFE24:
 121              		.section	.text.prvWriteBytesToBuffer,"ax",%progbits
 122              		.align	1
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 126              		.fpu softvfp
 128              	prvWriteBytesToBuffer:
 129              	.LVL9:
 130              	.LFB21:
1089:FreeRTOS/src/stream_buffer.c **** size_t xNextHead, xFirstLength;
 131              		.loc 1 1089 1 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
1089:FreeRTOS/src/stream_buffer.c **** size_t xNextHead, xFirstLength;
 135              		.loc 1 1089 1 is_stmt 0 view .LVU33
 136 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 137              	.LCFI1:
 138              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 25


 139              		.cfi_offset 4, -24
 140              		.cfi_offset 5, -20
 141              		.cfi_offset 6, -16
 142              		.cfi_offset 7, -12
 143              		.cfi_offset 8, -8
 144              		.cfi_offset 14, -4
 145 0004 0646     		mov	r6, r0
 146 0006 8846     		mov	r8, r1
 147 0008 1746     		mov	r7, r2
1090:FreeRTOS/src/stream_buffer.c **** 
 148              		.loc 1 1090 1 is_stmt 1 view .LVU34
1092:FreeRTOS/src/stream_buffer.c **** 
 149              		.loc 1 1092 39 view .LVU35
1094:FreeRTOS/src/stream_buffer.c **** 
 150              		.loc 1 1094 2 view .LVU36
1094:FreeRTOS/src/stream_buffer.c **** 
 151              		.loc 1 1094 12 is_stmt 0 view .LVU37
 152 000a 4468     		ldr	r4, [r0, #4]
 153              	.LVL10:
1099:FreeRTOS/src/stream_buffer.c **** 
 154              		.loc 1 1099 2 is_stmt 1 view .LVU38
1099:FreeRTOS/src/stream_buffer.c **** 
 155              		.loc 1 1099 17 is_stmt 0 view .LVU39
 156 000c 8568     		ldr	r5, [r0, #8]
 157 000e 2D1B     		subs	r5, r5, r4
1099:FreeRTOS/src/stream_buffer.c **** 
 158              		.loc 1 1099 15 view .LVU40
 159 0010 9542     		cmp	r5, r2
 160 0012 28BF     		it	cs
 161 0014 1546     		movcs	r5, r2
 162              	.LVL11:
1102:FreeRTOS/src/stream_buffer.c **** 	( void ) memcpy( ( void* ) ( &( pxStreamBuffer->pucBuffer[ xNextHead ] ) ), ( const void * ) pucDa
 163              		.loc 1 1102 73 is_stmt 1 view .LVU41
1103:FreeRTOS/src/stream_buffer.c **** 
 164              		.loc 1 1103 2 view .LVU42
1103:FreeRTOS/src/stream_buffer.c **** 
 165              		.loc 1 1103 48 is_stmt 0 view .LVU43
 166 0016 8069     		ldr	r0, [r0, #24]
 167              	.LVL12:
1103:FreeRTOS/src/stream_buffer.c **** 
 168              		.loc 1 1103 11 view .LVU44
 169 0018 2A46     		mov	r2, r5
 170              	.LVL13:
1103:FreeRTOS/src/stream_buffer.c **** 
 171              		.loc 1 1103 11 view .LVU45
 172 001a 2044     		add	r0, r0, r4
 173 001c FFF7FEFF 		bl	memcpy
 174              	.LVL14:
1107:FreeRTOS/src/stream_buffer.c **** 	{
 175              		.loc 1 1107 2 is_stmt 1 view .LVU46
1107:FreeRTOS/src/stream_buffer.c **** 	{
 176              		.loc 1 1107 4 is_stmt 0 view .LVU47
 177 0020 AF42     		cmp	r7, r5
 178 0022 08D8     		bhi	.L9
 179              	.L6:
1115:FreeRTOS/src/stream_buffer.c **** 	}
 180              		.loc 1 1115 27 is_stmt 1 view .LVU48
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 26


1118:FreeRTOS/src/stream_buffer.c **** 	if( xNextHead >= pxStreamBuffer->xLength )
 181              		.loc 1 1118 2 view .LVU49
1118:FreeRTOS/src/stream_buffer.c **** 	if( xNextHead >= pxStreamBuffer->xLength )
 182              		.loc 1 1118 12 is_stmt 0 view .LVU50
 183 0024 3C44     		add	r4, r4, r7
 184              	.LVL15:
1119:FreeRTOS/src/stream_buffer.c **** 	{
 185              		.loc 1 1119 2 is_stmt 1 view .LVU51
1119:FreeRTOS/src/stream_buffer.c **** 	{
 186              		.loc 1 1119 33 is_stmt 0 view .LVU52
 187 0026 B368     		ldr	r3, [r6, #8]
1119:FreeRTOS/src/stream_buffer.c **** 	{
 188              		.loc 1 1119 4 view .LVU53
 189 0028 A342     		cmp	r3, r4
 190 002a 00D8     		bhi	.L7
1121:FreeRTOS/src/stream_buffer.c **** 	}
 191              		.loc 1 1121 3 is_stmt 1 view .LVU54
1121:FreeRTOS/src/stream_buffer.c **** 	}
 192              		.loc 1 1121 13 is_stmt 0 view .LVU55
 193 002c E41A     		subs	r4, r4, r3
 194              	.LVL16:
 195              	.L7:
1125:FreeRTOS/src/stream_buffer.c **** 	}
 196              		.loc 1 1125 27 is_stmt 1 view .LVU56
1128:FreeRTOS/src/stream_buffer.c **** 
 197              		.loc 1 1128 2 view .LVU57
1128:FreeRTOS/src/stream_buffer.c **** 
 198              		.loc 1 1128 24 is_stmt 0 view .LVU58
 199 002e 7460     		str	r4, [r6, #4]
1130:FreeRTOS/src/stream_buffer.c **** }
 200              		.loc 1 1130 2 is_stmt 1 view .LVU59
1131:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 201              		.loc 1 1131 1 is_stmt 0 view .LVU60
 202 0030 3846     		mov	r0, r7
 203 0032 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 204              	.LVL17:
 205              	.L9:
1110:FreeRTOS/src/stream_buffer.c **** 		( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstLength 
 206              		.loc 1 1110 71 is_stmt 1 view .LVU61
1111:FreeRTOS/src/stream_buffer.c **** 	}
 207              		.loc 1 1111 3 view .LVU62
1111:FreeRTOS/src/stream_buffer.c **** 	}
 208              		.loc 1 1111 12 is_stmt 0 view .LVU63
 209 0036 7A1B     		subs	r2, r7, r5
 210 0038 08EB0501 		add	r1, r8, r5
 211 003c B069     		ldr	r0, [r6, #24]
 212 003e FFF7FEFF 		bl	memcpy
 213              	.LVL18:
 214 0042 EFE7     		b	.L6
 215              		.cfi_endproc
 216              	.LFE21:
 218              		.section	.text.prvWriteMessageToBuffer,"ax",%progbits
 219              		.align	1
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu softvfp
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 27


 225              	prvWriteMessageToBuffer:
 226              	.LVL19:
 227              	.LFB12:
 666:FreeRTOS/src/stream_buffer.c **** 	BaseType_t xShouldWrite;
 228              		.loc 1 666 1 is_stmt 1 view -0
 229              		.cfi_startproc
 230              		@ args = 4, pretend = 0, frame = 8
 231              		@ frame_needed = 0, uses_anonymous_args = 0
 666:FreeRTOS/src/stream_buffer.c **** 	BaseType_t xShouldWrite;
 232              		.loc 1 666 1 is_stmt 0 view .LVU65
 233 0000 30B5     		push	{r4, r5, lr}
 234              	.LCFI2:
 235              		.cfi_def_cfa_offset 12
 236              		.cfi_offset 4, -12
 237              		.cfi_offset 5, -8
 238              		.cfi_offset 14, -4
 239 0002 83B0     		sub	sp, sp, #12
 240              	.LCFI3:
 241              		.cfi_def_cfa_offset 24
 242 0004 0446     		mov	r4, r0
 243 0006 0192     		str	r2, [sp, #4]
 667:FreeRTOS/src/stream_buffer.c **** 	size_t xReturn;
 244              		.loc 1 667 2 is_stmt 1 view .LVU66
 668:FreeRTOS/src/stream_buffer.c **** 
 245              		.loc 1 668 2 view .LVU67
 670:FreeRTOS/src/stream_buffer.c **** 	{
 246              		.loc 1 670 2 view .LVU68
 670:FreeRTOS/src/stream_buffer.c **** 	{
 247              		.loc 1 670 4 is_stmt 0 view .LVU69
 248 0008 1846     		mov	r0, r3
 249              	.LVL20:
 670:FreeRTOS/src/stream_buffer.c **** 	{
 250              		.loc 1 670 4 view .LVU70
 251 000a 6BB1     		cbz	r3, .L11
 252 000c 0D46     		mov	r5, r1
 676:FreeRTOS/src/stream_buffer.c **** 	{
 253              		.loc 1 676 7 is_stmt 1 view .LVU71
 676:FreeRTOS/src/stream_buffer.c **** 	{
 254              		.loc 1 676 27 is_stmt 0 view .LVU72
 255 000e 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 256              	.LVL21:
 676:FreeRTOS/src/stream_buffer.c **** 	{
 257              		.loc 1 676 9 view .LVU73
 258 0010 13F0010F 		tst	r3, #1
 259 0014 0AD1     		bne	.L12
 681:FreeRTOS/src/stream_buffer.c **** 		xDataLengthBytes = configMIN( xDataLengthBytes, xSpace );
 260              		.loc 1 681 3 is_stmt 1 view .LVU74
 261              	.LVL22:
 682:FreeRTOS/src/stream_buffer.c **** 	}
 262              		.loc 1 682 3 view .LVU75
 682:FreeRTOS/src/stream_buffer.c **** 	}
 263              		.loc 1 682 22 is_stmt 0 view .LVU76
 264 0016 9042     		cmp	r0, r2
 265 0018 28BF     		it	cs
 266 001a 1046     		movcs	r0, r2
 267              	.LVL23:
 682:FreeRTOS/src/stream_buffer.c **** 	}
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 28


 268              		.loc 1 682 20 view .LVU77
 269 001c 0190     		str	r0, [sp, #4]
 699:FreeRTOS/src/stream_buffer.c **** 	{
 270              		.loc 1 699 2 is_stmt 1 view .LVU78
 271              	.LVL24:
 272              	.L13:
 702:FreeRTOS/src/stream_buffer.c **** 	}
 273              		.loc 1 702 3 view .LVU79
 702:FreeRTOS/src/stream_buffer.c **** 	}
 274              		.loc 1 702 13 is_stmt 0 view .LVU80
 275 001e 019A     		ldr	r2, [sp, #4]
 276 0020 2946     		mov	r1, r5
 277 0022 2046     		mov	r0, r4
 278 0024 FFF7FEFF 		bl	prvWriteBytesToBuffer
 279              	.LVL25:
 280              	.L11:
 709:FreeRTOS/src/stream_buffer.c **** }
 281              		.loc 1 709 2 is_stmt 1 view .LVU81
 710:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 282              		.loc 1 710 1 is_stmt 0 view .LVU82
 283 0028 03B0     		add	sp, sp, #12
 284              	.LCFI4:
 285              		.cfi_remember_state
 286              		.cfi_def_cfa_offset 12
 287              		@ sp needed
 288 002a 30BD     		pop	{r4, r5, pc}
 289              	.LVL26:
 290              	.L12:
 291              	.LCFI5:
 292              		.cfi_restore_state
 684:FreeRTOS/src/stream_buffer.c **** 	{
 293              		.loc 1 684 7 is_stmt 1 view .LVU83
 684:FreeRTOS/src/stream_buffer.c **** 	{
 294              		.loc 1 684 9 is_stmt 0 view .LVU84
 295 002c 069B     		ldr	r3, [sp, #24]
 296 002e 9842     		cmp	r0, r3
 297 0030 01D2     		bcs	.L16
 706:FreeRTOS/src/stream_buffer.c **** 	}
 298              		.loc 1 706 11 view .LVU85
 299 0032 0020     		movs	r0, #0
 300              	.LVL27:
 706:FreeRTOS/src/stream_buffer.c **** 	}
 301              		.loc 1 706 11 view .LVU86
 302 0034 F8E7     		b	.L11
 303              	.LVL28:
 304              	.L16:
 690:FreeRTOS/src/stream_buffer.c **** 		( void ) prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) &( xDataLengthBytes ), sbBYTE
 305              		.loc 1 690 3 is_stmt 1 view .LVU87
 691:FreeRTOS/src/stream_buffer.c **** 	}
 306              		.loc 1 691 3 view .LVU88
 691:FreeRTOS/src/stream_buffer.c **** 	}
 307              		.loc 1 691 12 is_stmt 0 view .LVU89
 308 0036 0422     		movs	r2, #4
 309              	.LVL29:
 691:FreeRTOS/src/stream_buffer.c **** 	}
 310              		.loc 1 691 12 view .LVU90
 311 0038 0DEB0201 		add	r1, sp, r2
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 29


 312              	.LVL30:
 691:FreeRTOS/src/stream_buffer.c **** 	}
 313              		.loc 1 691 12 view .LVU91
 314 003c 2046     		mov	r0, r4
 315              	.LVL31:
 691:FreeRTOS/src/stream_buffer.c **** 	}
 316              		.loc 1 691 12 view .LVU92
 317 003e FFF7FEFF 		bl	prvWriteBytesToBuffer
 318              	.LVL32:
 699:FreeRTOS/src/stream_buffer.c **** 	{
 319              		.loc 1 699 2 is_stmt 1 view .LVU93
 320 0042 ECE7     		b	.L13
 321              		.cfi_endproc
 322              	.LFE12:
 324              		.section	.text.prvReadBytesFromBuffer,"ax",%progbits
 325              		.align	1
 326              		.syntax unified
 327              		.thumb
 328              		.thumb_func
 329              		.fpu softvfp
 331              	prvReadBytesFromBuffer:
 332              	.LVL33:
 333              	.LFB22:
1135:FreeRTOS/src/stream_buffer.c **** size_t xCount, xFirstLength, xNextTail;
 334              		.loc 1 1135 1 view -0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
1135:FreeRTOS/src/stream_buffer.c **** size_t xCount, xFirstLength, xNextTail;
 338              		.loc 1 1135 1 is_stmt 0 view .LVU95
 339 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 340              	.LCFI6:
 341              		.cfi_def_cfa_offset 24
 342              		.cfi_offset 4, -24
 343              		.cfi_offset 5, -20
 344              		.cfi_offset 6, -16
 345              		.cfi_offset 7, -12
 346              		.cfi_offset 8, -8
 347              		.cfi_offset 14, -4
1136:FreeRTOS/src/stream_buffer.c **** 
 348              		.loc 1 1136 1 is_stmt 1 view .LVU96
1139:FreeRTOS/src/stream_buffer.c **** 
 349              		.loc 1 1139 2 view .LVU97
1139:FreeRTOS/src/stream_buffer.c **** 
 350              		.loc 1 1139 9 is_stmt 0 view .LVU98
 351 0004 9A42     		cmp	r2, r3
 352 0006 28BF     		it	cs
 353 0008 1A46     		movcs	r2, r3
 354              	.LVL34:
1139:FreeRTOS/src/stream_buffer.c **** 
 355              		.loc 1 1139 9 view .LVU99
 356 000a 1446     		mov	r4, r2
 357              	.LVL35:
1141:FreeRTOS/src/stream_buffer.c **** 	{
 358              		.loc 1 1141 2 is_stmt 1 view .LVU100
1141:FreeRTOS/src/stream_buffer.c **** 	{
 359              		.loc 1 1141 4 is_stmt 0 view .LVU101
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 30


 360 000c 12B9     		cbnz	r2, .L22
 361              	.LVL36:
 362              	.L17:
1186:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 363              		.loc 1 1186 1 view .LVU102
 364 000e 2046     		mov	r0, r4
 365 0010 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 366              	.LVL37:
 367              	.L22:
1186:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 368              		.loc 1 1186 1 view .LVU103
 369 0014 8846     		mov	r8, r1
 370 0016 0546     		mov	r5, r0
1143:FreeRTOS/src/stream_buffer.c **** 
 371              		.loc 1 1143 3 is_stmt 1 view .LVU104
1143:FreeRTOS/src/stream_buffer.c **** 
 372              		.loc 1 1143 13 is_stmt 0 view .LVU105
 373 0018 0668     		ldr	r6, [r0]
 374              	.LVL38:
1148:FreeRTOS/src/stream_buffer.c **** 
 375              		.loc 1 1148 3 is_stmt 1 view .LVU106
1148:FreeRTOS/src/stream_buffer.c **** 
 376              		.loc 1 1148 18 is_stmt 0 view .LVU107
 377 001a 8768     		ldr	r7, [r0, #8]
 378 001c BF1B     		subs	r7, r7, r6
1148:FreeRTOS/src/stream_buffer.c **** 
 379              		.loc 1 1148 16 view .LVU108
 380 001e 9742     		cmp	r7, r2
 381 0020 28BF     		it	cs
 382 0022 1746     		movcs	r7, r2
 383              	.LVL39:
1152:FreeRTOS/src/stream_buffer.c **** 		configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
 384              		.loc 1 1152 44 is_stmt 1 view .LVU109
1153:FreeRTOS/src/stream_buffer.c **** 		( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xNextTail ] )
 385              		.loc 1 1153 74 view .LVU110
1154:FreeRTOS/src/stream_buffer.c **** 
 386              		.loc 1 1154 3 view .LVU111
1154:FreeRTOS/src/stream_buffer.c **** 
 387              		.loc 1 1154 74 is_stmt 0 view .LVU112
 388 0024 8169     		ldr	r1, [r0, #24]
 389              	.LVL40:
1154:FreeRTOS/src/stream_buffer.c **** 
 390              		.loc 1 1154 12 view .LVU113
 391 0026 3A46     		mov	r2, r7
 392              	.LVL41:
1154:FreeRTOS/src/stream_buffer.c **** 
 393              		.loc 1 1154 12 view .LVU114
 394 0028 3144     		add	r1, r1, r6
 395 002a 4046     		mov	r0, r8
 396              	.LVL42:
1154:FreeRTOS/src/stream_buffer.c **** 
 397              		.loc 1 1154 12 view .LVU115
 398 002c FFF7FEFF 		bl	memcpy
 399              	.LVL43:
1158:FreeRTOS/src/stream_buffer.c **** 		{
 400              		.loc 1 1158 3 is_stmt 1 view .LVU116
1158:FreeRTOS/src/stream_buffer.c **** 		{
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 31


 401              		.loc 1 1158 5 is_stmt 0 view .LVU117
 402 0030 BC42     		cmp	r4, r7
 403 0032 06D8     		bhi	.L23
 404              	.L19:
1166:FreeRTOS/src/stream_buffer.c **** 		}
 405              		.loc 1 1166 28 is_stmt 1 view .LVU118
1171:FreeRTOS/src/stream_buffer.c **** 
 406              		.loc 1 1171 3 view .LVU119
1171:FreeRTOS/src/stream_buffer.c **** 
 407              		.loc 1 1171 13 is_stmt 0 view .LVU120
 408 0034 2644     		add	r6, r6, r4
 409              	.LVL44:
1173:FreeRTOS/src/stream_buffer.c **** 		{
 410              		.loc 1 1173 3 is_stmt 1 view .LVU121
1173:FreeRTOS/src/stream_buffer.c **** 		{
 411              		.loc 1 1173 34 is_stmt 0 view .LVU122
 412 0036 AB68     		ldr	r3, [r5, #8]
1173:FreeRTOS/src/stream_buffer.c **** 		{
 413              		.loc 1 1173 5 view .LVU123
 414 0038 B342     		cmp	r3, r6
 415 003a 00D8     		bhi	.L20
1175:FreeRTOS/src/stream_buffer.c **** 		}
 416              		.loc 1 1175 4 is_stmt 1 view .LVU124
1175:FreeRTOS/src/stream_buffer.c **** 		}
 417              		.loc 1 1175 14 is_stmt 0 view .LVU125
 418 003c F61A     		subs	r6, r6, r3
 419              	.LVL45:
 420              	.L20:
1178:FreeRTOS/src/stream_buffer.c **** 	}
 421              		.loc 1 1178 3 is_stmt 1 view .LVU126
1178:FreeRTOS/src/stream_buffer.c **** 	}
 422              		.loc 1 1178 25 is_stmt 0 view .LVU127
 423 003e 2E60     		str	r6, [r5]
1182:FreeRTOS/src/stream_buffer.c **** 	}
 424              		.loc 1 1182 27 is_stmt 1 view .LVU128
1185:FreeRTOS/src/stream_buffer.c **** }
 425              		.loc 1 1185 2 view .LVU129
1185:FreeRTOS/src/stream_buffer.c **** }
 426              		.loc 1 1185 9 is_stmt 0 view .LVU130
 427 0040 E5E7     		b	.L17
 428              	.L23:
1161:FreeRTOS/src/stream_buffer.c **** 			( void ) memcpy( ( void * ) &( pucData[ xFirstLength ] ), ( void * ) ( pxStreamBuffer->pucBuffer
 429              		.loc 1 1161 39 is_stmt 1 view .LVU131
1162:FreeRTOS/src/stream_buffer.c **** 		}
 430              		.loc 1 1162 4 view .LVU132
1162:FreeRTOS/src/stream_buffer.c **** 		}
 431              		.loc 1 1162 13 is_stmt 0 view .LVU133
 432 0042 E21B     		subs	r2, r4, r7
 433 0044 A969     		ldr	r1, [r5, #24]
 434 0046 08EB0700 		add	r0, r8, r7
 435 004a FFF7FEFF 		bl	memcpy
 436              	.LVL46:
 437 004e F1E7     		b	.L19
 438              		.cfi_endproc
 439              	.LFE22:
 441              		.section	.text.prvReadMessageFromBuffer,"ax",%progbits
 442              		.align	1
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 32


 443              		.syntax unified
 444              		.thumb
 445              		.thumb_func
 446              		.fpu softvfp
 448              	prvReadMessageFromBuffer:
 449              	.LVL47:
 450              	.LFB16:
 923:FreeRTOS/src/stream_buffer.c **** size_t xOriginalTail, xReceivedLength, xNextMessageLength;
 451              		.loc 1 923 1 is_stmt 1 view -0
 452              		.cfi_startproc
 453              		@ args = 4, pretend = 0, frame = 8
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 923:FreeRTOS/src/stream_buffer.c **** size_t xOriginalTail, xReceivedLength, xNextMessageLength;
 455              		.loc 1 923 1 is_stmt 0 view .LVU135
 456 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 457              	.LCFI7:
 458              		.cfi_def_cfa_offset 28
 459              		.cfi_offset 4, -28
 460              		.cfi_offset 5, -24
 461              		.cfi_offset 6, -20
 462              		.cfi_offset 7, -16
 463              		.cfi_offset 8, -12
 464              		.cfi_offset 9, -8
 465              		.cfi_offset 14, -4
 466 0004 83B0     		sub	sp, sp, #12
 467              	.LCFI8:
 468              		.cfi_def_cfa_offset 40
 469 0006 0546     		mov	r5, r0
 470 0008 8846     		mov	r8, r1
 471 000a 1646     		mov	r6, r2
 472 000c 1C46     		mov	r4, r3
 473 000e 0A9F     		ldr	r7, [sp, #40]
 924:FreeRTOS/src/stream_buffer.c **** configMESSAGE_BUFFER_LENGTH_TYPE xTempNextMessageLength;
 474              		.loc 1 924 1 is_stmt 1 view .LVU136
 925:FreeRTOS/src/stream_buffer.c **** 
 475              		.loc 1 925 1 view .LVU137
 927:FreeRTOS/src/stream_buffer.c **** 	{
 476              		.loc 1 927 2 view .LVU138
 927:FreeRTOS/src/stream_buffer.c **** 	{
 477              		.loc 1 927 4 is_stmt 0 view .LVU139
 478 0010 47B9     		cbnz	r7, .L28
 479              	.LVL48:
 480              	.L25:
 964:FreeRTOS/src/stream_buffer.c **** 
 481              		.loc 1 964 2 is_stmt 1 view .LVU140
 964:FreeRTOS/src/stream_buffer.c **** 
 482              		.loc 1 964 20 is_stmt 0 view .LVU141
 483 0012 2346     		mov	r3, r4
 484 0014 3246     		mov	r2, r6
 485 0016 4146     		mov	r1, r8
 486 0018 2846     		mov	r0, r5
 487 001a FFF7FEFF 		bl	prvReadBytesFromBuffer
 488              	.LVL49:
 966:FreeRTOS/src/stream_buffer.c **** }
 489              		.loc 1 966 2 is_stmt 1 view .LVU142
 967:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 490              		.loc 1 967 1 is_stmt 0 view .LVU143
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 33


 491 001e 03B0     		add	sp, sp, #12
 492              	.LCFI9:
 493              		.cfi_remember_state
 494              		.cfi_def_cfa_offset 28
 495              		@ sp needed
 496 0020 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 497              	.LVL50:
 498              	.L28:
 499              	.LCFI10:
 500              		.cfi_restore_state
 933:FreeRTOS/src/stream_buffer.c **** 		( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, xBytesToS
 501              		.loc 1 933 3 is_stmt 1 view .LVU144
 933:FreeRTOS/src/stream_buffer.c **** 		( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, xBytesToS
 502              		.loc 1 933 17 is_stmt 0 view .LVU145
 503 0024 D0F80090 		ldr	r9, [r0]
 504              	.LVL51:
 934:FreeRTOS/src/stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 505              		.loc 1 934 3 is_stmt 1 view .LVU146
 934:FreeRTOS/src/stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 506              		.loc 1 934 12 is_stmt 0 view .LVU147
 507 0028 3A46     		mov	r2, r7
 508              	.LVL52:
 934:FreeRTOS/src/stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 509              		.loc 1 934 12 view .LVU148
 510 002a 01A9     		add	r1, sp, #4
 511              	.LVL53:
 934:FreeRTOS/src/stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 512              		.loc 1 934 12 view .LVU149
 513 002c FFF7FEFF 		bl	prvReadBytesFromBuffer
 514              	.LVL54:
 935:FreeRTOS/src/stream_buffer.c **** 
 515              		.loc 1 935 3 is_stmt 1 view .LVU150
 935:FreeRTOS/src/stream_buffer.c **** 
 516              		.loc 1 935 22 is_stmt 0 view .LVU151
 517 0030 019B     		ldr	r3, [sp, #4]
 518              	.LVL55:
 939:FreeRTOS/src/stream_buffer.c **** 
 519              		.loc 1 939 3 is_stmt 1 view .LVU152
 939:FreeRTOS/src/stream_buffer.c **** 
 520              		.loc 1 939 19 is_stmt 0 view .LVU153
 521 0032 E41B     		subs	r4, r4, r7
 522              	.LVL56:
 943:FreeRTOS/src/stream_buffer.c **** 		{
 523              		.loc 1 943 3 is_stmt 1 view .LVU154
 943:FreeRTOS/src/stream_buffer.c **** 		{
 524              		.loc 1 943 5 is_stmt 0 view .LVU155
 525 0034 B342     		cmp	r3, r6
 526 0036 03D9     		bls	.L26
 948:FreeRTOS/src/stream_buffer.c **** 			xNextMessageLength = 0;
 527              		.loc 1 948 4 is_stmt 1 view .LVU156
 948:FreeRTOS/src/stream_buffer.c **** 			xNextMessageLength = 0;
 528              		.loc 1 948 26 is_stmt 0 view .LVU157
 529 0038 C5F80090 		str	r9, [r5]
 949:FreeRTOS/src/stream_buffer.c **** 		}
 530              		.loc 1 949 4 is_stmt 1 view .LVU158
 531              	.LVL57:
 949:FreeRTOS/src/stream_buffer.c **** 		}
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 34


 532              		.loc 1 949 23 is_stmt 0 view .LVU159
 533 003c 0026     		movs	r6, #0
 534              	.LVL58:
 949:FreeRTOS/src/stream_buffer.c **** 		}
 535              		.loc 1 949 23 view .LVU160
 536 003e E8E7     		b	.L25
 537              	.LVL59:
 538              	.L26:
 935:FreeRTOS/src/stream_buffer.c **** 
 539              		.loc 1 935 22 view .LVU161
 540 0040 1E46     		mov	r6, r3
 541              	.LVL60:
 935:FreeRTOS/src/stream_buffer.c **** 
 542              		.loc 1 935 22 view .LVU162
 543 0042 E6E7     		b	.L25
 544              		.cfi_endproc
 545              	.LFE16:
 547              		.section	.text.xStreamBufferGenericCreate,"ax",%progbits
 548              		.align	1
 549              		.global	xStreamBufferGenericCreate
 550              		.syntax unified
 551              		.thumb
 552              		.thumb_func
 553              		.fpu softvfp
 555              	xStreamBufferGenericCreate:
 556              	.LVL61:
 557              	.LFB4:
 220:FreeRTOS/src/stream_buffer.c **** 	uint8_t *pucAllocatedMemory;
 558              		.loc 1 220 2 is_stmt 1 view -0
 559              		.cfi_startproc
 560              		@ args = 0, pretend = 0, frame = 0
 561              		@ frame_needed = 0, uses_anonymous_args = 0
 220:FreeRTOS/src/stream_buffer.c **** 	uint8_t *pucAllocatedMemory;
 562              		.loc 1 220 2 is_stmt 0 view .LVU164
 563 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 564              	.LCFI11:
 565              		.cfi_def_cfa_offset 20
 566              		.cfi_offset 4, -20
 567              		.cfi_offset 5, -16
 568              		.cfi_offset 6, -12
 569              		.cfi_offset 7, -8
 570              		.cfi_offset 14, -4
 571 0002 83B0     		sub	sp, sp, #12
 572              	.LCFI12:
 573              		.cfi_def_cfa_offset 32
 574 0004 0D46     		mov	r5, r1
 221:FreeRTOS/src/stream_buffer.c **** 	uint8_t ucFlags;
 575              		.loc 1 221 2 is_stmt 1 view .LVU165
 222:FreeRTOS/src/stream_buffer.c **** 
 576              		.loc 1 222 2 view .LVU166
 228:FreeRTOS/src/stream_buffer.c **** 		{
 577              		.loc 1 228 3 view .LVU167
 228:FreeRTOS/src/stream_buffer.c **** 		{
 578              		.loc 1 228 5 is_stmt 0 view .LVU168
 579 0006 012A     		cmp	r2, #1
 580 0008 12D0     		beq	.L36
 237:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xBufferSizeBytes > 0 );
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 35


 581              		.loc 1 237 12 view .LVU169
 582 000a 0027     		movs	r7, #0
 583              	.L30:
 584              	.LVL62:
 238:FreeRTOS/src/stream_buffer.c **** 		}
 585              		.loc 1 238 40 is_stmt 1 view .LVU170
 240:FreeRTOS/src/stream_buffer.c **** 
 586              		.loc 1 240 57 view .LVU171
 244:FreeRTOS/src/stream_buffer.c **** 		{
 587              		.loc 1 244 3 view .LVU172
 244:FreeRTOS/src/stream_buffer.c **** 		{
 588              		.loc 1 244 5 is_stmt 0 view .LVU173
 589 000c 05B9     		cbnz	r5, .L31
 246:FreeRTOS/src/stream_buffer.c **** 		}
 590              		.loc 1 246 23 view .LVU174
 591 000e 0125     		movs	r5, #1
 592              	.L31:
 593              	.LVL63:
 257:FreeRTOS/src/stream_buffer.c **** 		pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffer_t ) ); /
 594              		.loc 1 257 3 is_stmt 1 view .LVU175
 257:FreeRTOS/src/stream_buffer.c **** 		pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffer_t ) ); /
 595              		.loc 1 257 19 is_stmt 0 view .LVU176
 596 0010 461C     		adds	r6, r0, #1
 597              	.LVL64:
 258:FreeRTOS/src/stream_buffer.c **** 
 598              		.loc 1 258 3 is_stmt 1 view .LVU177
 258:FreeRTOS/src/stream_buffer.c **** 
 599              		.loc 1 258 38 is_stmt 0 view .LVU178
 600 0012 2130     		adds	r0, r0, #33
 601 0014 FFF7FEFF 		bl	pvPortMalloc
 602              	.LVL65:
 260:FreeRTOS/src/stream_buffer.c **** 		{
 603              		.loc 1 260 3 is_stmt 1 view .LVU179
 260:FreeRTOS/src/stream_buffer.c **** 		{
 604              		.loc 1 260 5 is_stmt 0 view .LVU180
 605 0018 0446     		mov	r4, r0
 606 001a 30B1     		cbz	r0, .L29
 262:FreeRTOS/src/stream_buffer.c **** 										   pucAllocatedMemory + sizeof( StreamBuffer_t ),  /* Storage area follows. */ /*lint !e9
 607              		.loc 1 262 4 is_stmt 1 view .LVU181
 608 001c 0097     		str	r7, [sp]
 609 001e 2B46     		mov	r3, r5
 610 0020 3246     		mov	r2, r6
 611 0022 00F12001 		add	r1, r0, #32
 612 0026 FFF7FEFF 		bl	prvInitialiseNewStreamBuffer
 613              	.LVL66:
 268:FreeRTOS/src/stream_buffer.c **** 		}
 614              		.loc 1 268 94 view .LVU182
 272:FreeRTOS/src/stream_buffer.c **** 		}
 615              		.loc 1 272 56 view .LVU183
 275:FreeRTOS/src/stream_buffer.c **** 	}
 616              		.loc 1 275 3 view .LVU184
 617              	.L29:
 276:FreeRTOS/src/stream_buffer.c **** 
 618              		.loc 1 276 2 is_stmt 0 view .LVU185
 619 002a 2046     		mov	r0, r4
 620 002c 03B0     		add	sp, sp, #12
 621              	.LCFI13:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 36


 622              		.cfi_remember_state
 623              		.cfi_def_cfa_offset 20
 624              		@ sp needed
 625 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 626              	.LVL67:
 627              	.L36:
 628              	.LCFI14:
 629              		.cfi_restore_state
 231:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 630              		.loc 1 231 12 view .LVU186
 631 0030 0127     		movs	r7, #1
 632 0032 EBE7     		b	.L30
 633              		.cfi_endproc
 634              	.LFE4:
 636              		.section	.text.vStreamBufferDelete,"ax",%progbits
 637              		.align	1
 638              		.global	vStreamBufferDelete
 639              		.syntax unified
 640              		.thumb
 641              		.thumb_func
 642              		.fpu softvfp
 644              	vStreamBufferDelete:
 645              	.LVL68:
 646              	.LFB5:
 360:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 647              		.loc 1 360 1 is_stmt 1 view -0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 360:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 651              		.loc 1 360 1 is_stmt 0 view .LVU188
 652 0000 08B5     		push	{r3, lr}
 653              	.LCFI15:
 654              		.cfi_def_cfa_offset 8
 655              		.cfi_offset 3, -8
 656              		.cfi_offset 14, -4
 361:FreeRTOS/src/stream_buffer.c **** 
 657              		.loc 1 361 1 is_stmt 1 view .LVU189
 658              	.LVL69:
 363:FreeRTOS/src/stream_buffer.c **** 
 659              		.loc 1 363 32 view .LVU190
 365:FreeRTOS/src/stream_buffer.c **** 
 660              		.loc 1 365 44 view .LVU191
 367:FreeRTOS/src/stream_buffer.c **** 	{
 661              		.loc 1 367 2 view .LVU192
 367:FreeRTOS/src/stream_buffer.c **** 	{
 662              		.loc 1 367 22 is_stmt 0 view .LVU193
 663 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 367:FreeRTOS/src/stream_buffer.c **** 	{
 664              		.loc 1 367 4 view .LVU194
 665 0004 13F0020F 		tst	r3, #2
 666 0008 02D1     		bne	.L38
 373:FreeRTOS/src/stream_buffer.c **** 		}
 667              		.loc 1 373 4 is_stmt 1 view .LVU195
 668 000a FFF7FEFF 		bl	vPortFree
 669              	.LVL70:
 670              	.L37:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 37


 389:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 671              		.loc 1 389 1 is_stmt 0 view .LVU196
 672 000e 08BD     		pop	{r3, pc}
 673              	.LVL71:
 674              	.L38:
 387:FreeRTOS/src/stream_buffer.c **** 	}
 675              		.loc 1 387 3 is_stmt 1 view .LVU197
 387:FreeRTOS/src/stream_buffer.c **** 	}
 676              		.loc 1 387 12 is_stmt 0 view .LVU198
 677 0010 2022     		movs	r2, #32
 678 0012 0021     		movs	r1, #0
 679 0014 FFF7FEFF 		bl	memset
 680              	.LVL72:
 389:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 681              		.loc 1 389 1 view .LVU199
 682 0018 F9E7     		b	.L37
 683              		.cfi_endproc
 684              	.LFE5:
 686              		.section	.text.xStreamBufferReset,"ax",%progbits
 687              		.align	1
 688              		.global	xStreamBufferReset
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu softvfp
 694              	xStreamBufferReset:
 695              	.LVL73:
 696              	.LFB6:
 393:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 697              		.loc 1 393 1 is_stmt 1 view -0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 393:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 701              		.loc 1 393 1 is_stmt 0 view .LVU201
 702 0000 10B5     		push	{r4, lr}
 703              	.LCFI16:
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 4, -8
 706              		.cfi_offset 14, -4
 707 0002 82B0     		sub	sp, sp, #8
 708              	.LCFI17:
 709              		.cfi_def_cfa_offset 16
 710 0004 0446     		mov	r4, r0
 394:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn = pdFAIL;
 711              		.loc 1 394 1 is_stmt 1 view .LVU202
 712              	.LVL74:
 395:FreeRTOS/src/stream_buffer.c **** 
 713              		.loc 1 395 1 view .LVU203
 401:FreeRTOS/src/stream_buffer.c **** 
 714              		.loc 1 401 32 view .LVU204
 412:FreeRTOS/src/stream_buffer.c **** 	{
 715              		.loc 1 412 2 view .LVU205
 716 0006 FFF7FEFF 		bl	vPortEnterCritical
 717              	.LVL75:
 414:FreeRTOS/src/stream_buffer.c **** 		{
 718              		.loc 1 414 3 view .LVU206
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 38


 414:FreeRTOS/src/stream_buffer.c **** 		{
 719              		.loc 1 414 21 is_stmt 0 view .LVU207
 720 000a 2369     		ldr	r3, [r4, #16]
 414:FreeRTOS/src/stream_buffer.c **** 		{
 721              		.loc 1 414 5 view .LVU208
 722 000c 2BB1     		cbz	r3, .L46
 395:FreeRTOS/src/stream_buffer.c **** 
 723              		.loc 1 395 12 view .LVU209
 724 000e 0024     		movs	r4, #0
 725              	.LVL76:
 726              	.L42:
 431:FreeRTOS/src/stream_buffer.c **** 			}
 727              		.loc 1 431 46 is_stmt 1 view .LVU210
 435:FreeRTOS/src/stream_buffer.c **** 
 728              		.loc 1 435 2 view .LVU211
 729 0010 FFF7FEFF 		bl	vPortExitCritical
 730              	.LVL77:
 437:FreeRTOS/src/stream_buffer.c **** }
 731              		.loc 1 437 2 view .LVU212
 438:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 732              		.loc 1 438 1 is_stmt 0 view .LVU213
 733 0014 2046     		mov	r0, r4
 734 0016 02B0     		add	sp, sp, #8
 735              	.LCFI18:
 736              		.cfi_remember_state
 737              		.cfi_def_cfa_offset 8
 738              		@ sp needed
 739 0018 10BD     		pop	{r4, pc}
 740              	.LVL78:
 741              	.L46:
 742              	.LCFI19:
 743              		.cfi_restore_state
 416:FreeRTOS/src/stream_buffer.c **** 			{
 744              		.loc 1 416 4 is_stmt 1 view .LVU214
 416:FreeRTOS/src/stream_buffer.c **** 			{
 745              		.loc 1 416 22 is_stmt 0 view .LVU215
 746 001a 6369     		ldr	r3, [r4, #20]
 416:FreeRTOS/src/stream_buffer.c **** 			{
 747              		.loc 1 416 6 view .LVU216
 748 001c 0BB1     		cbz	r3, .L47
 395:FreeRTOS/src/stream_buffer.c **** 
 749              		.loc 1 395 12 view .LVU217
 750 001e 0024     		movs	r4, #0
 751              	.LVL79:
 395:FreeRTOS/src/stream_buffer.c **** 
 752              		.loc 1 395 12 view .LVU218
 753 0020 F6E7     		b	.L42
 754              	.LVL80:
 755              	.L47:
 418:FreeRTOS/src/stream_buffer.c **** 											  pxStreamBuffer->pucBuffer,
 756              		.loc 1 418 5 is_stmt 1 view .LVU219
 757 0022 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 758 0024 0093     		str	r3, [sp]
 759 0026 E368     		ldr	r3, [r4, #12]
 760 0028 A268     		ldr	r2, [r4, #8]
 761 002a A169     		ldr	r1, [r4, #24]
 762 002c 2046     		mov	r0, r4
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 39


 763 002e FFF7FEFF 		bl	prvInitialiseNewStreamBuffer
 764              	.LVL81:
 423:FreeRTOS/src/stream_buffer.c **** 
 765              		.loc 1 423 5 view .LVU220
 423:FreeRTOS/src/stream_buffer.c **** 
 766              		.loc 1 423 13 is_stmt 0 view .LVU221
 767 0032 0124     		movs	r4, #1
 768              	.LVL82:
 423:FreeRTOS/src/stream_buffer.c **** 
 769              		.loc 1 423 13 view .LVU222
 770 0034 ECE7     		b	.L42
 771              		.cfi_endproc
 772              	.LFE6:
 774              		.section	.text.xStreamBufferSetTriggerLevel,"ax",%progbits
 775              		.align	1
 776              		.global	xStreamBufferSetTriggerLevel
 777              		.syntax unified
 778              		.thumb
 779              		.thumb_func
 780              		.fpu softvfp
 782              	xStreamBufferSetTriggerLevel:
 783              	.LVL83:
 784              	.LFB7:
 442:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 785              		.loc 1 442 1 is_stmt 1 view -0
 786              		.cfi_startproc
 787              		@ args = 0, pretend = 0, frame = 0
 788              		@ frame_needed = 0, uses_anonymous_args = 0
 789              		@ link register save eliminated.
 443:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 790              		.loc 1 443 1 view .LVU224
 444:FreeRTOS/src/stream_buffer.c **** 
 791              		.loc 1 444 1 view .LVU225
 446:FreeRTOS/src/stream_buffer.c **** 
 792              		.loc 1 446 32 view .LVU226
 449:FreeRTOS/src/stream_buffer.c **** 	{
 793              		.loc 1 449 2 view .LVU227
 449:FreeRTOS/src/stream_buffer.c **** 	{
 794              		.loc 1 449 4 is_stmt 0 view .LVU228
 795 0000 0B46     		mov	r3, r1
 796 0002 01B9     		cbnz	r1, .L49
 451:FreeRTOS/src/stream_buffer.c **** 	}
 797              		.loc 1 451 17 view .LVU229
 798 0004 0123     		movs	r3, #1
 799              	.L49:
 800              	.LVL84:
 456:FreeRTOS/src/stream_buffer.c **** 	{
 801              		.loc 1 456 2 is_stmt 1 view .LVU230
 456:FreeRTOS/src/stream_buffer.c **** 	{
 802              		.loc 1 456 37 is_stmt 0 view .LVU231
 803 0006 8268     		ldr	r2, [r0, #8]
 456:FreeRTOS/src/stream_buffer.c **** 	{
 804              		.loc 1 456 4 view .LVU232
 805 0008 9A42     		cmp	r2, r3
 806 000a 02D3     		bcc	.L52
 458:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdPASS;
 807              		.loc 1 458 3 is_stmt 1 view .LVU233
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 40


 458:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdPASS;
 808              		.loc 1 458 38 is_stmt 0 view .LVU234
 809 000c C360     		str	r3, [r0, #12]
 459:FreeRTOS/src/stream_buffer.c **** 	}
 810              		.loc 1 459 3 is_stmt 1 view .LVU235
 811              	.LVL85:
 459:FreeRTOS/src/stream_buffer.c **** 	}
 812              		.loc 1 459 11 is_stmt 0 view .LVU236
 813 000e 0120     		movs	r0, #1
 814              	.LVL86:
 459:FreeRTOS/src/stream_buffer.c **** 	}
 815              		.loc 1 459 11 view .LVU237
 816 0010 7047     		bx	lr
 817              	.LVL87:
 818              	.L52:
 463:FreeRTOS/src/stream_buffer.c **** 	}
 819              		.loc 1 463 11 view .LVU238
 820 0012 0020     		movs	r0, #0
 821              	.LVL88:
 466:FreeRTOS/src/stream_buffer.c **** }
 822              		.loc 1 466 2 is_stmt 1 view .LVU239
 467:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 823              		.loc 1 467 1 is_stmt 0 view .LVU240
 824 0014 7047     		bx	lr
 825              		.cfi_endproc
 826              	.LFE7:
 828              		.section	.text.xStreamBufferSpacesAvailable,"ax",%progbits
 829              		.align	1
 830              		.global	xStreamBufferSpacesAvailable
 831              		.syntax unified
 832              		.thumb
 833              		.thumb_func
 834              		.fpu softvfp
 836              	xStreamBufferSpacesAvailable:
 837              	.LVL89:
 838              	.LFB8:
 471:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 839              		.loc 1 471 1 is_stmt 1 view -0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              		@ link register save eliminated.
 472:FreeRTOS/src/stream_buffer.c **** size_t xSpace;
 844              		.loc 1 472 1 view .LVU242
 473:FreeRTOS/src/stream_buffer.c **** 
 845              		.loc 1 473 1 view .LVU243
 475:FreeRTOS/src/stream_buffer.c **** 
 846              		.loc 1 475 32 view .LVU244
 477:FreeRTOS/src/stream_buffer.c **** 	xSpace -= pxStreamBuffer->xHead;
 847              		.loc 1 477 2 view .LVU245
 477:FreeRTOS/src/stream_buffer.c **** 	xSpace -= pxStreamBuffer->xHead;
 848              		.loc 1 477 25 is_stmt 0 view .LVU246
 849 0000 8268     		ldr	r2, [r0, #8]
 477:FreeRTOS/src/stream_buffer.c **** 	xSpace -= pxStreamBuffer->xHead;
 850              		.loc 1 477 51 view .LVU247
 851 0002 0368     		ldr	r3, [r0]
 477:FreeRTOS/src/stream_buffer.c **** 	xSpace -= pxStreamBuffer->xHead;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 41


 852              		.loc 1 477 9 view .LVU248
 853 0004 1344     		add	r3, r3, r2
 854              	.LVL90:
 478:FreeRTOS/src/stream_buffer.c **** 	xSpace -= ( size_t ) 1;
 855              		.loc 1 478 2 is_stmt 1 view .LVU249
 478:FreeRTOS/src/stream_buffer.c **** 	xSpace -= ( size_t ) 1;
 856              		.loc 1 478 26 is_stmt 0 view .LVU250
 857 0006 4068     		ldr	r0, [r0, #4]
 858              	.LVL91:
 478:FreeRTOS/src/stream_buffer.c **** 	xSpace -= ( size_t ) 1;
 859              		.loc 1 478 9 view .LVU251
 860 0008 181A     		subs	r0, r3, r0
 861              	.LVL92:
 479:FreeRTOS/src/stream_buffer.c **** 
 862              		.loc 1 479 2 is_stmt 1 view .LVU252
 479:FreeRTOS/src/stream_buffer.c **** 
 863              		.loc 1 479 9 is_stmt 0 view .LVU253
 864 000a 0138     		subs	r0, r0, #1
 865              	.LVL93:
 481:FreeRTOS/src/stream_buffer.c **** 	{
 866              		.loc 1 481 2 is_stmt 1 view .LVU254
 481:FreeRTOS/src/stream_buffer.c **** 	{
 867              		.loc 1 481 4 is_stmt 0 view .LVU255
 868 000c 8242     		cmp	r2, r0
 869 000e 00D8     		bhi	.L53
 483:FreeRTOS/src/stream_buffer.c **** 	}
 870              		.loc 1 483 3 is_stmt 1 view .LVU256
 483:FreeRTOS/src/stream_buffer.c **** 	}
 871              		.loc 1 483 10 is_stmt 0 view .LVU257
 872 0010 801A     		subs	r0, r0, r2
 873              	.LVL94:
 487:FreeRTOS/src/stream_buffer.c **** 	}
 874              		.loc 1 487 27 is_stmt 1 view .LVU258
 490:FreeRTOS/src/stream_buffer.c **** }
 875              		.loc 1 490 2 view .LVU259
 876              	.L53:
 491:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 877              		.loc 1 491 1 is_stmt 0 view .LVU260
 878 0012 7047     		bx	lr
 879              		.cfi_endproc
 880              	.LFE8:
 882              		.section	.text.xStreamBufferBytesAvailable,"ax",%progbits
 883              		.align	1
 884              		.global	xStreamBufferBytesAvailable
 885              		.syntax unified
 886              		.thumb
 887              		.thumb_func
 888              		.fpu softvfp
 890              	xStreamBufferBytesAvailable:
 891              	.LVL95:
 892              	.LFB9:
 495:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 893              		.loc 1 495 1 is_stmt 1 view -0
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 0, uses_anonymous_args = 0
 495:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 42


 897              		.loc 1 495 1 is_stmt 0 view .LVU262
 898 0000 08B5     		push	{r3, lr}
 899              	.LCFI20:
 900              		.cfi_def_cfa_offset 8
 901              		.cfi_offset 3, -8
 902              		.cfi_offset 14, -4
 496:FreeRTOS/src/stream_buffer.c **** size_t xReturn;
 903              		.loc 1 496 1 is_stmt 1 view .LVU263
 904              	.LVL96:
 497:FreeRTOS/src/stream_buffer.c **** 
 905              		.loc 1 497 1 view .LVU264
 499:FreeRTOS/src/stream_buffer.c **** 
 906              		.loc 1 499 32 view .LVU265
 501:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 907              		.loc 1 501 2 view .LVU266
 501:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 908              		.loc 1 501 12 is_stmt 0 view .LVU267
 909 0002 FFF7FEFF 		bl	prvBytesInBuffer
 910              	.LVL97:
 502:FreeRTOS/src/stream_buffer.c **** }
 911              		.loc 1 502 2 is_stmt 1 view .LVU268
 503:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 912              		.loc 1 503 1 is_stmt 0 view .LVU269
 913 0006 08BD     		pop	{r3, pc}
 914              		.cfi_endproc
 915              	.LFE9:
 917              		.section	.text.xStreamBufferSend,"ax",%progbits
 918              		.align	1
 919              		.global	xStreamBufferSend
 920              		.syntax unified
 921              		.thumb
 922              		.thumb_func
 923              		.fpu softvfp
 925              	xStreamBufferSend:
 926              	.LVL98:
 927              	.LFB10:
 510:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 928              		.loc 1 510 1 is_stmt 1 view -0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 16
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 510:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 932              		.loc 1 510 1 is_stmt 0 view .LVU271
 933 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 934              	.LCFI21:
 935              		.cfi_def_cfa_offset 24
 936              		.cfi_offset 4, -24
 937              		.cfi_offset 5, -20
 938              		.cfi_offset 6, -16
 939              		.cfi_offset 7, -12
 940              		.cfi_offset 8, -8
 941              		.cfi_offset 14, -4
 942 0004 86B0     		sub	sp, sp, #24
 943              	.LCFI22:
 944              		.cfi_def_cfa_offset 48
 945 0006 0446     		mov	r4, r0
 946 0008 8846     		mov	r8, r1
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 43


 947 000a 1746     		mov	r7, r2
 948 000c 0393     		str	r3, [sp, #12]
 511:FreeRTOS/src/stream_buffer.c **** size_t xReturn, xSpace = 0;
 949              		.loc 1 511 1 is_stmt 1 view .LVU272
 950              	.LVL99:
 512:FreeRTOS/src/stream_buffer.c **** size_t xRequiredSpace = xDataLengthBytes;
 951              		.loc 1 512 1 view .LVU273
 513:FreeRTOS/src/stream_buffer.c **** TimeOut_t xTimeOut;
 952              		.loc 1 513 1 view .LVU274
 514:FreeRTOS/src/stream_buffer.c **** 
 953              		.loc 1 514 1 view .LVU275
 516:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 954              		.loc 1 516 26 view .LVU276
 517:FreeRTOS/src/stream_buffer.c **** 
 955              		.loc 1 517 32 view .LVU277
 523:FreeRTOS/src/stream_buffer.c **** 	{
 956              		.loc 1 523 2 view .LVU278
 523:FreeRTOS/src/stream_buffer.c **** 	{
 957              		.loc 1 523 22 is_stmt 0 view .LVU279
 958 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 959              	.LVL100:
 523:FreeRTOS/src/stream_buffer.c **** 	{
 960              		.loc 1 523 4 view .LVU280
 961 0010 13F0010F 		tst	r3, #1
 962 0014 24D0     		beq	.L66
 525:FreeRTOS/src/stream_buffer.c **** 
 963              		.loc 1 525 3 is_stmt 1 view .LVU281
 525:FreeRTOS/src/stream_buffer.c **** 
 964              		.loc 1 525 18 is_stmt 0 view .LVU282
 965 0016 161D     		adds	r6, r2, #4
 966              	.LVL101:
 528:FreeRTOS/src/stream_buffer.c **** 	}
 967              		.loc 1 528 52 is_stmt 1 view .LVU283
 968              	.L58:
 532:FreeRTOS/src/stream_buffer.c **** 	}
 969              		.loc 1 532 27 view .LVU284
 535:FreeRTOS/src/stream_buffer.c **** 	{
 970              		.loc 1 535 2 view .LVU285
 535:FreeRTOS/src/stream_buffer.c **** 	{
 971              		.loc 1 535 19 is_stmt 0 view .LVU286
 972 0018 039B     		ldr	r3, [sp, #12]
 535:FreeRTOS/src/stream_buffer.c **** 	{
 973              		.loc 1 535 4 view .LVU287
 974 001a 33B3     		cbz	r3, .L59
 537:FreeRTOS/src/stream_buffer.c **** 
 975              		.loc 1 537 3 is_stmt 1 view .LVU288
 976 001c 04A8     		add	r0, sp, #16
 977              	.LVL102:
 537:FreeRTOS/src/stream_buffer.c **** 
 978              		.loc 1 537 3 is_stmt 0 view .LVU289
 979 001e FFF7FEFF 		bl	vTaskSetTimeOutState
 980              	.LVL103:
 981              	.L61:
 539:FreeRTOS/src/stream_buffer.c **** 		{
 982              		.loc 1 539 3 is_stmt 1 view .LVU290
 543:FreeRTOS/src/stream_buffer.c **** 			{
 983              		.loc 1 543 4 view .LVU291
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 44


 984 0022 FFF7FEFF 		bl	vPortEnterCritical
 985              	.LVL104:
 545:FreeRTOS/src/stream_buffer.c **** 
 986              		.loc 1 545 5 view .LVU292
 545:FreeRTOS/src/stream_buffer.c **** 
 987              		.loc 1 545 14 is_stmt 0 view .LVU293
 988 0026 2046     		mov	r0, r4
 989 0028 FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 990              	.LVL105:
 991 002c 0546     		mov	r5, r0
 992              	.LVL106:
 547:FreeRTOS/src/stream_buffer.c **** 				{
 993              		.loc 1 547 5 is_stmt 1 view .LVU294
 547:FreeRTOS/src/stream_buffer.c **** 				{
 994              		.loc 1 547 7 is_stmt 0 view .LVU295
 995 002e 8642     		cmp	r6, r0
 996 0030 18D9     		bls	.L60
 550:FreeRTOS/src/stream_buffer.c **** 
 997              		.loc 1 550 6 is_stmt 1 view .LVU296
 550:FreeRTOS/src/stream_buffer.c **** 
 998              		.loc 1 550 15 is_stmt 0 view .LVU297
 999 0032 0020     		movs	r0, #0
 1000              	.LVL107:
 550:FreeRTOS/src/stream_buffer.c **** 
 1001              		.loc 1 550 15 view .LVU298
 1002 0034 FFF7FEFF 		bl	xTaskNotifyStateClear
 1003              	.LVL108:
 553:FreeRTOS/src/stream_buffer.c **** 					pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 1004              		.loc 1 553 64 is_stmt 1 view .LVU299
 554:FreeRTOS/src/stream_buffer.c **** 				}
 1005              		.loc 1 554 6 view .LVU300
 554:FreeRTOS/src/stream_buffer.c **** 				}
 1006              		.loc 1 554 43 is_stmt 0 view .LVU301
 1007 0038 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1008              	.LVL109:
 554:FreeRTOS/src/stream_buffer.c **** 				}
 1009              		.loc 1 554 41 view .LVU302
 1010 003c 6061     		str	r0, [r4, #20]
 562:FreeRTOS/src/stream_buffer.c **** 
 1011              		.loc 1 562 4 is_stmt 1 view .LVU303
 1012 003e FFF7FEFF 		bl	vPortExitCritical
 1013              	.LVL110:
 564:FreeRTOS/src/stream_buffer.c **** 			( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 1014              		.loc 1 564 56 view .LVU304
 565:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToSend = NULL;
 1015              		.loc 1 565 4 view .LVU305
 565:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToSend = NULL;
 1016              		.loc 1 565 13 is_stmt 0 view .LVU306
 1017 0042 039B     		ldr	r3, [sp, #12]
 1018 0044 0022     		movs	r2, #0
 1019 0046 1146     		mov	r1, r2
 1020 0048 1046     		mov	r0, r2
 1021 004a FFF7FEFF 		bl	xTaskNotifyWait
 1022              	.LVL111:
 566:FreeRTOS/src/stream_buffer.c **** 
 1023              		.loc 1 566 4 is_stmt 1 view .LVU307
 566:FreeRTOS/src/stream_buffer.c **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 45


 1024              		.loc 1 566 39 is_stmt 0 view .LVU308
 1025 004e 0023     		movs	r3, #0
 1026 0050 6361     		str	r3, [r4, #20]
 568:FreeRTOS/src/stream_buffer.c **** 	}
 1027              		.loc 1 568 12 view .LVU309
 1028 0052 03A9     		add	r1, sp, #12
 1029 0054 04A8     		add	r0, sp, #16
 1030 0056 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1031              	.LVL112:
 568:FreeRTOS/src/stream_buffer.c **** 	}
 1032              		.loc 1 568 3 view .LVU310
 1033 005a 0028     		cmp	r0, #0
 1034 005c E1D0     		beq	.L61
 1035 005e 03E0     		b	.L62
 1036              	.LVL113:
 1037              	.L66:
 513:FreeRTOS/src/stream_buffer.c **** TimeOut_t xTimeOut;
 1038              		.loc 1 513 8 view .LVU311
 1039 0060 1646     		mov	r6, r2
 1040 0062 D9E7     		b	.L58
 1041              	.LVL114:
 1042              	.L60:
 558:FreeRTOS/src/stream_buffer.c **** 					break;
 1043              		.loc 1 558 6 is_stmt 1 view .LVU312
 1044 0064 FFF7FEFF 		bl	vPortExitCritical
 1045              	.LVL115:
 559:FreeRTOS/src/stream_buffer.c **** 				}
 1046              		.loc 1 559 6 view .LVU313
 1047              	.L62:
 572:FreeRTOS/src/stream_buffer.c **** 	}
 1048              		.loc 1 572 27 view .LVU314
 575:FreeRTOS/src/stream_buffer.c **** 	{
 1049              		.loc 1 575 2 view .LVU315
 575:FreeRTOS/src/stream_buffer.c **** 	{
 1050              		.loc 1 575 4 is_stmt 0 view .LVU316
 1051 0068 1DB9     		cbnz	r5, .L63
 1052              	.LVL116:
 1053              	.L59:
 577:FreeRTOS/src/stream_buffer.c **** 	}
 1054              		.loc 1 577 3 is_stmt 1 view .LVU317
 577:FreeRTOS/src/stream_buffer.c **** 	}
 1055              		.loc 1 577 12 is_stmt 0 view .LVU318
 1056 006a 2046     		mov	r0, r4
 1057 006c FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1058              	.LVL117:
 1059 0070 0546     		mov	r5, r0
 1060              	.LVL118:
 1061              	.L63:
 581:FreeRTOS/src/stream_buffer.c **** 	}
 1062              		.loc 1 581 27 is_stmt 1 view .LVU319
 584:FreeRTOS/src/stream_buffer.c **** 
 1063              		.loc 1 584 2 view .LVU320
 584:FreeRTOS/src/stream_buffer.c **** 
 1064              		.loc 1 584 12 is_stmt 0 view .LVU321
 1065 0072 0096     		str	r6, [sp]
 1066 0074 2B46     		mov	r3, r5
 1067 0076 3A46     		mov	r2, r7
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 46


 1068 0078 4146     		mov	r1, r8
 1069 007a 2046     		mov	r0, r4
 1070 007c FFF7FEFF 		bl	prvWriteMessageToBuffer
 1071              	.LVL119:
 586:FreeRTOS/src/stream_buffer.c **** 	{
 1072              		.loc 1 586 2 is_stmt 1 view .LVU322
 586:FreeRTOS/src/stream_buffer.c **** 	{
 1073              		.loc 1 586 4 is_stmt 0 view .LVU323
 1074 0080 0546     		mov	r5, r0
 1075              	.LVL120:
 586:FreeRTOS/src/stream_buffer.c **** 	{
 1076              		.loc 1 586 4 view .LVU324
 1077 0082 18B9     		cbnz	r0, .L68
 1078              	.LVL121:
 1079              	.L57:
 607:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1080              		.loc 1 607 1 view .LVU325
 1081 0084 2846     		mov	r0, r5
 1082 0086 06B0     		add	sp, sp, #24
 1083              	.LCFI23:
 1084              		.cfi_remember_state
 1085              		.cfi_def_cfa_offset 24
 1086              		@ sp needed
 1087 0088 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1088              	.LVL122:
 1089              	.L68:
 1090              	.LCFI24:
 1091              		.cfi_restore_state
 588:FreeRTOS/src/stream_buffer.c **** 
 1092              		.loc 1 588 52 is_stmt 1 view .LVU326
 591:FreeRTOS/src/stream_buffer.c **** 		{
 1093              		.loc 1 591 3 view .LVU327
 591:FreeRTOS/src/stream_buffer.c **** 		{
 1094              		.loc 1 591 7 is_stmt 0 view .LVU328
 1095 008c 2046     		mov	r0, r4
 1096              	.LVL123:
 591:FreeRTOS/src/stream_buffer.c **** 		{
 1097              		.loc 1 591 7 view .LVU329
 1098 008e FFF7FEFF 		bl	prvBytesInBuffer
 1099              	.LVL124:
 591:FreeRTOS/src/stream_buffer.c **** 		{
 1100              		.loc 1 591 59 view .LVU330
 1101 0092 E368     		ldr	r3, [r4, #12]
 591:FreeRTOS/src/stream_buffer.c **** 		{
 1102              		.loc 1 591 5 view .LVU331
 1103 0094 9842     		cmp	r0, r3
 1104 0096 F5D3     		bcc	.L57
 593:FreeRTOS/src/stream_buffer.c **** 		}
 1105              		.loc 1 593 4 is_stmt 1 view .LVU332
 1106 0098 FFF7FEFF 		bl	vTaskSuspendAll
 1107              	.LVL125:
 593:FreeRTOS/src/stream_buffer.c **** 		}
 1108              		.loc 1 593 4 view .LVU333
 1109 009c 2369     		ldr	r3, [r4, #16]
 1110 009e 3BB1     		cbz	r3, .L65
 593:FreeRTOS/src/stream_buffer.c **** 		}
 1111              		.loc 1 593 4 discriminator 1 view .LVU334
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 47


 1112 00a0 2069     		ldr	r0, [r4, #16]
 1113 00a2 0023     		movs	r3, #0
 1114 00a4 1A46     		mov	r2, r3
 1115 00a6 1946     		mov	r1, r3
 1116 00a8 FFF7FEFF 		bl	xTaskGenericNotify
 1117              	.LVL126:
 593:FreeRTOS/src/stream_buffer.c **** 		}
 1118              		.loc 1 593 4 discriminator 1 view .LVU335
 1119 00ac 0023     		movs	r3, #0
 1120 00ae 2361     		str	r3, [r4, #16]
 1121              	.L65:
 593:FreeRTOS/src/stream_buffer.c **** 		}
 1122              		.loc 1 593 4 discriminator 3 view .LVU336
 1123 00b0 FFF7FEFF 		bl	xTaskResumeAll
 1124              	.LVL127:
 593:FreeRTOS/src/stream_buffer.c **** 		}
 1125              		.loc 1 593 38 discriminator 3 view .LVU337
 602:FreeRTOS/src/stream_buffer.c **** 		traceSTREAM_BUFFER_SEND_FAILED( xStreamBuffer );
 1126              		.loc 1 602 27 discriminator 3 view .LVU338
 603:FreeRTOS/src/stream_buffer.c **** 	}
 1127              		.loc 1 603 50 discriminator 3 view .LVU339
 606:FreeRTOS/src/stream_buffer.c **** }
 1128              		.loc 1 606 2 discriminator 3 view .LVU340
 606:FreeRTOS/src/stream_buffer.c **** }
 1129              		.loc 1 606 9 is_stmt 0 discriminator 3 view .LVU341
 1130 00b4 E6E7     		b	.L57
 1131              		.cfi_endproc
 1132              	.LFE10:
 1134              		.section	.text.xStreamBufferSendFromISR,"ax",%progbits
 1135              		.align	1
 1136              		.global	xStreamBufferSendFromISR
 1137              		.syntax unified
 1138              		.thumb
 1139              		.thumb_func
 1140              		.fpu softvfp
 1142              	xStreamBufferSendFromISR:
 1143              	.LVL128:
 1144              	.LFB11:
 614:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1145              		.loc 1 614 1 is_stmt 1 view -0
 1146              		.cfi_startproc
 1147              		@ args = 0, pretend = 0, frame = 0
 1148              		@ frame_needed = 0, uses_anonymous_args = 0
 614:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1149              		.loc 1 614 1 is_stmt 0 view .LVU343
 1150 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1151              	.LCFI25:
 1152              		.cfi_def_cfa_offset 24
 1153              		.cfi_offset 4, -24
 1154              		.cfi_offset 5, -20
 1155              		.cfi_offset 6, -16
 1156              		.cfi_offset 7, -12
 1157              		.cfi_offset 8, -8
 1158              		.cfi_offset 14, -4
 1159 0004 82B0     		sub	sp, sp, #8
 1160              	.LCFI26:
 1161              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 48


 1162 0006 0446     		mov	r4, r0
 1163 0008 0E46     		mov	r6, r1
 1164 000a 1546     		mov	r5, r2
 1165 000c 9846     		mov	r8, r3
 615:FreeRTOS/src/stream_buffer.c **** size_t xReturn, xSpace;
 1166              		.loc 1 615 1 is_stmt 1 view .LVU344
 1167              	.LVL129:
 616:FreeRTOS/src/stream_buffer.c **** size_t xRequiredSpace = xDataLengthBytes;
 1168              		.loc 1 616 1 view .LVU345
 617:FreeRTOS/src/stream_buffer.c **** 
 1169              		.loc 1 617 1 view .LVU346
 619:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1170              		.loc 1 619 26 view .LVU347
 620:FreeRTOS/src/stream_buffer.c **** 
 1171              		.loc 1 620 32 view .LVU348
 626:FreeRTOS/src/stream_buffer.c **** 	{
 1172              		.loc 1 626 2 view .LVU349
 626:FreeRTOS/src/stream_buffer.c **** 	{
 1173              		.loc 1 626 22 is_stmt 0 view .LVU350
 1174 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1175              	.LVL130:
 626:FreeRTOS/src/stream_buffer.c **** 	{
 1176              		.loc 1 626 4 view .LVU351
 1177 0010 13F0010F 		tst	r3, #1
 1178 0014 01D0     		beq	.L73
 628:FreeRTOS/src/stream_buffer.c **** 	}
 1179              		.loc 1 628 3 is_stmt 1 view .LVU352
 628:FreeRTOS/src/stream_buffer.c **** 	}
 1180              		.loc 1 628 18 is_stmt 0 view .LVU353
 1181 0016 171D     		adds	r7, r2, #4
 1182              	.LVL131:
 628:FreeRTOS/src/stream_buffer.c **** 	}
 1183              		.loc 1 628 18 view .LVU354
 1184 0018 00E0     		b	.L70
 1185              	.LVL132:
 1186              	.L73:
 617:FreeRTOS/src/stream_buffer.c **** 
 1187              		.loc 1 617 8 view .LVU355
 1188 001a 1746     		mov	r7, r2
 1189              	.LVL133:
 1190              	.L70:
 632:FreeRTOS/src/stream_buffer.c **** 	}
 1191              		.loc 1 632 27 is_stmt 1 view .LVU356
 635:FreeRTOS/src/stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 1192              		.loc 1 635 2 view .LVU357
 635:FreeRTOS/src/stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 1193              		.loc 1 635 11 is_stmt 0 view .LVU358
 1194 001c 2046     		mov	r0, r4
 1195              	.LVL134:
 635:FreeRTOS/src/stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 1196              		.loc 1 635 11 view .LVU359
 1197 001e FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1198              	.LVL135:
 636:FreeRTOS/src/stream_buffer.c **** 
 1199              		.loc 1 636 2 is_stmt 1 view .LVU360
 636:FreeRTOS/src/stream_buffer.c **** 
 1200              		.loc 1 636 12 is_stmt 0 view .LVU361
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 49


 1201 0022 0097     		str	r7, [sp]
 1202 0024 0346     		mov	r3, r0
 1203 0026 2A46     		mov	r2, r5
 1204 0028 3146     		mov	r1, r6
 1205 002a 2046     		mov	r0, r4
 1206              	.LVL136:
 636:FreeRTOS/src/stream_buffer.c **** 
 1207              		.loc 1 636 12 view .LVU362
 1208 002c FFF7FEFF 		bl	prvWriteMessageToBuffer
 1209              	.LVL137:
 638:FreeRTOS/src/stream_buffer.c **** 	{
 1210              		.loc 1 638 2 is_stmt 1 view .LVU363
 638:FreeRTOS/src/stream_buffer.c **** 	{
 1211              		.loc 1 638 4 is_stmt 0 view .LVU364
 1212 0030 0546     		mov	r5, r0
 1213              	.LVL138:
 638:FreeRTOS/src/stream_buffer.c **** 	{
 1214              		.loc 1 638 4 view .LVU365
 1215 0032 18B9     		cbnz	r0, .L75
 1216              	.LVL139:
 1217              	.L69:
 658:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1218              		.loc 1 658 1 view .LVU366
 1219 0034 2846     		mov	r0, r5
 1220 0036 02B0     		add	sp, sp, #8
 1221              	.LCFI27:
 1222              		.cfi_remember_state
 1223              		.cfi_def_cfa_offset 24
 1224              		@ sp needed
 1225 0038 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1226              	.LVL140:
 1227              	.L75:
 1228              	.LCFI28:
 1229              		.cfi_restore_state
 641:FreeRTOS/src/stream_buffer.c **** 		{
 1230              		.loc 1 641 3 is_stmt 1 view .LVU367
 641:FreeRTOS/src/stream_buffer.c **** 		{
 1231              		.loc 1 641 7 is_stmt 0 view .LVU368
 1232 003c 2046     		mov	r0, r4
 1233              	.LVL141:
 641:FreeRTOS/src/stream_buffer.c **** 		{
 1234              		.loc 1 641 7 view .LVU369
 1235 003e FFF7FEFF 		bl	prvBytesInBuffer
 1236              	.LVL142:
 641:FreeRTOS/src/stream_buffer.c **** 		{
 1237              		.loc 1 641 59 view .LVU370
 1238 0042 E368     		ldr	r3, [r4, #12]
 641:FreeRTOS/src/stream_buffer.c **** 		{
 1239              		.loc 1 641 5 view .LVU371
 1240 0044 9842     		cmp	r0, r3
 1241 0046 F5D3     		bcc	.L69
 1242              	.LBB20:
 643:FreeRTOS/src/stream_buffer.c **** 		}
 1243              		.loc 1 643 4 is_stmt 1 view .LVU372
 643:FreeRTOS/src/stream_buffer.c **** 		}
 1244              		.loc 1 643 4 view .LVU373
 1245              	.LBB21:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 50


 1246              	.LBI21:
 1247              		.file 2 "FreeRTOS/inc/portmacro.h"
   1:FreeRTOS/inc/portmacro.h **** /*
   2:FreeRTOS/inc/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:FreeRTOS/inc/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:FreeRTOS/inc/portmacro.h ****  *
   5:FreeRTOS/inc/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:FreeRTOS/inc/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:FreeRTOS/inc/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:FreeRTOS/inc/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:FreeRTOS/inc/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:FreeRTOS/inc/portmacro.h ****  * subject to the following conditions:
  11:FreeRTOS/inc/portmacro.h ****  *
  12:FreeRTOS/inc/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:FreeRTOS/inc/portmacro.h ****  * copies or substantial portions of the Software.
  14:FreeRTOS/inc/portmacro.h ****  *
  15:FreeRTOS/inc/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:FreeRTOS/inc/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:FreeRTOS/inc/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:FreeRTOS/inc/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:FreeRTOS/inc/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:FreeRTOS/inc/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:FreeRTOS/inc/portmacro.h ****  *
  22:FreeRTOS/inc/portmacro.h ****  * http://www.FreeRTOS.org
  23:FreeRTOS/inc/portmacro.h ****  * http://aws.amazon.com/freertos
  24:FreeRTOS/inc/portmacro.h ****  *
  25:FreeRTOS/inc/portmacro.h ****  * 1 tab == 4 spaces!
  26:FreeRTOS/inc/portmacro.h ****  */
  27:FreeRTOS/inc/portmacro.h **** 
  28:FreeRTOS/inc/portmacro.h **** 
  29:FreeRTOS/inc/portmacro.h **** #ifndef PORTMACRO_H
  30:FreeRTOS/inc/portmacro.h **** #define PORTMACRO_H
  31:FreeRTOS/inc/portmacro.h **** 
  32:FreeRTOS/inc/portmacro.h **** #ifdef __cplusplus
  33:FreeRTOS/inc/portmacro.h **** extern "C" {
  34:FreeRTOS/inc/portmacro.h **** #endif
  35:FreeRTOS/inc/portmacro.h **** 
  36:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------
  37:FreeRTOS/inc/portmacro.h ****  * Port specific definitions.
  38:FreeRTOS/inc/portmacro.h ****  *
  39:FreeRTOS/inc/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:FreeRTOS/inc/portmacro.h ****  * given hardware and compiler.
  41:FreeRTOS/inc/portmacro.h ****  *
  42:FreeRTOS/inc/portmacro.h ****  * These settings should not be altered.
  43:FreeRTOS/inc/portmacro.h ****  *-----------------------------------------------------------
  44:FreeRTOS/inc/portmacro.h ****  */
  45:FreeRTOS/inc/portmacro.h **** 
  46:FreeRTOS/inc/portmacro.h **** /* Type definitions. */
  47:FreeRTOS/inc/portmacro.h **** #define portCHAR		char
  48:FreeRTOS/inc/portmacro.h **** #define portFLOAT		float
  49:FreeRTOS/inc/portmacro.h **** #define portDOUBLE		double
  50:FreeRTOS/inc/portmacro.h **** #define portLONG		long
  51:FreeRTOS/inc/portmacro.h **** #define portSHORT		short
  52:FreeRTOS/inc/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:FreeRTOS/inc/portmacro.h **** #define portBASE_TYPE	long
  54:FreeRTOS/inc/portmacro.h **** 
  55:FreeRTOS/inc/portmacro.h **** typedef portSTACK_TYPE StackType_t;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 51


  56:FreeRTOS/inc/portmacro.h **** typedef long BaseType_t;
  57:FreeRTOS/inc/portmacro.h **** typedef unsigned long UBaseType_t;
  58:FreeRTOS/inc/portmacro.h **** 
  59:FreeRTOS/inc/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:FreeRTOS/inc/portmacro.h **** 	typedef uint16_t TickType_t;
  61:FreeRTOS/inc/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:FreeRTOS/inc/portmacro.h **** #else
  63:FreeRTOS/inc/portmacro.h **** 	typedef uint32_t TickType_t;
  64:FreeRTOS/inc/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:FreeRTOS/inc/portmacro.h **** 
  66:FreeRTOS/inc/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:FreeRTOS/inc/portmacro.h **** 	not need to be guarded with a critical section. */
  68:FreeRTOS/inc/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:FreeRTOS/inc/portmacro.h **** #endif
  70:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
  71:FreeRTOS/inc/portmacro.h **** 
  72:FreeRTOS/inc/portmacro.h **** /* Architecture specifics. */
  73:FreeRTOS/inc/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:FreeRTOS/inc/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:FreeRTOS/inc/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
  77:FreeRTOS/inc/portmacro.h **** 
  78:FreeRTOS/inc/portmacro.h **** /* Scheduler utilities. */
  79:FreeRTOS/inc/portmacro.h **** #define portYIELD() 															\
  80:FreeRTOS/inc/portmacro.h **** {																				\
  81:FreeRTOS/inc/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:FreeRTOS/inc/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:FreeRTOS/inc/portmacro.h **** 																				\
  84:FreeRTOS/inc/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:FreeRTOS/inc/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:FreeRTOS/inc/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:FreeRTOS/inc/portmacro.h **** 	__asm volatile( "isb" );													\
  88:FreeRTOS/inc/portmacro.h **** }
  89:FreeRTOS/inc/portmacro.h **** 
  90:FreeRTOS/inc/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:FreeRTOS/inc/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:FreeRTOS/inc/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:FreeRTOS/inc/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
  95:FreeRTOS/inc/portmacro.h **** 
  96:FreeRTOS/inc/portmacro.h **** /* Critical section management. */
  97:FreeRTOS/inc/portmacro.h **** extern void vPortEnterCritical( void );
  98:FreeRTOS/inc/portmacro.h **** extern void vPortExitCritical( void );
  99:FreeRTOS/inc/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:FreeRTOS/inc/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:FreeRTOS/inc/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:FreeRTOS/inc/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:FreeRTOS/inc/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:FreeRTOS/inc/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:FreeRTOS/inc/portmacro.h **** 
 106:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 107:FreeRTOS/inc/portmacro.h **** 
 108:FreeRTOS/inc/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:FreeRTOS/inc/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:FreeRTOS/inc/portmacro.h **** (which build with all the ports) will build. */
 111:FreeRTOS/inc/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:FreeRTOS/inc/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 52


 113:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 114:FreeRTOS/inc/portmacro.h **** 
 115:FreeRTOS/inc/portmacro.h **** /* Tickless idle/low power functionality. */
 116:FreeRTOS/inc/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:FreeRTOS/inc/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:FreeRTOS/inc/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:FreeRTOS/inc/portmacro.h **** #endif
 120:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 121:FreeRTOS/inc/portmacro.h **** 
 122:FreeRTOS/inc/portmacro.h **** /* Architecture specific optimisations. */
 123:FreeRTOS/inc/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:FreeRTOS/inc/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:FreeRTOS/inc/portmacro.h **** #endif
 126:FreeRTOS/inc/portmacro.h **** 
 127:FreeRTOS/inc/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:FreeRTOS/inc/portmacro.h **** 
 129:FreeRTOS/inc/portmacro.h **** 	/* Generic helper function. */
 130:FreeRTOS/inc/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:FreeRTOS/inc/portmacro.h **** 	{
 132:FreeRTOS/inc/portmacro.h **** 	uint8_t ucReturn;
 133:FreeRTOS/inc/portmacro.h **** 
 134:FreeRTOS/inc/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:FreeRTOS/inc/portmacro.h **** 		return ucReturn;
 136:FreeRTOS/inc/portmacro.h **** 	}
 137:FreeRTOS/inc/portmacro.h **** 
 138:FreeRTOS/inc/portmacro.h **** 	/* Check the configuration. */
 139:FreeRTOS/inc/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:FreeRTOS/inc/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:FreeRTOS/inc/portmacro.h **** 	#endif
 142:FreeRTOS/inc/portmacro.h **** 
 143:FreeRTOS/inc/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:FreeRTOS/inc/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:FreeRTOS/inc/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:FreeRTOS/inc/portmacro.h **** 
 147:FreeRTOS/inc/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:FreeRTOS/inc/portmacro.h **** 
 149:FreeRTOS/inc/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:FreeRTOS/inc/portmacro.h **** 
 151:FreeRTOS/inc/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:FreeRTOS/inc/portmacro.h **** 
 153:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 154:FreeRTOS/inc/portmacro.h **** 
 155:FreeRTOS/inc/portmacro.h **** #ifdef configASSERT
 156:FreeRTOS/inc/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:FreeRTOS/inc/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:FreeRTOS/inc/portmacro.h **** #endif
 159:FreeRTOS/inc/portmacro.h **** 
 160:FreeRTOS/inc/portmacro.h **** /* portNOP() is not required by this port. */
 161:FreeRTOS/inc/portmacro.h **** #define portNOP()
 162:FreeRTOS/inc/portmacro.h **** 
 163:FreeRTOS/inc/portmacro.h **** #define portINLINE	__inline
 164:FreeRTOS/inc/portmacro.h **** 
 165:FreeRTOS/inc/portmacro.h **** #ifndef portFORCE_INLINE
 166:FreeRTOS/inc/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:FreeRTOS/inc/portmacro.h **** #endif
 168:FreeRTOS/inc/portmacro.h **** 
 169:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 53


 170:FreeRTOS/inc/portmacro.h **** 
 171:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:FreeRTOS/inc/portmacro.h **** {
 173:FreeRTOS/inc/portmacro.h **** uint32_t ulCurrentInterrupt;
 174:FreeRTOS/inc/portmacro.h **** BaseType_t xReturn;
 175:FreeRTOS/inc/portmacro.h **** 
 176:FreeRTOS/inc/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 177:FreeRTOS/inc/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 178:FreeRTOS/inc/portmacro.h **** 
 179:FreeRTOS/inc/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 180:FreeRTOS/inc/portmacro.h **** 	{
 181:FreeRTOS/inc/portmacro.h **** 		xReturn = pdFALSE;
 182:FreeRTOS/inc/portmacro.h **** 	}
 183:FreeRTOS/inc/portmacro.h **** 	else
 184:FreeRTOS/inc/portmacro.h **** 	{
 185:FreeRTOS/inc/portmacro.h **** 		xReturn = pdTRUE;
 186:FreeRTOS/inc/portmacro.h **** 	}
 187:FreeRTOS/inc/portmacro.h **** 
 188:FreeRTOS/inc/portmacro.h **** 	return xReturn;
 189:FreeRTOS/inc/portmacro.h **** }
 190:FreeRTOS/inc/portmacro.h **** 
 191:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 192:FreeRTOS/inc/portmacro.h **** 
 193:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:FreeRTOS/inc/portmacro.h **** {
 195:FreeRTOS/inc/portmacro.h **** uint32_t ulNewBASEPRI;
 196:FreeRTOS/inc/portmacro.h **** 
 197:FreeRTOS/inc/portmacro.h **** 	__asm volatile
 198:FreeRTOS/inc/portmacro.h **** 	(
 199:FreeRTOS/inc/portmacro.h **** 		"	mov %0, %1												\n" \
 200:FreeRTOS/inc/portmacro.h **** 		"	msr basepri, %0											\n" \
 201:FreeRTOS/inc/portmacro.h **** 		"	isb														\n" \
 202:FreeRTOS/inc/portmacro.h **** 		"	dsb														\n" \
 203:FreeRTOS/inc/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 204:FreeRTOS/inc/portmacro.h **** 	);
 205:FreeRTOS/inc/portmacro.h **** }
 206:FreeRTOS/inc/portmacro.h **** 
 207:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 208:FreeRTOS/inc/portmacro.h **** 
 209:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1248              		.loc 2 209 34 view .LVU374
 1249              	.LBB22:
 210:FreeRTOS/inc/portmacro.h **** {
 211:FreeRTOS/inc/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1250              		.loc 2 211 1 view .LVU375
 212:FreeRTOS/inc/portmacro.h **** 
 213:FreeRTOS/inc/portmacro.h **** 	__asm volatile
 1251              		.loc 2 213 2 view .LVU376
 1252              		.syntax unified
 1253              	@ 213 "FreeRTOS/inc/portmacro.h" 1
 1254 0048 EFF31186 			mrs r6, basepri											
 1255 004c 4FF0BF03 		mov r3, #191												
 1256 0050 83F31188 		msr basepri, r3											
 1257 0054 BFF36F8F 		isb														
 1258 0058 BFF34F8F 		dsb														
 1259              	
 1260              	@ 0 "" 2
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 54


 1261              	.LVL143:
 214:FreeRTOS/inc/portmacro.h **** 	(
 215:FreeRTOS/inc/portmacro.h **** 		"	mrs %0, basepri											\n" \
 216:FreeRTOS/inc/portmacro.h **** 		"	mov %1, %2												\n" \
 217:FreeRTOS/inc/portmacro.h **** 		"	msr basepri, %1											\n" \
 218:FreeRTOS/inc/portmacro.h **** 		"	isb														\n" \
 219:FreeRTOS/inc/portmacro.h **** 		"	dsb														\n" \
 220:FreeRTOS/inc/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 221:FreeRTOS/inc/portmacro.h **** 	);
 222:FreeRTOS/inc/portmacro.h **** 
 223:FreeRTOS/inc/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 224:FreeRTOS/inc/portmacro.h **** 	warnings. */
 225:FreeRTOS/inc/portmacro.h **** 	return ulOriginalBASEPRI;
 1262              		.loc 2 225 2 view .LVU377
 1263              		.loc 2 225 2 is_stmt 0 view .LVU378
 1264              		.thumb
 1265              		.syntax unified
 1266              	.LBE22:
 1267              	.LBE21:
 643:FreeRTOS/src/stream_buffer.c **** 		}
 1268              		.loc 1 643 4 is_stmt 1 view .LVU379
 1269 005c 2369     		ldr	r3, [r4, #16]
 1270 005e 4BB1     		cbz	r3, .L72
 643:FreeRTOS/src/stream_buffer.c **** 		}
 1271              		.loc 1 643 4 discriminator 1 view .LVU380
 1272 0060 2069     		ldr	r0, [r4, #16]
 1273 0062 CDF80080 		str	r8, [sp]
 1274 0066 0023     		movs	r3, #0
 1275 0068 1A46     		mov	r2, r3
 1276 006a 1946     		mov	r1, r3
 1277 006c FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 1278              	.LVL144:
 643:FreeRTOS/src/stream_buffer.c **** 		}
 1279              		.loc 1 643 4 discriminator 1 view .LVU381
 1280 0070 0023     		movs	r3, #0
 1281 0072 2361     		str	r3, [r4, #16]
 1282              	.L72:
 643:FreeRTOS/src/stream_buffer.c **** 		}
 1283              		.loc 1 643 4 discriminator 3 view .LVU382
 1284              	.LVL145:
 1285              	.LBB23:
 1286              	.LBI23:
 226:FreeRTOS/inc/portmacro.h **** }
 227:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 228:FreeRTOS/inc/portmacro.h **** 
 229:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1287              		.loc 2 229 30 discriminator 3 view .LVU383
 1288              	.LBB24:
 230:FreeRTOS/inc/portmacro.h **** {
 231:FreeRTOS/inc/portmacro.h **** 	__asm volatile
 1289              		.loc 2 231 2 discriminator 3 view .LVU384
 1290              		.syntax unified
 1291              	@ 231 "FreeRTOS/inc/portmacro.h" 1
 1292 0074 86F31188 			msr basepri, r6	
 1293              	@ 0 "" 2
 1294              		.thumb
 1295              		.syntax unified
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 55


 1296              	.LBE24:
 1297              	.LBE23:
 1298              	.LBE20:
 652:FreeRTOS/src/stream_buffer.c **** 	}
 1299              		.loc 1 652 27 discriminator 3 view .LVU385
 655:FreeRTOS/src/stream_buffer.c **** 
 1300              		.loc 1 655 60 discriminator 3 view .LVU386
 657:FreeRTOS/src/stream_buffer.c **** }
 1301              		.loc 1 657 2 discriminator 3 view .LVU387
 657:FreeRTOS/src/stream_buffer.c **** }
 1302              		.loc 1 657 9 is_stmt 0 discriminator 3 view .LVU388
 1303 0078 DCE7     		b	.L69
 1304              		.cfi_endproc
 1305              	.LFE11:
 1307              		.section	.text.xStreamBufferReceive,"ax",%progbits
 1308              		.align	1
 1309              		.global	xStreamBufferReceive
 1310              		.syntax unified
 1311              		.thumb
 1312              		.thumb_func
 1313              		.fpu softvfp
 1315              	xStreamBufferReceive:
 1316              	.LVL146:
 1317              	.LFB13:
 717:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1318              		.loc 1 717 1 is_stmt 1 view -0
 1319              		.cfi_startproc
 1320              		@ args = 0, pretend = 0, frame = 0
 1321              		@ frame_needed = 0, uses_anonymous_args = 0
 717:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1322              		.loc 1 717 1 is_stmt 0 view .LVU390
 1323 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1324              	.LCFI29:
 1325              		.cfi_def_cfa_offset 28
 1326              		.cfi_offset 4, -28
 1327              		.cfi_offset 5, -24
 1328              		.cfi_offset 6, -20
 1329              		.cfi_offset 7, -16
 1330              		.cfi_offset 8, -12
 1331              		.cfi_offset 9, -8
 1332              		.cfi_offset 14, -4
 1333 0004 83B0     		sub	sp, sp, #12
 1334              	.LCFI30:
 1335              		.cfi_def_cfa_offset 40
 1336 0006 0446     		mov	r4, r0
 1337 0008 8846     		mov	r8, r1
 1338 000a 9146     		mov	r9, r2
 1339 000c 1F46     		mov	r7, r3
 718:FreeRTOS/src/stream_buffer.c **** size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 1340              		.loc 1 718 1 is_stmt 1 view .LVU391
 1341              	.LVL147:
 719:FreeRTOS/src/stream_buffer.c **** 
 1342              		.loc 1 719 1 view .LVU392
 721:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1343              		.loc 1 721 26 view .LVU393
 722:FreeRTOS/src/stream_buffer.c **** 
 1344              		.loc 1 722 32 view .LVU394
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 56


 729:FreeRTOS/src/stream_buffer.c **** 	{
 1345              		.loc 1 729 2 view .LVU395
 729:FreeRTOS/src/stream_buffer.c **** 	{
 1346              		.loc 1 729 22 is_stmt 0 view .LVU396
 1347 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1348              	.LVL148:
 729:FreeRTOS/src/stream_buffer.c **** 	{
 1349              		.loc 1 729 4 view .LVU397
 1350 0010 13F0010F 		tst	r3, #1
 1351 0014 1AD0     		beq	.L83
 731:FreeRTOS/src/stream_buffer.c **** 	}
 1352              		.loc 1 731 30 view .LVU398
 1353 0016 0426     		movs	r6, #4
 1354              	.L77:
 1355              	.LVL149:
 738:FreeRTOS/src/stream_buffer.c **** 	{
 1356              		.loc 1 738 2 is_stmt 1 view .LVU399
 738:FreeRTOS/src/stream_buffer.c **** 	{
 1357              		.loc 1 738 4 is_stmt 0 view .LVU400
 1358 0018 0FB3     		cbz	r7, .L78
 742:FreeRTOS/src/stream_buffer.c **** 		{
 1359              		.loc 1 742 3 is_stmt 1 view .LVU401
 1360 001a FFF7FEFF 		bl	vPortEnterCritical
 1361              	.LVL150:
 744:FreeRTOS/src/stream_buffer.c **** 
 1362              		.loc 1 744 4 view .LVU402
 744:FreeRTOS/src/stream_buffer.c **** 
 1363              		.loc 1 744 22 is_stmt 0 view .LVU403
 1364 001e 2046     		mov	r0, r4
 1365 0020 FFF7FEFF 		bl	prvBytesInBuffer
 1366              	.LVL151:
 1367 0024 0546     		mov	r5, r0
 1368              	.LVL152:
 751:FreeRTOS/src/stream_buffer.c **** 			{
 1369              		.loc 1 751 4 is_stmt 1 view .LVU404
 751:FreeRTOS/src/stream_buffer.c **** 			{
 1370              		.loc 1 751 6 is_stmt 0 view .LVU405
 1371 0026 8642     		cmp	r6, r0
 1372 0028 12D2     		bcs	.L86
 1373              	.LVL153:
 1374              	.L79:
 762:FreeRTOS/src/stream_buffer.c **** 			}
 1375              		.loc 1 762 29 is_stmt 1 view .LVU406
 765:FreeRTOS/src/stream_buffer.c **** 
 1376              		.loc 1 765 3 view .LVU407
 1377 002a FFF7FEFF 		bl	vPortExitCritical
 1378              	.LVL154:
 767:FreeRTOS/src/stream_buffer.c **** 		{
 1379              		.loc 1 767 3 view .LVU408
 767:FreeRTOS/src/stream_buffer.c **** 		{
 1380              		.loc 1 767 5 is_stmt 0 view .LVU409
 1381 002e AE42     		cmp	r6, r5
 1382 0030 19D3     		bcc	.L80
 770:FreeRTOS/src/stream_buffer.c **** 			( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 1383              		.loc 1 770 59 is_stmt 1 view .LVU410
 771:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToReceive = NULL;
 1384              		.loc 1 771 4 view .LVU411
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 57


 771:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToReceive = NULL;
 1385              		.loc 1 771 13 is_stmt 0 view .LVU412
 1386 0032 3B46     		mov	r3, r7
 1387 0034 0022     		movs	r2, #0
 1388 0036 1146     		mov	r1, r2
 1389 0038 1046     		mov	r0, r2
 1390 003a FFF7FEFF 		bl	xTaskNotifyWait
 1391              	.LVL155:
 772:FreeRTOS/src/stream_buffer.c **** 
 1392              		.loc 1 772 4 is_stmt 1 view .LVU413
 772:FreeRTOS/src/stream_buffer.c **** 
 1393              		.loc 1 772 42 is_stmt 0 view .LVU414
 1394 003e 0023     		movs	r3, #0
 1395 0040 2361     		str	r3, [r4, #16]
 775:FreeRTOS/src/stream_buffer.c **** 		}
 1396              		.loc 1 775 4 is_stmt 1 view .LVU415
 775:FreeRTOS/src/stream_buffer.c **** 		}
 1397              		.loc 1 775 22 is_stmt 0 view .LVU416
 1398 0042 2046     		mov	r0, r4
 1399 0044 FFF7FEFF 		bl	prvBytesInBuffer
 1400              	.LVL156:
 1401 0048 0546     		mov	r5, r0
 1402              	.LVL157:
 775:FreeRTOS/src/stream_buffer.c **** 		}
 1403              		.loc 1 775 22 view .LVU417
 1404 004a 0CE0     		b	.L80
 1405              	.LVL158:
 1406              	.L83:
 735:FreeRTOS/src/stream_buffer.c **** 	}
 1407              		.loc 1 735 30 view .LVU418
 1408 004c 0026     		movs	r6, #0
 1409 004e E3E7     		b	.L77
 1410              	.LVL159:
 1411              	.L86:
 754:FreeRTOS/src/stream_buffer.c **** 
 1412              		.loc 1 754 5 is_stmt 1 view .LVU419
 754:FreeRTOS/src/stream_buffer.c **** 
 1413              		.loc 1 754 14 is_stmt 0 view .LVU420
 1414 0050 0020     		movs	r0, #0
 1415              	.LVL160:
 754:FreeRTOS/src/stream_buffer.c **** 
 1416              		.loc 1 754 14 view .LVU421
 1417 0052 FFF7FEFF 		bl	xTaskNotifyStateClear
 1418              	.LVL161:
 757:FreeRTOS/src/stream_buffer.c **** 				pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
 1419              		.loc 1 757 66 is_stmt 1 view .LVU422
 758:FreeRTOS/src/stream_buffer.c **** 			}
 1420              		.loc 1 758 5 view .LVU423
 758:FreeRTOS/src/stream_buffer.c **** 			}
 1421              		.loc 1 758 45 is_stmt 0 view .LVU424
 1422 0056 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1423              	.LVL162:
 758:FreeRTOS/src/stream_buffer.c **** 			}
 1424              		.loc 1 758 43 view .LVU425
 1425 005a 2061     		str	r0, [r4, #16]
 1426 005c E5E7     		b	.L79
 1427              	.LVL163:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 58


 1428              	.L78:
 784:FreeRTOS/src/stream_buffer.c **** 	}
 1429              		.loc 1 784 3 is_stmt 1 view .LVU426
 784:FreeRTOS/src/stream_buffer.c **** 	}
 1430              		.loc 1 784 21 is_stmt 0 view .LVU427
 1431 005e 2046     		mov	r0, r4
 1432              	.LVL164:
 784:FreeRTOS/src/stream_buffer.c **** 	}
 1433              		.loc 1 784 21 view .LVU428
 1434 0060 FFF7FEFF 		bl	prvBytesInBuffer
 1435              	.LVL165:
 784:FreeRTOS/src/stream_buffer.c **** 	}
 1436              		.loc 1 784 21 view .LVU429
 1437 0064 0546     		mov	r5, r0
 1438              	.LVL166:
 1439              	.L80:
 792:FreeRTOS/src/stream_buffer.c **** 	{
 1440              		.loc 1 792 2 is_stmt 1 view .LVU430
 792:FreeRTOS/src/stream_buffer.c **** 	{
 1441              		.loc 1 792 4 is_stmt 0 view .LVU431
 1442 0066 B542     		cmp	r5, r6
 1443 0068 04D8     		bhi	.L87
 719:FreeRTOS/src/stream_buffer.c **** 
 1444              		.loc 1 719 8 view .LVU432
 1445 006a 0025     		movs	r5, #0
 1446              	.LVL167:
 809:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 1447              		.loc 1 809 53 is_stmt 1 view .LVU433
 810:FreeRTOS/src/stream_buffer.c **** 	}
 1448              		.loc 1 810 27 view .LVU434
 813:FreeRTOS/src/stream_buffer.c **** }
 1449              		.loc 1 813 2 view .LVU435
 1450              	.L76:
 814:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1451              		.loc 1 814 1 is_stmt 0 view .LVU436
 1452 006c 2846     		mov	r0, r5
 1453 006e 03B0     		add	sp, sp, #12
 1454              	.LCFI31:
 1455              		.cfi_remember_state
 1456              		.cfi_def_cfa_offset 28
 1457              		@ sp needed
 1458 0070 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1459              	.LVL168:
 1460              	.L87:
 1461              	.LCFI32:
 1462              		.cfi_restore_state
 794:FreeRTOS/src/stream_buffer.c **** 
 1463              		.loc 1 794 3 is_stmt 1 view .LVU437
 794:FreeRTOS/src/stream_buffer.c **** 
 1464              		.loc 1 794 21 is_stmt 0 view .LVU438
 1465 0074 0096     		str	r6, [sp]
 1466 0076 2B46     		mov	r3, r5
 1467 0078 4A46     		mov	r2, r9
 1468 007a 4146     		mov	r1, r8
 1469 007c 2046     		mov	r0, r4
 1470 007e FFF7FEFF 		bl	prvReadMessageFromBuffer
 1471              	.LVL169:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 59


 797:FreeRTOS/src/stream_buffer.c **** 		{
 1472              		.loc 1 797 3 is_stmt 1 view .LVU439
 797:FreeRTOS/src/stream_buffer.c **** 		{
 1473              		.loc 1 797 5 is_stmt 0 view .LVU440
 1474 0082 0546     		mov	r5, r0
 1475              	.LVL170:
 797:FreeRTOS/src/stream_buffer.c **** 		{
 1476              		.loc 1 797 5 view .LVU441
 1477 0084 0028     		cmp	r0, #0
 1478 0086 F1D0     		beq	.L76
 799:FreeRTOS/src/stream_buffer.c **** 			sbRECEIVE_COMPLETED( pxStreamBuffer );
 1479              		.loc 1 799 64 is_stmt 1 view .LVU442
 800:FreeRTOS/src/stream_buffer.c **** 		}
 1480              		.loc 1 800 4 view .LVU443
 1481 0088 FFF7FEFF 		bl	vTaskSuspendAll
 1482              	.LVL171:
 800:FreeRTOS/src/stream_buffer.c **** 		}
 1483              		.loc 1 800 4 view .LVU444
 1484 008c 6369     		ldr	r3, [r4, #20]
 1485 008e 3BB1     		cbz	r3, .L82
 800:FreeRTOS/src/stream_buffer.c **** 		}
 1486              		.loc 1 800 4 discriminator 1 view .LVU445
 1487 0090 6069     		ldr	r0, [r4, #20]
 1488 0092 0023     		movs	r3, #0
 1489 0094 1A46     		mov	r2, r3
 1490 0096 1946     		mov	r1, r3
 1491 0098 FFF7FEFF 		bl	xTaskGenericNotify
 1492              	.LVL172:
 800:FreeRTOS/src/stream_buffer.c **** 		}
 1493              		.loc 1 800 4 discriminator 1 view .LVU446
 1494 009c 0023     		movs	r3, #0
 1495 009e 6361     		str	r3, [r4, #20]
 1496              	.L82:
 800:FreeRTOS/src/stream_buffer.c **** 		}
 1497              		.loc 1 800 4 discriminator 3 view .LVU447
 1498 00a0 FFF7FEFF 		bl	xTaskResumeAll
 1499              	.LVL173:
 800:FreeRTOS/src/stream_buffer.c **** 		}
 1500              		.loc 1 800 41 discriminator 3 view .LVU448
 1501 00a4 E2E7     		b	.L76
 1502              		.cfi_endproc
 1503              	.LFE13:
 1505              		.section	.text.xStreamBufferNextMessageLengthBytes,"ax",%progbits
 1506              		.align	1
 1507              		.global	xStreamBufferNextMessageLengthBytes
 1508              		.syntax unified
 1509              		.thumb
 1510              		.thumb_func
 1511              		.fpu softvfp
 1513              	xStreamBufferNextMessageLengthBytes:
 1514              	.LVL174:
 1515              	.LFB14:
 818:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1516              		.loc 1 818 1 view -0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 8
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 60


 819:FreeRTOS/src/stream_buffer.c **** size_t xReturn, xBytesAvailable, xOriginalTail;
 1520              		.loc 1 819 1 view .LVU450
 820:FreeRTOS/src/stream_buffer.c **** configMESSAGE_BUFFER_LENGTH_TYPE xTempReturn;
 1521              		.loc 1 820 1 view .LVU451
 821:FreeRTOS/src/stream_buffer.c **** 
 1522              		.loc 1 821 1 view .LVU452
 823:FreeRTOS/src/stream_buffer.c **** 
 1523              		.loc 1 823 32 view .LVU453
 826:FreeRTOS/src/stream_buffer.c **** 	{
 1524              		.loc 1 826 2 view .LVU454
 826:FreeRTOS/src/stream_buffer.c **** 	{
 1525              		.loc 1 826 22 is_stmt 0 view .LVU455
 1526 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 826:FreeRTOS/src/stream_buffer.c **** 	{
 1527              		.loc 1 826 4 view .LVU456
 1528 0002 13F0010F 		tst	r3, #1
 1529 0006 01D1     		bne	.L96
 854:FreeRTOS/src/stream_buffer.c **** 	}
 1530              		.loc 1 854 11 view .LVU457
 1531 0008 0020     		movs	r0, #0
 1532              	.LVL175:
 858:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1533              		.loc 1 858 1 view .LVU458
 1534 000a 7047     		bx	lr
 1535              	.LVL176:
 1536              	.L96:
 818:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1537              		.loc 1 818 1 view .LVU459
 1538 000c 30B5     		push	{r4, r5, lr}
 1539              	.LCFI33:
 1540              		.cfi_def_cfa_offset 12
 1541              		.cfi_offset 4, -12
 1542              		.cfi_offset 5, -8
 1543              		.cfi_offset 14, -4
 1544 000e 83B0     		sub	sp, sp, #12
 1545              	.LCFI34:
 1546              		.cfi_def_cfa_offset 24
 1547 0010 0446     		mov	r4, r0
 828:FreeRTOS/src/stream_buffer.c **** 		if( xBytesAvailable > sbBYTES_TO_STORE_MESSAGE_LENGTH )
 1548              		.loc 1 828 3 is_stmt 1 view .LVU460
 828:FreeRTOS/src/stream_buffer.c **** 		if( xBytesAvailable > sbBYTES_TO_STORE_MESSAGE_LENGTH )
 1549              		.loc 1 828 21 is_stmt 0 view .LVU461
 1550 0012 FFF7FEFF 		bl	prvBytesInBuffer
 1551              	.LVL177:
 829:FreeRTOS/src/stream_buffer.c **** 		{
 1552              		.loc 1 829 3 is_stmt 1 view .LVU462
 829:FreeRTOS/src/stream_buffer.c **** 		{
 1553              		.loc 1 829 5 is_stmt 0 view .LVU463
 1554 0016 0428     		cmp	r0, #4
 1555 0018 02D8     		bhi	.L97
 849:FreeRTOS/src/stream_buffer.c **** 		}
 1556              		.loc 1 849 12 view .LVU464
 1557 001a 0020     		movs	r0, #0
 1558              	.LVL178:
 857:FreeRTOS/src/stream_buffer.c **** }
 1559              		.loc 1 857 2 is_stmt 1 view .LVU465
 1560              	.L88:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 61


 858:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1561              		.loc 1 858 1 is_stmt 0 view .LVU466
 1562 001c 03B0     		add	sp, sp, #12
 1563              	.LCFI35:
 1564              		.cfi_remember_state
 1565              		.cfi_def_cfa_offset 12
 1566              		@ sp needed
 1567 001e 30BD     		pop	{r4, r5, pc}
 1568              	.LVL179:
 1569              	.L97:
 1570              	.LCFI36:
 1571              		.cfi_restore_state
 837:FreeRTOS/src/stream_buffer.c **** 			( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempReturn, sbBYTES_TO_STORE_ME
 1572              		.loc 1 837 4 is_stmt 1 view .LVU467
 837:FreeRTOS/src/stream_buffer.c **** 			( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempReturn, sbBYTES_TO_STORE_ME
 1573              		.loc 1 837 18 is_stmt 0 view .LVU468
 1574 0020 2568     		ldr	r5, [r4]
 1575              	.LVL180:
 838:FreeRTOS/src/stream_buffer.c **** 			xReturn = ( size_t ) xTempReturn;
 1576              		.loc 1 838 4 is_stmt 1 view .LVU469
 838:FreeRTOS/src/stream_buffer.c **** 			xReturn = ( size_t ) xTempReturn;
 1577              		.loc 1 838 13 is_stmt 0 view .LVU470
 1578 0022 0346     		mov	r3, r0
 1579 0024 0422     		movs	r2, #4
 1580 0026 0DEB0201 		add	r1, sp, r2
 1581 002a 2046     		mov	r0, r4
 1582              	.LVL181:
 838:FreeRTOS/src/stream_buffer.c **** 			xReturn = ( size_t ) xTempReturn;
 1583              		.loc 1 838 13 view .LVU471
 1584 002c FFF7FEFF 		bl	prvReadBytesFromBuffer
 1585              	.LVL182:
 839:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTail = xOriginalTail;
 1586              		.loc 1 839 4 is_stmt 1 view .LVU472
 839:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTail = xOriginalTail;
 1587              		.loc 1 839 12 is_stmt 0 view .LVU473
 1588 0030 0198     		ldr	r0, [sp, #4]
 1589              	.LVL183:
 840:FreeRTOS/src/stream_buffer.c **** 		}
 1590              		.loc 1 840 4 is_stmt 1 view .LVU474
 840:FreeRTOS/src/stream_buffer.c **** 		}
 1591              		.loc 1 840 26 is_stmt 0 view .LVU475
 1592 0032 2560     		str	r5, [r4]
 1593 0034 F2E7     		b	.L88
 1594              		.cfi_endproc
 1595              	.LFE14:
 1597              		.section	.text.xStreamBufferReceiveFromISR,"ax",%progbits
 1598              		.align	1
 1599              		.global	xStreamBufferReceiveFromISR
 1600              		.syntax unified
 1601              		.thumb
 1602              		.thumb_func
 1603              		.fpu softvfp
 1605              	xStreamBufferReceiveFromISR:
 1606              	.LVL184:
 1607              	.LFB15:
 865:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1608              		.loc 1 865 1 is_stmt 1 view -0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 62


 1609              		.cfi_startproc
 1610              		@ args = 0, pretend = 0, frame = 0
 1611              		@ frame_needed = 0, uses_anonymous_args = 0
 865:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1612              		.loc 1 865 1 is_stmt 0 view .LVU477
 1613 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1614              	.LCFI37:
 1615              		.cfi_def_cfa_offset 24
 1616              		.cfi_offset 4, -24
 1617              		.cfi_offset 5, -20
 1618              		.cfi_offset 6, -16
 1619              		.cfi_offset 7, -12
 1620              		.cfi_offset 8, -8
 1621              		.cfi_offset 14, -4
 1622 0004 82B0     		sub	sp, sp, #8
 1623              	.LCFI38:
 1624              		.cfi_def_cfa_offset 32
 1625 0006 0446     		mov	r4, r0
 1626 0008 0E46     		mov	r6, r1
 1627 000a 1746     		mov	r7, r2
 1628 000c 9846     		mov	r8, r3
 866:FreeRTOS/src/stream_buffer.c **** size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 1629              		.loc 1 866 1 is_stmt 1 view .LVU478
 1630              	.LVL185:
 867:FreeRTOS/src/stream_buffer.c **** 
 1631              		.loc 1 867 1 view .LVU479
 869:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1632              		.loc 1 869 26 view .LVU480
 870:FreeRTOS/src/stream_buffer.c **** 
 1633              		.loc 1 870 32 view .LVU481
 877:FreeRTOS/src/stream_buffer.c **** 	{
 1634              		.loc 1 877 2 view .LVU482
 877:FreeRTOS/src/stream_buffer.c **** 	{
 1635              		.loc 1 877 22 is_stmt 0 view .LVU483
 1636 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1637              	.LVL186:
 877:FreeRTOS/src/stream_buffer.c **** 	{
 1638              		.loc 1 877 4 view .LVU484
 1639 0010 13F0010F 		tst	r3, #1
 1640 0014 0AD0     		beq	.L102
 879:FreeRTOS/src/stream_buffer.c **** 	}
 1641              		.loc 1 879 30 view .LVU485
 1642 0016 0425     		movs	r5, #4
 1643              	.L99:
 1644              	.LVL187:
 886:FreeRTOS/src/stream_buffer.c **** 
 1645              		.loc 1 886 2 is_stmt 1 view .LVU486
 886:FreeRTOS/src/stream_buffer.c **** 
 1646              		.loc 1 886 20 is_stmt 0 view .LVU487
 1647 0018 2046     		mov	r0, r4
 1648              	.LVL188:
 886:FreeRTOS/src/stream_buffer.c **** 
 1649              		.loc 1 886 20 view .LVU488
 1650 001a FFF7FEFF 		bl	prvBytesInBuffer
 1651              	.LVL189:
 893:FreeRTOS/src/stream_buffer.c **** 	{
 1652              		.loc 1 893 2 is_stmt 1 view .LVU489
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 63


 893:FreeRTOS/src/stream_buffer.c **** 	{
 1653              		.loc 1 893 4 is_stmt 0 view .LVU490
 1654 001e 8542     		cmp	r5, r0
 1655 0020 06D3     		bcc	.L105
 867:FreeRTOS/src/stream_buffer.c **** 
 1656              		.loc 1 867 8 view .LVU491
 1657 0022 0025     		movs	r5, #0
 1658              	.LVL190:
 909:FreeRTOS/src/stream_buffer.c **** 	}
 1659              		.loc 1 909 27 is_stmt 1 view .LVU492
 912:FreeRTOS/src/stream_buffer.c **** 
 1660              		.loc 1 912 71 view .LVU493
 914:FreeRTOS/src/stream_buffer.c **** }
 1661              		.loc 1 914 2 view .LVU494
 1662              	.L98:
 915:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1663              		.loc 1 915 1 is_stmt 0 view .LVU495
 1664 0024 2846     		mov	r0, r5
 1665 0026 02B0     		add	sp, sp, #8
 1666              	.LCFI39:
 1667              		.cfi_remember_state
 1668              		.cfi_def_cfa_offset 24
 1669              		@ sp needed
 1670 0028 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1671              	.LVL191:
 1672              	.L102:
 1673              	.LCFI40:
 1674              		.cfi_restore_state
 883:FreeRTOS/src/stream_buffer.c **** 	}
 1675              		.loc 1 883 30 view .LVU496
 1676 002c 0025     		movs	r5, #0
 1677 002e F3E7     		b	.L99
 1678              	.LVL192:
 1679              	.L105:
 895:FreeRTOS/src/stream_buffer.c **** 
 1680              		.loc 1 895 3 is_stmt 1 view .LVU497
 895:FreeRTOS/src/stream_buffer.c **** 
 1681              		.loc 1 895 21 is_stmt 0 view .LVU498
 1682 0030 0095     		str	r5, [sp]
 1683 0032 0346     		mov	r3, r0
 1684 0034 3A46     		mov	r2, r7
 1685 0036 3146     		mov	r1, r6
 1686 0038 2046     		mov	r0, r4
 1687              	.LVL193:
 895:FreeRTOS/src/stream_buffer.c **** 
 1688              		.loc 1 895 21 view .LVU499
 1689 003a FFF7FEFF 		bl	prvReadMessageFromBuffer
 1690              	.LVL194:
 898:FreeRTOS/src/stream_buffer.c **** 		{
 1691              		.loc 1 898 3 is_stmt 1 view .LVU500
 898:FreeRTOS/src/stream_buffer.c **** 		{
 1692              		.loc 1 898 5 is_stmt 0 view .LVU501
 1693 003e 0546     		mov	r5, r0
 1694              	.LVL195:
 898:FreeRTOS/src/stream_buffer.c **** 		{
 1695              		.loc 1 898 5 view .LVU502
 1696 0040 0028     		cmp	r0, #0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 64


 1697 0042 EFD0     		beq	.L98
 1698              	.LBB25:
 900:FreeRTOS/src/stream_buffer.c **** 		}
 1699              		.loc 1 900 4 is_stmt 1 view .LVU503
 900:FreeRTOS/src/stream_buffer.c **** 		}
 1700              		.loc 1 900 4 view .LVU504
 1701              	.LBB26:
 1702              	.LBI26:
 209:FreeRTOS/inc/portmacro.h **** {
 1703              		.loc 2 209 34 view .LVU505
 1704              	.LBB27:
 211:FreeRTOS/inc/portmacro.h **** 
 1705              		.loc 2 211 1 view .LVU506
 213:FreeRTOS/inc/portmacro.h **** 	(
 1706              		.loc 2 213 2 view .LVU507
 1707              		.syntax unified
 1708              	@ 213 "FreeRTOS/inc/portmacro.h" 1
 1709 0044 EFF31186 			mrs r6, basepri											
 1710 0048 4FF0BF03 		mov r3, #191												
 1711 004c 83F31188 		msr basepri, r3											
 1712 0050 BFF36F8F 		isb														
 1713 0054 BFF34F8F 		dsb														
 1714              	
 1715              	@ 0 "" 2
 1716              	.LVL196:
 225:FreeRTOS/inc/portmacro.h **** }
 1717              		.loc 2 225 2 view .LVU508
 225:FreeRTOS/inc/portmacro.h **** }
 1718              		.loc 2 225 2 is_stmt 0 view .LVU509
 1719              		.thumb
 1720              		.syntax unified
 1721              	.LBE27:
 1722              	.LBE26:
 900:FreeRTOS/src/stream_buffer.c **** 		}
 1723              		.loc 1 900 4 is_stmt 1 view .LVU510
 1724 0058 6369     		ldr	r3, [r4, #20]
 1725 005a 4BB1     		cbz	r3, .L101
 900:FreeRTOS/src/stream_buffer.c **** 		}
 1726              		.loc 1 900 4 discriminator 1 view .LVU511
 1727 005c 6069     		ldr	r0, [r4, #20]
 1728              	.LVL197:
 900:FreeRTOS/src/stream_buffer.c **** 		}
 1729              		.loc 1 900 4 is_stmt 0 discriminator 1 view .LVU512
 1730 005e CDF80080 		str	r8, [sp]
 1731 0062 0023     		movs	r3, #0
 1732 0064 1A46     		mov	r2, r3
 1733 0066 1946     		mov	r1, r3
 1734 0068 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 1735              	.LVL198:
 900:FreeRTOS/src/stream_buffer.c **** 		}
 1736              		.loc 1 900 4 is_stmt 1 discriminator 1 view .LVU513
 1737 006c 0023     		movs	r3, #0
 1738 006e 6361     		str	r3, [r4, #20]
 1739              	.L101:
 900:FreeRTOS/src/stream_buffer.c **** 		}
 1740              		.loc 1 900 4 discriminator 3 view .LVU514
 1741              	.LVL199:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 65


 1742              	.LBB28:
 1743              	.LBI28:
 229:FreeRTOS/inc/portmacro.h **** {
 1744              		.loc 2 229 30 discriminator 3 view .LVU515
 1745              	.LBB29:
 1746              		.loc 2 231 2 discriminator 3 view .LVU516
 1747              		.syntax unified
 1748              	@ 231 "FreeRTOS/inc/portmacro.h" 1
 1749 0070 86F31188 			msr basepri, r6	
 1750              	@ 0 "" 2
 1751              		.thumb
 1752              		.syntax unified
 1753 0074 D6E7     		b	.L98
 1754              	.LBE29:
 1755              	.LBE28:
 1756              	.LBE25:
 1757              		.cfi_endproc
 1758              	.LFE15:
 1760              		.section	.text.xStreamBufferIsEmpty,"ax",%progbits
 1761              		.align	1
 1762              		.global	xStreamBufferIsEmpty
 1763              		.syntax unified
 1764              		.thumb
 1765              		.thumb_func
 1766              		.fpu softvfp
 1768              	xStreamBufferIsEmpty:
 1769              	.LVL200:
 1770              	.LFB17:
 971:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1771              		.loc 1 971 1 view -0
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 0
 1774              		@ frame_needed = 0, uses_anonymous_args = 0
 1775              		@ link register save eliminated.
 972:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 1776              		.loc 1 972 1 view .LVU518
 973:FreeRTOS/src/stream_buffer.c **** size_t xTail;
 1777              		.loc 1 973 1 view .LVU519
 974:FreeRTOS/src/stream_buffer.c **** 
 1778              		.loc 1 974 1 view .LVU520
 976:FreeRTOS/src/stream_buffer.c **** 
 1779              		.loc 1 976 32 view .LVU521
 979:FreeRTOS/src/stream_buffer.c **** 	if( pxStreamBuffer->xHead == xTail )
 1780              		.loc 1 979 2 view .LVU522
 979:FreeRTOS/src/stream_buffer.c **** 	if( pxStreamBuffer->xHead == xTail )
 1781              		.loc 1 979 8 is_stmt 0 view .LVU523
 1782 0000 0368     		ldr	r3, [r0]
 1783              	.LVL201:
 980:FreeRTOS/src/stream_buffer.c **** 	{
 1784              		.loc 1 980 2 is_stmt 1 view .LVU524
 980:FreeRTOS/src/stream_buffer.c **** 	{
 1785              		.loc 1 980 20 is_stmt 0 view .LVU525
 1786 0002 4268     		ldr	r2, [r0, #4]
 980:FreeRTOS/src/stream_buffer.c **** 	{
 1787              		.loc 1 980 4 view .LVU526
 1788 0004 9A42     		cmp	r2, r3
 1789 0006 01D0     		beq	.L109
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 66


 986:FreeRTOS/src/stream_buffer.c **** 	}
 1790              		.loc 1 986 11 view .LVU527
 1791 0008 0020     		movs	r0, #0
 1792              	.LVL202:
 989:FreeRTOS/src/stream_buffer.c **** }
 1793              		.loc 1 989 2 is_stmt 1 view .LVU528
 990:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1794              		.loc 1 990 1 is_stmt 0 view .LVU529
 1795 000a 7047     		bx	lr
 1796              	.LVL203:
 1797              	.L109:
 982:FreeRTOS/src/stream_buffer.c **** 	}
 1798              		.loc 1 982 11 view .LVU530
 1799 000c 0120     		movs	r0, #1
 1800              	.LVL204:
 982:FreeRTOS/src/stream_buffer.c **** 	}
 1801              		.loc 1 982 11 view .LVU531
 1802 000e 7047     		bx	lr
 1803              		.cfi_endproc
 1804              	.LFE17:
 1806              		.section	.text.xStreamBufferIsFull,"ax",%progbits
 1807              		.align	1
 1808              		.global	xStreamBufferIsFull
 1809              		.syntax unified
 1810              		.thumb
 1811              		.thumb_func
 1812              		.fpu softvfp
 1814              	xStreamBufferIsFull:
 1815              	.LVL205:
 1816              	.LFB18:
 994:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 1817              		.loc 1 994 1 is_stmt 1 view -0
 1818              		.cfi_startproc
 1819              		@ args = 0, pretend = 0, frame = 0
 1820              		@ frame_needed = 0, uses_anonymous_args = 0
 994:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 1821              		.loc 1 994 1 is_stmt 0 view .LVU533
 1822 0000 10B5     		push	{r4, lr}
 1823              	.LCFI41:
 1824              		.cfi_def_cfa_offset 8
 1825              		.cfi_offset 4, -8
 1826              		.cfi_offset 14, -4
 995:FreeRTOS/src/stream_buffer.c **** size_t xBytesToStoreMessageLength;
 1827              		.loc 1 995 1 is_stmt 1 view .LVU534
 996:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1828              		.loc 1 996 1 view .LVU535
 997:FreeRTOS/src/stream_buffer.c **** 
 1829              		.loc 1 997 1 view .LVU536
 1830              	.LVL206:
 999:FreeRTOS/src/stream_buffer.c **** 
 1831              		.loc 1 999 32 view .LVU537
1005:FreeRTOS/src/stream_buffer.c **** 	{
 1832              		.loc 1 1005 2 view .LVU538
1005:FreeRTOS/src/stream_buffer.c **** 	{
 1833              		.loc 1 1005 22 is_stmt 0 view .LVU539
 1834 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
1005:FreeRTOS/src/stream_buffer.c **** 	{
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 67


 1835              		.loc 1 1005 4 view .LVU540
 1836 0004 13F0010F 		tst	r3, #1
 1837 0008 06D0     		beq	.L113
1007:FreeRTOS/src/stream_buffer.c **** 	}
 1838              		.loc 1 1007 30 view .LVU541
 1839 000a 0424     		movs	r4, #4
 1840              	.L111:
 1841              	.LVL207:
1015:FreeRTOS/src/stream_buffer.c **** 	{
 1842              		.loc 1 1015 2 is_stmt 1 view .LVU542
1015:FreeRTOS/src/stream_buffer.c **** 	{
 1843              		.loc 1 1015 6 is_stmt 0 view .LVU543
 1844 000c FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1845              	.LVL208:
1015:FreeRTOS/src/stream_buffer.c **** 	{
 1846              		.loc 1 1015 4 view .LVU544
 1847 0010 A042     		cmp	r0, r4
 1848 0012 03D8     		bhi	.L114
1017:FreeRTOS/src/stream_buffer.c **** 	}
 1849              		.loc 1 1017 11 view .LVU545
 1850 0014 0120     		movs	r0, #1
 1851              	.L110:
1025:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1852              		.loc 1 1025 1 view .LVU546
 1853 0016 10BD     		pop	{r4, pc}
 1854              	.LVL209:
 1855              	.L113:
1011:FreeRTOS/src/stream_buffer.c **** 	}
 1856              		.loc 1 1011 30 view .LVU547
 1857 0018 0024     		movs	r4, #0
 1858 001a F7E7     		b	.L111
 1859              	.LVL210:
 1860              	.L114:
1021:FreeRTOS/src/stream_buffer.c **** 	}
 1861              		.loc 1 1021 11 view .LVU548
 1862 001c 0020     		movs	r0, #0
 1863              	.LVL211:
1024:FreeRTOS/src/stream_buffer.c **** }
 1864              		.loc 1 1024 2 is_stmt 1 view .LVU549
1024:FreeRTOS/src/stream_buffer.c **** }
 1865              		.loc 1 1024 9 is_stmt 0 view .LVU550
 1866 001e FAE7     		b	.L110
 1867              		.cfi_endproc
 1868              	.LFE18:
 1870              		.section	.text.xStreamBufferSendCompletedFromISR,"ax",%progbits
 1871              		.align	1
 1872              		.global	xStreamBufferSendCompletedFromISR
 1873              		.syntax unified
 1874              		.thumb
 1875              		.thumb_func
 1876              		.fpu softvfp
 1878              	xStreamBufferSendCompletedFromISR:
 1879              	.LVL212:
 1880              	.LFB19:
1029:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1881              		.loc 1 1029 1 is_stmt 1 view -0
 1882              		.cfi_startproc
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 68


 1883              		@ args = 0, pretend = 0, frame = 0
 1884              		@ frame_needed = 0, uses_anonymous_args = 0
1029:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1885              		.loc 1 1029 1 is_stmt 0 view .LVU552
 1886 0000 30B5     		push	{r4, r5, lr}
 1887              	.LCFI42:
 1888              		.cfi_def_cfa_offset 12
 1889              		.cfi_offset 4, -12
 1890              		.cfi_offset 5, -8
 1891              		.cfi_offset 14, -4
 1892 0002 83B0     		sub	sp, sp, #12
 1893              	.LCFI43:
 1894              		.cfi_def_cfa_offset 24
1030:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 1895              		.loc 1 1030 1 is_stmt 1 view .LVU553
 1896              	.LVL213:
1031:FreeRTOS/src/stream_buffer.c **** UBaseType_t uxSavedInterruptStatus;
 1897              		.loc 1 1031 1 view .LVU554
1032:FreeRTOS/src/stream_buffer.c **** 
 1898              		.loc 1 1032 1 view .LVU555
1034:FreeRTOS/src/stream_buffer.c **** 
 1899              		.loc 1 1034 32 view .LVU556
1036:FreeRTOS/src/stream_buffer.c **** 	{
 1900              		.loc 1 1036 2 view .LVU557
 1901              	.LBB30:
 1902              	.LBI30:
 209:FreeRTOS/inc/portmacro.h **** {
 1903              		.loc 2 209 34 view .LVU558
 1904              	.LBB31:
 211:FreeRTOS/inc/portmacro.h **** 
 1905              		.loc 2 211 1 view .LVU559
 213:FreeRTOS/inc/portmacro.h **** 	(
 1906              		.loc 2 213 2 view .LVU560
 1907              		.syntax unified
 1908              	@ 213 "FreeRTOS/inc/portmacro.h" 1
 1909 0004 EFF31185 			mrs r5, basepri											
 1910 0008 4FF0BF03 		mov r3, #191												
 1911 000c 83F31188 		msr basepri, r3											
 1912 0010 BFF36F8F 		isb														
 1913 0014 BFF34F8F 		dsb														
 1914              	
 1915              	@ 0 "" 2
 1916              	.LVL214:
 225:FreeRTOS/inc/portmacro.h **** }
 1917              		.loc 2 225 2 view .LVU561
 225:FreeRTOS/inc/portmacro.h **** }
 1918              		.loc 2 225 2 is_stmt 0 view .LVU562
 1919              		.thumb
 1920              		.syntax unified
 1921              	.LBE31:
 1922              	.LBE30:
1038:FreeRTOS/src/stream_buffer.c **** 		{
 1923              		.loc 1 1038 3 is_stmt 1 view .LVU563
1038:FreeRTOS/src/stream_buffer.c **** 		{
 1924              		.loc 1 1038 25 is_stmt 0 view .LVU564
 1925 0018 0369     		ldr	r3, [r0, #16]
1038:FreeRTOS/src/stream_buffer.c **** 		{
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 69


 1926              		.loc 1 1038 5 view .LVU565
 1927 001a 73B1     		cbz	r3, .L118
 1928 001c 0446     		mov	r4, r0
1040:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 1929              		.loc 1 1040 4 is_stmt 1 view .LVU566
1040:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 1930              		.loc 1 1040 13 is_stmt 0 view .LVU567
 1931 001e 0069     		ldr	r0, [r0, #16]
 1932              	.LVL215:
1040:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 1933              		.loc 1 1040 13 view .LVU568
 1934 0020 0091     		str	r1, [sp]
 1935 0022 0023     		movs	r3, #0
 1936 0024 1A46     		mov	r2, r3
 1937 0026 1946     		mov	r1, r3
 1938              	.LVL216:
1040:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 1939              		.loc 1 1040 13 view .LVU569
 1940 0028 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 1941              	.LVL217:
1044:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdTRUE;
 1942              		.loc 1 1044 4 is_stmt 1 view .LVU570
1044:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdTRUE;
 1943              		.loc 1 1044 46 is_stmt 0 view .LVU571
 1944 002c 0023     		movs	r3, #0
 1945 002e 2361     		str	r3, [r4, #16]
1045:FreeRTOS/src/stream_buffer.c **** 		}
 1946              		.loc 1 1045 4 is_stmt 1 view .LVU572
 1947              	.LVL218:
1045:FreeRTOS/src/stream_buffer.c **** 		}
 1948              		.loc 1 1045 12 is_stmt 0 view .LVU573
 1949 0030 0120     		movs	r0, #1
 1950              	.LVL219:
 1951              	.L117:
1052:FreeRTOS/src/stream_buffer.c **** 
 1952              		.loc 1 1052 2 is_stmt 1 view .LVU574
 1953              	.LBB32:
 1954              	.LBI32:
 229:FreeRTOS/inc/portmacro.h **** {
 1955              		.loc 2 229 30 view .LVU575
 1956              	.LBB33:
 1957              		.loc 2 231 2 view .LVU576
 1958              		.syntax unified
 1959              	@ 231 "FreeRTOS/inc/portmacro.h" 1
 1960 0032 85F31188 			msr basepri, r5	
 1961              	@ 0 "" 2
 1962              	.LVL220:
 1963              		.loc 2 231 2 is_stmt 0 view .LVU577
 1964              		.thumb
 1965              		.syntax unified
 1966              	.LBE33:
 1967              	.LBE32:
1054:FreeRTOS/src/stream_buffer.c **** }
 1968              		.loc 1 1054 2 is_stmt 1 view .LVU578
1055:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1969              		.loc 1 1055 1 is_stmt 0 view .LVU579
 1970 0036 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 70


 1971              	.LCFI44:
 1972              		.cfi_remember_state
 1973              		.cfi_def_cfa_offset 12
 1974              		@ sp needed
 1975 0038 30BD     		pop	{r4, r5, pc}
 1976              	.LVL221:
 1977              	.L118:
 1978              	.LCFI45:
 1979              		.cfi_restore_state
1049:FreeRTOS/src/stream_buffer.c **** 		}
 1980              		.loc 1 1049 12 view .LVU580
 1981 003a 0020     		movs	r0, #0
 1982              	.LVL222:
1049:FreeRTOS/src/stream_buffer.c **** 		}
 1983              		.loc 1 1049 12 view .LVU581
 1984 003c F9E7     		b	.L117
 1985              		.cfi_endproc
 1986              	.LFE19:
 1988              		.section	.text.xStreamBufferReceiveCompletedFromISR,"ax",%progbits
 1989              		.align	1
 1990              		.global	xStreamBufferReceiveCompletedFromISR
 1991              		.syntax unified
 1992              		.thumb
 1993              		.thumb_func
 1994              		.fpu softvfp
 1996              	xStreamBufferReceiveCompletedFromISR:
 1997              	.LVL223:
 1998              	.LFB20:
1059:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1999              		.loc 1 1059 1 is_stmt 1 view -0
 2000              		.cfi_startproc
 2001              		@ args = 0, pretend = 0, frame = 0
 2002              		@ frame_needed = 0, uses_anonymous_args = 0
1059:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2003              		.loc 1 1059 1 is_stmt 0 view .LVU583
 2004 0000 30B5     		push	{r4, r5, lr}
 2005              	.LCFI46:
 2006              		.cfi_def_cfa_offset 12
 2007              		.cfi_offset 4, -12
 2008              		.cfi_offset 5, -8
 2009              		.cfi_offset 14, -4
 2010 0002 83B0     		sub	sp, sp, #12
 2011              	.LCFI47:
 2012              		.cfi_def_cfa_offset 24
1060:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 2013              		.loc 1 1060 1 is_stmt 1 view .LVU584
 2014              	.LVL224:
1061:FreeRTOS/src/stream_buffer.c **** UBaseType_t uxSavedInterruptStatus;
 2015              		.loc 1 1061 1 view .LVU585
1062:FreeRTOS/src/stream_buffer.c **** 
 2016              		.loc 1 1062 1 view .LVU586
1064:FreeRTOS/src/stream_buffer.c **** 
 2017              		.loc 1 1064 32 view .LVU587
1066:FreeRTOS/src/stream_buffer.c **** 	{
 2018              		.loc 1 1066 2 view .LVU588
 2019              	.LBB34:
 2020              	.LBI34:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 71


 209:FreeRTOS/inc/portmacro.h **** {
 2021              		.loc 2 209 34 view .LVU589
 2022              	.LBB35:
 211:FreeRTOS/inc/portmacro.h **** 
 2023              		.loc 2 211 1 view .LVU590
 213:FreeRTOS/inc/portmacro.h **** 	(
 2024              		.loc 2 213 2 view .LVU591
 2025              		.syntax unified
 2026              	@ 213 "FreeRTOS/inc/portmacro.h" 1
 2027 0004 EFF31185 			mrs r5, basepri											
 2028 0008 4FF0BF03 		mov r3, #191												
 2029 000c 83F31188 		msr basepri, r3											
 2030 0010 BFF36F8F 		isb														
 2031 0014 BFF34F8F 		dsb														
 2032              	
 2033              	@ 0 "" 2
 2034              	.LVL225:
 225:FreeRTOS/inc/portmacro.h **** }
 2035              		.loc 2 225 2 view .LVU592
 225:FreeRTOS/inc/portmacro.h **** }
 2036              		.loc 2 225 2 is_stmt 0 view .LVU593
 2037              		.thumb
 2038              		.syntax unified
 2039              	.LBE35:
 2040              	.LBE34:
1068:FreeRTOS/src/stream_buffer.c **** 		{
 2041              		.loc 1 1068 3 is_stmt 1 view .LVU594
1068:FreeRTOS/src/stream_buffer.c **** 		{
 2042              		.loc 1 1068 25 is_stmt 0 view .LVU595
 2043 0018 4369     		ldr	r3, [r0, #20]
1068:FreeRTOS/src/stream_buffer.c **** 		{
 2044              		.loc 1 1068 5 view .LVU596
 2045 001a 73B1     		cbz	r3, .L122
 2046 001c 0446     		mov	r4, r0
1070:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 2047              		.loc 1 1070 4 is_stmt 1 view .LVU597
1070:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 2048              		.loc 1 1070 13 is_stmt 0 view .LVU598
 2049 001e 4069     		ldr	r0, [r0, #20]
 2050              	.LVL226:
1070:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 2051              		.loc 1 1070 13 view .LVU599
 2052 0020 0091     		str	r1, [sp]
 2053 0022 0023     		movs	r3, #0
 2054 0024 1A46     		mov	r2, r3
 2055 0026 1946     		mov	r1, r3
 2056              	.LVL227:
1070:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 2057              		.loc 1 1070 13 view .LVU600
 2058 0028 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 2059              	.LVL228:
1074:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdTRUE;
 2060              		.loc 1 1074 4 is_stmt 1 view .LVU601
1074:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdTRUE;
 2061              		.loc 1 1074 43 is_stmt 0 view .LVU602
 2062 002c 0023     		movs	r3, #0
 2063 002e 6361     		str	r3, [r4, #20]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 72


1075:FreeRTOS/src/stream_buffer.c **** 		}
 2064              		.loc 1 1075 4 is_stmt 1 view .LVU603
 2065              	.LVL229:
1075:FreeRTOS/src/stream_buffer.c **** 		}
 2066              		.loc 1 1075 12 is_stmt 0 view .LVU604
 2067 0030 0120     		movs	r0, #1
 2068              	.LVL230:
 2069              	.L121:
1082:FreeRTOS/src/stream_buffer.c **** 
 2070              		.loc 1 1082 2 is_stmt 1 view .LVU605
 2071              	.LBB36:
 2072              	.LBI36:
 229:FreeRTOS/inc/portmacro.h **** {
 2073              		.loc 2 229 30 view .LVU606
 2074              	.LBB37:
 2075              		.loc 2 231 2 view .LVU607
 2076              		.syntax unified
 2077              	@ 231 "FreeRTOS/inc/portmacro.h" 1
 2078 0032 85F31188 			msr basepri, r5	
 2079              	@ 0 "" 2
 2080              	.LVL231:
 2081              		.loc 2 231 2 is_stmt 0 view .LVU608
 2082              		.thumb
 2083              		.syntax unified
 2084              	.LBE37:
 2085              	.LBE36:
1084:FreeRTOS/src/stream_buffer.c **** }
 2086              		.loc 1 1084 2 is_stmt 1 view .LVU609
1085:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 2087              		.loc 1 1085 1 is_stmt 0 view .LVU610
 2088 0036 03B0     		add	sp, sp, #12
 2089              	.LCFI48:
 2090              		.cfi_remember_state
 2091              		.cfi_def_cfa_offset 12
 2092              		@ sp needed
 2093 0038 30BD     		pop	{r4, r5, pc}
 2094              	.LVL232:
 2095              	.L122:
 2096              	.LCFI49:
 2097              		.cfi_restore_state
1079:FreeRTOS/src/stream_buffer.c **** 		}
 2098              		.loc 1 1079 12 view .LVU611
 2099 003a 0020     		movs	r0, #0
 2100              	.LVL233:
1079:FreeRTOS/src/stream_buffer.c **** 		}
 2101              		.loc 1 1079 12 view .LVU612
 2102 003c F9E7     		b	.L121
 2103              		.cfi_endproc
 2104              	.LFE20:
 2106              		.text
 2107              	.Letext0:
 2108              		.file 3 "FreeRTOS/inc/stdint.h"
 2109              		.file 4 "c:\\software\\embeddedgcc\\arm_gcc\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 2110              		.file 5 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\lock.h"
 2111              		.file 6 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\_types.h"
 2112              		.file 7 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\reent.h"
 2113              		.file 8 "FreeRTOS/inc/task.h"
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 73


 2114              		.file 9 "FreeRTOS/inc/stream_buffer.h"
 2115              		.file 10 "<built-in>"
 2116              		.file 11 "FreeRTOS/inc/portable.h"
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 74


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stream_buffer.c
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:16     .text.prvBytesInBuffer:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:23     .text.prvBytesInBuffer:0000000000000000 prvBytesInBuffer
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:65     .text.prvInitialiseNewStreamBuffer:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:71     .text.prvInitialiseNewStreamBuffer:0000000000000000 prvInitialiseNewStreamBuffer
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:122    .text.prvWriteBytesToBuffer:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:128    .text.prvWriteBytesToBuffer:0000000000000000 prvWriteBytesToBuffer
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:219    .text.prvWriteMessageToBuffer:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:225    .text.prvWriteMessageToBuffer:0000000000000000 prvWriteMessageToBuffer
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:325    .text.prvReadBytesFromBuffer:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:331    .text.prvReadBytesFromBuffer:0000000000000000 prvReadBytesFromBuffer
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:442    .text.prvReadMessageFromBuffer:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:448    .text.prvReadMessageFromBuffer:0000000000000000 prvReadMessageFromBuffer
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:548    .text.xStreamBufferGenericCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:555    .text.xStreamBufferGenericCreate:0000000000000000 xStreamBufferGenericCreate
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:637    .text.vStreamBufferDelete:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:644    .text.vStreamBufferDelete:0000000000000000 vStreamBufferDelete
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:687    .text.xStreamBufferReset:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:694    .text.xStreamBufferReset:0000000000000000 xStreamBufferReset
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:775    .text.xStreamBufferSetTriggerLevel:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:782    .text.xStreamBufferSetTriggerLevel:0000000000000000 xStreamBufferSetTriggerLevel
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:829    .text.xStreamBufferSpacesAvailable:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:836    .text.xStreamBufferSpacesAvailable:0000000000000000 xStreamBufferSpacesAvailable
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:883    .text.xStreamBufferBytesAvailable:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:890    .text.xStreamBufferBytesAvailable:0000000000000000 xStreamBufferBytesAvailable
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:918    .text.xStreamBufferSend:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:925    .text.xStreamBufferSend:0000000000000000 xStreamBufferSend
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1135   .text.xStreamBufferSendFromISR:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1142   .text.xStreamBufferSendFromISR:0000000000000000 xStreamBufferSendFromISR
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1308   .text.xStreamBufferReceive:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1315   .text.xStreamBufferReceive:0000000000000000 xStreamBufferReceive
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1506   .text.xStreamBufferNextMessageLengthBytes:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1513   .text.xStreamBufferNextMessageLengthBytes:0000000000000000 xStreamBufferNextMessageLengthBytes
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1598   .text.xStreamBufferReceiveFromISR:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1605   .text.xStreamBufferReceiveFromISR:0000000000000000 xStreamBufferReceiveFromISR
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1761   .text.xStreamBufferIsEmpty:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1768   .text.xStreamBufferIsEmpty:0000000000000000 xStreamBufferIsEmpty
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1807   .text.xStreamBufferIsFull:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1814   .text.xStreamBufferIsFull:0000000000000000 xStreamBufferIsFull
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1871   .text.xStreamBufferSendCompletedFromISR:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1878   .text.xStreamBufferSendCompletedFromISR:0000000000000000 xStreamBufferSendCompletedFromISR
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1989   .text.xStreamBufferReceiveCompletedFromISR:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s:1996   .text.xStreamBufferReceiveCompletedFromISR:0000000000000000 xStreamBufferReceiveCompletedFromISR

UNDEFINED SYMBOLS
memset
memcpy
pvPortMalloc
vPortFree
vPortEnterCritical
vPortExitCritical
vTaskSetTimeOutState
xTaskNotifyStateClear
xTaskGetCurrentTaskHandle
xTaskNotifyWait
xTaskCheckForTimeOut
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\cc8Xa6r8.s 			page 75


vTaskSuspendAll
xTaskGenericNotify
xTaskResumeAll
xTaskGenericNotifyFromISR
