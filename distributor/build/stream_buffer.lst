ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stream_buffer.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvBytesInBuffer,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	prvBytesInBuffer:
  26              	.LVL0:
  27              	.LFB23:
  28              		.file 1 "FreeRTOS/src/stream_buffer.c"
   1:FreeRTOS/src/stream_buffer.c **** /*
   2:FreeRTOS/src/stream_buffer.c ****  * FreeRTOS Kernel V10.3.1
   3:FreeRTOS/src/stream_buffer.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:FreeRTOS/src/stream_buffer.c ****  *
   5:FreeRTOS/src/stream_buffer.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:FreeRTOS/src/stream_buffer.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:FreeRTOS/src/stream_buffer.c ****  * the Software without restriction, including without limitation the rights to
   8:FreeRTOS/src/stream_buffer.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:FreeRTOS/src/stream_buffer.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:FreeRTOS/src/stream_buffer.c ****  * subject to the following conditions:
  11:FreeRTOS/src/stream_buffer.c ****  *
  12:FreeRTOS/src/stream_buffer.c ****  * The above copyright notice and this permission notice shall be included in all
  13:FreeRTOS/src/stream_buffer.c ****  * copies or substantial portions of the Software.
  14:FreeRTOS/src/stream_buffer.c ****  *
  15:FreeRTOS/src/stream_buffer.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:FreeRTOS/src/stream_buffer.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:FreeRTOS/src/stream_buffer.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:FreeRTOS/src/stream_buffer.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:FreeRTOS/src/stream_buffer.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:FreeRTOS/src/stream_buffer.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:FreeRTOS/src/stream_buffer.c ****  *
  22:FreeRTOS/src/stream_buffer.c ****  * http://www.FreeRTOS.org
  23:FreeRTOS/src/stream_buffer.c ****  * http://aws.amazon.com/freertos
  24:FreeRTOS/src/stream_buffer.c ****  *
  25:FreeRTOS/src/stream_buffer.c ****  * 1 tab == 4 spaces!
  26:FreeRTOS/src/stream_buffer.c ****  */
  27:FreeRTOS/src/stream_buffer.c **** 
  28:FreeRTOS/src/stream_buffer.c **** /* Standard includes. */
  29:FreeRTOS/src/stream_buffer.c **** #include <stdint.h>
  30:FreeRTOS/src/stream_buffer.c **** #include <string.h>
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 2


  31:FreeRTOS/src/stream_buffer.c **** 
  32:FreeRTOS/src/stream_buffer.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:FreeRTOS/src/stream_buffer.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:FreeRTOS/src/stream_buffer.c **** task.h is included from an application file. */
  35:FreeRTOS/src/stream_buffer.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:FreeRTOS/src/stream_buffer.c **** 
  37:FreeRTOS/src/stream_buffer.c **** /* FreeRTOS includes. */
  38:FreeRTOS/src/stream_buffer.c **** #include "FreeRTOS.h"
  39:FreeRTOS/src/stream_buffer.c **** #include "task.h"
  40:FreeRTOS/src/stream_buffer.c **** #include "stream_buffer.h"
  41:FreeRTOS/src/stream_buffer.c **** 
  42:FreeRTOS/src/stream_buffer.c **** #if( configUSE_TASK_NOTIFICATIONS != 1 )
  43:FreeRTOS/src/stream_buffer.c **** 	#error configUSE_TASK_NOTIFICATIONS must be set to 1 to build stream_buffer.c
  44:FreeRTOS/src/stream_buffer.c **** #endif
  45:FreeRTOS/src/stream_buffer.c **** 
  46:FreeRTOS/src/stream_buffer.c **** /* Lint e961, e9021 and e750 are suppressed as a MISRA exception justified
  47:FreeRTOS/src/stream_buffer.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  48:FreeRTOS/src/stream_buffer.c **** for the header files above, but not in this file, in order to generate the
  49:FreeRTOS/src/stream_buffer.c **** correct privileged Vs unprivileged linkage and placement. */
  50:FreeRTOS/src/stream_buffer.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  51:FreeRTOS/src/stream_buffer.c **** 
  52:FreeRTOS/src/stream_buffer.c **** /* If the user has not provided application specific Rx notification macros,
  53:FreeRTOS/src/stream_buffer.c **** or #defined the notification macros away, them provide default implementations
  54:FreeRTOS/src/stream_buffer.c **** that uses task notifications. */
  55:FreeRTOS/src/stream_buffer.c **** /*lint -save -e9026 Function like macros allowed and needed here so they can be overidden. */
  56:FreeRTOS/src/stream_buffer.c **** #ifndef sbRECEIVE_COMPLETED
  57:FreeRTOS/src/stream_buffer.c **** 	#define sbRECEIVE_COMPLETED( pxStreamBuffer )										\
  58:FreeRTOS/src/stream_buffer.c **** 		vTaskSuspendAll();																\
  59:FreeRTOS/src/stream_buffer.c **** 		{																				\
  60:FreeRTOS/src/stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )						\
  61:FreeRTOS/src/stream_buffer.c **** 			{																			\
  62:FreeRTOS/src/stream_buffer.c **** 				( void ) xTaskNotify( ( pxStreamBuffer )->xTaskWaitingToSend,			\
  63:FreeRTOS/src/stream_buffer.c **** 									  ( uint32_t ) 0,									\
  64:FreeRTOS/src/stream_buffer.c **** 									  eNoAction );										\
  65:FreeRTOS/src/stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToSend = NULL;							\
  66:FreeRTOS/src/stream_buffer.c **** 			}																			\
  67:FreeRTOS/src/stream_buffer.c **** 		}																				\
  68:FreeRTOS/src/stream_buffer.c **** 		( void ) xTaskResumeAll();
  69:FreeRTOS/src/stream_buffer.c **** #endif /* sbRECEIVE_COMPLETED */
  70:FreeRTOS/src/stream_buffer.c **** 
  71:FreeRTOS/src/stream_buffer.c **** #ifndef sbRECEIVE_COMPLETED_FROM_ISR
  72:FreeRTOS/src/stream_buffer.c **** 	#define sbRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer,								\
  73:FreeRTOS/src/stream_buffer.c **** 										  pxHigherPriorityTaskWoken )					\
  74:FreeRTOS/src/stream_buffer.c **** 	{																					\
  75:FreeRTOS/src/stream_buffer.c **** 	UBaseType_t uxSavedInterruptStatus;													\
  76:FreeRTOS/src/stream_buffer.c **** 																						\
  77:FreeRTOS/src/stream_buffer.c **** 		uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();		\
  78:FreeRTOS/src/stream_buffer.c **** 		{																				\
  79:FreeRTOS/src/stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )						\
  80:FreeRTOS/src/stream_buffer.c **** 			{																			\
  81:FreeRTOS/src/stream_buffer.c **** 				( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend,	\
  82:FreeRTOS/src/stream_buffer.c **** 											 ( uint32_t ) 0,							\
  83:FreeRTOS/src/stream_buffer.c **** 											 eNoAction,									\
  84:FreeRTOS/src/stream_buffer.c **** 											 pxHigherPriorityTaskWoken );				\
  85:FreeRTOS/src/stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToSend = NULL;							\
  86:FreeRTOS/src/stream_buffer.c **** 			}																			\
  87:FreeRTOS/src/stream_buffer.c **** 		}																				\
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 3


  88:FreeRTOS/src/stream_buffer.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );					\
  89:FreeRTOS/src/stream_buffer.c **** 	}
  90:FreeRTOS/src/stream_buffer.c **** #endif /* sbRECEIVE_COMPLETED_FROM_ISR */
  91:FreeRTOS/src/stream_buffer.c **** 
  92:FreeRTOS/src/stream_buffer.c **** /* If the user has not provided an application specific Tx notification macro,
  93:FreeRTOS/src/stream_buffer.c **** or #defined the notification macro away, them provide a default implementation
  94:FreeRTOS/src/stream_buffer.c **** that uses task notifications. */
  95:FreeRTOS/src/stream_buffer.c **** #ifndef sbSEND_COMPLETED
  96:FreeRTOS/src/stream_buffer.c **** 	#define sbSEND_COMPLETED( pxStreamBuffer )											\
  97:FreeRTOS/src/stream_buffer.c **** 		vTaskSuspendAll();																\
  98:FreeRTOS/src/stream_buffer.c **** 		{																				\
  99:FreeRTOS/src/stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )						\
 100:FreeRTOS/src/stream_buffer.c **** 			{																			\
 101:FreeRTOS/src/stream_buffer.c **** 				( void ) xTaskNotify( ( pxStreamBuffer )->xTaskWaitingToReceive,		\
 102:FreeRTOS/src/stream_buffer.c **** 									  ( uint32_t ) 0,									\
 103:FreeRTOS/src/stream_buffer.c **** 									  eNoAction );										\
 104:FreeRTOS/src/stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToReceive = NULL;						\
 105:FreeRTOS/src/stream_buffer.c **** 			}																			\
 106:FreeRTOS/src/stream_buffer.c **** 		}																				\
 107:FreeRTOS/src/stream_buffer.c **** 		( void ) xTaskResumeAll();
 108:FreeRTOS/src/stream_buffer.c **** #endif /* sbSEND_COMPLETED */
 109:FreeRTOS/src/stream_buffer.c **** 
 110:FreeRTOS/src/stream_buffer.c **** #ifndef sbSEND_COMPLETE_FROM_ISR
 111:FreeRTOS/src/stream_buffer.c **** 	#define sbSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken )		\
 112:FreeRTOS/src/stream_buffer.c **** 	{																					\
 113:FreeRTOS/src/stream_buffer.c **** 	UBaseType_t uxSavedInterruptStatus;													\
 114:FreeRTOS/src/stream_buffer.c **** 																						\
 115:FreeRTOS/src/stream_buffer.c **** 		uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();		\
 116:FreeRTOS/src/stream_buffer.c **** 		{																				\
 117:FreeRTOS/src/stream_buffer.c **** 			if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )						\
 118:FreeRTOS/src/stream_buffer.c **** 			{																			\
 119:FreeRTOS/src/stream_buffer.c **** 				( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive,	\
 120:FreeRTOS/src/stream_buffer.c **** 											 ( uint32_t ) 0,							\
 121:FreeRTOS/src/stream_buffer.c **** 											 eNoAction,									\
 122:FreeRTOS/src/stream_buffer.c **** 											 pxHigherPriorityTaskWoken );				\
 123:FreeRTOS/src/stream_buffer.c **** 				( pxStreamBuffer )->xTaskWaitingToReceive = NULL;						\
 124:FreeRTOS/src/stream_buffer.c **** 			}																			\
 125:FreeRTOS/src/stream_buffer.c **** 		}																				\
 126:FreeRTOS/src/stream_buffer.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );					\
 127:FreeRTOS/src/stream_buffer.c **** 	}
 128:FreeRTOS/src/stream_buffer.c **** #endif /* sbSEND_COMPLETE_FROM_ISR */
 129:FreeRTOS/src/stream_buffer.c **** /*lint -restore (9026) */
 130:FreeRTOS/src/stream_buffer.c **** 
 131:FreeRTOS/src/stream_buffer.c **** /* The number of bytes used to hold the length of a message in the buffer. */
 132:FreeRTOS/src/stream_buffer.c **** #define sbBYTES_TO_STORE_MESSAGE_LENGTH ( sizeof( configMESSAGE_BUFFER_LENGTH_TYPE ) )
 133:FreeRTOS/src/stream_buffer.c **** 
 134:FreeRTOS/src/stream_buffer.c **** /* Bits stored in the ucFlags field of the stream buffer. */
 135:FreeRTOS/src/stream_buffer.c **** #define sbFLAGS_IS_MESSAGE_BUFFER		( ( uint8_t ) 1 ) /* Set if the stream buffer was created as a m
 136:FreeRTOS/src/stream_buffer.c **** #define sbFLAGS_IS_STATICALLY_ALLOCATED ( ( uint8_t ) 2 ) /* Set if the stream buffer was created u
 137:FreeRTOS/src/stream_buffer.c **** 
 138:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 139:FreeRTOS/src/stream_buffer.c **** 
 140:FreeRTOS/src/stream_buffer.c **** /* Structure that hold state information on the buffer. */
 141:FreeRTOS/src/stream_buffer.c **** typedef struct StreamBufferDef_t /*lint !e9058 Style convention uses tag. */
 142:FreeRTOS/src/stream_buffer.c **** {
 143:FreeRTOS/src/stream_buffer.c **** 	volatile size_t xTail;				/* Index to the next item to read within the buffer. */
 144:FreeRTOS/src/stream_buffer.c **** 	volatile size_t xHead;				/* Index to the next item to write within the buffer. */
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 4


 145:FreeRTOS/src/stream_buffer.c **** 	size_t xLength;						/* The length of the buffer pointed to by pucBuffer. */
 146:FreeRTOS/src/stream_buffer.c **** 	size_t xTriggerLevelBytes;			/* The number of bytes that must be in the stream buffer before a tas
 147:FreeRTOS/src/stream_buffer.c **** 	volatile TaskHandle_t xTaskWaitingToReceive; /* Holds the handle of a task waiting for data, or NU
 148:FreeRTOS/src/stream_buffer.c **** 	volatile TaskHandle_t xTaskWaitingToSend;	/* Holds the handle of a task waiting to send data to a 
 149:FreeRTOS/src/stream_buffer.c **** 	uint8_t *pucBuffer;					/* Points to the buffer itself - that is - the RAM that stores the data pa
 150:FreeRTOS/src/stream_buffer.c **** 	uint8_t ucFlags;
 151:FreeRTOS/src/stream_buffer.c **** 
 152:FreeRTOS/src/stream_buffer.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 153:FreeRTOS/src/stream_buffer.c **** 		UBaseType_t uxStreamBufferNumber;		/* Used for tracing purposes. */
 154:FreeRTOS/src/stream_buffer.c **** 	#endif
 155:FreeRTOS/src/stream_buffer.c **** } StreamBuffer_t;
 156:FreeRTOS/src/stream_buffer.c **** 
 157:FreeRTOS/src/stream_buffer.c **** /*
 158:FreeRTOS/src/stream_buffer.c ****  * The number of bytes available to be read from the buffer.
 159:FreeRTOS/src/stream_buffer.c ****  */
 160:FreeRTOS/src/stream_buffer.c **** static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer ) PRIVILEGED_FUNCTION;
 161:FreeRTOS/src/stream_buffer.c **** 
 162:FreeRTOS/src/stream_buffer.c **** /*
 163:FreeRTOS/src/stream_buffer.c ****  * Add xCount bytes from pucData into the pxStreamBuffer message buffer.
 164:FreeRTOS/src/stream_buffer.c ****  * Returns the number of bytes written, which will either equal xCount in the
 165:FreeRTOS/src/stream_buffer.c ****  * success case, or 0 if there was not enough space in the buffer (in which case
 166:FreeRTOS/src/stream_buffer.c ****  * no data is written into the buffer).
 167:FreeRTOS/src/stream_buffer.c ****  */
 168:FreeRTOS/src/stream_buffer.c **** static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer, const uint8_t *pucData,
 169:FreeRTOS/src/stream_buffer.c **** 
 170:FreeRTOS/src/stream_buffer.c **** /*
 171:FreeRTOS/src/stream_buffer.c ****  * If the stream buffer is being used as a message buffer, then reads an entire
 172:FreeRTOS/src/stream_buffer.c ****  * message out of the buffer.  If the stream buffer is being used as a stream
 173:FreeRTOS/src/stream_buffer.c ****  * buffer then read as many bytes as possible from the buffer.
 174:FreeRTOS/src/stream_buffer.c ****  * prvReadBytesFromBuffer() is called to actually extract the bytes from the
 175:FreeRTOS/src/stream_buffer.c ****  * buffer's data storage area.
 176:FreeRTOS/src/stream_buffer.c ****  */
 177:FreeRTOS/src/stream_buffer.c **** static size_t prvReadMessageFromBuffer( StreamBuffer_t *pxStreamBuffer,
 178:FreeRTOS/src/stream_buffer.c **** 										void *pvRxData,
 179:FreeRTOS/src/stream_buffer.c **** 										size_t xBufferLengthBytes,
 180:FreeRTOS/src/stream_buffer.c **** 										size_t xBytesAvailable,
 181:FreeRTOS/src/stream_buffer.c **** 										size_t xBytesToStoreMessageLength ) PRIVILEGED_FUNCTION;
 182:FreeRTOS/src/stream_buffer.c **** 
 183:FreeRTOS/src/stream_buffer.c **** /*
 184:FreeRTOS/src/stream_buffer.c ****  * If the stream buffer is being used as a message buffer, then writes an entire
 185:FreeRTOS/src/stream_buffer.c ****  * message to the buffer.  If the stream buffer is being used as a stream
 186:FreeRTOS/src/stream_buffer.c ****  * buffer then write as many bytes as possible to the buffer.
 187:FreeRTOS/src/stream_buffer.c ****  * prvWriteBytestoBuffer() is called to actually send the bytes to the buffer's
 188:FreeRTOS/src/stream_buffer.c ****  * data storage area.
 189:FreeRTOS/src/stream_buffer.c ****  */
 190:FreeRTOS/src/stream_buffer.c **** static size_t prvWriteMessageToBuffer(  StreamBuffer_t * const pxStreamBuffer,
 191:FreeRTOS/src/stream_buffer.c **** 										const void * pvTxData,
 192:FreeRTOS/src/stream_buffer.c **** 										size_t xDataLengthBytes,
 193:FreeRTOS/src/stream_buffer.c **** 										size_t xSpace,
 194:FreeRTOS/src/stream_buffer.c **** 										size_t xRequiredSpace ) PRIVILEGED_FUNCTION;
 195:FreeRTOS/src/stream_buffer.c **** 
 196:FreeRTOS/src/stream_buffer.c **** /*
 197:FreeRTOS/src/stream_buffer.c ****  * Read xMaxCount bytes from the pxStreamBuffer message buffer and write them
 198:FreeRTOS/src/stream_buffer.c ****  * to pucData.
 199:FreeRTOS/src/stream_buffer.c ****  */
 200:FreeRTOS/src/stream_buffer.c **** static size_t prvReadBytesFromBuffer( StreamBuffer_t *pxStreamBuffer,
 201:FreeRTOS/src/stream_buffer.c **** 									  uint8_t *pucData,
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 5


 202:FreeRTOS/src/stream_buffer.c **** 									  size_t xMaxCount,
 203:FreeRTOS/src/stream_buffer.c **** 									  size_t xBytesAvailable ) PRIVILEGED_FUNCTION;
 204:FreeRTOS/src/stream_buffer.c **** 
 205:FreeRTOS/src/stream_buffer.c **** /*
 206:FreeRTOS/src/stream_buffer.c ****  * Called by both pxStreamBufferCreate() and pxStreamBufferCreateStatic() to
 207:FreeRTOS/src/stream_buffer.c ****  * initialise the members of the newly created stream buffer structure.
 208:FreeRTOS/src/stream_buffer.c ****  */
 209:FreeRTOS/src/stream_buffer.c **** static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,
 210:FreeRTOS/src/stream_buffer.c **** 										  uint8_t * const pucBuffer,
 211:FreeRTOS/src/stream_buffer.c **** 										  size_t xBufferSizeBytes,
 212:FreeRTOS/src/stream_buffer.c **** 										  size_t xTriggerLevelBytes,
 213:FreeRTOS/src/stream_buffer.c **** 										  uint8_t ucFlags ) PRIVILEGED_FUNCTION;
 214:FreeRTOS/src/stream_buffer.c **** 
 215:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 216:FreeRTOS/src/stream_buffer.c **** 
 217:FreeRTOS/src/stream_buffer.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 218:FreeRTOS/src/stream_buffer.c **** 
 219:FreeRTOS/src/stream_buffer.c **** 	StreamBufferHandle_t xStreamBufferGenericCreate( size_t xBufferSizeBytes, size_t xTriggerLevelByte
 220:FreeRTOS/src/stream_buffer.c **** 	{
 221:FreeRTOS/src/stream_buffer.c **** 	uint8_t *pucAllocatedMemory;
 222:FreeRTOS/src/stream_buffer.c **** 	uint8_t ucFlags;
 223:FreeRTOS/src/stream_buffer.c **** 
 224:FreeRTOS/src/stream_buffer.c **** 		/* In case the stream buffer is going to be used as a message buffer
 225:FreeRTOS/src/stream_buffer.c **** 		(that is, it will hold discrete messages with a little meta data that
 226:FreeRTOS/src/stream_buffer.c **** 		says how big the next message is) check the buffer will be large enough
 227:FreeRTOS/src/stream_buffer.c **** 		to hold at least one message. */
 228:FreeRTOS/src/stream_buffer.c **** 		if( xIsMessageBuffer == pdTRUE )
 229:FreeRTOS/src/stream_buffer.c **** 		{
 230:FreeRTOS/src/stream_buffer.c **** 			/* Is a message buffer but not statically allocated. */
 231:FreeRTOS/src/stream_buffer.c **** 			ucFlags = sbFLAGS_IS_MESSAGE_BUFFER;
 232:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 233:FreeRTOS/src/stream_buffer.c **** 		}
 234:FreeRTOS/src/stream_buffer.c **** 		else
 235:FreeRTOS/src/stream_buffer.c **** 		{
 236:FreeRTOS/src/stream_buffer.c **** 			/* Not a message buffer and not statically allocated. */
 237:FreeRTOS/src/stream_buffer.c **** 			ucFlags = 0;
 238:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xBufferSizeBytes > 0 );
 239:FreeRTOS/src/stream_buffer.c **** 		}
 240:FreeRTOS/src/stream_buffer.c **** 		configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 241:FreeRTOS/src/stream_buffer.c **** 
 242:FreeRTOS/src/stream_buffer.c **** 		/* A trigger level of 0 would cause a waiting task to unblock even when
 243:FreeRTOS/src/stream_buffer.c **** 		the buffer was empty. */
 244:FreeRTOS/src/stream_buffer.c **** 		if( xTriggerLevelBytes == ( size_t ) 0 )
 245:FreeRTOS/src/stream_buffer.c **** 		{
 246:FreeRTOS/src/stream_buffer.c **** 			xTriggerLevelBytes = ( size_t ) 1;
 247:FreeRTOS/src/stream_buffer.c **** 		}
 248:FreeRTOS/src/stream_buffer.c **** 
 249:FreeRTOS/src/stream_buffer.c **** 		/* A stream buffer requires a StreamBuffer_t structure and a buffer.
 250:FreeRTOS/src/stream_buffer.c **** 		Both are allocated in a single call to pvPortMalloc().  The
 251:FreeRTOS/src/stream_buffer.c **** 		StreamBuffer_t structure is placed at the start of the allocated memory
 252:FreeRTOS/src/stream_buffer.c **** 		and the buffer follows immediately after.  The requested size is
 253:FreeRTOS/src/stream_buffer.c **** 		incremented so the free space is returned as the user would expect -
 254:FreeRTOS/src/stream_buffer.c **** 		this is a quirk of the implementation that means otherwise the free
 255:FreeRTOS/src/stream_buffer.c **** 		space would be reported as one byte smaller than would be logically
 256:FreeRTOS/src/stream_buffer.c **** 		expected. */
 257:FreeRTOS/src/stream_buffer.c **** 		xBufferSizeBytes++;
 258:FreeRTOS/src/stream_buffer.c **** 		pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffer_t ) ); /
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 6


 259:FreeRTOS/src/stream_buffer.c **** 
 260:FreeRTOS/src/stream_buffer.c **** 		if( pucAllocatedMemory != NULL )
 261:FreeRTOS/src/stream_buffer.c **** 		{
 262:FreeRTOS/src/stream_buffer.c **** 			prvInitialiseNewStreamBuffer( ( StreamBuffer_t * ) pucAllocatedMemory, /* Structure at the start
 263:FreeRTOS/src/stream_buffer.c **** 										   pucAllocatedMemory + sizeof( StreamBuffer_t ),  /* Storage area follows. */ /*lint !e9
 264:FreeRTOS/src/stream_buffer.c **** 										   xBufferSizeBytes,
 265:FreeRTOS/src/stream_buffer.c **** 										   xTriggerLevelBytes,
 266:FreeRTOS/src/stream_buffer.c **** 										   ucFlags );
 267:FreeRTOS/src/stream_buffer.c **** 
 268:FreeRTOS/src/stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE( ( ( StreamBuffer_t * ) pucAllocatedMemory ), xIsMessageBuffer );
 269:FreeRTOS/src/stream_buffer.c **** 		}
 270:FreeRTOS/src/stream_buffer.c **** 		else
 271:FreeRTOS/src/stream_buffer.c **** 		{
 272:FreeRTOS/src/stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE_FAILED( xIsMessageBuffer );
 273:FreeRTOS/src/stream_buffer.c **** 		}
 274:FreeRTOS/src/stream_buffer.c **** 
 275:FreeRTOS/src/stream_buffer.c **** 		return ( StreamBufferHandle_t ) pucAllocatedMemory; /*lint !e9087 !e826 Safe cast as allocated me
 276:FreeRTOS/src/stream_buffer.c **** 	}
 277:FreeRTOS/src/stream_buffer.c **** 
 278:FreeRTOS/src/stream_buffer.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 279:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 280:FreeRTOS/src/stream_buffer.c **** 
 281:FreeRTOS/src/stream_buffer.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 282:FreeRTOS/src/stream_buffer.c **** 
 283:FreeRTOS/src/stream_buffer.c **** 	StreamBufferHandle_t xStreamBufferGenericCreateStatic( size_t xBufferSizeBytes,
 284:FreeRTOS/src/stream_buffer.c **** 														   size_t xTriggerLevelBytes,
 285:FreeRTOS/src/stream_buffer.c **** 														   BaseType_t xIsMessageBuffer,
 286:FreeRTOS/src/stream_buffer.c **** 														   uint8_t * const pucStreamBufferStorageArea,
 287:FreeRTOS/src/stream_buffer.c **** 														   StaticStreamBuffer_t * const pxStaticStreamBuffer )
 288:FreeRTOS/src/stream_buffer.c **** 	{
 289:FreeRTOS/src/stream_buffer.c **** 	StreamBuffer_t * const pxStreamBuffer = ( StreamBuffer_t * ) pxStaticStreamBuffer; /*lint !e740 !e
 290:FreeRTOS/src/stream_buffer.c **** 	StreamBufferHandle_t xReturn;
 291:FreeRTOS/src/stream_buffer.c **** 	uint8_t ucFlags;
 292:FreeRTOS/src/stream_buffer.c **** 
 293:FreeRTOS/src/stream_buffer.c **** 		configASSERT( pucStreamBufferStorageArea );
 294:FreeRTOS/src/stream_buffer.c **** 		configASSERT( pxStaticStreamBuffer );
 295:FreeRTOS/src/stream_buffer.c **** 		configASSERT( xTriggerLevelBytes <= xBufferSizeBytes );
 296:FreeRTOS/src/stream_buffer.c **** 
 297:FreeRTOS/src/stream_buffer.c **** 		/* A trigger level of 0 would cause a waiting task to unblock even when
 298:FreeRTOS/src/stream_buffer.c **** 		the buffer was empty. */
 299:FreeRTOS/src/stream_buffer.c **** 		if( xTriggerLevelBytes == ( size_t ) 0 )
 300:FreeRTOS/src/stream_buffer.c **** 		{
 301:FreeRTOS/src/stream_buffer.c **** 			xTriggerLevelBytes = ( size_t ) 1;
 302:FreeRTOS/src/stream_buffer.c **** 		}
 303:FreeRTOS/src/stream_buffer.c **** 
 304:FreeRTOS/src/stream_buffer.c **** 		if( xIsMessageBuffer != pdFALSE )
 305:FreeRTOS/src/stream_buffer.c **** 		{
 306:FreeRTOS/src/stream_buffer.c **** 			/* Statically allocated message buffer. */
 307:FreeRTOS/src/stream_buffer.c **** 			ucFlags = sbFLAGS_IS_MESSAGE_BUFFER | sbFLAGS_IS_STATICALLY_ALLOCATED;
 308:FreeRTOS/src/stream_buffer.c **** 		}
 309:FreeRTOS/src/stream_buffer.c **** 		else
 310:FreeRTOS/src/stream_buffer.c **** 		{
 311:FreeRTOS/src/stream_buffer.c **** 			/* Statically allocated stream buffer. */
 312:FreeRTOS/src/stream_buffer.c **** 			ucFlags = sbFLAGS_IS_STATICALLY_ALLOCATED;
 313:FreeRTOS/src/stream_buffer.c **** 		}
 314:FreeRTOS/src/stream_buffer.c **** 
 315:FreeRTOS/src/stream_buffer.c **** 		/* In case the stream buffer is going to be used as a message buffer
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 7


 316:FreeRTOS/src/stream_buffer.c **** 		(that is, it will hold discrete messages with a little meta data that
 317:FreeRTOS/src/stream_buffer.c **** 		says how big the next message is) check the buffer will be large enough
 318:FreeRTOS/src/stream_buffer.c **** 		to hold at least one message. */
 319:FreeRTOS/src/stream_buffer.c **** 		configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 320:FreeRTOS/src/stream_buffer.c **** 
 321:FreeRTOS/src/stream_buffer.c **** 		#if( configASSERT_DEFINED == 1 )
 322:FreeRTOS/src/stream_buffer.c **** 		{
 323:FreeRTOS/src/stream_buffer.c **** 			/* Sanity check that the size of the structure used to declare a
 324:FreeRTOS/src/stream_buffer.c **** 			variable of type StaticStreamBuffer_t equals the size of the real
 325:FreeRTOS/src/stream_buffer.c **** 			message buffer structure. */
 326:FreeRTOS/src/stream_buffer.c **** 			volatile size_t xSize = sizeof( StaticStreamBuffer_t );
 327:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xSize == sizeof( StreamBuffer_t ) );
 328:FreeRTOS/src/stream_buffer.c **** 		} /*lint !e529 xSize is referenced is configASSERT() is defined. */
 329:FreeRTOS/src/stream_buffer.c **** 		#endif /* configASSERT_DEFINED */
 330:FreeRTOS/src/stream_buffer.c **** 
 331:FreeRTOS/src/stream_buffer.c **** 		if( ( pucStreamBufferStorageArea != NULL ) && ( pxStaticStreamBuffer != NULL ) )
 332:FreeRTOS/src/stream_buffer.c **** 		{
 333:FreeRTOS/src/stream_buffer.c **** 			prvInitialiseNewStreamBuffer( pxStreamBuffer,
 334:FreeRTOS/src/stream_buffer.c **** 										  pucStreamBufferStorageArea,
 335:FreeRTOS/src/stream_buffer.c **** 										  xBufferSizeBytes,
 336:FreeRTOS/src/stream_buffer.c **** 										  xTriggerLevelBytes,
 337:FreeRTOS/src/stream_buffer.c **** 										  ucFlags );
 338:FreeRTOS/src/stream_buffer.c **** 
 339:FreeRTOS/src/stream_buffer.c **** 			/* Remember this was statically allocated in case it is ever deleted
 340:FreeRTOS/src/stream_buffer.c **** 			again. */
 341:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->ucFlags |= sbFLAGS_IS_STATICALLY_ALLOCATED;
 342:FreeRTOS/src/stream_buffer.c **** 
 343:FreeRTOS/src/stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE( pxStreamBuffer, xIsMessageBuffer );
 344:FreeRTOS/src/stream_buffer.c **** 
 345:FreeRTOS/src/stream_buffer.c **** 			xReturn = ( StreamBufferHandle_t ) pxStaticStreamBuffer; /*lint !e9087 Data hiding requires cast
 346:FreeRTOS/src/stream_buffer.c **** 		}
 347:FreeRTOS/src/stream_buffer.c **** 		else
 348:FreeRTOS/src/stream_buffer.c **** 		{
 349:FreeRTOS/src/stream_buffer.c **** 			xReturn = NULL;
 350:FreeRTOS/src/stream_buffer.c **** 			traceSTREAM_BUFFER_CREATE_STATIC_FAILED( xReturn, xIsMessageBuffer );
 351:FreeRTOS/src/stream_buffer.c **** 		}
 352:FreeRTOS/src/stream_buffer.c **** 
 353:FreeRTOS/src/stream_buffer.c **** 		return xReturn;
 354:FreeRTOS/src/stream_buffer.c **** 	}
 355:FreeRTOS/src/stream_buffer.c **** 
 356:FreeRTOS/src/stream_buffer.c **** #endif /* ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 357:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 358:FreeRTOS/src/stream_buffer.c **** 
 359:FreeRTOS/src/stream_buffer.c **** void vStreamBufferDelete( StreamBufferHandle_t xStreamBuffer )
 360:FreeRTOS/src/stream_buffer.c **** {
 361:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 362:FreeRTOS/src/stream_buffer.c **** 
 363:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 364:FreeRTOS/src/stream_buffer.c **** 
 365:FreeRTOS/src/stream_buffer.c **** 	traceSTREAM_BUFFER_DELETE( xStreamBuffer );
 366:FreeRTOS/src/stream_buffer.c **** 
 367:FreeRTOS/src/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) pdFALSE )
 368:FreeRTOS/src/stream_buffer.c **** 	{
 369:FreeRTOS/src/stream_buffer.c **** 		#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 370:FreeRTOS/src/stream_buffer.c **** 		{
 371:FreeRTOS/src/stream_buffer.c **** 			/* Both the structure and the buffer were allocated using a single call
 372:FreeRTOS/src/stream_buffer.c **** 			to pvPortMalloc(), hence only one call to vPortFree() is required. */
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 8


 373:FreeRTOS/src/stream_buffer.c **** 			vPortFree( ( void * ) pxStreamBuffer ); /*lint !e9087 Standard free() semantics require void *, 
 374:FreeRTOS/src/stream_buffer.c **** 		}
 375:FreeRTOS/src/stream_buffer.c **** 		#else
 376:FreeRTOS/src/stream_buffer.c **** 		{
 377:FreeRTOS/src/stream_buffer.c **** 			/* Should not be possible to get here, ucFlags must be corrupt.
 378:FreeRTOS/src/stream_buffer.c **** 			Force an assert. */
 379:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xStreamBuffer == ( StreamBufferHandle_t ) ~0 );
 380:FreeRTOS/src/stream_buffer.c **** 		}
 381:FreeRTOS/src/stream_buffer.c **** 		#endif
 382:FreeRTOS/src/stream_buffer.c **** 	}
 383:FreeRTOS/src/stream_buffer.c **** 	else
 384:FreeRTOS/src/stream_buffer.c **** 	{
 385:FreeRTOS/src/stream_buffer.c **** 		/* The structure and buffer were not allocated dynamically and cannot be
 386:FreeRTOS/src/stream_buffer.c **** 		freed - just scrub the structure so future use will assert. */
 387:FreeRTOS/src/stream_buffer.c **** 		( void ) memset( pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) );
 388:FreeRTOS/src/stream_buffer.c **** 	}
 389:FreeRTOS/src/stream_buffer.c **** }
 390:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 391:FreeRTOS/src/stream_buffer.c **** 
 392:FreeRTOS/src/stream_buffer.c **** BaseType_t xStreamBufferReset( StreamBufferHandle_t xStreamBuffer )
 393:FreeRTOS/src/stream_buffer.c **** {
 394:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 395:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn = pdFAIL;
 396:FreeRTOS/src/stream_buffer.c **** 
 397:FreeRTOS/src/stream_buffer.c **** #if( configUSE_TRACE_FACILITY == 1 )
 398:FreeRTOS/src/stream_buffer.c **** 	UBaseType_t uxStreamBufferNumber;
 399:FreeRTOS/src/stream_buffer.c **** #endif
 400:FreeRTOS/src/stream_buffer.c **** 
 401:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 402:FreeRTOS/src/stream_buffer.c **** 
 403:FreeRTOS/src/stream_buffer.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
 404:FreeRTOS/src/stream_buffer.c **** 	{
 405:FreeRTOS/src/stream_buffer.c **** 		/* Store the stream buffer number so it can be restored after the
 406:FreeRTOS/src/stream_buffer.c **** 		reset. */
 407:FreeRTOS/src/stream_buffer.c **** 		uxStreamBufferNumber = pxStreamBuffer->uxStreamBufferNumber;
 408:FreeRTOS/src/stream_buffer.c **** 	}
 409:FreeRTOS/src/stream_buffer.c **** 	#endif
 410:FreeRTOS/src/stream_buffer.c **** 
 411:FreeRTOS/src/stream_buffer.c **** 	/* Can only reset a message buffer if there are no tasks blocked on it. */
 412:FreeRTOS/src/stream_buffer.c **** 	taskENTER_CRITICAL();
 413:FreeRTOS/src/stream_buffer.c **** 	{
 414:FreeRTOS/src/stream_buffer.c **** 		if( pxStreamBuffer->xTaskWaitingToReceive == NULL )
 415:FreeRTOS/src/stream_buffer.c **** 		{
 416:FreeRTOS/src/stream_buffer.c **** 			if( pxStreamBuffer->xTaskWaitingToSend == NULL )
 417:FreeRTOS/src/stream_buffer.c **** 			{
 418:FreeRTOS/src/stream_buffer.c **** 				prvInitialiseNewStreamBuffer( pxStreamBuffer,
 419:FreeRTOS/src/stream_buffer.c **** 											  pxStreamBuffer->pucBuffer,
 420:FreeRTOS/src/stream_buffer.c **** 											  pxStreamBuffer->xLength,
 421:FreeRTOS/src/stream_buffer.c **** 											  pxStreamBuffer->xTriggerLevelBytes,
 422:FreeRTOS/src/stream_buffer.c **** 											  pxStreamBuffer->ucFlags );
 423:FreeRTOS/src/stream_buffer.c **** 				xReturn = pdPASS;
 424:FreeRTOS/src/stream_buffer.c **** 
 425:FreeRTOS/src/stream_buffer.c **** 				#if( configUSE_TRACE_FACILITY == 1 )
 426:FreeRTOS/src/stream_buffer.c **** 				{
 427:FreeRTOS/src/stream_buffer.c **** 					pxStreamBuffer->uxStreamBufferNumber = uxStreamBufferNumber;
 428:FreeRTOS/src/stream_buffer.c **** 				}
 429:FreeRTOS/src/stream_buffer.c **** 				#endif
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 9


 430:FreeRTOS/src/stream_buffer.c **** 
 431:FreeRTOS/src/stream_buffer.c **** 				traceSTREAM_BUFFER_RESET( xStreamBuffer );
 432:FreeRTOS/src/stream_buffer.c **** 			}
 433:FreeRTOS/src/stream_buffer.c **** 		}
 434:FreeRTOS/src/stream_buffer.c **** 	}
 435:FreeRTOS/src/stream_buffer.c **** 	taskEXIT_CRITICAL();
 436:FreeRTOS/src/stream_buffer.c **** 
 437:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 438:FreeRTOS/src/stream_buffer.c **** }
 439:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 440:FreeRTOS/src/stream_buffer.c **** 
 441:FreeRTOS/src/stream_buffer.c **** BaseType_t xStreamBufferSetTriggerLevel( StreamBufferHandle_t xStreamBuffer, size_t xTriggerLevel )
 442:FreeRTOS/src/stream_buffer.c **** {
 443:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 444:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 445:FreeRTOS/src/stream_buffer.c **** 
 446:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 447:FreeRTOS/src/stream_buffer.c **** 
 448:FreeRTOS/src/stream_buffer.c **** 	/* It is not valid for the trigger level to be 0. */
 449:FreeRTOS/src/stream_buffer.c **** 	if( xTriggerLevel == ( size_t ) 0 )
 450:FreeRTOS/src/stream_buffer.c **** 	{
 451:FreeRTOS/src/stream_buffer.c **** 		xTriggerLevel = ( size_t ) 1;
 452:FreeRTOS/src/stream_buffer.c **** 	}
 453:FreeRTOS/src/stream_buffer.c **** 
 454:FreeRTOS/src/stream_buffer.c **** 	/* The trigger level is the number of bytes that must be in the stream
 455:FreeRTOS/src/stream_buffer.c **** 	buffer before a task that is waiting for data is unblocked. */
 456:FreeRTOS/src/stream_buffer.c **** 	if( xTriggerLevel <= pxStreamBuffer->xLength )
 457:FreeRTOS/src/stream_buffer.c **** 	{
 458:FreeRTOS/src/stream_buffer.c **** 		pxStreamBuffer->xTriggerLevelBytes = xTriggerLevel;
 459:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdPASS;
 460:FreeRTOS/src/stream_buffer.c **** 	}
 461:FreeRTOS/src/stream_buffer.c **** 	else
 462:FreeRTOS/src/stream_buffer.c **** 	{
 463:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdFALSE;
 464:FreeRTOS/src/stream_buffer.c **** 	}
 465:FreeRTOS/src/stream_buffer.c **** 
 466:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 467:FreeRTOS/src/stream_buffer.c **** }
 468:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 469:FreeRTOS/src/stream_buffer.c **** 
 470:FreeRTOS/src/stream_buffer.c **** size_t xStreamBufferSpacesAvailable( StreamBufferHandle_t xStreamBuffer )
 471:FreeRTOS/src/stream_buffer.c **** {
 472:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 473:FreeRTOS/src/stream_buffer.c **** size_t xSpace;
 474:FreeRTOS/src/stream_buffer.c **** 
 475:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 476:FreeRTOS/src/stream_buffer.c **** 
 477:FreeRTOS/src/stream_buffer.c **** 	xSpace = pxStreamBuffer->xLength + pxStreamBuffer->xTail;
 478:FreeRTOS/src/stream_buffer.c **** 	xSpace -= pxStreamBuffer->xHead;
 479:FreeRTOS/src/stream_buffer.c **** 	xSpace -= ( size_t ) 1;
 480:FreeRTOS/src/stream_buffer.c **** 
 481:FreeRTOS/src/stream_buffer.c **** 	if( xSpace >= pxStreamBuffer->xLength )
 482:FreeRTOS/src/stream_buffer.c **** 	{
 483:FreeRTOS/src/stream_buffer.c **** 		xSpace -= pxStreamBuffer->xLength;
 484:FreeRTOS/src/stream_buffer.c **** 	}
 485:FreeRTOS/src/stream_buffer.c **** 	else
 486:FreeRTOS/src/stream_buffer.c **** 	{
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 10


 487:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 488:FreeRTOS/src/stream_buffer.c **** 	}
 489:FreeRTOS/src/stream_buffer.c **** 
 490:FreeRTOS/src/stream_buffer.c **** 	return xSpace;
 491:FreeRTOS/src/stream_buffer.c **** }
 492:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 493:FreeRTOS/src/stream_buffer.c **** 
 494:FreeRTOS/src/stream_buffer.c **** size_t xStreamBufferBytesAvailable( StreamBufferHandle_t xStreamBuffer )
 495:FreeRTOS/src/stream_buffer.c **** {
 496:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 497:FreeRTOS/src/stream_buffer.c **** size_t xReturn;
 498:FreeRTOS/src/stream_buffer.c **** 
 499:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 500:FreeRTOS/src/stream_buffer.c **** 
 501:FreeRTOS/src/stream_buffer.c **** 	xReturn = prvBytesInBuffer( pxStreamBuffer );
 502:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 503:FreeRTOS/src/stream_buffer.c **** }
 504:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 505:FreeRTOS/src/stream_buffer.c **** 
 506:FreeRTOS/src/stream_buffer.c **** size_t xStreamBufferSend( StreamBufferHandle_t xStreamBuffer,
 507:FreeRTOS/src/stream_buffer.c **** 						  const void *pvTxData,
 508:FreeRTOS/src/stream_buffer.c **** 						  size_t xDataLengthBytes,
 509:FreeRTOS/src/stream_buffer.c **** 						  TickType_t xTicksToWait )
 510:FreeRTOS/src/stream_buffer.c **** {
 511:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 512:FreeRTOS/src/stream_buffer.c **** size_t xReturn, xSpace = 0;
 513:FreeRTOS/src/stream_buffer.c **** size_t xRequiredSpace = xDataLengthBytes;
 514:FreeRTOS/src/stream_buffer.c **** TimeOut_t xTimeOut;
 515:FreeRTOS/src/stream_buffer.c **** 
 516:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pvTxData );
 517:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 518:FreeRTOS/src/stream_buffer.c **** 
 519:FreeRTOS/src/stream_buffer.c **** 	/* This send function is used to write to both message buffers and stream
 520:FreeRTOS/src/stream_buffer.c **** 	buffers.  If this is a message buffer then the space needed must be
 521:FreeRTOS/src/stream_buffer.c **** 	increased by the amount of bytes needed to store the length of the
 522:FreeRTOS/src/stream_buffer.c **** 	message. */
 523:FreeRTOS/src/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 524:FreeRTOS/src/stream_buffer.c **** 	{
 525:FreeRTOS/src/stream_buffer.c **** 		xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
 526:FreeRTOS/src/stream_buffer.c **** 
 527:FreeRTOS/src/stream_buffer.c **** 		/* Overflow? */
 528:FreeRTOS/src/stream_buffer.c **** 		configASSERT( xRequiredSpace > xDataLengthBytes );
 529:FreeRTOS/src/stream_buffer.c **** 	}
 530:FreeRTOS/src/stream_buffer.c **** 	else
 531:FreeRTOS/src/stream_buffer.c **** 	{
 532:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 533:FreeRTOS/src/stream_buffer.c **** 	}
 534:FreeRTOS/src/stream_buffer.c **** 
 535:FreeRTOS/src/stream_buffer.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 536:FreeRTOS/src/stream_buffer.c **** 	{
 537:FreeRTOS/src/stream_buffer.c **** 		vTaskSetTimeOutState( &xTimeOut );
 538:FreeRTOS/src/stream_buffer.c **** 
 539:FreeRTOS/src/stream_buffer.c **** 		do
 540:FreeRTOS/src/stream_buffer.c **** 		{
 541:FreeRTOS/src/stream_buffer.c **** 			/* Wait until the required number of bytes are free in the message
 542:FreeRTOS/src/stream_buffer.c **** 			buffer. */
 543:FreeRTOS/src/stream_buffer.c **** 			taskENTER_CRITICAL();
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 11


 544:FreeRTOS/src/stream_buffer.c **** 			{
 545:FreeRTOS/src/stream_buffer.c **** 				xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 546:FreeRTOS/src/stream_buffer.c **** 
 547:FreeRTOS/src/stream_buffer.c **** 				if( xSpace < xRequiredSpace )
 548:FreeRTOS/src/stream_buffer.c **** 				{
 549:FreeRTOS/src/stream_buffer.c **** 					/* Clear notification state as going to wait for space. */
 550:FreeRTOS/src/stream_buffer.c **** 					( void ) xTaskNotifyStateClear( NULL );
 551:FreeRTOS/src/stream_buffer.c **** 
 552:FreeRTOS/src/stream_buffer.c **** 					/* Should only be one writer. */
 553:FreeRTOS/src/stream_buffer.c **** 					configASSERT( pxStreamBuffer->xTaskWaitingToSend == NULL );
 554:FreeRTOS/src/stream_buffer.c **** 					pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 555:FreeRTOS/src/stream_buffer.c **** 				}
 556:FreeRTOS/src/stream_buffer.c **** 				else
 557:FreeRTOS/src/stream_buffer.c **** 				{
 558:FreeRTOS/src/stream_buffer.c **** 					taskEXIT_CRITICAL();
 559:FreeRTOS/src/stream_buffer.c **** 					break;
 560:FreeRTOS/src/stream_buffer.c **** 				}
 561:FreeRTOS/src/stream_buffer.c **** 			}
 562:FreeRTOS/src/stream_buffer.c **** 			taskEXIT_CRITICAL();
 563:FreeRTOS/src/stream_buffer.c **** 
 564:FreeRTOS/src/stream_buffer.c **** 			traceBLOCKING_ON_STREAM_BUFFER_SEND( xStreamBuffer );
 565:FreeRTOS/src/stream_buffer.c **** 			( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 566:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToSend = NULL;
 567:FreeRTOS/src/stream_buffer.c **** 
 568:FreeRTOS/src/stream_buffer.c **** 		} while( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE );
 569:FreeRTOS/src/stream_buffer.c **** 	}
 570:FreeRTOS/src/stream_buffer.c **** 	else
 571:FreeRTOS/src/stream_buffer.c **** 	{
 572:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 573:FreeRTOS/src/stream_buffer.c **** 	}
 574:FreeRTOS/src/stream_buffer.c **** 
 575:FreeRTOS/src/stream_buffer.c **** 	if( xSpace == ( size_t ) 0 )
 576:FreeRTOS/src/stream_buffer.c **** 	{
 577:FreeRTOS/src/stream_buffer.c **** 		xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 578:FreeRTOS/src/stream_buffer.c **** 	}
 579:FreeRTOS/src/stream_buffer.c **** 	else
 580:FreeRTOS/src/stream_buffer.c **** 	{
 581:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 582:FreeRTOS/src/stream_buffer.c **** 	}
 583:FreeRTOS/src/stream_buffer.c **** 
 584:FreeRTOS/src/stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 585:FreeRTOS/src/stream_buffer.c **** 
 586:FreeRTOS/src/stream_buffer.c **** 	if( xReturn > ( size_t ) 0 )
 587:FreeRTOS/src/stream_buffer.c **** 	{
 588:FreeRTOS/src/stream_buffer.c **** 		traceSTREAM_BUFFER_SEND( xStreamBuffer, xReturn );
 589:FreeRTOS/src/stream_buffer.c **** 
 590:FreeRTOS/src/stream_buffer.c **** 		/* Was a task waiting for the data? */
 591:FreeRTOS/src/stream_buffer.c **** 		if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
 592:FreeRTOS/src/stream_buffer.c **** 		{
 593:FreeRTOS/src/stream_buffer.c **** 			sbSEND_COMPLETED( pxStreamBuffer );
 594:FreeRTOS/src/stream_buffer.c **** 		}
 595:FreeRTOS/src/stream_buffer.c **** 		else
 596:FreeRTOS/src/stream_buffer.c **** 		{
 597:FreeRTOS/src/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 598:FreeRTOS/src/stream_buffer.c **** 		}
 599:FreeRTOS/src/stream_buffer.c **** 	}
 600:FreeRTOS/src/stream_buffer.c **** 	else
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 12


 601:FreeRTOS/src/stream_buffer.c **** 	{
 602:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 603:FreeRTOS/src/stream_buffer.c **** 		traceSTREAM_BUFFER_SEND_FAILED( xStreamBuffer );
 604:FreeRTOS/src/stream_buffer.c **** 	}
 605:FreeRTOS/src/stream_buffer.c **** 
 606:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 607:FreeRTOS/src/stream_buffer.c **** }
 608:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 609:FreeRTOS/src/stream_buffer.c **** 
 610:FreeRTOS/src/stream_buffer.c **** size_t xStreamBufferSendFromISR( StreamBufferHandle_t xStreamBuffer,
 611:FreeRTOS/src/stream_buffer.c **** 								 const void *pvTxData,
 612:FreeRTOS/src/stream_buffer.c **** 								 size_t xDataLengthBytes,
 613:FreeRTOS/src/stream_buffer.c **** 								 BaseType_t * const pxHigherPriorityTaskWoken )
 614:FreeRTOS/src/stream_buffer.c **** {
 615:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 616:FreeRTOS/src/stream_buffer.c **** size_t xReturn, xSpace;
 617:FreeRTOS/src/stream_buffer.c **** size_t xRequiredSpace = xDataLengthBytes;
 618:FreeRTOS/src/stream_buffer.c **** 
 619:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pvTxData );
 620:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 621:FreeRTOS/src/stream_buffer.c **** 
 622:FreeRTOS/src/stream_buffer.c **** 	/* This send function is used to write to both message buffers and stream
 623:FreeRTOS/src/stream_buffer.c **** 	buffers.  If this is a message buffer then the space needed must be
 624:FreeRTOS/src/stream_buffer.c **** 	increased by the amount of bytes needed to store the length of the
 625:FreeRTOS/src/stream_buffer.c **** 	message. */
 626:FreeRTOS/src/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 627:FreeRTOS/src/stream_buffer.c **** 	{
 628:FreeRTOS/src/stream_buffer.c **** 		xRequiredSpace += sbBYTES_TO_STORE_MESSAGE_LENGTH;
 629:FreeRTOS/src/stream_buffer.c **** 	}
 630:FreeRTOS/src/stream_buffer.c **** 	else
 631:FreeRTOS/src/stream_buffer.c **** 	{
 632:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 633:FreeRTOS/src/stream_buffer.c **** 	}
 634:FreeRTOS/src/stream_buffer.c **** 
 635:FreeRTOS/src/stream_buffer.c **** 	xSpace = xStreamBufferSpacesAvailable( pxStreamBuffer );
 636:FreeRTOS/src/stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 637:FreeRTOS/src/stream_buffer.c **** 
 638:FreeRTOS/src/stream_buffer.c **** 	if( xReturn > ( size_t ) 0 )
 639:FreeRTOS/src/stream_buffer.c **** 	{
 640:FreeRTOS/src/stream_buffer.c **** 		/* Was a task waiting for the data? */
 641:FreeRTOS/src/stream_buffer.c **** 		if( prvBytesInBuffer( pxStreamBuffer ) >= pxStreamBuffer->xTriggerLevelBytes )
 642:FreeRTOS/src/stream_buffer.c **** 		{
 643:FreeRTOS/src/stream_buffer.c **** 			sbSEND_COMPLETE_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
 644:FreeRTOS/src/stream_buffer.c **** 		}
 645:FreeRTOS/src/stream_buffer.c **** 		else
 646:FreeRTOS/src/stream_buffer.c **** 		{
 647:FreeRTOS/src/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 648:FreeRTOS/src/stream_buffer.c **** 		}
 649:FreeRTOS/src/stream_buffer.c **** 	}
 650:FreeRTOS/src/stream_buffer.c **** 	else
 651:FreeRTOS/src/stream_buffer.c **** 	{
 652:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 653:FreeRTOS/src/stream_buffer.c **** 	}
 654:FreeRTOS/src/stream_buffer.c **** 
 655:FreeRTOS/src/stream_buffer.c **** 	traceSTREAM_BUFFER_SEND_FROM_ISR( xStreamBuffer, xReturn );
 656:FreeRTOS/src/stream_buffer.c **** 
 657:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 13


 658:FreeRTOS/src/stream_buffer.c **** }
 659:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 660:FreeRTOS/src/stream_buffer.c **** 
 661:FreeRTOS/src/stream_buffer.c **** static size_t prvWriteMessageToBuffer( StreamBuffer_t * const pxStreamBuffer,
 662:FreeRTOS/src/stream_buffer.c **** 									   const void * pvTxData,
 663:FreeRTOS/src/stream_buffer.c **** 									   size_t xDataLengthBytes,
 664:FreeRTOS/src/stream_buffer.c **** 									   size_t xSpace,
 665:FreeRTOS/src/stream_buffer.c **** 									   size_t xRequiredSpace )
 666:FreeRTOS/src/stream_buffer.c **** {
 667:FreeRTOS/src/stream_buffer.c **** 	BaseType_t xShouldWrite;
 668:FreeRTOS/src/stream_buffer.c **** 	size_t xReturn;
 669:FreeRTOS/src/stream_buffer.c **** 
 670:FreeRTOS/src/stream_buffer.c **** 	if( xSpace == ( size_t ) 0 )
 671:FreeRTOS/src/stream_buffer.c **** 	{
 672:FreeRTOS/src/stream_buffer.c **** 		/* Doesn't matter if this is a stream buffer or a message buffer, there
 673:FreeRTOS/src/stream_buffer.c **** 		is no space to write. */
 674:FreeRTOS/src/stream_buffer.c **** 		xShouldWrite = pdFALSE;
 675:FreeRTOS/src/stream_buffer.c **** 	}
 676:FreeRTOS/src/stream_buffer.c **** 	else if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) == ( uint8_t ) 0 )
 677:FreeRTOS/src/stream_buffer.c **** 	{
 678:FreeRTOS/src/stream_buffer.c **** 		/* This is a stream buffer, as opposed to a message buffer, so writing a
 679:FreeRTOS/src/stream_buffer.c **** 		stream of bytes rather than discrete messages.  Write as many bytes as
 680:FreeRTOS/src/stream_buffer.c **** 		possible. */
 681:FreeRTOS/src/stream_buffer.c **** 		xShouldWrite = pdTRUE;
 682:FreeRTOS/src/stream_buffer.c **** 		xDataLengthBytes = configMIN( xDataLengthBytes, xSpace );
 683:FreeRTOS/src/stream_buffer.c **** 	}
 684:FreeRTOS/src/stream_buffer.c **** 	else if( xSpace >= xRequiredSpace )
 685:FreeRTOS/src/stream_buffer.c **** 	{
 686:FreeRTOS/src/stream_buffer.c **** 		/* This is a message buffer, as opposed to a stream buffer, and there
 687:FreeRTOS/src/stream_buffer.c **** 		is enough space to write both the message length and the message itself
 688:FreeRTOS/src/stream_buffer.c **** 		into the buffer.  Start by writing the length of the data, the data
 689:FreeRTOS/src/stream_buffer.c **** 		itself will be written later in this function. */
 690:FreeRTOS/src/stream_buffer.c **** 		xShouldWrite = pdTRUE;
 691:FreeRTOS/src/stream_buffer.c **** 		( void ) prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) &( xDataLengthBytes ), sbBYTE
 692:FreeRTOS/src/stream_buffer.c **** 	}
 693:FreeRTOS/src/stream_buffer.c **** 	else
 694:FreeRTOS/src/stream_buffer.c **** 	{
 695:FreeRTOS/src/stream_buffer.c **** 		/* There is space available, but not enough space. */
 696:FreeRTOS/src/stream_buffer.c **** 		xShouldWrite = pdFALSE;
 697:FreeRTOS/src/stream_buffer.c **** 	}
 698:FreeRTOS/src/stream_buffer.c **** 
 699:FreeRTOS/src/stream_buffer.c **** 	if( xShouldWrite != pdFALSE )
 700:FreeRTOS/src/stream_buffer.c **** 	{
 701:FreeRTOS/src/stream_buffer.c **** 		/* Writes the data itself. */
 702:FreeRTOS/src/stream_buffer.c **** 		xReturn = prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) pvTxData, xDataLengthBytes )
 703:FreeRTOS/src/stream_buffer.c **** 	}
 704:FreeRTOS/src/stream_buffer.c **** 	else
 705:FreeRTOS/src/stream_buffer.c **** 	{
 706:FreeRTOS/src/stream_buffer.c **** 		xReturn = 0;
 707:FreeRTOS/src/stream_buffer.c **** 	}
 708:FreeRTOS/src/stream_buffer.c **** 
 709:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 710:FreeRTOS/src/stream_buffer.c **** }
 711:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 712:FreeRTOS/src/stream_buffer.c **** 
 713:FreeRTOS/src/stream_buffer.c **** size_t xStreamBufferReceive( StreamBufferHandle_t xStreamBuffer,
 714:FreeRTOS/src/stream_buffer.c **** 							 void *pvRxData,
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 14


 715:FreeRTOS/src/stream_buffer.c **** 							 size_t xBufferLengthBytes,
 716:FreeRTOS/src/stream_buffer.c **** 							 TickType_t xTicksToWait )
 717:FreeRTOS/src/stream_buffer.c **** {
 718:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 719:FreeRTOS/src/stream_buffer.c **** size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 720:FreeRTOS/src/stream_buffer.c **** 
 721:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pvRxData );
 722:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 723:FreeRTOS/src/stream_buffer.c **** 
 724:FreeRTOS/src/stream_buffer.c **** 	/* This receive function is used by both message buffers, which store
 725:FreeRTOS/src/stream_buffer.c **** 	discrete messages, and stream buffers, which store a continuous stream of
 726:FreeRTOS/src/stream_buffer.c **** 	bytes.  Discrete messages include an additional
 727:FreeRTOS/src/stream_buffer.c **** 	sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
 728:FreeRTOS/src/stream_buffer.c **** 	message. */
 729:FreeRTOS/src/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 730:FreeRTOS/src/stream_buffer.c **** 	{
 731:FreeRTOS/src/stream_buffer.c **** 		xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
 732:FreeRTOS/src/stream_buffer.c **** 	}
 733:FreeRTOS/src/stream_buffer.c **** 	else
 734:FreeRTOS/src/stream_buffer.c **** 	{
 735:FreeRTOS/src/stream_buffer.c **** 		xBytesToStoreMessageLength = 0;
 736:FreeRTOS/src/stream_buffer.c **** 	}
 737:FreeRTOS/src/stream_buffer.c **** 
 738:FreeRTOS/src/stream_buffer.c **** 	if( xTicksToWait != ( TickType_t ) 0 )
 739:FreeRTOS/src/stream_buffer.c **** 	{
 740:FreeRTOS/src/stream_buffer.c **** 		/* Checking if there is data and clearing the notification state must be
 741:FreeRTOS/src/stream_buffer.c **** 		performed atomically. */
 742:FreeRTOS/src/stream_buffer.c **** 		taskENTER_CRITICAL();
 743:FreeRTOS/src/stream_buffer.c **** 		{
 744:FreeRTOS/src/stream_buffer.c **** 			xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 745:FreeRTOS/src/stream_buffer.c **** 
 746:FreeRTOS/src/stream_buffer.c **** 			/* If this function was invoked by a message buffer read then
 747:FreeRTOS/src/stream_buffer.c **** 			xBytesToStoreMessageLength holds the number of bytes used to hold
 748:FreeRTOS/src/stream_buffer.c **** 			the length of the next discrete message.  If this function was
 749:FreeRTOS/src/stream_buffer.c **** 			invoked by a stream buffer read then xBytesToStoreMessageLength will
 750:FreeRTOS/src/stream_buffer.c **** 			be 0. */
 751:FreeRTOS/src/stream_buffer.c **** 			if( xBytesAvailable <= xBytesToStoreMessageLength )
 752:FreeRTOS/src/stream_buffer.c **** 			{
 753:FreeRTOS/src/stream_buffer.c **** 				/* Clear notification state as going to wait for data. */
 754:FreeRTOS/src/stream_buffer.c **** 				( void ) xTaskNotifyStateClear( NULL );
 755:FreeRTOS/src/stream_buffer.c **** 
 756:FreeRTOS/src/stream_buffer.c **** 				/* Should only be one reader. */
 757:FreeRTOS/src/stream_buffer.c **** 				configASSERT( pxStreamBuffer->xTaskWaitingToReceive == NULL );
 758:FreeRTOS/src/stream_buffer.c **** 				pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
 759:FreeRTOS/src/stream_buffer.c **** 			}
 760:FreeRTOS/src/stream_buffer.c **** 			else
 761:FreeRTOS/src/stream_buffer.c **** 			{
 762:FreeRTOS/src/stream_buffer.c **** 				mtCOVERAGE_TEST_MARKER();
 763:FreeRTOS/src/stream_buffer.c **** 			}
 764:FreeRTOS/src/stream_buffer.c **** 		}
 765:FreeRTOS/src/stream_buffer.c **** 		taskEXIT_CRITICAL();
 766:FreeRTOS/src/stream_buffer.c **** 
 767:FreeRTOS/src/stream_buffer.c **** 		if( xBytesAvailable <= xBytesToStoreMessageLength )
 768:FreeRTOS/src/stream_buffer.c **** 		{
 769:FreeRTOS/src/stream_buffer.c **** 			/* Wait for data to be available. */
 770:FreeRTOS/src/stream_buffer.c **** 			traceBLOCKING_ON_STREAM_BUFFER_RECEIVE( xStreamBuffer );
 771:FreeRTOS/src/stream_buffer.c **** 			( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 15


 772:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToReceive = NULL;
 773:FreeRTOS/src/stream_buffer.c **** 
 774:FreeRTOS/src/stream_buffer.c **** 			/* Recheck the data available after blocking. */
 775:FreeRTOS/src/stream_buffer.c **** 			xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 776:FreeRTOS/src/stream_buffer.c **** 		}
 777:FreeRTOS/src/stream_buffer.c **** 		else
 778:FreeRTOS/src/stream_buffer.c **** 		{
 779:FreeRTOS/src/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 780:FreeRTOS/src/stream_buffer.c **** 		}
 781:FreeRTOS/src/stream_buffer.c **** 	}
 782:FreeRTOS/src/stream_buffer.c **** 	else
 783:FreeRTOS/src/stream_buffer.c **** 	{
 784:FreeRTOS/src/stream_buffer.c **** 		xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 785:FreeRTOS/src/stream_buffer.c **** 	}
 786:FreeRTOS/src/stream_buffer.c **** 
 787:FreeRTOS/src/stream_buffer.c **** 	/* Whether receiving a discrete message (where xBytesToStoreMessageLength
 788:FreeRTOS/src/stream_buffer.c **** 	holds the number of bytes used to store the message length) or a stream of
 789:FreeRTOS/src/stream_buffer.c **** 	bytes (where xBytesToStoreMessageLength is zero), the number of bytes
 790:FreeRTOS/src/stream_buffer.c **** 	available must be greater than xBytesToStoreMessageLength to be able to
 791:FreeRTOS/src/stream_buffer.c **** 	read bytes from the buffer. */
 792:FreeRTOS/src/stream_buffer.c **** 	if( xBytesAvailable > xBytesToStoreMessageLength )
 793:FreeRTOS/src/stream_buffer.c **** 	{
 794:FreeRTOS/src/stream_buffer.c **** 		xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, xBytesA
 795:FreeRTOS/src/stream_buffer.c **** 
 796:FreeRTOS/src/stream_buffer.c **** 		/* Was a task waiting for space in the buffer? */
 797:FreeRTOS/src/stream_buffer.c **** 		if( xReceivedLength != ( size_t ) 0 )
 798:FreeRTOS/src/stream_buffer.c **** 		{
 799:FreeRTOS/src/stream_buffer.c **** 			traceSTREAM_BUFFER_RECEIVE( xStreamBuffer, xReceivedLength );
 800:FreeRTOS/src/stream_buffer.c **** 			sbRECEIVE_COMPLETED( pxStreamBuffer );
 801:FreeRTOS/src/stream_buffer.c **** 		}
 802:FreeRTOS/src/stream_buffer.c **** 		else
 803:FreeRTOS/src/stream_buffer.c **** 		{
 804:FreeRTOS/src/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 805:FreeRTOS/src/stream_buffer.c **** 		}
 806:FreeRTOS/src/stream_buffer.c **** 	}
 807:FreeRTOS/src/stream_buffer.c **** 	else
 808:FreeRTOS/src/stream_buffer.c **** 	{
 809:FreeRTOS/src/stream_buffer.c **** 		traceSTREAM_BUFFER_RECEIVE_FAILED( xStreamBuffer );
 810:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 811:FreeRTOS/src/stream_buffer.c **** 	}
 812:FreeRTOS/src/stream_buffer.c **** 
 813:FreeRTOS/src/stream_buffer.c **** 	return xReceivedLength;
 814:FreeRTOS/src/stream_buffer.c **** }
 815:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 816:FreeRTOS/src/stream_buffer.c **** 
 817:FreeRTOS/src/stream_buffer.c **** size_t xStreamBufferNextMessageLengthBytes( StreamBufferHandle_t xStreamBuffer )
 818:FreeRTOS/src/stream_buffer.c **** {
 819:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 820:FreeRTOS/src/stream_buffer.c **** size_t xReturn, xBytesAvailable, xOriginalTail;
 821:FreeRTOS/src/stream_buffer.c **** configMESSAGE_BUFFER_LENGTH_TYPE xTempReturn;
 822:FreeRTOS/src/stream_buffer.c **** 
 823:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 824:FreeRTOS/src/stream_buffer.c **** 
 825:FreeRTOS/src/stream_buffer.c **** 	/* Ensure the stream buffer is being used as a message buffer. */
 826:FreeRTOS/src/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 827:FreeRTOS/src/stream_buffer.c **** 	{
 828:FreeRTOS/src/stream_buffer.c **** 		xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 16


 829:FreeRTOS/src/stream_buffer.c **** 		if( xBytesAvailable > sbBYTES_TO_STORE_MESSAGE_LENGTH )
 830:FreeRTOS/src/stream_buffer.c **** 		{
 831:FreeRTOS/src/stream_buffer.c **** 			/* The number of bytes available is greater than the number of bytes
 832:FreeRTOS/src/stream_buffer.c **** 			required to hold the length of the next message, so another message
 833:FreeRTOS/src/stream_buffer.c **** 			is available.  Return its length without removing the length bytes
 834:FreeRTOS/src/stream_buffer.c **** 			from the buffer.  A copy of the tail is stored so the buffer can be
 835:FreeRTOS/src/stream_buffer.c **** 			returned to its prior state as the message is not actually being
 836:FreeRTOS/src/stream_buffer.c **** 			removed from the buffer. */
 837:FreeRTOS/src/stream_buffer.c **** 			xOriginalTail = pxStreamBuffer->xTail;
 838:FreeRTOS/src/stream_buffer.c **** 			( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempReturn, sbBYTES_TO_STORE_ME
 839:FreeRTOS/src/stream_buffer.c **** 			xReturn = ( size_t ) xTempReturn;
 840:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTail = xOriginalTail;
 841:FreeRTOS/src/stream_buffer.c **** 		}
 842:FreeRTOS/src/stream_buffer.c **** 		else
 843:FreeRTOS/src/stream_buffer.c **** 		{
 844:FreeRTOS/src/stream_buffer.c **** 			/* The minimum amount of bytes in a message buffer is
 845:FreeRTOS/src/stream_buffer.c **** 			( sbBYTES_TO_STORE_MESSAGE_LENGTH + 1 ), so if xBytesAvailable is
 846:FreeRTOS/src/stream_buffer.c **** 			less than sbBYTES_TO_STORE_MESSAGE_LENGTH the only other valid
 847:FreeRTOS/src/stream_buffer.c **** 			value is 0. */
 848:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xBytesAvailable == 0 );
 849:FreeRTOS/src/stream_buffer.c **** 			xReturn = 0;
 850:FreeRTOS/src/stream_buffer.c **** 		}
 851:FreeRTOS/src/stream_buffer.c **** 	}
 852:FreeRTOS/src/stream_buffer.c **** 	else
 853:FreeRTOS/src/stream_buffer.c **** 	{
 854:FreeRTOS/src/stream_buffer.c **** 		xReturn = 0;
 855:FreeRTOS/src/stream_buffer.c **** 	}
 856:FreeRTOS/src/stream_buffer.c **** 
 857:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 858:FreeRTOS/src/stream_buffer.c **** }
 859:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 860:FreeRTOS/src/stream_buffer.c **** 
 861:FreeRTOS/src/stream_buffer.c **** size_t xStreamBufferReceiveFromISR( StreamBufferHandle_t xStreamBuffer,
 862:FreeRTOS/src/stream_buffer.c **** 									void *pvRxData,
 863:FreeRTOS/src/stream_buffer.c **** 									size_t xBufferLengthBytes,
 864:FreeRTOS/src/stream_buffer.c **** 									BaseType_t * const pxHigherPriorityTaskWoken )
 865:FreeRTOS/src/stream_buffer.c **** {
 866:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 867:FreeRTOS/src/stream_buffer.c **** size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 868:FreeRTOS/src/stream_buffer.c **** 
 869:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pvRxData );
 870:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 871:FreeRTOS/src/stream_buffer.c **** 
 872:FreeRTOS/src/stream_buffer.c **** 	/* This receive function is used by both message buffers, which store
 873:FreeRTOS/src/stream_buffer.c **** 	discrete messages, and stream buffers, which store a continuous stream of
 874:FreeRTOS/src/stream_buffer.c **** 	bytes.  Discrete messages include an additional
 875:FreeRTOS/src/stream_buffer.c **** 	sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the
 876:FreeRTOS/src/stream_buffer.c **** 	message. */
 877:FreeRTOS/src/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
 878:FreeRTOS/src/stream_buffer.c **** 	{
 879:FreeRTOS/src/stream_buffer.c **** 		xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
 880:FreeRTOS/src/stream_buffer.c **** 	}
 881:FreeRTOS/src/stream_buffer.c **** 	else
 882:FreeRTOS/src/stream_buffer.c **** 	{
 883:FreeRTOS/src/stream_buffer.c **** 		xBytesToStoreMessageLength = 0;
 884:FreeRTOS/src/stream_buffer.c **** 	}
 885:FreeRTOS/src/stream_buffer.c **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 17


 886:FreeRTOS/src/stream_buffer.c **** 	xBytesAvailable = prvBytesInBuffer( pxStreamBuffer );
 887:FreeRTOS/src/stream_buffer.c **** 
 888:FreeRTOS/src/stream_buffer.c **** 	/* Whether receiving a discrete message (where xBytesToStoreMessageLength
 889:FreeRTOS/src/stream_buffer.c **** 	holds the number of bytes used to store the message length) or a stream of
 890:FreeRTOS/src/stream_buffer.c **** 	bytes (where xBytesToStoreMessageLength is zero), the number of bytes
 891:FreeRTOS/src/stream_buffer.c **** 	available must be greater than xBytesToStoreMessageLength to be able to
 892:FreeRTOS/src/stream_buffer.c **** 	read bytes from the buffer. */
 893:FreeRTOS/src/stream_buffer.c **** 	if( xBytesAvailable > xBytesToStoreMessageLength )
 894:FreeRTOS/src/stream_buffer.c **** 	{
 895:FreeRTOS/src/stream_buffer.c **** 		xReceivedLength = prvReadMessageFromBuffer( pxStreamBuffer, pvRxData, xBufferLengthBytes, xBytesA
 896:FreeRTOS/src/stream_buffer.c **** 
 897:FreeRTOS/src/stream_buffer.c **** 		/* Was a task waiting for space in the buffer? */
 898:FreeRTOS/src/stream_buffer.c **** 		if( xReceivedLength != ( size_t ) 0 )
 899:FreeRTOS/src/stream_buffer.c **** 		{
 900:FreeRTOS/src/stream_buffer.c **** 			sbRECEIVE_COMPLETED_FROM_ISR( pxStreamBuffer, pxHigherPriorityTaskWoken );
 901:FreeRTOS/src/stream_buffer.c **** 		}
 902:FreeRTOS/src/stream_buffer.c **** 		else
 903:FreeRTOS/src/stream_buffer.c **** 		{
 904:FreeRTOS/src/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 905:FreeRTOS/src/stream_buffer.c **** 		}
 906:FreeRTOS/src/stream_buffer.c **** 	}
 907:FreeRTOS/src/stream_buffer.c **** 	else
 908:FreeRTOS/src/stream_buffer.c **** 	{
 909:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 910:FreeRTOS/src/stream_buffer.c **** 	}
 911:FreeRTOS/src/stream_buffer.c **** 
 912:FreeRTOS/src/stream_buffer.c **** 	traceSTREAM_BUFFER_RECEIVE_FROM_ISR( xStreamBuffer, xReceivedLength );
 913:FreeRTOS/src/stream_buffer.c **** 
 914:FreeRTOS/src/stream_buffer.c **** 	return xReceivedLength;
 915:FreeRTOS/src/stream_buffer.c **** }
 916:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 917:FreeRTOS/src/stream_buffer.c **** 
 918:FreeRTOS/src/stream_buffer.c **** static size_t prvReadMessageFromBuffer( StreamBuffer_t *pxStreamBuffer,
 919:FreeRTOS/src/stream_buffer.c **** 										void *pvRxData,
 920:FreeRTOS/src/stream_buffer.c **** 										size_t xBufferLengthBytes,
 921:FreeRTOS/src/stream_buffer.c **** 										size_t xBytesAvailable,
 922:FreeRTOS/src/stream_buffer.c **** 										size_t xBytesToStoreMessageLength )
 923:FreeRTOS/src/stream_buffer.c **** {
 924:FreeRTOS/src/stream_buffer.c **** size_t xOriginalTail, xReceivedLength, xNextMessageLength;
 925:FreeRTOS/src/stream_buffer.c **** configMESSAGE_BUFFER_LENGTH_TYPE xTempNextMessageLength;
 926:FreeRTOS/src/stream_buffer.c **** 
 927:FreeRTOS/src/stream_buffer.c **** 	if( xBytesToStoreMessageLength != ( size_t ) 0 )
 928:FreeRTOS/src/stream_buffer.c **** 	{
 929:FreeRTOS/src/stream_buffer.c **** 		/* A discrete message is being received.  First receive the length
 930:FreeRTOS/src/stream_buffer.c **** 		of the message.  A copy of the tail is stored so the buffer can be
 931:FreeRTOS/src/stream_buffer.c **** 		returned to its prior state if the length of the message is too
 932:FreeRTOS/src/stream_buffer.c **** 		large for the provided buffer. */
 933:FreeRTOS/src/stream_buffer.c **** 		xOriginalTail = pxStreamBuffer->xTail;
 934:FreeRTOS/src/stream_buffer.c **** 		( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, xBytesToS
 935:FreeRTOS/src/stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 936:FreeRTOS/src/stream_buffer.c **** 
 937:FreeRTOS/src/stream_buffer.c **** 		/* Reduce the number of bytes available by the number of bytes just
 938:FreeRTOS/src/stream_buffer.c **** 		read out. */
 939:FreeRTOS/src/stream_buffer.c **** 		xBytesAvailable -= xBytesToStoreMessageLength;
 940:FreeRTOS/src/stream_buffer.c **** 
 941:FreeRTOS/src/stream_buffer.c **** 		/* Check there is enough space in the buffer provided by the
 942:FreeRTOS/src/stream_buffer.c **** 		user. */
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 18


 943:FreeRTOS/src/stream_buffer.c **** 		if( xNextMessageLength > xBufferLengthBytes )
 944:FreeRTOS/src/stream_buffer.c **** 		{
 945:FreeRTOS/src/stream_buffer.c **** 			/* The user has provided insufficient space to read the message
 946:FreeRTOS/src/stream_buffer.c **** 			so return the buffer to its previous state (so the length of
 947:FreeRTOS/src/stream_buffer.c **** 			the message is in the buffer again). */
 948:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTail = xOriginalTail;
 949:FreeRTOS/src/stream_buffer.c **** 			xNextMessageLength = 0;
 950:FreeRTOS/src/stream_buffer.c **** 		}
 951:FreeRTOS/src/stream_buffer.c **** 		else
 952:FreeRTOS/src/stream_buffer.c **** 		{
 953:FreeRTOS/src/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
 954:FreeRTOS/src/stream_buffer.c **** 		}
 955:FreeRTOS/src/stream_buffer.c **** 	}
 956:FreeRTOS/src/stream_buffer.c **** 	else
 957:FreeRTOS/src/stream_buffer.c **** 	{
 958:FreeRTOS/src/stream_buffer.c **** 		/* A stream of bytes is being received (as opposed to a discrete
 959:FreeRTOS/src/stream_buffer.c **** 		message), so read as many bytes as possible. */
 960:FreeRTOS/src/stream_buffer.c **** 		xNextMessageLength = xBufferLengthBytes;
 961:FreeRTOS/src/stream_buffer.c **** 	}
 962:FreeRTOS/src/stream_buffer.c **** 
 963:FreeRTOS/src/stream_buffer.c **** 	/* Read the actual data. */
 964:FreeRTOS/src/stream_buffer.c **** 	xReceivedLength = prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) pvRxData, xNextMessageLeng
 965:FreeRTOS/src/stream_buffer.c **** 
 966:FreeRTOS/src/stream_buffer.c **** 	return xReceivedLength;
 967:FreeRTOS/src/stream_buffer.c **** }
 968:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 969:FreeRTOS/src/stream_buffer.c **** 
 970:FreeRTOS/src/stream_buffer.c **** BaseType_t xStreamBufferIsEmpty( StreamBufferHandle_t xStreamBuffer )
 971:FreeRTOS/src/stream_buffer.c **** {
 972:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 973:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 974:FreeRTOS/src/stream_buffer.c **** size_t xTail;
 975:FreeRTOS/src/stream_buffer.c **** 
 976:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 977:FreeRTOS/src/stream_buffer.c **** 
 978:FreeRTOS/src/stream_buffer.c **** 	/* True if no bytes are available. */
 979:FreeRTOS/src/stream_buffer.c **** 	xTail = pxStreamBuffer->xTail;
 980:FreeRTOS/src/stream_buffer.c **** 	if( pxStreamBuffer->xHead == xTail )
 981:FreeRTOS/src/stream_buffer.c **** 	{
 982:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdTRUE;
 983:FreeRTOS/src/stream_buffer.c **** 	}
 984:FreeRTOS/src/stream_buffer.c **** 	else
 985:FreeRTOS/src/stream_buffer.c **** 	{
 986:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdFALSE;
 987:FreeRTOS/src/stream_buffer.c **** 	}
 988:FreeRTOS/src/stream_buffer.c **** 
 989:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 990:FreeRTOS/src/stream_buffer.c **** }
 991:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 992:FreeRTOS/src/stream_buffer.c **** 
 993:FreeRTOS/src/stream_buffer.c **** BaseType_t xStreamBufferIsFull( StreamBufferHandle_t xStreamBuffer )
 994:FreeRTOS/src/stream_buffer.c **** {
 995:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 996:FreeRTOS/src/stream_buffer.c **** size_t xBytesToStoreMessageLength;
 997:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 998:FreeRTOS/src/stream_buffer.c **** 
 999:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 19


1000:FreeRTOS/src/stream_buffer.c **** 
1001:FreeRTOS/src/stream_buffer.c **** 	/* This generic version of the receive function is used by both message
1002:FreeRTOS/src/stream_buffer.c **** 	buffers, which store discrete messages, and stream buffers, which store a
1003:FreeRTOS/src/stream_buffer.c **** 	continuous stream of bytes.  Discrete messages include an additional
1004:FreeRTOS/src/stream_buffer.c **** 	sbBYTES_TO_STORE_MESSAGE_LENGTH bytes that hold the length of the message. */
1005:FreeRTOS/src/stream_buffer.c **** 	if( ( pxStreamBuffer->ucFlags & sbFLAGS_IS_MESSAGE_BUFFER ) != ( uint8_t ) 0 )
1006:FreeRTOS/src/stream_buffer.c **** 	{
1007:FreeRTOS/src/stream_buffer.c **** 		xBytesToStoreMessageLength = sbBYTES_TO_STORE_MESSAGE_LENGTH;
1008:FreeRTOS/src/stream_buffer.c **** 	}
1009:FreeRTOS/src/stream_buffer.c **** 	else
1010:FreeRTOS/src/stream_buffer.c **** 	{
1011:FreeRTOS/src/stream_buffer.c **** 		xBytesToStoreMessageLength = 0;
1012:FreeRTOS/src/stream_buffer.c **** 	}
1013:FreeRTOS/src/stream_buffer.c **** 
1014:FreeRTOS/src/stream_buffer.c **** 	/* True if the available space equals zero. */
1015:FreeRTOS/src/stream_buffer.c **** 	if( xStreamBufferSpacesAvailable( xStreamBuffer ) <= xBytesToStoreMessageLength )
1016:FreeRTOS/src/stream_buffer.c **** 	{
1017:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdTRUE;
1018:FreeRTOS/src/stream_buffer.c **** 	}
1019:FreeRTOS/src/stream_buffer.c **** 	else
1020:FreeRTOS/src/stream_buffer.c **** 	{
1021:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdFALSE;
1022:FreeRTOS/src/stream_buffer.c **** 	}
1023:FreeRTOS/src/stream_buffer.c **** 
1024:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
1025:FreeRTOS/src/stream_buffer.c **** }
1026:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
1027:FreeRTOS/src/stream_buffer.c **** 
1028:FreeRTOS/src/stream_buffer.c **** BaseType_t xStreamBufferSendCompletedFromISR( StreamBufferHandle_t xStreamBuffer, BaseType_t *pxHig
1029:FreeRTOS/src/stream_buffer.c **** {
1030:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1031:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
1032:FreeRTOS/src/stream_buffer.c **** UBaseType_t uxSavedInterruptStatus;
1033:FreeRTOS/src/stream_buffer.c **** 
1034:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
1035:FreeRTOS/src/stream_buffer.c **** 
1036:FreeRTOS/src/stream_buffer.c **** 	uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();
1037:FreeRTOS/src/stream_buffer.c **** 	{
1038:FreeRTOS/src/stream_buffer.c **** 		if( ( pxStreamBuffer )->xTaskWaitingToReceive != NULL )
1039:FreeRTOS/src/stream_buffer.c **** 		{
1040:FreeRTOS/src/stream_buffer.c **** 			( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToReceive,
1041:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
1042:FreeRTOS/src/stream_buffer.c **** 										 eNoAction,
1043:FreeRTOS/src/stream_buffer.c **** 										 pxHigherPriorityTaskWoken );
1044:FreeRTOS/src/stream_buffer.c **** 			( pxStreamBuffer )->xTaskWaitingToReceive = NULL;
1045:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdTRUE;
1046:FreeRTOS/src/stream_buffer.c **** 		}
1047:FreeRTOS/src/stream_buffer.c **** 		else
1048:FreeRTOS/src/stream_buffer.c **** 		{
1049:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdFALSE;
1050:FreeRTOS/src/stream_buffer.c **** 		}
1051:FreeRTOS/src/stream_buffer.c **** 	}
1052:FreeRTOS/src/stream_buffer.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1053:FreeRTOS/src/stream_buffer.c **** 
1054:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
1055:FreeRTOS/src/stream_buffer.c **** }
1056:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 20


1057:FreeRTOS/src/stream_buffer.c **** 
1058:FreeRTOS/src/stream_buffer.c **** BaseType_t xStreamBufferReceiveCompletedFromISR( StreamBufferHandle_t xStreamBuffer, BaseType_t *px
1059:FreeRTOS/src/stream_buffer.c **** {
1060:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
1061:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
1062:FreeRTOS/src/stream_buffer.c **** UBaseType_t uxSavedInterruptStatus;
1063:FreeRTOS/src/stream_buffer.c **** 
1064:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
1065:FreeRTOS/src/stream_buffer.c **** 
1066:FreeRTOS/src/stream_buffer.c **** 	uxSavedInterruptStatus = ( UBaseType_t ) portSET_INTERRUPT_MASK_FROM_ISR();
1067:FreeRTOS/src/stream_buffer.c **** 	{
1068:FreeRTOS/src/stream_buffer.c **** 		if( ( pxStreamBuffer )->xTaskWaitingToSend != NULL )
1069:FreeRTOS/src/stream_buffer.c **** 		{
1070:FreeRTOS/src/stream_buffer.c **** 			( void ) xTaskNotifyFromISR( ( pxStreamBuffer )->xTaskWaitingToSend,
1071:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
1072:FreeRTOS/src/stream_buffer.c **** 										 eNoAction,
1073:FreeRTOS/src/stream_buffer.c **** 										 pxHigherPriorityTaskWoken );
1074:FreeRTOS/src/stream_buffer.c **** 			( pxStreamBuffer )->xTaskWaitingToSend = NULL;
1075:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdTRUE;
1076:FreeRTOS/src/stream_buffer.c **** 		}
1077:FreeRTOS/src/stream_buffer.c **** 		else
1078:FreeRTOS/src/stream_buffer.c **** 		{
1079:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdFALSE;
1080:FreeRTOS/src/stream_buffer.c **** 		}
1081:FreeRTOS/src/stream_buffer.c **** 	}
1082:FreeRTOS/src/stream_buffer.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1083:FreeRTOS/src/stream_buffer.c **** 
1084:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
1085:FreeRTOS/src/stream_buffer.c **** }
1086:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
1087:FreeRTOS/src/stream_buffer.c **** 
1088:FreeRTOS/src/stream_buffer.c **** static size_t prvWriteBytesToBuffer( StreamBuffer_t * const pxStreamBuffer, const uint8_t *pucData,
1089:FreeRTOS/src/stream_buffer.c **** {
1090:FreeRTOS/src/stream_buffer.c **** size_t xNextHead, xFirstLength;
1091:FreeRTOS/src/stream_buffer.c **** 
1092:FreeRTOS/src/stream_buffer.c **** 	configASSERT( xCount > ( size_t ) 0 );
1093:FreeRTOS/src/stream_buffer.c **** 
1094:FreeRTOS/src/stream_buffer.c **** 	xNextHead = pxStreamBuffer->xHead;
1095:FreeRTOS/src/stream_buffer.c **** 
1096:FreeRTOS/src/stream_buffer.c **** 	/* Calculate the number of bytes that can be added in the first write -
1097:FreeRTOS/src/stream_buffer.c **** 	which may be less than the total number of bytes that need to be added if
1098:FreeRTOS/src/stream_buffer.c **** 	the buffer will wrap back to the beginning. */
1099:FreeRTOS/src/stream_buffer.c **** 	xFirstLength = configMIN( pxStreamBuffer->xLength - xNextHead, xCount );
1100:FreeRTOS/src/stream_buffer.c **** 
1101:FreeRTOS/src/stream_buffer.c **** 	/* Write as many bytes as can be written in the first write. */
1102:FreeRTOS/src/stream_buffer.c **** 	configASSERT( ( xNextHead + xFirstLength ) <= pxStreamBuffer->xLength );
1103:FreeRTOS/src/stream_buffer.c **** 	( void ) memcpy( ( void* ) ( &( pxStreamBuffer->pucBuffer[ xNextHead ] ) ), ( const void * ) pucDa
1104:FreeRTOS/src/stream_buffer.c **** 
1105:FreeRTOS/src/stream_buffer.c **** 	/* If the number of bytes written was less than the number that could be
1106:FreeRTOS/src/stream_buffer.c **** 	written in the first write... */
1107:FreeRTOS/src/stream_buffer.c **** 	if( xCount > xFirstLength )
1108:FreeRTOS/src/stream_buffer.c **** 	{
1109:FreeRTOS/src/stream_buffer.c **** 		/* ...then write the remaining bytes to the start of the buffer. */
1110:FreeRTOS/src/stream_buffer.c **** 		configASSERT( ( xCount - xFirstLength ) <= pxStreamBuffer->xLength );
1111:FreeRTOS/src/stream_buffer.c **** 		( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstLength 
1112:FreeRTOS/src/stream_buffer.c **** 	}
1113:FreeRTOS/src/stream_buffer.c **** 	else
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 21


1114:FreeRTOS/src/stream_buffer.c **** 	{
1115:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
1116:FreeRTOS/src/stream_buffer.c **** 	}
1117:FreeRTOS/src/stream_buffer.c **** 
1118:FreeRTOS/src/stream_buffer.c **** 	xNextHead += xCount;
1119:FreeRTOS/src/stream_buffer.c **** 	if( xNextHead >= pxStreamBuffer->xLength )
1120:FreeRTOS/src/stream_buffer.c **** 	{
1121:FreeRTOS/src/stream_buffer.c **** 		xNextHead -= pxStreamBuffer->xLength;
1122:FreeRTOS/src/stream_buffer.c **** 	}
1123:FreeRTOS/src/stream_buffer.c **** 	else
1124:FreeRTOS/src/stream_buffer.c **** 	{
1125:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
1126:FreeRTOS/src/stream_buffer.c **** 	}
1127:FreeRTOS/src/stream_buffer.c **** 
1128:FreeRTOS/src/stream_buffer.c **** 	pxStreamBuffer->xHead = xNextHead;
1129:FreeRTOS/src/stream_buffer.c **** 
1130:FreeRTOS/src/stream_buffer.c **** 	return xCount;
1131:FreeRTOS/src/stream_buffer.c **** }
1132:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
1133:FreeRTOS/src/stream_buffer.c **** 
1134:FreeRTOS/src/stream_buffer.c **** static size_t prvReadBytesFromBuffer( StreamBuffer_t *pxStreamBuffer, uint8_t *pucData, size_t xMax
1135:FreeRTOS/src/stream_buffer.c **** {
1136:FreeRTOS/src/stream_buffer.c **** size_t xCount, xFirstLength, xNextTail;
1137:FreeRTOS/src/stream_buffer.c **** 
1138:FreeRTOS/src/stream_buffer.c **** 	/* Use the minimum of the wanted bytes and the available bytes. */
1139:FreeRTOS/src/stream_buffer.c **** 	xCount = configMIN( xBytesAvailable, xMaxCount );
1140:FreeRTOS/src/stream_buffer.c **** 
1141:FreeRTOS/src/stream_buffer.c **** 	if( xCount > ( size_t ) 0 )
1142:FreeRTOS/src/stream_buffer.c **** 	{
1143:FreeRTOS/src/stream_buffer.c **** 		xNextTail = pxStreamBuffer->xTail;
1144:FreeRTOS/src/stream_buffer.c **** 
1145:FreeRTOS/src/stream_buffer.c **** 		/* Calculate the number of bytes that can be read - which may be
1146:FreeRTOS/src/stream_buffer.c **** 		less than the number wanted if the data wraps around to the start of
1147:FreeRTOS/src/stream_buffer.c **** 		the buffer. */
1148:FreeRTOS/src/stream_buffer.c **** 		xFirstLength = configMIN( pxStreamBuffer->xLength - xNextTail, xCount );
1149:FreeRTOS/src/stream_buffer.c **** 
1150:FreeRTOS/src/stream_buffer.c **** 		/* Obtain the number of bytes it is possible to obtain in the first
1151:FreeRTOS/src/stream_buffer.c **** 		read.  Asserts check bounds of read and write. */
1152:FreeRTOS/src/stream_buffer.c **** 		configASSERT( xFirstLength <= xMaxCount );
1153:FreeRTOS/src/stream_buffer.c **** 		configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
1154:FreeRTOS/src/stream_buffer.c **** 		( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xNextTail ] )
1155:FreeRTOS/src/stream_buffer.c **** 
1156:FreeRTOS/src/stream_buffer.c **** 		/* If the total number of wanted bytes is greater than the number
1157:FreeRTOS/src/stream_buffer.c **** 		that could be read in the first read... */
1158:FreeRTOS/src/stream_buffer.c **** 		if( xCount > xFirstLength )
1159:FreeRTOS/src/stream_buffer.c **** 		{
1160:FreeRTOS/src/stream_buffer.c **** 			/*...then read the remaining bytes from the start of the buffer. */
1161:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xCount <= xMaxCount );
1162:FreeRTOS/src/stream_buffer.c **** 			( void ) memcpy( ( void * ) &( pucData[ xFirstLength ] ), ( void * ) ( pxStreamBuffer->pucBuffer
1163:FreeRTOS/src/stream_buffer.c **** 		}
1164:FreeRTOS/src/stream_buffer.c **** 		else
1165:FreeRTOS/src/stream_buffer.c **** 		{
1166:FreeRTOS/src/stream_buffer.c **** 			mtCOVERAGE_TEST_MARKER();
1167:FreeRTOS/src/stream_buffer.c **** 		}
1168:FreeRTOS/src/stream_buffer.c **** 
1169:FreeRTOS/src/stream_buffer.c **** 		/* Move the tail pointer to effectively remove the data read from
1170:FreeRTOS/src/stream_buffer.c **** 		the buffer. */
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 22


1171:FreeRTOS/src/stream_buffer.c **** 		xNextTail += xCount;
1172:FreeRTOS/src/stream_buffer.c **** 
1173:FreeRTOS/src/stream_buffer.c **** 		if( xNextTail >= pxStreamBuffer->xLength )
1174:FreeRTOS/src/stream_buffer.c **** 		{
1175:FreeRTOS/src/stream_buffer.c **** 			xNextTail -= pxStreamBuffer->xLength;
1176:FreeRTOS/src/stream_buffer.c **** 		}
1177:FreeRTOS/src/stream_buffer.c **** 
1178:FreeRTOS/src/stream_buffer.c **** 		pxStreamBuffer->xTail = xNextTail;
1179:FreeRTOS/src/stream_buffer.c **** 	}
1180:FreeRTOS/src/stream_buffer.c **** 	else
1181:FreeRTOS/src/stream_buffer.c **** 	{
1182:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
1183:FreeRTOS/src/stream_buffer.c **** 	}
1184:FreeRTOS/src/stream_buffer.c **** 
1185:FreeRTOS/src/stream_buffer.c **** 	return xCount;
1186:FreeRTOS/src/stream_buffer.c **** }
1187:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
1188:FreeRTOS/src/stream_buffer.c **** 
1189:FreeRTOS/src/stream_buffer.c **** static size_t prvBytesInBuffer( const StreamBuffer_t * const pxStreamBuffer )
1190:FreeRTOS/src/stream_buffer.c **** {
  29              		.loc 1 1190 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
1191:FreeRTOS/src/stream_buffer.c **** /* Returns the distance between xTail and xHead. */
1192:FreeRTOS/src/stream_buffer.c **** size_t xCount;
  34              		.loc 1 1192 1 view .LVU1
1193:FreeRTOS/src/stream_buffer.c **** 
1194:FreeRTOS/src/stream_buffer.c **** 	xCount = pxStreamBuffer->xLength + pxStreamBuffer->xHead;
  35              		.loc 1 1194 2 view .LVU2
  36              		.loc 1 1194 25 is_stmt 0 view .LVU3
  37 0000 8268     		ldr	r2, [r0, #8]
  38              		.loc 1 1194 51 view .LVU4
  39 0002 4368     		ldr	r3, [r0, #4]
  40              		.loc 1 1194 9 view .LVU5
  41 0004 1344     		add	r3, r3, r2
  42              	.LVL1:
1195:FreeRTOS/src/stream_buffer.c **** 	xCount -= pxStreamBuffer->xTail;
  43              		.loc 1 1195 2 is_stmt 1 view .LVU6
  44              		.loc 1 1195 26 is_stmt 0 view .LVU7
  45 0006 0068     		ldr	r0, [r0]
  46              	.LVL2:
  47              		.loc 1 1195 9 view .LVU8
  48 0008 181A     		subs	r0, r3, r0
  49              	.LVL3:
1196:FreeRTOS/src/stream_buffer.c **** 	if ( xCount >= pxStreamBuffer->xLength )
  50              		.loc 1 1196 2 is_stmt 1 view .LVU9
  51              		.loc 1 1196 5 is_stmt 0 view .LVU10
  52 000a 8242     		cmp	r2, r0
  53 000c 00D8     		bhi	.L1
1197:FreeRTOS/src/stream_buffer.c **** 	{
1198:FreeRTOS/src/stream_buffer.c **** 		xCount -= pxStreamBuffer->xLength;
  54              		.loc 1 1198 3 is_stmt 1 view .LVU11
  55              		.loc 1 1198 10 is_stmt 0 view .LVU12
  56 000e 801A     		subs	r0, r0, r2
  57              	.LVL4:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 23


1199:FreeRTOS/src/stream_buffer.c **** 	}
1200:FreeRTOS/src/stream_buffer.c **** 	else
1201:FreeRTOS/src/stream_buffer.c **** 	{
1202:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
  58              		.loc 1 1202 27 is_stmt 1 view .LVU13
1203:FreeRTOS/src/stream_buffer.c **** 	}
1204:FreeRTOS/src/stream_buffer.c **** 
1205:FreeRTOS/src/stream_buffer.c **** 	return xCount;
  59              		.loc 1 1205 2 view .LVU14
  60              	.L1:
1206:FreeRTOS/src/stream_buffer.c **** }
  61              		.loc 1 1206 1 is_stmt 0 view .LVU15
  62 0010 7047     		bx	lr
  63              		.cfi_endproc
  64              	.LFE23:
  66              		.section	.text.prvInitialiseNewStreamBuffer,"ax",%progbits
  67              		.align	1
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  71              		.fpu fpv4-sp-d16
  73              	prvInitialiseNewStreamBuffer:
  74              	.LVL5:
  75              	.LFB24:
1207:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
1208:FreeRTOS/src/stream_buffer.c **** 
1209:FreeRTOS/src/stream_buffer.c **** static void prvInitialiseNewStreamBuffer( StreamBuffer_t * const pxStreamBuffer,
1210:FreeRTOS/src/stream_buffer.c **** 										  uint8_t * const pucBuffer,
1211:FreeRTOS/src/stream_buffer.c **** 										  size_t xBufferSizeBytes,
1212:FreeRTOS/src/stream_buffer.c **** 										  size_t xTriggerLevelBytes,
1213:FreeRTOS/src/stream_buffer.c **** 										  uint8_t ucFlags )
1214:FreeRTOS/src/stream_buffer.c **** {
  76              		.loc 1 1214 1 is_stmt 1 view -0
  77              		.cfi_startproc
  78              		@ args = 4, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              		.loc 1 1214 1 is_stmt 0 view .LVU17
  81 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  82              	.LCFI0:
  83              		.cfi_def_cfa_offset 24
  84              		.cfi_offset 3, -24
  85              		.cfi_offset 4, -20
  86              		.cfi_offset 5, -16
  87              		.cfi_offset 6, -12
  88              		.cfi_offset 7, -8
  89              		.cfi_offset 14, -4
  90 0002 0446     		mov	r4, r0
  91 0004 0F46     		mov	r7, r1
  92 0006 1646     		mov	r6, r2
  93 0008 1D46     		mov	r5, r3
1215:FreeRTOS/src/stream_buffer.c **** 	/* Assert here is deliberately writing to the entire buffer to ensure it can
1216:FreeRTOS/src/stream_buffer.c **** 	be written to without generating exceptions, and is setting the buffer to a
1217:FreeRTOS/src/stream_buffer.c **** 	known value to assist in development/debugging. */
1218:FreeRTOS/src/stream_buffer.c **** 	#if( configASSERT_DEFINED == 1 )
1219:FreeRTOS/src/stream_buffer.c **** 	{
1220:FreeRTOS/src/stream_buffer.c **** 		/* The value written just has to be identifiable when looking at the
1221:FreeRTOS/src/stream_buffer.c **** 		memory.  Don't use 0xA5 as that is the stack fill value and could
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 24


1222:FreeRTOS/src/stream_buffer.c **** 		result in confusion as to what is actually being observed. */
1223:FreeRTOS/src/stream_buffer.c **** 		const BaseType_t xWriteValue = 0x55;
1224:FreeRTOS/src/stream_buffer.c **** 		configASSERT( memset( pucBuffer, ( int ) xWriteValue, xBufferSizeBytes ) == pucBuffer );
1225:FreeRTOS/src/stream_buffer.c **** 	} /*lint !e529 !e438 xWriteValue is only used if configASSERT() is defined. */
1226:FreeRTOS/src/stream_buffer.c **** 	#endif
1227:FreeRTOS/src/stream_buffer.c **** 
1228:FreeRTOS/src/stream_buffer.c **** 	( void ) memset( ( void * ) pxStreamBuffer, 0x00, sizeof( StreamBuffer_t ) ); /*lint !e9087 memset
  94              		.loc 1 1228 2 is_stmt 1 view .LVU18
  95              		.loc 1 1228 11 is_stmt 0 view .LVU19
  96 000a 2022     		movs	r2, #32
  97              	.LVL6:
  98              		.loc 1 1228 11 view .LVU20
  99 000c 0021     		movs	r1, #0
 100              	.LVL7:
 101              		.loc 1 1228 11 view .LVU21
 102 000e FFF7FEFF 		bl	memset
 103              	.LVL8:
1229:FreeRTOS/src/stream_buffer.c **** 	pxStreamBuffer->pucBuffer = pucBuffer;
 104              		.loc 1 1229 2 is_stmt 1 view .LVU22
 105              		.loc 1 1229 28 is_stmt 0 view .LVU23
 106 0012 A761     		str	r7, [r4, #24]
1230:FreeRTOS/src/stream_buffer.c **** 	pxStreamBuffer->xLength = xBufferSizeBytes;
 107              		.loc 1 1230 2 is_stmt 1 view .LVU24
 108              		.loc 1 1230 26 is_stmt 0 view .LVU25
 109 0014 A660     		str	r6, [r4, #8]
1231:FreeRTOS/src/stream_buffer.c **** 	pxStreamBuffer->xTriggerLevelBytes = xTriggerLevelBytes;
 110              		.loc 1 1231 2 is_stmt 1 view .LVU26
 111              		.loc 1 1231 37 is_stmt 0 view .LVU27
 112 0016 E560     		str	r5, [r4, #12]
1232:FreeRTOS/src/stream_buffer.c **** 	pxStreamBuffer->ucFlags = ucFlags;
 113              		.loc 1 1232 2 is_stmt 1 view .LVU28
 114              		.loc 1 1232 26 is_stmt 0 view .LVU29
 115 0018 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 116 001c 2377     		strb	r3, [r4, #28]
1233:FreeRTOS/src/stream_buffer.c **** }
 117              		.loc 1 1233 1 view .LVU30
 118 001e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 119              		.loc 1 1233 1 view .LVU31
 120              		.cfi_endproc
 121              	.LFE24:
 123              		.section	.text.prvWriteBytesToBuffer,"ax",%progbits
 124              		.align	1
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 128              		.fpu fpv4-sp-d16
 130              	prvWriteBytesToBuffer:
 131              	.LVL9:
 132              	.LFB21:
1089:FreeRTOS/src/stream_buffer.c **** size_t xNextHead, xFirstLength;
 133              		.loc 1 1089 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
1089:FreeRTOS/src/stream_buffer.c **** size_t xNextHead, xFirstLength;
 137              		.loc 1 1089 1 is_stmt 0 view .LVU33
 138 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 25


 139              	.LCFI1:
 140              		.cfi_def_cfa_offset 24
 141              		.cfi_offset 4, -24
 142              		.cfi_offset 5, -20
 143              		.cfi_offset 6, -16
 144              		.cfi_offset 7, -12
 145              		.cfi_offset 8, -8
 146              		.cfi_offset 14, -4
 147 0004 0646     		mov	r6, r0
 148 0006 8846     		mov	r8, r1
 149 0008 1746     		mov	r7, r2
1090:FreeRTOS/src/stream_buffer.c **** 
 150              		.loc 1 1090 1 is_stmt 1 view .LVU34
1092:FreeRTOS/src/stream_buffer.c **** 
 151              		.loc 1 1092 39 view .LVU35
1094:FreeRTOS/src/stream_buffer.c **** 
 152              		.loc 1 1094 2 view .LVU36
1094:FreeRTOS/src/stream_buffer.c **** 
 153              		.loc 1 1094 12 is_stmt 0 view .LVU37
 154 000a 4468     		ldr	r4, [r0, #4]
 155              	.LVL10:
1099:FreeRTOS/src/stream_buffer.c **** 
 156              		.loc 1 1099 2 is_stmt 1 view .LVU38
1099:FreeRTOS/src/stream_buffer.c **** 
 157              		.loc 1 1099 17 is_stmt 0 view .LVU39
 158 000c 8568     		ldr	r5, [r0, #8]
 159 000e 2D1B     		subs	r5, r5, r4
1099:FreeRTOS/src/stream_buffer.c **** 
 160              		.loc 1 1099 15 view .LVU40
 161 0010 9542     		cmp	r5, r2
 162 0012 28BF     		it	cs
 163 0014 1546     		movcs	r5, r2
 164              	.LVL11:
1102:FreeRTOS/src/stream_buffer.c **** 	( void ) memcpy( ( void* ) ( &( pxStreamBuffer->pucBuffer[ xNextHead ] ) ), ( const void * ) pucDa
 165              		.loc 1 1102 73 is_stmt 1 view .LVU41
1103:FreeRTOS/src/stream_buffer.c **** 
 166              		.loc 1 1103 2 view .LVU42
1103:FreeRTOS/src/stream_buffer.c **** 
 167              		.loc 1 1103 48 is_stmt 0 view .LVU43
 168 0016 8069     		ldr	r0, [r0, #24]
 169              	.LVL12:
1103:FreeRTOS/src/stream_buffer.c **** 
 170              		.loc 1 1103 11 view .LVU44
 171 0018 2A46     		mov	r2, r5
 172              	.LVL13:
1103:FreeRTOS/src/stream_buffer.c **** 
 173              		.loc 1 1103 11 view .LVU45
 174 001a 2044     		add	r0, r0, r4
 175 001c FFF7FEFF 		bl	memcpy
 176              	.LVL14:
1107:FreeRTOS/src/stream_buffer.c **** 	{
 177              		.loc 1 1107 2 is_stmt 1 view .LVU46
1107:FreeRTOS/src/stream_buffer.c **** 	{
 178              		.loc 1 1107 4 is_stmt 0 view .LVU47
 179 0020 AF42     		cmp	r7, r5
 180 0022 08D8     		bhi	.L9
 181              	.L6:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 26


1115:FreeRTOS/src/stream_buffer.c **** 	}
 182              		.loc 1 1115 27 is_stmt 1 view .LVU48
1118:FreeRTOS/src/stream_buffer.c **** 	if( xNextHead >= pxStreamBuffer->xLength )
 183              		.loc 1 1118 2 view .LVU49
1118:FreeRTOS/src/stream_buffer.c **** 	if( xNextHead >= pxStreamBuffer->xLength )
 184              		.loc 1 1118 12 is_stmt 0 view .LVU50
 185 0024 3C44     		add	r4, r4, r7
 186              	.LVL15:
1119:FreeRTOS/src/stream_buffer.c **** 	{
 187              		.loc 1 1119 2 is_stmt 1 view .LVU51
1119:FreeRTOS/src/stream_buffer.c **** 	{
 188              		.loc 1 1119 33 is_stmt 0 view .LVU52
 189 0026 B368     		ldr	r3, [r6, #8]
1119:FreeRTOS/src/stream_buffer.c **** 	{
 190              		.loc 1 1119 4 view .LVU53
 191 0028 A342     		cmp	r3, r4
 192 002a 00D8     		bhi	.L7
1121:FreeRTOS/src/stream_buffer.c **** 	}
 193              		.loc 1 1121 3 is_stmt 1 view .LVU54
1121:FreeRTOS/src/stream_buffer.c **** 	}
 194              		.loc 1 1121 13 is_stmt 0 view .LVU55
 195 002c E41A     		subs	r4, r4, r3
 196              	.LVL16:
 197              	.L7:
1125:FreeRTOS/src/stream_buffer.c **** 	}
 198              		.loc 1 1125 27 is_stmt 1 view .LVU56
1128:FreeRTOS/src/stream_buffer.c **** 
 199              		.loc 1 1128 2 view .LVU57
1128:FreeRTOS/src/stream_buffer.c **** 
 200              		.loc 1 1128 24 is_stmt 0 view .LVU58
 201 002e 7460     		str	r4, [r6, #4]
1130:FreeRTOS/src/stream_buffer.c **** }
 202              		.loc 1 1130 2 is_stmt 1 view .LVU59
1131:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 203              		.loc 1 1131 1 is_stmt 0 view .LVU60
 204 0030 3846     		mov	r0, r7
 205 0032 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 206              	.LVL17:
 207              	.L9:
1110:FreeRTOS/src/stream_buffer.c **** 		( void ) memcpy( ( void * ) pxStreamBuffer->pucBuffer, ( const void * ) &( pucData[ xFirstLength 
 208              		.loc 1 1110 71 is_stmt 1 view .LVU61
1111:FreeRTOS/src/stream_buffer.c **** 	}
 209              		.loc 1 1111 3 view .LVU62
1111:FreeRTOS/src/stream_buffer.c **** 	}
 210              		.loc 1 1111 12 is_stmt 0 view .LVU63
 211 0036 7A1B     		subs	r2, r7, r5
 212 0038 08EB0501 		add	r1, r8, r5
 213 003c B069     		ldr	r0, [r6, #24]
 214 003e FFF7FEFF 		bl	memcpy
 215              	.LVL18:
 216 0042 EFE7     		b	.L6
 217              		.cfi_endproc
 218              	.LFE21:
 220              		.section	.text.prvWriteMessageToBuffer,"ax",%progbits
 221              		.align	1
 222              		.syntax unified
 223              		.thumb
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 27


 224              		.thumb_func
 225              		.fpu fpv4-sp-d16
 227              	prvWriteMessageToBuffer:
 228              	.LVL19:
 229              	.LFB12:
 666:FreeRTOS/src/stream_buffer.c **** 	BaseType_t xShouldWrite;
 230              		.loc 1 666 1 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 4, pretend = 0, frame = 8
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 666:FreeRTOS/src/stream_buffer.c **** 	BaseType_t xShouldWrite;
 234              		.loc 1 666 1 is_stmt 0 view .LVU65
 235 0000 30B5     		push	{r4, r5, lr}
 236              	.LCFI2:
 237              		.cfi_def_cfa_offset 12
 238              		.cfi_offset 4, -12
 239              		.cfi_offset 5, -8
 240              		.cfi_offset 14, -4
 241 0002 83B0     		sub	sp, sp, #12
 242              	.LCFI3:
 243              		.cfi_def_cfa_offset 24
 244 0004 0446     		mov	r4, r0
 245 0006 0192     		str	r2, [sp, #4]
 667:FreeRTOS/src/stream_buffer.c **** 	size_t xReturn;
 246              		.loc 1 667 2 is_stmt 1 view .LVU66
 668:FreeRTOS/src/stream_buffer.c **** 
 247              		.loc 1 668 2 view .LVU67
 670:FreeRTOS/src/stream_buffer.c **** 	{
 248              		.loc 1 670 2 view .LVU68
 670:FreeRTOS/src/stream_buffer.c **** 	{
 249              		.loc 1 670 4 is_stmt 0 view .LVU69
 250 0008 1846     		mov	r0, r3
 251              	.LVL20:
 670:FreeRTOS/src/stream_buffer.c **** 	{
 252              		.loc 1 670 4 view .LVU70
 253 000a 6BB1     		cbz	r3, .L11
 254 000c 0D46     		mov	r5, r1
 676:FreeRTOS/src/stream_buffer.c **** 	{
 255              		.loc 1 676 7 is_stmt 1 view .LVU71
 676:FreeRTOS/src/stream_buffer.c **** 	{
 256              		.loc 1 676 27 is_stmt 0 view .LVU72
 257 000e 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 258              	.LVL21:
 676:FreeRTOS/src/stream_buffer.c **** 	{
 259              		.loc 1 676 9 view .LVU73
 260 0010 13F0010F 		tst	r3, #1
 261 0014 0AD1     		bne	.L12
 681:FreeRTOS/src/stream_buffer.c **** 		xDataLengthBytes = configMIN( xDataLengthBytes, xSpace );
 262              		.loc 1 681 3 is_stmt 1 view .LVU74
 263              	.LVL22:
 682:FreeRTOS/src/stream_buffer.c **** 	}
 264              		.loc 1 682 3 view .LVU75
 682:FreeRTOS/src/stream_buffer.c **** 	}
 265              		.loc 1 682 22 is_stmt 0 view .LVU76
 266 0016 9042     		cmp	r0, r2
 267 0018 28BF     		it	cs
 268 001a 1046     		movcs	r0, r2
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 28


 269              	.LVL23:
 682:FreeRTOS/src/stream_buffer.c **** 	}
 270              		.loc 1 682 20 view .LVU77
 271 001c 0190     		str	r0, [sp, #4]
 699:FreeRTOS/src/stream_buffer.c **** 	{
 272              		.loc 1 699 2 is_stmt 1 view .LVU78
 273              	.LVL24:
 274              	.L13:
 702:FreeRTOS/src/stream_buffer.c **** 	}
 275              		.loc 1 702 3 view .LVU79
 702:FreeRTOS/src/stream_buffer.c **** 	}
 276              		.loc 1 702 13 is_stmt 0 view .LVU80
 277 001e 019A     		ldr	r2, [sp, #4]
 278 0020 2946     		mov	r1, r5
 279 0022 2046     		mov	r0, r4
 280 0024 FFF7FEFF 		bl	prvWriteBytesToBuffer
 281              	.LVL25:
 282              	.L11:
 709:FreeRTOS/src/stream_buffer.c **** }
 283              		.loc 1 709 2 is_stmt 1 view .LVU81
 710:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 284              		.loc 1 710 1 is_stmt 0 view .LVU82
 285 0028 03B0     		add	sp, sp, #12
 286              	.LCFI4:
 287              		.cfi_remember_state
 288              		.cfi_def_cfa_offset 12
 289              		@ sp needed
 290 002a 30BD     		pop	{r4, r5, pc}
 291              	.LVL26:
 292              	.L12:
 293              	.LCFI5:
 294              		.cfi_restore_state
 684:FreeRTOS/src/stream_buffer.c **** 	{
 295              		.loc 1 684 7 is_stmt 1 view .LVU83
 684:FreeRTOS/src/stream_buffer.c **** 	{
 296              		.loc 1 684 9 is_stmt 0 view .LVU84
 297 002c 069B     		ldr	r3, [sp, #24]
 298 002e 9842     		cmp	r0, r3
 299 0030 01D2     		bcs	.L16
 706:FreeRTOS/src/stream_buffer.c **** 	}
 300              		.loc 1 706 11 view .LVU85
 301 0032 0020     		movs	r0, #0
 302              	.LVL27:
 706:FreeRTOS/src/stream_buffer.c **** 	}
 303              		.loc 1 706 11 view .LVU86
 304 0034 F8E7     		b	.L11
 305              	.LVL28:
 306              	.L16:
 690:FreeRTOS/src/stream_buffer.c **** 		( void ) prvWriteBytesToBuffer( pxStreamBuffer, ( const uint8_t * ) &( xDataLengthBytes ), sbBYTE
 307              		.loc 1 690 3 is_stmt 1 view .LVU87
 691:FreeRTOS/src/stream_buffer.c **** 	}
 308              		.loc 1 691 3 view .LVU88
 691:FreeRTOS/src/stream_buffer.c **** 	}
 309              		.loc 1 691 12 is_stmt 0 view .LVU89
 310 0036 0422     		movs	r2, #4
 311              	.LVL29:
 691:FreeRTOS/src/stream_buffer.c **** 	}
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 29


 312              		.loc 1 691 12 view .LVU90
 313 0038 0DEB0201 		add	r1, sp, r2
 314              	.LVL30:
 691:FreeRTOS/src/stream_buffer.c **** 	}
 315              		.loc 1 691 12 view .LVU91
 316 003c 2046     		mov	r0, r4
 317              	.LVL31:
 691:FreeRTOS/src/stream_buffer.c **** 	}
 318              		.loc 1 691 12 view .LVU92
 319 003e FFF7FEFF 		bl	prvWriteBytesToBuffer
 320              	.LVL32:
 699:FreeRTOS/src/stream_buffer.c **** 	{
 321              		.loc 1 699 2 is_stmt 1 view .LVU93
 322 0042 ECE7     		b	.L13
 323              		.cfi_endproc
 324              	.LFE12:
 326              		.section	.text.prvReadBytesFromBuffer,"ax",%progbits
 327              		.align	1
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 331              		.fpu fpv4-sp-d16
 333              	prvReadBytesFromBuffer:
 334              	.LVL33:
 335              	.LFB22:
1135:FreeRTOS/src/stream_buffer.c **** size_t xCount, xFirstLength, xNextTail;
 336              		.loc 1 1135 1 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
1135:FreeRTOS/src/stream_buffer.c **** size_t xCount, xFirstLength, xNextTail;
 340              		.loc 1 1135 1 is_stmt 0 view .LVU95
 341 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 342              	.LCFI6:
 343              		.cfi_def_cfa_offset 24
 344              		.cfi_offset 4, -24
 345              		.cfi_offset 5, -20
 346              		.cfi_offset 6, -16
 347              		.cfi_offset 7, -12
 348              		.cfi_offset 8, -8
 349              		.cfi_offset 14, -4
1136:FreeRTOS/src/stream_buffer.c **** 
 350              		.loc 1 1136 1 is_stmt 1 view .LVU96
1139:FreeRTOS/src/stream_buffer.c **** 
 351              		.loc 1 1139 2 view .LVU97
1139:FreeRTOS/src/stream_buffer.c **** 
 352              		.loc 1 1139 9 is_stmt 0 view .LVU98
 353 0004 9A42     		cmp	r2, r3
 354 0006 28BF     		it	cs
 355 0008 1A46     		movcs	r2, r3
 356              	.LVL34:
1139:FreeRTOS/src/stream_buffer.c **** 
 357              		.loc 1 1139 9 view .LVU99
 358 000a 1446     		mov	r4, r2
 359              	.LVL35:
1141:FreeRTOS/src/stream_buffer.c **** 	{
 360              		.loc 1 1141 2 is_stmt 1 view .LVU100
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 30


1141:FreeRTOS/src/stream_buffer.c **** 	{
 361              		.loc 1 1141 4 is_stmt 0 view .LVU101
 362 000c 12B9     		cbnz	r2, .L22
 363              	.LVL36:
 364              	.L17:
1186:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 365              		.loc 1 1186 1 view .LVU102
 366 000e 2046     		mov	r0, r4
 367 0010 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 368              	.LVL37:
 369              	.L22:
1186:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 370              		.loc 1 1186 1 view .LVU103
 371 0014 8846     		mov	r8, r1
 372 0016 0546     		mov	r5, r0
1143:FreeRTOS/src/stream_buffer.c **** 
 373              		.loc 1 1143 3 is_stmt 1 view .LVU104
1143:FreeRTOS/src/stream_buffer.c **** 
 374              		.loc 1 1143 13 is_stmt 0 view .LVU105
 375 0018 0668     		ldr	r6, [r0]
 376              	.LVL38:
1148:FreeRTOS/src/stream_buffer.c **** 
 377              		.loc 1 1148 3 is_stmt 1 view .LVU106
1148:FreeRTOS/src/stream_buffer.c **** 
 378              		.loc 1 1148 18 is_stmt 0 view .LVU107
 379 001a 8768     		ldr	r7, [r0, #8]
 380 001c BF1B     		subs	r7, r7, r6
1148:FreeRTOS/src/stream_buffer.c **** 
 381              		.loc 1 1148 16 view .LVU108
 382 001e 9742     		cmp	r7, r2
 383 0020 28BF     		it	cs
 384 0022 1746     		movcs	r7, r2
 385              	.LVL39:
1152:FreeRTOS/src/stream_buffer.c **** 		configASSERT( ( xNextTail + xFirstLength ) <= pxStreamBuffer->xLength );
 386              		.loc 1 1152 44 is_stmt 1 view .LVU109
1153:FreeRTOS/src/stream_buffer.c **** 		( void ) memcpy( ( void * ) pucData, ( const void * ) &( pxStreamBuffer->pucBuffer[ xNextTail ] )
 387              		.loc 1 1153 74 view .LVU110
1154:FreeRTOS/src/stream_buffer.c **** 
 388              		.loc 1 1154 3 view .LVU111
1154:FreeRTOS/src/stream_buffer.c **** 
 389              		.loc 1 1154 74 is_stmt 0 view .LVU112
 390 0024 8169     		ldr	r1, [r0, #24]
 391              	.LVL40:
1154:FreeRTOS/src/stream_buffer.c **** 
 392              		.loc 1 1154 12 view .LVU113
 393 0026 3A46     		mov	r2, r7
 394              	.LVL41:
1154:FreeRTOS/src/stream_buffer.c **** 
 395              		.loc 1 1154 12 view .LVU114
 396 0028 3144     		add	r1, r1, r6
 397 002a 4046     		mov	r0, r8
 398              	.LVL42:
1154:FreeRTOS/src/stream_buffer.c **** 
 399              		.loc 1 1154 12 view .LVU115
 400 002c FFF7FEFF 		bl	memcpy
 401              	.LVL43:
1158:FreeRTOS/src/stream_buffer.c **** 		{
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 31


 402              		.loc 1 1158 3 is_stmt 1 view .LVU116
1158:FreeRTOS/src/stream_buffer.c **** 		{
 403              		.loc 1 1158 5 is_stmt 0 view .LVU117
 404 0030 BC42     		cmp	r4, r7
 405 0032 06D8     		bhi	.L23
 406              	.L19:
1166:FreeRTOS/src/stream_buffer.c **** 		}
 407              		.loc 1 1166 28 is_stmt 1 view .LVU118
1171:FreeRTOS/src/stream_buffer.c **** 
 408              		.loc 1 1171 3 view .LVU119
1171:FreeRTOS/src/stream_buffer.c **** 
 409              		.loc 1 1171 13 is_stmt 0 view .LVU120
 410 0034 2644     		add	r6, r6, r4
 411              	.LVL44:
1173:FreeRTOS/src/stream_buffer.c **** 		{
 412              		.loc 1 1173 3 is_stmt 1 view .LVU121
1173:FreeRTOS/src/stream_buffer.c **** 		{
 413              		.loc 1 1173 34 is_stmt 0 view .LVU122
 414 0036 AB68     		ldr	r3, [r5, #8]
1173:FreeRTOS/src/stream_buffer.c **** 		{
 415              		.loc 1 1173 5 view .LVU123
 416 0038 B342     		cmp	r3, r6
 417 003a 00D8     		bhi	.L20
1175:FreeRTOS/src/stream_buffer.c **** 		}
 418              		.loc 1 1175 4 is_stmt 1 view .LVU124
1175:FreeRTOS/src/stream_buffer.c **** 		}
 419              		.loc 1 1175 14 is_stmt 0 view .LVU125
 420 003c F61A     		subs	r6, r6, r3
 421              	.LVL45:
 422              	.L20:
1178:FreeRTOS/src/stream_buffer.c **** 	}
 423              		.loc 1 1178 3 is_stmt 1 view .LVU126
1178:FreeRTOS/src/stream_buffer.c **** 	}
 424              		.loc 1 1178 25 is_stmt 0 view .LVU127
 425 003e 2E60     		str	r6, [r5]
1182:FreeRTOS/src/stream_buffer.c **** 	}
 426              		.loc 1 1182 27 is_stmt 1 view .LVU128
1185:FreeRTOS/src/stream_buffer.c **** }
 427              		.loc 1 1185 2 view .LVU129
1185:FreeRTOS/src/stream_buffer.c **** }
 428              		.loc 1 1185 9 is_stmt 0 view .LVU130
 429 0040 E5E7     		b	.L17
 430              	.L23:
1161:FreeRTOS/src/stream_buffer.c **** 			( void ) memcpy( ( void * ) &( pucData[ xFirstLength ] ), ( void * ) ( pxStreamBuffer->pucBuffer
 431              		.loc 1 1161 39 is_stmt 1 view .LVU131
1162:FreeRTOS/src/stream_buffer.c **** 		}
 432              		.loc 1 1162 4 view .LVU132
1162:FreeRTOS/src/stream_buffer.c **** 		}
 433              		.loc 1 1162 13 is_stmt 0 view .LVU133
 434 0042 E21B     		subs	r2, r4, r7
 435 0044 A969     		ldr	r1, [r5, #24]
 436 0046 08EB0700 		add	r0, r8, r7
 437 004a FFF7FEFF 		bl	memcpy
 438              	.LVL46:
 439 004e F1E7     		b	.L19
 440              		.cfi_endproc
 441              	.LFE22:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 32


 443              		.section	.text.prvReadMessageFromBuffer,"ax",%progbits
 444              		.align	1
 445              		.syntax unified
 446              		.thumb
 447              		.thumb_func
 448              		.fpu fpv4-sp-d16
 450              	prvReadMessageFromBuffer:
 451              	.LVL47:
 452              	.LFB16:
 923:FreeRTOS/src/stream_buffer.c **** size_t xOriginalTail, xReceivedLength, xNextMessageLength;
 453              		.loc 1 923 1 is_stmt 1 view -0
 454              		.cfi_startproc
 455              		@ args = 4, pretend = 0, frame = 8
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 923:FreeRTOS/src/stream_buffer.c **** size_t xOriginalTail, xReceivedLength, xNextMessageLength;
 457              		.loc 1 923 1 is_stmt 0 view .LVU135
 458 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 459              	.LCFI7:
 460              		.cfi_def_cfa_offset 28
 461              		.cfi_offset 4, -28
 462              		.cfi_offset 5, -24
 463              		.cfi_offset 6, -20
 464              		.cfi_offset 7, -16
 465              		.cfi_offset 8, -12
 466              		.cfi_offset 9, -8
 467              		.cfi_offset 14, -4
 468 0004 83B0     		sub	sp, sp, #12
 469              	.LCFI8:
 470              		.cfi_def_cfa_offset 40
 471 0006 0546     		mov	r5, r0
 472 0008 8846     		mov	r8, r1
 473 000a 1646     		mov	r6, r2
 474 000c 1C46     		mov	r4, r3
 475 000e 0A9F     		ldr	r7, [sp, #40]
 924:FreeRTOS/src/stream_buffer.c **** configMESSAGE_BUFFER_LENGTH_TYPE xTempNextMessageLength;
 476              		.loc 1 924 1 is_stmt 1 view .LVU136
 925:FreeRTOS/src/stream_buffer.c **** 
 477              		.loc 1 925 1 view .LVU137
 927:FreeRTOS/src/stream_buffer.c **** 	{
 478              		.loc 1 927 2 view .LVU138
 927:FreeRTOS/src/stream_buffer.c **** 	{
 479              		.loc 1 927 4 is_stmt 0 view .LVU139
 480 0010 47B9     		cbnz	r7, .L28
 481              	.LVL48:
 482              	.L25:
 964:FreeRTOS/src/stream_buffer.c **** 
 483              		.loc 1 964 2 is_stmt 1 view .LVU140
 964:FreeRTOS/src/stream_buffer.c **** 
 484              		.loc 1 964 20 is_stmt 0 view .LVU141
 485 0012 2346     		mov	r3, r4
 486 0014 3246     		mov	r2, r6
 487 0016 4146     		mov	r1, r8
 488 0018 2846     		mov	r0, r5
 489 001a FFF7FEFF 		bl	prvReadBytesFromBuffer
 490              	.LVL49:
 966:FreeRTOS/src/stream_buffer.c **** }
 491              		.loc 1 966 2 is_stmt 1 view .LVU142
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 33


 967:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 492              		.loc 1 967 1 is_stmt 0 view .LVU143
 493 001e 03B0     		add	sp, sp, #12
 494              	.LCFI9:
 495              		.cfi_remember_state
 496              		.cfi_def_cfa_offset 28
 497              		@ sp needed
 498 0020 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 499              	.LVL50:
 500              	.L28:
 501              	.LCFI10:
 502              		.cfi_restore_state
 933:FreeRTOS/src/stream_buffer.c **** 		( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, xBytesToS
 503              		.loc 1 933 3 is_stmt 1 view .LVU144
 933:FreeRTOS/src/stream_buffer.c **** 		( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempNextMessageLength, xBytesToS
 504              		.loc 1 933 17 is_stmt 0 view .LVU145
 505 0024 D0F80090 		ldr	r9, [r0]
 506              	.LVL51:
 934:FreeRTOS/src/stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 507              		.loc 1 934 3 is_stmt 1 view .LVU146
 934:FreeRTOS/src/stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 508              		.loc 1 934 12 is_stmt 0 view .LVU147
 509 0028 3A46     		mov	r2, r7
 510              	.LVL52:
 934:FreeRTOS/src/stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 511              		.loc 1 934 12 view .LVU148
 512 002a 01A9     		add	r1, sp, #4
 513              	.LVL53:
 934:FreeRTOS/src/stream_buffer.c **** 		xNextMessageLength = ( size_t ) xTempNextMessageLength;
 514              		.loc 1 934 12 view .LVU149
 515 002c FFF7FEFF 		bl	prvReadBytesFromBuffer
 516              	.LVL54:
 935:FreeRTOS/src/stream_buffer.c **** 
 517              		.loc 1 935 3 is_stmt 1 view .LVU150
 935:FreeRTOS/src/stream_buffer.c **** 
 518              		.loc 1 935 22 is_stmt 0 view .LVU151
 519 0030 019B     		ldr	r3, [sp, #4]
 520              	.LVL55:
 939:FreeRTOS/src/stream_buffer.c **** 
 521              		.loc 1 939 3 is_stmt 1 view .LVU152
 939:FreeRTOS/src/stream_buffer.c **** 
 522              		.loc 1 939 19 is_stmt 0 view .LVU153
 523 0032 E41B     		subs	r4, r4, r7
 524              	.LVL56:
 943:FreeRTOS/src/stream_buffer.c **** 		{
 525              		.loc 1 943 3 is_stmt 1 view .LVU154
 943:FreeRTOS/src/stream_buffer.c **** 		{
 526              		.loc 1 943 5 is_stmt 0 view .LVU155
 527 0034 B342     		cmp	r3, r6
 528 0036 03D9     		bls	.L26
 948:FreeRTOS/src/stream_buffer.c **** 			xNextMessageLength = 0;
 529              		.loc 1 948 4 is_stmt 1 view .LVU156
 948:FreeRTOS/src/stream_buffer.c **** 			xNextMessageLength = 0;
 530              		.loc 1 948 26 is_stmt 0 view .LVU157
 531 0038 C5F80090 		str	r9, [r5]
 949:FreeRTOS/src/stream_buffer.c **** 		}
 532              		.loc 1 949 4 is_stmt 1 view .LVU158
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 34


 533              	.LVL57:
 949:FreeRTOS/src/stream_buffer.c **** 		}
 534              		.loc 1 949 23 is_stmt 0 view .LVU159
 535 003c 0026     		movs	r6, #0
 536              	.LVL58:
 949:FreeRTOS/src/stream_buffer.c **** 		}
 537              		.loc 1 949 23 view .LVU160
 538 003e E8E7     		b	.L25
 539              	.LVL59:
 540              	.L26:
 935:FreeRTOS/src/stream_buffer.c **** 
 541              		.loc 1 935 22 view .LVU161
 542 0040 1E46     		mov	r6, r3
 543              	.LVL60:
 935:FreeRTOS/src/stream_buffer.c **** 
 544              		.loc 1 935 22 view .LVU162
 545 0042 E6E7     		b	.L25
 546              		.cfi_endproc
 547              	.LFE16:
 549              		.section	.text.xStreamBufferGenericCreate,"ax",%progbits
 550              		.align	1
 551              		.global	xStreamBufferGenericCreate
 552              		.syntax unified
 553              		.thumb
 554              		.thumb_func
 555              		.fpu fpv4-sp-d16
 557              	xStreamBufferGenericCreate:
 558              	.LVL61:
 559              	.LFB4:
 220:FreeRTOS/src/stream_buffer.c **** 	uint8_t *pucAllocatedMemory;
 560              		.loc 1 220 2 is_stmt 1 view -0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 220:FreeRTOS/src/stream_buffer.c **** 	uint8_t *pucAllocatedMemory;
 564              		.loc 1 220 2 is_stmt 0 view .LVU164
 565 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 566              	.LCFI11:
 567              		.cfi_def_cfa_offset 20
 568              		.cfi_offset 4, -20
 569              		.cfi_offset 5, -16
 570              		.cfi_offset 6, -12
 571              		.cfi_offset 7, -8
 572              		.cfi_offset 14, -4
 573 0002 83B0     		sub	sp, sp, #12
 574              	.LCFI12:
 575              		.cfi_def_cfa_offset 32
 576 0004 0D46     		mov	r5, r1
 221:FreeRTOS/src/stream_buffer.c **** 	uint8_t ucFlags;
 577              		.loc 1 221 2 is_stmt 1 view .LVU165
 222:FreeRTOS/src/stream_buffer.c **** 
 578              		.loc 1 222 2 view .LVU166
 228:FreeRTOS/src/stream_buffer.c **** 		{
 579              		.loc 1 228 3 view .LVU167
 228:FreeRTOS/src/stream_buffer.c **** 		{
 580              		.loc 1 228 5 is_stmt 0 view .LVU168
 581 0006 012A     		cmp	r2, #1
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 35


 582 0008 12D0     		beq	.L36
 237:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xBufferSizeBytes > 0 );
 583              		.loc 1 237 12 view .LVU169
 584 000a 0027     		movs	r7, #0
 585              	.L30:
 586              	.LVL62:
 238:FreeRTOS/src/stream_buffer.c **** 		}
 587              		.loc 1 238 40 is_stmt 1 view .LVU170
 240:FreeRTOS/src/stream_buffer.c **** 
 588              		.loc 1 240 57 view .LVU171
 244:FreeRTOS/src/stream_buffer.c **** 		{
 589              		.loc 1 244 3 view .LVU172
 244:FreeRTOS/src/stream_buffer.c **** 		{
 590              		.loc 1 244 5 is_stmt 0 view .LVU173
 591 000c 05B9     		cbnz	r5, .L31
 246:FreeRTOS/src/stream_buffer.c **** 		}
 592              		.loc 1 246 23 view .LVU174
 593 000e 0125     		movs	r5, #1
 594              	.L31:
 595              	.LVL63:
 257:FreeRTOS/src/stream_buffer.c **** 		pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffer_t ) ); /
 596              		.loc 1 257 3 is_stmt 1 view .LVU175
 257:FreeRTOS/src/stream_buffer.c **** 		pucAllocatedMemory = ( uint8_t * ) pvPortMalloc( xBufferSizeBytes + sizeof( StreamBuffer_t ) ); /
 597              		.loc 1 257 19 is_stmt 0 view .LVU176
 598 0010 461C     		adds	r6, r0, #1
 599              	.LVL64:
 258:FreeRTOS/src/stream_buffer.c **** 
 600              		.loc 1 258 3 is_stmt 1 view .LVU177
 258:FreeRTOS/src/stream_buffer.c **** 
 601              		.loc 1 258 38 is_stmt 0 view .LVU178
 602 0012 2130     		adds	r0, r0, #33
 603 0014 FFF7FEFF 		bl	pvPortMalloc
 604              	.LVL65:
 260:FreeRTOS/src/stream_buffer.c **** 		{
 605              		.loc 1 260 3 is_stmt 1 view .LVU179
 260:FreeRTOS/src/stream_buffer.c **** 		{
 606              		.loc 1 260 5 is_stmt 0 view .LVU180
 607 0018 0446     		mov	r4, r0
 608 001a 30B1     		cbz	r0, .L29
 262:FreeRTOS/src/stream_buffer.c **** 										   pucAllocatedMemory + sizeof( StreamBuffer_t ),  /* Storage area follows. */ /*lint !e9
 609              		.loc 1 262 4 is_stmt 1 view .LVU181
 610 001c 0097     		str	r7, [sp]
 611 001e 2B46     		mov	r3, r5
 612 0020 3246     		mov	r2, r6
 613 0022 00F12001 		add	r1, r0, #32
 614 0026 FFF7FEFF 		bl	prvInitialiseNewStreamBuffer
 615              	.LVL66:
 268:FreeRTOS/src/stream_buffer.c **** 		}
 616              		.loc 1 268 94 view .LVU182
 272:FreeRTOS/src/stream_buffer.c **** 		}
 617              		.loc 1 272 56 view .LVU183
 275:FreeRTOS/src/stream_buffer.c **** 	}
 618              		.loc 1 275 3 view .LVU184
 619              	.L29:
 276:FreeRTOS/src/stream_buffer.c **** 
 620              		.loc 1 276 2 is_stmt 0 view .LVU185
 621 002a 2046     		mov	r0, r4
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 36


 622 002c 03B0     		add	sp, sp, #12
 623              	.LCFI13:
 624              		.cfi_remember_state
 625              		.cfi_def_cfa_offset 20
 626              		@ sp needed
 627 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 628              	.LVL67:
 629              	.L36:
 630              	.LCFI14:
 631              		.cfi_restore_state
 231:FreeRTOS/src/stream_buffer.c **** 			configASSERT( xBufferSizeBytes > sbBYTES_TO_STORE_MESSAGE_LENGTH );
 632              		.loc 1 231 12 view .LVU186
 633 0030 0127     		movs	r7, #1
 634 0032 EBE7     		b	.L30
 635              		.cfi_endproc
 636              	.LFE4:
 638              		.section	.text.vStreamBufferDelete,"ax",%progbits
 639              		.align	1
 640              		.global	vStreamBufferDelete
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 644              		.fpu fpv4-sp-d16
 646              	vStreamBufferDelete:
 647              	.LVL68:
 648              	.LFB5:
 360:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 649              		.loc 1 360 1 is_stmt 1 view -0
 650              		.cfi_startproc
 651              		@ args = 0, pretend = 0, frame = 0
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 360:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * pxStreamBuffer = xStreamBuffer;
 653              		.loc 1 360 1 is_stmt 0 view .LVU188
 654 0000 08B5     		push	{r3, lr}
 655              	.LCFI15:
 656              		.cfi_def_cfa_offset 8
 657              		.cfi_offset 3, -8
 658              		.cfi_offset 14, -4
 361:FreeRTOS/src/stream_buffer.c **** 
 659              		.loc 1 361 1 is_stmt 1 view .LVU189
 660              	.LVL69:
 363:FreeRTOS/src/stream_buffer.c **** 
 661              		.loc 1 363 32 view .LVU190
 365:FreeRTOS/src/stream_buffer.c **** 
 662              		.loc 1 365 44 view .LVU191
 367:FreeRTOS/src/stream_buffer.c **** 	{
 663              		.loc 1 367 2 view .LVU192
 367:FreeRTOS/src/stream_buffer.c **** 	{
 664              		.loc 1 367 22 is_stmt 0 view .LVU193
 665 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 367:FreeRTOS/src/stream_buffer.c **** 	{
 666              		.loc 1 367 4 view .LVU194
 667 0004 13F0020F 		tst	r3, #2
 668 0008 02D1     		bne	.L38
 373:FreeRTOS/src/stream_buffer.c **** 		}
 669              		.loc 1 373 4 is_stmt 1 view .LVU195
 670 000a FFF7FEFF 		bl	vPortFree
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 37


 671              	.LVL70:
 672              	.L37:
 389:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 673              		.loc 1 389 1 is_stmt 0 view .LVU196
 674 000e 08BD     		pop	{r3, pc}
 675              	.LVL71:
 676              	.L38:
 387:FreeRTOS/src/stream_buffer.c **** 	}
 677              		.loc 1 387 3 is_stmt 1 view .LVU197
 387:FreeRTOS/src/stream_buffer.c **** 	}
 678              		.loc 1 387 12 is_stmt 0 view .LVU198
 679 0010 2022     		movs	r2, #32
 680 0012 0021     		movs	r1, #0
 681 0014 FFF7FEFF 		bl	memset
 682              	.LVL72:
 389:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 683              		.loc 1 389 1 view .LVU199
 684 0018 F9E7     		b	.L37
 685              		.cfi_endproc
 686              	.LFE5:
 688              		.section	.text.xStreamBufferReset,"ax",%progbits
 689              		.align	1
 690              		.global	xStreamBufferReset
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 694              		.fpu fpv4-sp-d16
 696              	xStreamBufferReset:
 697              	.LVL73:
 698              	.LFB6:
 393:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 699              		.loc 1 393 1 is_stmt 1 view -0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 0, uses_anonymous_args = 0
 393:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 703              		.loc 1 393 1 is_stmt 0 view .LVU201
 704 0000 10B5     		push	{r4, lr}
 705              	.LCFI16:
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 4, -8
 708              		.cfi_offset 14, -4
 709 0002 82B0     		sub	sp, sp, #8
 710              	.LCFI17:
 711              		.cfi_def_cfa_offset 16
 712 0004 0446     		mov	r4, r0
 394:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn = pdFAIL;
 713              		.loc 1 394 1 is_stmt 1 view .LVU202
 714              	.LVL74:
 395:FreeRTOS/src/stream_buffer.c **** 
 715              		.loc 1 395 1 view .LVU203
 401:FreeRTOS/src/stream_buffer.c **** 
 716              		.loc 1 401 32 view .LVU204
 412:FreeRTOS/src/stream_buffer.c **** 	{
 717              		.loc 1 412 2 view .LVU205
 718 0006 FFF7FEFF 		bl	vPortEnterCritical
 719              	.LVL75:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 38


 414:FreeRTOS/src/stream_buffer.c **** 		{
 720              		.loc 1 414 3 view .LVU206
 414:FreeRTOS/src/stream_buffer.c **** 		{
 721              		.loc 1 414 21 is_stmt 0 view .LVU207
 722 000a 2369     		ldr	r3, [r4, #16]
 414:FreeRTOS/src/stream_buffer.c **** 		{
 723              		.loc 1 414 5 view .LVU208
 724 000c 2BB1     		cbz	r3, .L46
 395:FreeRTOS/src/stream_buffer.c **** 
 725              		.loc 1 395 12 view .LVU209
 726 000e 0024     		movs	r4, #0
 727              	.LVL76:
 728              	.L42:
 431:FreeRTOS/src/stream_buffer.c **** 			}
 729              		.loc 1 431 46 is_stmt 1 view .LVU210
 435:FreeRTOS/src/stream_buffer.c **** 
 730              		.loc 1 435 2 view .LVU211
 731 0010 FFF7FEFF 		bl	vPortExitCritical
 732              	.LVL77:
 437:FreeRTOS/src/stream_buffer.c **** }
 733              		.loc 1 437 2 view .LVU212
 438:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 734              		.loc 1 438 1 is_stmt 0 view .LVU213
 735 0014 2046     		mov	r0, r4
 736 0016 02B0     		add	sp, sp, #8
 737              	.LCFI18:
 738              		.cfi_remember_state
 739              		.cfi_def_cfa_offset 8
 740              		@ sp needed
 741 0018 10BD     		pop	{r4, pc}
 742              	.LVL78:
 743              	.L46:
 744              	.LCFI19:
 745              		.cfi_restore_state
 416:FreeRTOS/src/stream_buffer.c **** 			{
 746              		.loc 1 416 4 is_stmt 1 view .LVU214
 416:FreeRTOS/src/stream_buffer.c **** 			{
 747              		.loc 1 416 22 is_stmt 0 view .LVU215
 748 001a 6369     		ldr	r3, [r4, #20]
 416:FreeRTOS/src/stream_buffer.c **** 			{
 749              		.loc 1 416 6 view .LVU216
 750 001c 0BB1     		cbz	r3, .L47
 395:FreeRTOS/src/stream_buffer.c **** 
 751              		.loc 1 395 12 view .LVU217
 752 001e 0024     		movs	r4, #0
 753              	.LVL79:
 395:FreeRTOS/src/stream_buffer.c **** 
 754              		.loc 1 395 12 view .LVU218
 755 0020 F6E7     		b	.L42
 756              	.LVL80:
 757              	.L47:
 418:FreeRTOS/src/stream_buffer.c **** 											  pxStreamBuffer->pucBuffer,
 758              		.loc 1 418 5 is_stmt 1 view .LVU219
 759 0022 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 760 0024 0093     		str	r3, [sp]
 761 0026 E368     		ldr	r3, [r4, #12]
 762 0028 A268     		ldr	r2, [r4, #8]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 39


 763 002a A169     		ldr	r1, [r4, #24]
 764 002c 2046     		mov	r0, r4
 765 002e FFF7FEFF 		bl	prvInitialiseNewStreamBuffer
 766              	.LVL81:
 423:FreeRTOS/src/stream_buffer.c **** 
 767              		.loc 1 423 5 view .LVU220
 423:FreeRTOS/src/stream_buffer.c **** 
 768              		.loc 1 423 13 is_stmt 0 view .LVU221
 769 0032 0124     		movs	r4, #1
 770              	.LVL82:
 423:FreeRTOS/src/stream_buffer.c **** 
 771              		.loc 1 423 13 view .LVU222
 772 0034 ECE7     		b	.L42
 773              		.cfi_endproc
 774              	.LFE6:
 776              		.section	.text.xStreamBufferSetTriggerLevel,"ax",%progbits
 777              		.align	1
 778              		.global	xStreamBufferSetTriggerLevel
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 782              		.fpu fpv4-sp-d16
 784              	xStreamBufferSetTriggerLevel:
 785              	.LVL83:
 786              	.LFB7:
 442:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 787              		.loc 1 442 1 is_stmt 1 view -0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 443:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 792              		.loc 1 443 1 view .LVU224
 444:FreeRTOS/src/stream_buffer.c **** 
 793              		.loc 1 444 1 view .LVU225
 446:FreeRTOS/src/stream_buffer.c **** 
 794              		.loc 1 446 32 view .LVU226
 449:FreeRTOS/src/stream_buffer.c **** 	{
 795              		.loc 1 449 2 view .LVU227
 449:FreeRTOS/src/stream_buffer.c **** 	{
 796              		.loc 1 449 4 is_stmt 0 view .LVU228
 797 0000 0B46     		mov	r3, r1
 798 0002 01B9     		cbnz	r1, .L49
 451:FreeRTOS/src/stream_buffer.c **** 	}
 799              		.loc 1 451 17 view .LVU229
 800 0004 0123     		movs	r3, #1
 801              	.L49:
 802              	.LVL84:
 456:FreeRTOS/src/stream_buffer.c **** 	{
 803              		.loc 1 456 2 is_stmt 1 view .LVU230
 456:FreeRTOS/src/stream_buffer.c **** 	{
 804              		.loc 1 456 37 is_stmt 0 view .LVU231
 805 0006 8268     		ldr	r2, [r0, #8]
 456:FreeRTOS/src/stream_buffer.c **** 	{
 806              		.loc 1 456 4 view .LVU232
 807 0008 9A42     		cmp	r2, r3
 808 000a 02D3     		bcc	.L52
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 40


 458:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdPASS;
 809              		.loc 1 458 3 is_stmt 1 view .LVU233
 458:FreeRTOS/src/stream_buffer.c **** 		xReturn = pdPASS;
 810              		.loc 1 458 38 is_stmt 0 view .LVU234
 811 000c C360     		str	r3, [r0, #12]
 459:FreeRTOS/src/stream_buffer.c **** 	}
 812              		.loc 1 459 3 is_stmt 1 view .LVU235
 813              	.LVL85:
 459:FreeRTOS/src/stream_buffer.c **** 	}
 814              		.loc 1 459 11 is_stmt 0 view .LVU236
 815 000e 0120     		movs	r0, #1
 816              	.LVL86:
 459:FreeRTOS/src/stream_buffer.c **** 	}
 817              		.loc 1 459 11 view .LVU237
 818 0010 7047     		bx	lr
 819              	.LVL87:
 820              	.L52:
 463:FreeRTOS/src/stream_buffer.c **** 	}
 821              		.loc 1 463 11 view .LVU238
 822 0012 0020     		movs	r0, #0
 823              	.LVL88:
 466:FreeRTOS/src/stream_buffer.c **** }
 824              		.loc 1 466 2 is_stmt 1 view .LVU239
 467:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 825              		.loc 1 467 1 is_stmt 0 view .LVU240
 826 0014 7047     		bx	lr
 827              		.cfi_endproc
 828              	.LFE7:
 830              		.section	.text.xStreamBufferSpacesAvailable,"ax",%progbits
 831              		.align	1
 832              		.global	xStreamBufferSpacesAvailable
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 836              		.fpu fpv4-sp-d16
 838              	xStreamBufferSpacesAvailable:
 839              	.LVL89:
 840              	.LFB8:
 471:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 841              		.loc 1 471 1 is_stmt 1 view -0
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 0
 844              		@ frame_needed = 0, uses_anonymous_args = 0
 845              		@ link register save eliminated.
 472:FreeRTOS/src/stream_buffer.c **** size_t xSpace;
 846              		.loc 1 472 1 view .LVU242
 473:FreeRTOS/src/stream_buffer.c **** 
 847              		.loc 1 473 1 view .LVU243
 475:FreeRTOS/src/stream_buffer.c **** 
 848              		.loc 1 475 32 view .LVU244
 477:FreeRTOS/src/stream_buffer.c **** 	xSpace -= pxStreamBuffer->xHead;
 849              		.loc 1 477 2 view .LVU245
 477:FreeRTOS/src/stream_buffer.c **** 	xSpace -= pxStreamBuffer->xHead;
 850              		.loc 1 477 25 is_stmt 0 view .LVU246
 851 0000 8268     		ldr	r2, [r0, #8]
 477:FreeRTOS/src/stream_buffer.c **** 	xSpace -= pxStreamBuffer->xHead;
 852              		.loc 1 477 51 view .LVU247
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 41


 853 0002 0368     		ldr	r3, [r0]
 477:FreeRTOS/src/stream_buffer.c **** 	xSpace -= pxStreamBuffer->xHead;
 854              		.loc 1 477 9 view .LVU248
 855 0004 1344     		add	r3, r3, r2
 856              	.LVL90:
 478:FreeRTOS/src/stream_buffer.c **** 	xSpace -= ( size_t ) 1;
 857              		.loc 1 478 2 is_stmt 1 view .LVU249
 478:FreeRTOS/src/stream_buffer.c **** 	xSpace -= ( size_t ) 1;
 858              		.loc 1 478 26 is_stmt 0 view .LVU250
 859 0006 4068     		ldr	r0, [r0, #4]
 860              	.LVL91:
 478:FreeRTOS/src/stream_buffer.c **** 	xSpace -= ( size_t ) 1;
 861              		.loc 1 478 9 view .LVU251
 862 0008 181A     		subs	r0, r3, r0
 863              	.LVL92:
 479:FreeRTOS/src/stream_buffer.c **** 
 864              		.loc 1 479 2 is_stmt 1 view .LVU252
 479:FreeRTOS/src/stream_buffer.c **** 
 865              		.loc 1 479 9 is_stmt 0 view .LVU253
 866 000a 0138     		subs	r0, r0, #1
 867              	.LVL93:
 481:FreeRTOS/src/stream_buffer.c **** 	{
 868              		.loc 1 481 2 is_stmt 1 view .LVU254
 481:FreeRTOS/src/stream_buffer.c **** 	{
 869              		.loc 1 481 4 is_stmt 0 view .LVU255
 870 000c 8242     		cmp	r2, r0
 871 000e 00D8     		bhi	.L53
 483:FreeRTOS/src/stream_buffer.c **** 	}
 872              		.loc 1 483 3 is_stmt 1 view .LVU256
 483:FreeRTOS/src/stream_buffer.c **** 	}
 873              		.loc 1 483 10 is_stmt 0 view .LVU257
 874 0010 801A     		subs	r0, r0, r2
 875              	.LVL94:
 487:FreeRTOS/src/stream_buffer.c **** 	}
 876              		.loc 1 487 27 is_stmt 1 view .LVU258
 490:FreeRTOS/src/stream_buffer.c **** }
 877              		.loc 1 490 2 view .LVU259
 878              	.L53:
 491:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 879              		.loc 1 491 1 is_stmt 0 view .LVU260
 880 0012 7047     		bx	lr
 881              		.cfi_endproc
 882              	.LFE8:
 884              		.section	.text.xStreamBufferBytesAvailable,"ax",%progbits
 885              		.align	1
 886              		.global	xStreamBufferBytesAvailable
 887              		.syntax unified
 888              		.thumb
 889              		.thumb_func
 890              		.fpu fpv4-sp-d16
 892              	xStreamBufferBytesAvailable:
 893              	.LVL95:
 894              	.LFB9:
 495:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 895              		.loc 1 495 1 is_stmt 1 view -0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 42


 898              		@ frame_needed = 0, uses_anonymous_args = 0
 495:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 899              		.loc 1 495 1 is_stmt 0 view .LVU262
 900 0000 08B5     		push	{r3, lr}
 901              	.LCFI20:
 902              		.cfi_def_cfa_offset 8
 903              		.cfi_offset 3, -8
 904              		.cfi_offset 14, -4
 496:FreeRTOS/src/stream_buffer.c **** size_t xReturn;
 905              		.loc 1 496 1 is_stmt 1 view .LVU263
 906              	.LVL96:
 497:FreeRTOS/src/stream_buffer.c **** 
 907              		.loc 1 497 1 view .LVU264
 499:FreeRTOS/src/stream_buffer.c **** 
 908              		.loc 1 499 32 view .LVU265
 501:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 909              		.loc 1 501 2 view .LVU266
 501:FreeRTOS/src/stream_buffer.c **** 	return xReturn;
 910              		.loc 1 501 12 is_stmt 0 view .LVU267
 911 0002 FFF7FEFF 		bl	prvBytesInBuffer
 912              	.LVL97:
 502:FreeRTOS/src/stream_buffer.c **** }
 913              		.loc 1 502 2 is_stmt 1 view .LVU268
 503:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 914              		.loc 1 503 1 is_stmt 0 view .LVU269
 915 0006 08BD     		pop	{r3, pc}
 916              		.cfi_endproc
 917              	.LFE9:
 919              		.section	.text.xStreamBufferSend,"ax",%progbits
 920              		.align	1
 921              		.global	xStreamBufferSend
 922              		.syntax unified
 923              		.thumb
 924              		.thumb_func
 925              		.fpu fpv4-sp-d16
 927              	xStreamBufferSend:
 928              	.LVL98:
 929              	.LFB10:
 510:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 930              		.loc 1 510 1 is_stmt 1 view -0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 16
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 510:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 934              		.loc 1 510 1 is_stmt 0 view .LVU271
 935 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 936              	.LCFI21:
 937              		.cfi_def_cfa_offset 24
 938              		.cfi_offset 4, -24
 939              		.cfi_offset 5, -20
 940              		.cfi_offset 6, -16
 941              		.cfi_offset 7, -12
 942              		.cfi_offset 8, -8
 943              		.cfi_offset 14, -4
 944 0004 86B0     		sub	sp, sp, #24
 945              	.LCFI22:
 946              		.cfi_def_cfa_offset 48
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 43


 947 0006 0446     		mov	r4, r0
 948 0008 8846     		mov	r8, r1
 949 000a 1746     		mov	r7, r2
 950 000c 0393     		str	r3, [sp, #12]
 511:FreeRTOS/src/stream_buffer.c **** size_t xReturn, xSpace = 0;
 951              		.loc 1 511 1 is_stmt 1 view .LVU272
 952              	.LVL99:
 512:FreeRTOS/src/stream_buffer.c **** size_t xRequiredSpace = xDataLengthBytes;
 953              		.loc 1 512 1 view .LVU273
 513:FreeRTOS/src/stream_buffer.c **** TimeOut_t xTimeOut;
 954              		.loc 1 513 1 view .LVU274
 514:FreeRTOS/src/stream_buffer.c **** 
 955              		.loc 1 514 1 view .LVU275
 516:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 956              		.loc 1 516 26 view .LVU276
 517:FreeRTOS/src/stream_buffer.c **** 
 957              		.loc 1 517 32 view .LVU277
 523:FreeRTOS/src/stream_buffer.c **** 	{
 958              		.loc 1 523 2 view .LVU278
 523:FreeRTOS/src/stream_buffer.c **** 	{
 959              		.loc 1 523 22 is_stmt 0 view .LVU279
 960 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 961              	.LVL100:
 523:FreeRTOS/src/stream_buffer.c **** 	{
 962              		.loc 1 523 4 view .LVU280
 963 0010 13F0010F 		tst	r3, #1
 964 0014 24D0     		beq	.L66
 525:FreeRTOS/src/stream_buffer.c **** 
 965              		.loc 1 525 3 is_stmt 1 view .LVU281
 525:FreeRTOS/src/stream_buffer.c **** 
 966              		.loc 1 525 18 is_stmt 0 view .LVU282
 967 0016 161D     		adds	r6, r2, #4
 968              	.LVL101:
 528:FreeRTOS/src/stream_buffer.c **** 	}
 969              		.loc 1 528 52 is_stmt 1 view .LVU283
 970              	.L58:
 532:FreeRTOS/src/stream_buffer.c **** 	}
 971              		.loc 1 532 27 view .LVU284
 535:FreeRTOS/src/stream_buffer.c **** 	{
 972              		.loc 1 535 2 view .LVU285
 535:FreeRTOS/src/stream_buffer.c **** 	{
 973              		.loc 1 535 19 is_stmt 0 view .LVU286
 974 0018 039B     		ldr	r3, [sp, #12]
 535:FreeRTOS/src/stream_buffer.c **** 	{
 975              		.loc 1 535 4 view .LVU287
 976 001a 33B3     		cbz	r3, .L59
 537:FreeRTOS/src/stream_buffer.c **** 
 977              		.loc 1 537 3 is_stmt 1 view .LVU288
 978 001c 04A8     		add	r0, sp, #16
 979              	.LVL102:
 537:FreeRTOS/src/stream_buffer.c **** 
 980              		.loc 1 537 3 is_stmt 0 view .LVU289
 981 001e FFF7FEFF 		bl	vTaskSetTimeOutState
 982              	.LVL103:
 983              	.L61:
 539:FreeRTOS/src/stream_buffer.c **** 		{
 984              		.loc 1 539 3 is_stmt 1 view .LVU290
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 44


 543:FreeRTOS/src/stream_buffer.c **** 			{
 985              		.loc 1 543 4 view .LVU291
 986 0022 FFF7FEFF 		bl	vPortEnterCritical
 987              	.LVL104:
 545:FreeRTOS/src/stream_buffer.c **** 
 988              		.loc 1 545 5 view .LVU292
 545:FreeRTOS/src/stream_buffer.c **** 
 989              		.loc 1 545 14 is_stmt 0 view .LVU293
 990 0026 2046     		mov	r0, r4
 991 0028 FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 992              	.LVL105:
 993 002c 0546     		mov	r5, r0
 994              	.LVL106:
 547:FreeRTOS/src/stream_buffer.c **** 				{
 995              		.loc 1 547 5 is_stmt 1 view .LVU294
 547:FreeRTOS/src/stream_buffer.c **** 				{
 996              		.loc 1 547 7 is_stmt 0 view .LVU295
 997 002e 8642     		cmp	r6, r0
 998 0030 18D9     		bls	.L60
 550:FreeRTOS/src/stream_buffer.c **** 
 999              		.loc 1 550 6 is_stmt 1 view .LVU296
 550:FreeRTOS/src/stream_buffer.c **** 
 1000              		.loc 1 550 15 is_stmt 0 view .LVU297
 1001 0032 0020     		movs	r0, #0
 1002              	.LVL107:
 550:FreeRTOS/src/stream_buffer.c **** 
 1003              		.loc 1 550 15 view .LVU298
 1004 0034 FFF7FEFF 		bl	xTaskNotifyStateClear
 1005              	.LVL108:
 553:FreeRTOS/src/stream_buffer.c **** 					pxStreamBuffer->xTaskWaitingToSend = xTaskGetCurrentTaskHandle();
 1006              		.loc 1 553 64 is_stmt 1 view .LVU299
 554:FreeRTOS/src/stream_buffer.c **** 				}
 1007              		.loc 1 554 6 view .LVU300
 554:FreeRTOS/src/stream_buffer.c **** 				}
 1008              		.loc 1 554 43 is_stmt 0 view .LVU301
 1009 0038 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1010              	.LVL109:
 554:FreeRTOS/src/stream_buffer.c **** 				}
 1011              		.loc 1 554 41 view .LVU302
 1012 003c 6061     		str	r0, [r4, #20]
 562:FreeRTOS/src/stream_buffer.c **** 
 1013              		.loc 1 562 4 is_stmt 1 view .LVU303
 1014 003e FFF7FEFF 		bl	vPortExitCritical
 1015              	.LVL110:
 564:FreeRTOS/src/stream_buffer.c **** 			( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 1016              		.loc 1 564 56 view .LVU304
 565:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToSend = NULL;
 1017              		.loc 1 565 4 view .LVU305
 565:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToSend = NULL;
 1018              		.loc 1 565 13 is_stmt 0 view .LVU306
 1019 0042 039B     		ldr	r3, [sp, #12]
 1020 0044 0022     		movs	r2, #0
 1021 0046 1146     		mov	r1, r2
 1022 0048 1046     		mov	r0, r2
 1023 004a FFF7FEFF 		bl	xTaskNotifyWait
 1024              	.LVL111:
 566:FreeRTOS/src/stream_buffer.c **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 45


 1025              		.loc 1 566 4 is_stmt 1 view .LVU307
 566:FreeRTOS/src/stream_buffer.c **** 
 1026              		.loc 1 566 39 is_stmt 0 view .LVU308
 1027 004e 0023     		movs	r3, #0
 1028 0050 6361     		str	r3, [r4, #20]
 568:FreeRTOS/src/stream_buffer.c **** 	}
 1029              		.loc 1 568 12 view .LVU309
 1030 0052 03A9     		add	r1, sp, #12
 1031 0054 04A8     		add	r0, sp, #16
 1032 0056 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1033              	.LVL112:
 568:FreeRTOS/src/stream_buffer.c **** 	}
 1034              		.loc 1 568 3 view .LVU310
 1035 005a 0028     		cmp	r0, #0
 1036 005c E1D0     		beq	.L61
 1037 005e 03E0     		b	.L62
 1038              	.LVL113:
 1039              	.L66:
 513:FreeRTOS/src/stream_buffer.c **** TimeOut_t xTimeOut;
 1040              		.loc 1 513 8 view .LVU311
 1041 0060 1646     		mov	r6, r2
 1042 0062 D9E7     		b	.L58
 1043              	.LVL114:
 1044              	.L60:
 558:FreeRTOS/src/stream_buffer.c **** 					break;
 1045              		.loc 1 558 6 is_stmt 1 view .LVU312
 1046 0064 FFF7FEFF 		bl	vPortExitCritical
 1047              	.LVL115:
 559:FreeRTOS/src/stream_buffer.c **** 				}
 1048              		.loc 1 559 6 view .LVU313
 1049              	.L62:
 572:FreeRTOS/src/stream_buffer.c **** 	}
 1050              		.loc 1 572 27 view .LVU314
 575:FreeRTOS/src/stream_buffer.c **** 	{
 1051              		.loc 1 575 2 view .LVU315
 575:FreeRTOS/src/stream_buffer.c **** 	{
 1052              		.loc 1 575 4 is_stmt 0 view .LVU316
 1053 0068 1DB9     		cbnz	r5, .L63
 1054              	.LVL116:
 1055              	.L59:
 577:FreeRTOS/src/stream_buffer.c **** 	}
 1056              		.loc 1 577 3 is_stmt 1 view .LVU317
 577:FreeRTOS/src/stream_buffer.c **** 	}
 1057              		.loc 1 577 12 is_stmt 0 view .LVU318
 1058 006a 2046     		mov	r0, r4
 1059 006c FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1060              	.LVL117:
 1061 0070 0546     		mov	r5, r0
 1062              	.LVL118:
 1063              	.L63:
 581:FreeRTOS/src/stream_buffer.c **** 	}
 1064              		.loc 1 581 27 is_stmt 1 view .LVU319
 584:FreeRTOS/src/stream_buffer.c **** 
 1065              		.loc 1 584 2 view .LVU320
 584:FreeRTOS/src/stream_buffer.c **** 
 1066              		.loc 1 584 12 is_stmt 0 view .LVU321
 1067 0072 0096     		str	r6, [sp]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 46


 1068 0074 2B46     		mov	r3, r5
 1069 0076 3A46     		mov	r2, r7
 1070 0078 4146     		mov	r1, r8
 1071 007a 2046     		mov	r0, r4
 1072 007c FFF7FEFF 		bl	prvWriteMessageToBuffer
 1073              	.LVL119:
 586:FreeRTOS/src/stream_buffer.c **** 	{
 1074              		.loc 1 586 2 is_stmt 1 view .LVU322
 586:FreeRTOS/src/stream_buffer.c **** 	{
 1075              		.loc 1 586 4 is_stmt 0 view .LVU323
 1076 0080 0546     		mov	r5, r0
 1077              	.LVL120:
 586:FreeRTOS/src/stream_buffer.c **** 	{
 1078              		.loc 1 586 4 view .LVU324
 1079 0082 18B9     		cbnz	r0, .L68
 1080              	.LVL121:
 1081              	.L57:
 607:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1082              		.loc 1 607 1 view .LVU325
 1083 0084 2846     		mov	r0, r5
 1084 0086 06B0     		add	sp, sp, #24
 1085              	.LCFI23:
 1086              		.cfi_remember_state
 1087              		.cfi_def_cfa_offset 24
 1088              		@ sp needed
 1089 0088 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1090              	.LVL122:
 1091              	.L68:
 1092              	.LCFI24:
 1093              		.cfi_restore_state
 588:FreeRTOS/src/stream_buffer.c **** 
 1094              		.loc 1 588 52 is_stmt 1 view .LVU326
 591:FreeRTOS/src/stream_buffer.c **** 		{
 1095              		.loc 1 591 3 view .LVU327
 591:FreeRTOS/src/stream_buffer.c **** 		{
 1096              		.loc 1 591 7 is_stmt 0 view .LVU328
 1097 008c 2046     		mov	r0, r4
 1098              	.LVL123:
 591:FreeRTOS/src/stream_buffer.c **** 		{
 1099              		.loc 1 591 7 view .LVU329
 1100 008e FFF7FEFF 		bl	prvBytesInBuffer
 1101              	.LVL124:
 591:FreeRTOS/src/stream_buffer.c **** 		{
 1102              		.loc 1 591 59 view .LVU330
 1103 0092 E368     		ldr	r3, [r4, #12]
 591:FreeRTOS/src/stream_buffer.c **** 		{
 1104              		.loc 1 591 5 view .LVU331
 1105 0094 9842     		cmp	r0, r3
 1106 0096 F5D3     		bcc	.L57
 593:FreeRTOS/src/stream_buffer.c **** 		}
 1107              		.loc 1 593 4 is_stmt 1 view .LVU332
 1108 0098 FFF7FEFF 		bl	vTaskSuspendAll
 1109              	.LVL125:
 593:FreeRTOS/src/stream_buffer.c **** 		}
 1110              		.loc 1 593 4 view .LVU333
 1111 009c 2369     		ldr	r3, [r4, #16]
 1112 009e 3BB1     		cbz	r3, .L65
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 47


 593:FreeRTOS/src/stream_buffer.c **** 		}
 1113              		.loc 1 593 4 discriminator 1 view .LVU334
 1114 00a0 2069     		ldr	r0, [r4, #16]
 1115 00a2 0023     		movs	r3, #0
 1116 00a4 1A46     		mov	r2, r3
 1117 00a6 1946     		mov	r1, r3
 1118 00a8 FFF7FEFF 		bl	xTaskGenericNotify
 1119              	.LVL126:
 593:FreeRTOS/src/stream_buffer.c **** 		}
 1120              		.loc 1 593 4 discriminator 1 view .LVU335
 1121 00ac 0023     		movs	r3, #0
 1122 00ae 2361     		str	r3, [r4, #16]
 1123              	.L65:
 593:FreeRTOS/src/stream_buffer.c **** 		}
 1124              		.loc 1 593 4 discriminator 3 view .LVU336
 1125 00b0 FFF7FEFF 		bl	xTaskResumeAll
 1126              	.LVL127:
 593:FreeRTOS/src/stream_buffer.c **** 		}
 1127              		.loc 1 593 38 discriminator 3 view .LVU337
 602:FreeRTOS/src/stream_buffer.c **** 		traceSTREAM_BUFFER_SEND_FAILED( xStreamBuffer );
 1128              		.loc 1 602 27 discriminator 3 view .LVU338
 603:FreeRTOS/src/stream_buffer.c **** 	}
 1129              		.loc 1 603 50 discriminator 3 view .LVU339
 606:FreeRTOS/src/stream_buffer.c **** }
 1130              		.loc 1 606 2 discriminator 3 view .LVU340
 606:FreeRTOS/src/stream_buffer.c **** }
 1131              		.loc 1 606 9 is_stmt 0 discriminator 3 view .LVU341
 1132 00b4 E6E7     		b	.L57
 1133              		.cfi_endproc
 1134              	.LFE10:
 1136              		.section	.text.xStreamBufferSendFromISR,"ax",%progbits
 1137              		.align	1
 1138              		.global	xStreamBufferSendFromISR
 1139              		.syntax unified
 1140              		.thumb
 1141              		.thumb_func
 1142              		.fpu fpv4-sp-d16
 1144              	xStreamBufferSendFromISR:
 1145              	.LVL128:
 1146              	.LFB11:
 614:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1147              		.loc 1 614 1 is_stmt 1 view -0
 1148              		.cfi_startproc
 1149              		@ args = 0, pretend = 0, frame = 0
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
 614:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1151              		.loc 1 614 1 is_stmt 0 view .LVU343
 1152 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1153              	.LCFI25:
 1154              		.cfi_def_cfa_offset 24
 1155              		.cfi_offset 4, -24
 1156              		.cfi_offset 5, -20
 1157              		.cfi_offset 6, -16
 1158              		.cfi_offset 7, -12
 1159              		.cfi_offset 8, -8
 1160              		.cfi_offset 14, -4
 1161 0004 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 48


 1162              	.LCFI26:
 1163              		.cfi_def_cfa_offset 32
 1164 0006 0446     		mov	r4, r0
 1165 0008 0E46     		mov	r6, r1
 1166 000a 1546     		mov	r5, r2
 1167 000c 9846     		mov	r8, r3
 615:FreeRTOS/src/stream_buffer.c **** size_t xReturn, xSpace;
 1168              		.loc 1 615 1 is_stmt 1 view .LVU344
 1169              	.LVL129:
 616:FreeRTOS/src/stream_buffer.c **** size_t xRequiredSpace = xDataLengthBytes;
 1170              		.loc 1 616 1 view .LVU345
 617:FreeRTOS/src/stream_buffer.c **** 
 1171              		.loc 1 617 1 view .LVU346
 619:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1172              		.loc 1 619 26 view .LVU347
 620:FreeRTOS/src/stream_buffer.c **** 
 1173              		.loc 1 620 32 view .LVU348
 626:FreeRTOS/src/stream_buffer.c **** 	{
 1174              		.loc 1 626 2 view .LVU349
 626:FreeRTOS/src/stream_buffer.c **** 	{
 1175              		.loc 1 626 22 is_stmt 0 view .LVU350
 1176 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1177              	.LVL130:
 626:FreeRTOS/src/stream_buffer.c **** 	{
 1178              		.loc 1 626 4 view .LVU351
 1179 0010 13F0010F 		tst	r3, #1
 1180 0014 01D0     		beq	.L73
 628:FreeRTOS/src/stream_buffer.c **** 	}
 1181              		.loc 1 628 3 is_stmt 1 view .LVU352
 628:FreeRTOS/src/stream_buffer.c **** 	}
 1182              		.loc 1 628 18 is_stmt 0 view .LVU353
 1183 0016 171D     		adds	r7, r2, #4
 1184              	.LVL131:
 628:FreeRTOS/src/stream_buffer.c **** 	}
 1185              		.loc 1 628 18 view .LVU354
 1186 0018 00E0     		b	.L70
 1187              	.LVL132:
 1188              	.L73:
 617:FreeRTOS/src/stream_buffer.c **** 
 1189              		.loc 1 617 8 view .LVU355
 1190 001a 1746     		mov	r7, r2
 1191              	.LVL133:
 1192              	.L70:
 632:FreeRTOS/src/stream_buffer.c **** 	}
 1193              		.loc 1 632 27 is_stmt 1 view .LVU356
 635:FreeRTOS/src/stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 1194              		.loc 1 635 2 view .LVU357
 635:FreeRTOS/src/stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 1195              		.loc 1 635 11 is_stmt 0 view .LVU358
 1196 001c 2046     		mov	r0, r4
 1197              	.LVL134:
 635:FreeRTOS/src/stream_buffer.c **** 	xReturn = prvWriteMessageToBuffer( pxStreamBuffer, pvTxData, xDataLengthBytes, xSpace, xRequiredSp
 1198              		.loc 1 635 11 view .LVU359
 1199 001e FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1200              	.LVL135:
 636:FreeRTOS/src/stream_buffer.c **** 
 1201              		.loc 1 636 2 is_stmt 1 view .LVU360
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 49


 636:FreeRTOS/src/stream_buffer.c **** 
 1202              		.loc 1 636 12 is_stmt 0 view .LVU361
 1203 0022 0097     		str	r7, [sp]
 1204 0024 0346     		mov	r3, r0
 1205 0026 2A46     		mov	r2, r5
 1206 0028 3146     		mov	r1, r6
 1207 002a 2046     		mov	r0, r4
 1208              	.LVL136:
 636:FreeRTOS/src/stream_buffer.c **** 
 1209              		.loc 1 636 12 view .LVU362
 1210 002c FFF7FEFF 		bl	prvWriteMessageToBuffer
 1211              	.LVL137:
 638:FreeRTOS/src/stream_buffer.c **** 	{
 1212              		.loc 1 638 2 is_stmt 1 view .LVU363
 638:FreeRTOS/src/stream_buffer.c **** 	{
 1213              		.loc 1 638 4 is_stmt 0 view .LVU364
 1214 0030 0546     		mov	r5, r0
 1215              	.LVL138:
 638:FreeRTOS/src/stream_buffer.c **** 	{
 1216              		.loc 1 638 4 view .LVU365
 1217 0032 18B9     		cbnz	r0, .L75
 1218              	.LVL139:
 1219              	.L69:
 658:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1220              		.loc 1 658 1 view .LVU366
 1221 0034 2846     		mov	r0, r5
 1222 0036 02B0     		add	sp, sp, #8
 1223              	.LCFI27:
 1224              		.cfi_remember_state
 1225              		.cfi_def_cfa_offset 24
 1226              		@ sp needed
 1227 0038 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1228              	.LVL140:
 1229              	.L75:
 1230              	.LCFI28:
 1231              		.cfi_restore_state
 641:FreeRTOS/src/stream_buffer.c **** 		{
 1232              		.loc 1 641 3 is_stmt 1 view .LVU367
 641:FreeRTOS/src/stream_buffer.c **** 		{
 1233              		.loc 1 641 7 is_stmt 0 view .LVU368
 1234 003c 2046     		mov	r0, r4
 1235              	.LVL141:
 641:FreeRTOS/src/stream_buffer.c **** 		{
 1236              		.loc 1 641 7 view .LVU369
 1237 003e FFF7FEFF 		bl	prvBytesInBuffer
 1238              	.LVL142:
 641:FreeRTOS/src/stream_buffer.c **** 		{
 1239              		.loc 1 641 59 view .LVU370
 1240 0042 E368     		ldr	r3, [r4, #12]
 641:FreeRTOS/src/stream_buffer.c **** 		{
 1241              		.loc 1 641 5 view .LVU371
 1242 0044 9842     		cmp	r0, r3
 1243 0046 F5D3     		bcc	.L69
 1244              	.LBB20:
 643:FreeRTOS/src/stream_buffer.c **** 		}
 1245              		.loc 1 643 4 is_stmt 1 view .LVU372
 643:FreeRTOS/src/stream_buffer.c **** 		}
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 50


 1246              		.loc 1 643 4 view .LVU373
 1247              	.LBB21:
 1248              	.LBI21:
 1249              		.file 2 "FreeRTOS/inc/portmacro.h"
   1:FreeRTOS/inc/portmacro.h **** /*
   2:FreeRTOS/inc/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:FreeRTOS/inc/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:FreeRTOS/inc/portmacro.h ****  *
   5:FreeRTOS/inc/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:FreeRTOS/inc/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:FreeRTOS/inc/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:FreeRTOS/inc/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:FreeRTOS/inc/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:FreeRTOS/inc/portmacro.h ****  * subject to the following conditions:
  11:FreeRTOS/inc/portmacro.h ****  *
  12:FreeRTOS/inc/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:FreeRTOS/inc/portmacro.h ****  * copies or substantial portions of the Software.
  14:FreeRTOS/inc/portmacro.h ****  *
  15:FreeRTOS/inc/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:FreeRTOS/inc/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:FreeRTOS/inc/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:FreeRTOS/inc/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:FreeRTOS/inc/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:FreeRTOS/inc/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:FreeRTOS/inc/portmacro.h ****  *
  22:FreeRTOS/inc/portmacro.h ****  * http://www.FreeRTOS.org
  23:FreeRTOS/inc/portmacro.h ****  * http://aws.amazon.com/freertos
  24:FreeRTOS/inc/portmacro.h ****  *
  25:FreeRTOS/inc/portmacro.h ****  * 1 tab == 4 spaces!
  26:FreeRTOS/inc/portmacro.h ****  */
  27:FreeRTOS/inc/portmacro.h **** 
  28:FreeRTOS/inc/portmacro.h **** 
  29:FreeRTOS/inc/portmacro.h **** #ifndef PORTMACRO_H
  30:FreeRTOS/inc/portmacro.h **** #define PORTMACRO_H
  31:FreeRTOS/inc/portmacro.h **** 
  32:FreeRTOS/inc/portmacro.h **** #ifdef __cplusplus
  33:FreeRTOS/inc/portmacro.h **** extern "C" {
  34:FreeRTOS/inc/portmacro.h **** #endif
  35:FreeRTOS/inc/portmacro.h **** 
  36:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------
  37:FreeRTOS/inc/portmacro.h ****  * Port specific definitions.
  38:FreeRTOS/inc/portmacro.h ****  *
  39:FreeRTOS/inc/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:FreeRTOS/inc/portmacro.h ****  * given hardware and compiler.
  41:FreeRTOS/inc/portmacro.h ****  *
  42:FreeRTOS/inc/portmacro.h ****  * These settings should not be altered.
  43:FreeRTOS/inc/portmacro.h ****  *-----------------------------------------------------------
  44:FreeRTOS/inc/portmacro.h ****  */
  45:FreeRTOS/inc/portmacro.h **** 
  46:FreeRTOS/inc/portmacro.h **** /* Type definitions. */
  47:FreeRTOS/inc/portmacro.h **** #define portCHAR		char
  48:FreeRTOS/inc/portmacro.h **** #define portFLOAT		float
  49:FreeRTOS/inc/portmacro.h **** #define portDOUBLE		double
  50:FreeRTOS/inc/portmacro.h **** #define portLONG		long
  51:FreeRTOS/inc/portmacro.h **** #define portSHORT		short
  52:FreeRTOS/inc/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:FreeRTOS/inc/portmacro.h **** #define portBASE_TYPE	long
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 51


  54:FreeRTOS/inc/portmacro.h **** 
  55:FreeRTOS/inc/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:FreeRTOS/inc/portmacro.h **** typedef long BaseType_t;
  57:FreeRTOS/inc/portmacro.h **** typedef unsigned long UBaseType_t;
  58:FreeRTOS/inc/portmacro.h **** 
  59:FreeRTOS/inc/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:FreeRTOS/inc/portmacro.h **** 	typedef uint16_t TickType_t;
  61:FreeRTOS/inc/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:FreeRTOS/inc/portmacro.h **** #else
  63:FreeRTOS/inc/portmacro.h **** 	typedef uint32_t TickType_t;
  64:FreeRTOS/inc/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:FreeRTOS/inc/portmacro.h **** 
  66:FreeRTOS/inc/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:FreeRTOS/inc/portmacro.h **** 	not need to be guarded with a critical section. */
  68:FreeRTOS/inc/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:FreeRTOS/inc/portmacro.h **** #endif
  70:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
  71:FreeRTOS/inc/portmacro.h **** 
  72:FreeRTOS/inc/portmacro.h **** /* Architecture specifics. */
  73:FreeRTOS/inc/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:FreeRTOS/inc/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:FreeRTOS/inc/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
  77:FreeRTOS/inc/portmacro.h **** 
  78:FreeRTOS/inc/portmacro.h **** /* Scheduler utilities. */
  79:FreeRTOS/inc/portmacro.h **** #define portYIELD() 															\
  80:FreeRTOS/inc/portmacro.h **** {																				\
  81:FreeRTOS/inc/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:FreeRTOS/inc/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:FreeRTOS/inc/portmacro.h **** 																				\
  84:FreeRTOS/inc/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:FreeRTOS/inc/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:FreeRTOS/inc/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:FreeRTOS/inc/portmacro.h **** 	__asm volatile( "isb" );													\
  88:FreeRTOS/inc/portmacro.h **** }
  89:FreeRTOS/inc/portmacro.h **** 
  90:FreeRTOS/inc/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:FreeRTOS/inc/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:FreeRTOS/inc/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:FreeRTOS/inc/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
  95:FreeRTOS/inc/portmacro.h **** 
  96:FreeRTOS/inc/portmacro.h **** /* Critical section management. */
  97:FreeRTOS/inc/portmacro.h **** extern void vPortEnterCritical( void );
  98:FreeRTOS/inc/portmacro.h **** extern void vPortExitCritical( void );
  99:FreeRTOS/inc/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:FreeRTOS/inc/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:FreeRTOS/inc/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:FreeRTOS/inc/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:FreeRTOS/inc/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:FreeRTOS/inc/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:FreeRTOS/inc/portmacro.h **** 
 106:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 107:FreeRTOS/inc/portmacro.h **** 
 108:FreeRTOS/inc/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:FreeRTOS/inc/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:FreeRTOS/inc/portmacro.h **** (which build with all the ports) will build. */
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 52


 111:FreeRTOS/inc/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:FreeRTOS/inc/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 114:FreeRTOS/inc/portmacro.h **** 
 115:FreeRTOS/inc/portmacro.h **** /* Tickless idle/low power functionality. */
 116:FreeRTOS/inc/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:FreeRTOS/inc/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:FreeRTOS/inc/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:FreeRTOS/inc/portmacro.h **** #endif
 120:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 121:FreeRTOS/inc/portmacro.h **** 
 122:FreeRTOS/inc/portmacro.h **** /* Architecture specific optimisations. */
 123:FreeRTOS/inc/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:FreeRTOS/inc/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:FreeRTOS/inc/portmacro.h **** #endif
 126:FreeRTOS/inc/portmacro.h **** 
 127:FreeRTOS/inc/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:FreeRTOS/inc/portmacro.h **** 
 129:FreeRTOS/inc/portmacro.h **** 	/* Generic helper function. */
 130:FreeRTOS/inc/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:FreeRTOS/inc/portmacro.h **** 	{
 132:FreeRTOS/inc/portmacro.h **** 	uint8_t ucReturn;
 133:FreeRTOS/inc/portmacro.h **** 
 134:FreeRTOS/inc/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:FreeRTOS/inc/portmacro.h **** 		return ucReturn;
 136:FreeRTOS/inc/portmacro.h **** 	}
 137:FreeRTOS/inc/portmacro.h **** 
 138:FreeRTOS/inc/portmacro.h **** 	/* Check the configuration. */
 139:FreeRTOS/inc/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:FreeRTOS/inc/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:FreeRTOS/inc/portmacro.h **** 	#endif
 142:FreeRTOS/inc/portmacro.h **** 
 143:FreeRTOS/inc/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:FreeRTOS/inc/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:FreeRTOS/inc/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:FreeRTOS/inc/portmacro.h **** 
 147:FreeRTOS/inc/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:FreeRTOS/inc/portmacro.h **** 
 149:FreeRTOS/inc/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:FreeRTOS/inc/portmacro.h **** 
 151:FreeRTOS/inc/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:FreeRTOS/inc/portmacro.h **** 
 153:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 154:FreeRTOS/inc/portmacro.h **** 
 155:FreeRTOS/inc/portmacro.h **** #ifdef configASSERT
 156:FreeRTOS/inc/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:FreeRTOS/inc/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:FreeRTOS/inc/portmacro.h **** #endif
 159:FreeRTOS/inc/portmacro.h **** 
 160:FreeRTOS/inc/portmacro.h **** /* portNOP() is not required by this port. */
 161:FreeRTOS/inc/portmacro.h **** #define portNOP()
 162:FreeRTOS/inc/portmacro.h **** 
 163:FreeRTOS/inc/portmacro.h **** #define portINLINE	__inline
 164:FreeRTOS/inc/portmacro.h **** 
 165:FreeRTOS/inc/portmacro.h **** #ifndef portFORCE_INLINE
 166:FreeRTOS/inc/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:FreeRTOS/inc/portmacro.h **** #endif
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 53


 168:FreeRTOS/inc/portmacro.h **** 
 169:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:FreeRTOS/inc/portmacro.h **** {
 171:FreeRTOS/inc/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:FreeRTOS/inc/portmacro.h **** BaseType_t xReturn;
 173:FreeRTOS/inc/portmacro.h **** 
 174:FreeRTOS/inc/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:FreeRTOS/inc/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:FreeRTOS/inc/portmacro.h **** 
 177:FreeRTOS/inc/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:FreeRTOS/inc/portmacro.h **** 	{
 179:FreeRTOS/inc/portmacro.h **** 		xReturn = pdFALSE;
 180:FreeRTOS/inc/portmacro.h **** 	}
 181:FreeRTOS/inc/portmacro.h **** 	else
 182:FreeRTOS/inc/portmacro.h **** 	{
 183:FreeRTOS/inc/portmacro.h **** 		xReturn = pdTRUE;
 184:FreeRTOS/inc/portmacro.h **** 	}
 185:FreeRTOS/inc/portmacro.h **** 
 186:FreeRTOS/inc/portmacro.h **** 	return xReturn;
 187:FreeRTOS/inc/portmacro.h **** }
 188:FreeRTOS/inc/portmacro.h **** 
 189:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 190:FreeRTOS/inc/portmacro.h **** 
 191:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:FreeRTOS/inc/portmacro.h **** {
 193:FreeRTOS/inc/portmacro.h **** uint32_t ulNewBASEPRI;
 194:FreeRTOS/inc/portmacro.h **** 
 195:FreeRTOS/inc/portmacro.h **** 	__asm volatile
 196:FreeRTOS/inc/portmacro.h **** 	(
 197:FreeRTOS/inc/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:FreeRTOS/inc/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:FreeRTOS/inc/portmacro.h **** 		"	isb														\n" \
 200:FreeRTOS/inc/portmacro.h **** 		"	dsb														\n" \
 201:FreeRTOS/inc/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:FreeRTOS/inc/portmacro.h **** 	);
 203:FreeRTOS/inc/portmacro.h **** }
 204:FreeRTOS/inc/portmacro.h **** 
 205:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 206:FreeRTOS/inc/portmacro.h **** 
 207:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1250              		.loc 2 207 34 view .LVU374
 1251              	.LBB22:
 208:FreeRTOS/inc/portmacro.h **** {
 209:FreeRTOS/inc/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1252              		.loc 2 209 1 view .LVU375
 210:FreeRTOS/inc/portmacro.h **** 
 211:FreeRTOS/inc/portmacro.h **** 	__asm volatile
 1253              		.loc 2 211 2 view .LVU376
 1254              		.syntax unified
 1255              	@ 211 "FreeRTOS/inc/portmacro.h" 1
 1256 0048 EFF31186 			mrs r6, basepri											
 1257 004c 4FF0BF03 		mov r3, #191												
 1258 0050 83F31188 		msr basepri, r3											
 1259 0054 BFF36F8F 		isb														
 1260 0058 BFF34F8F 		dsb														
 1261              	
 1262              	@ 0 "" 2
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 54


 1263              	.LVL143:
 212:FreeRTOS/inc/portmacro.h **** 	(
 213:FreeRTOS/inc/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:FreeRTOS/inc/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:FreeRTOS/inc/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:FreeRTOS/inc/portmacro.h **** 		"	isb														\n" \
 217:FreeRTOS/inc/portmacro.h **** 		"	dsb														\n" \
 218:FreeRTOS/inc/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:FreeRTOS/inc/portmacro.h **** 	);
 220:FreeRTOS/inc/portmacro.h **** 
 221:FreeRTOS/inc/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:FreeRTOS/inc/portmacro.h **** 	warnings. */
 223:FreeRTOS/inc/portmacro.h **** 	return ulOriginalBASEPRI;
 1264              		.loc 2 223 2 view .LVU377
 1265              		.loc 2 223 2 is_stmt 0 view .LVU378
 1266              		.thumb
 1267              		.syntax unified
 1268              	.LBE22:
 1269              	.LBE21:
 643:FreeRTOS/src/stream_buffer.c **** 		}
 1270              		.loc 1 643 4 is_stmt 1 view .LVU379
 1271 005c 2369     		ldr	r3, [r4, #16]
 1272 005e 4BB1     		cbz	r3, .L72
 643:FreeRTOS/src/stream_buffer.c **** 		}
 1273              		.loc 1 643 4 discriminator 1 view .LVU380
 1274 0060 2069     		ldr	r0, [r4, #16]
 1275 0062 CDF80080 		str	r8, [sp]
 1276 0066 0023     		movs	r3, #0
 1277 0068 1A46     		mov	r2, r3
 1278 006a 1946     		mov	r1, r3
 1279 006c FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 1280              	.LVL144:
 643:FreeRTOS/src/stream_buffer.c **** 		}
 1281              		.loc 1 643 4 discriminator 1 view .LVU381
 1282 0070 0023     		movs	r3, #0
 1283 0072 2361     		str	r3, [r4, #16]
 1284              	.L72:
 643:FreeRTOS/src/stream_buffer.c **** 		}
 1285              		.loc 1 643 4 discriminator 3 view .LVU382
 1286              	.LVL145:
 1287              	.LBB23:
 1288              	.LBI23:
 224:FreeRTOS/inc/portmacro.h **** }
 225:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 226:FreeRTOS/inc/portmacro.h **** 
 227:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1289              		.loc 2 227 30 discriminator 3 view .LVU383
 1290              	.LBB24:
 228:FreeRTOS/inc/portmacro.h **** {
 229:FreeRTOS/inc/portmacro.h **** 	__asm volatile
 1291              		.loc 2 229 2 discriminator 3 view .LVU384
 1292              		.syntax unified
 1293              	@ 229 "FreeRTOS/inc/portmacro.h" 1
 1294 0074 86F31188 			msr basepri, r6	
 1295              	@ 0 "" 2
 1296              		.thumb
 1297              		.syntax unified
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 55


 1298              	.LBE24:
 1299              	.LBE23:
 1300              	.LBE20:
 652:FreeRTOS/src/stream_buffer.c **** 	}
 1301              		.loc 1 652 27 discriminator 3 view .LVU385
 655:FreeRTOS/src/stream_buffer.c **** 
 1302              		.loc 1 655 60 discriminator 3 view .LVU386
 657:FreeRTOS/src/stream_buffer.c **** }
 1303              		.loc 1 657 2 discriminator 3 view .LVU387
 657:FreeRTOS/src/stream_buffer.c **** }
 1304              		.loc 1 657 9 is_stmt 0 discriminator 3 view .LVU388
 1305 0078 DCE7     		b	.L69
 1306              		.cfi_endproc
 1307              	.LFE11:
 1309              		.section	.text.xStreamBufferReceive,"ax",%progbits
 1310              		.align	1
 1311              		.global	xStreamBufferReceive
 1312              		.syntax unified
 1313              		.thumb
 1314              		.thumb_func
 1315              		.fpu fpv4-sp-d16
 1317              	xStreamBufferReceive:
 1318              	.LVL146:
 1319              	.LFB13:
 717:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1320              		.loc 1 717 1 is_stmt 1 view -0
 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 0
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 717:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1324              		.loc 1 717 1 is_stmt 0 view .LVU390
 1325 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1326              	.LCFI29:
 1327              		.cfi_def_cfa_offset 28
 1328              		.cfi_offset 4, -28
 1329              		.cfi_offset 5, -24
 1330              		.cfi_offset 6, -20
 1331              		.cfi_offset 7, -16
 1332              		.cfi_offset 8, -12
 1333              		.cfi_offset 9, -8
 1334              		.cfi_offset 14, -4
 1335 0004 83B0     		sub	sp, sp, #12
 1336              	.LCFI30:
 1337              		.cfi_def_cfa_offset 40
 1338 0006 0446     		mov	r4, r0
 1339 0008 8846     		mov	r8, r1
 1340 000a 9146     		mov	r9, r2
 1341 000c 1F46     		mov	r7, r3
 718:FreeRTOS/src/stream_buffer.c **** size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 1342              		.loc 1 718 1 is_stmt 1 view .LVU391
 1343              	.LVL147:
 719:FreeRTOS/src/stream_buffer.c **** 
 1344              		.loc 1 719 1 view .LVU392
 721:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1345              		.loc 1 721 26 view .LVU393
 722:FreeRTOS/src/stream_buffer.c **** 
 1346              		.loc 1 722 32 view .LVU394
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 56


 729:FreeRTOS/src/stream_buffer.c **** 	{
 1347              		.loc 1 729 2 view .LVU395
 729:FreeRTOS/src/stream_buffer.c **** 	{
 1348              		.loc 1 729 22 is_stmt 0 view .LVU396
 1349 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1350              	.LVL148:
 729:FreeRTOS/src/stream_buffer.c **** 	{
 1351              		.loc 1 729 4 view .LVU397
 1352 0010 13F0010F 		tst	r3, #1
 1353 0014 1AD0     		beq	.L83
 731:FreeRTOS/src/stream_buffer.c **** 	}
 1354              		.loc 1 731 30 view .LVU398
 1355 0016 0426     		movs	r6, #4
 1356              	.L77:
 1357              	.LVL149:
 738:FreeRTOS/src/stream_buffer.c **** 	{
 1358              		.loc 1 738 2 is_stmt 1 view .LVU399
 738:FreeRTOS/src/stream_buffer.c **** 	{
 1359              		.loc 1 738 4 is_stmt 0 view .LVU400
 1360 0018 0FB3     		cbz	r7, .L78
 742:FreeRTOS/src/stream_buffer.c **** 		{
 1361              		.loc 1 742 3 is_stmt 1 view .LVU401
 1362 001a FFF7FEFF 		bl	vPortEnterCritical
 1363              	.LVL150:
 744:FreeRTOS/src/stream_buffer.c **** 
 1364              		.loc 1 744 4 view .LVU402
 744:FreeRTOS/src/stream_buffer.c **** 
 1365              		.loc 1 744 22 is_stmt 0 view .LVU403
 1366 001e 2046     		mov	r0, r4
 1367 0020 FFF7FEFF 		bl	prvBytesInBuffer
 1368              	.LVL151:
 1369 0024 0546     		mov	r5, r0
 1370              	.LVL152:
 751:FreeRTOS/src/stream_buffer.c **** 			{
 1371              		.loc 1 751 4 is_stmt 1 view .LVU404
 751:FreeRTOS/src/stream_buffer.c **** 			{
 1372              		.loc 1 751 6 is_stmt 0 view .LVU405
 1373 0026 8642     		cmp	r6, r0
 1374 0028 12D2     		bcs	.L86
 1375              	.LVL153:
 1376              	.L79:
 762:FreeRTOS/src/stream_buffer.c **** 			}
 1377              		.loc 1 762 29 is_stmt 1 view .LVU406
 765:FreeRTOS/src/stream_buffer.c **** 
 1378              		.loc 1 765 3 view .LVU407
 1379 002a FFF7FEFF 		bl	vPortExitCritical
 1380              	.LVL154:
 767:FreeRTOS/src/stream_buffer.c **** 		{
 1381              		.loc 1 767 3 view .LVU408
 767:FreeRTOS/src/stream_buffer.c **** 		{
 1382              		.loc 1 767 5 is_stmt 0 view .LVU409
 1383 002e AE42     		cmp	r6, r5
 1384 0030 19D3     		bcc	.L80
 770:FreeRTOS/src/stream_buffer.c **** 			( void ) xTaskNotifyWait( ( uint32_t ) 0, ( uint32_t ) 0, NULL, xTicksToWait );
 1385              		.loc 1 770 59 is_stmt 1 view .LVU410
 771:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToReceive = NULL;
 1386              		.loc 1 771 4 view .LVU411
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 57


 771:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTaskWaitingToReceive = NULL;
 1387              		.loc 1 771 13 is_stmt 0 view .LVU412
 1388 0032 3B46     		mov	r3, r7
 1389 0034 0022     		movs	r2, #0
 1390 0036 1146     		mov	r1, r2
 1391 0038 1046     		mov	r0, r2
 1392 003a FFF7FEFF 		bl	xTaskNotifyWait
 1393              	.LVL155:
 772:FreeRTOS/src/stream_buffer.c **** 
 1394              		.loc 1 772 4 is_stmt 1 view .LVU413
 772:FreeRTOS/src/stream_buffer.c **** 
 1395              		.loc 1 772 42 is_stmt 0 view .LVU414
 1396 003e 0023     		movs	r3, #0
 1397 0040 2361     		str	r3, [r4, #16]
 775:FreeRTOS/src/stream_buffer.c **** 		}
 1398              		.loc 1 775 4 is_stmt 1 view .LVU415
 775:FreeRTOS/src/stream_buffer.c **** 		}
 1399              		.loc 1 775 22 is_stmt 0 view .LVU416
 1400 0042 2046     		mov	r0, r4
 1401 0044 FFF7FEFF 		bl	prvBytesInBuffer
 1402              	.LVL156:
 1403 0048 0546     		mov	r5, r0
 1404              	.LVL157:
 775:FreeRTOS/src/stream_buffer.c **** 		}
 1405              		.loc 1 775 22 view .LVU417
 1406 004a 0CE0     		b	.L80
 1407              	.LVL158:
 1408              	.L83:
 735:FreeRTOS/src/stream_buffer.c **** 	}
 1409              		.loc 1 735 30 view .LVU418
 1410 004c 0026     		movs	r6, #0
 1411 004e E3E7     		b	.L77
 1412              	.LVL159:
 1413              	.L86:
 754:FreeRTOS/src/stream_buffer.c **** 
 1414              		.loc 1 754 5 is_stmt 1 view .LVU419
 754:FreeRTOS/src/stream_buffer.c **** 
 1415              		.loc 1 754 14 is_stmt 0 view .LVU420
 1416 0050 0020     		movs	r0, #0
 1417              	.LVL160:
 754:FreeRTOS/src/stream_buffer.c **** 
 1418              		.loc 1 754 14 view .LVU421
 1419 0052 FFF7FEFF 		bl	xTaskNotifyStateClear
 1420              	.LVL161:
 757:FreeRTOS/src/stream_buffer.c **** 				pxStreamBuffer->xTaskWaitingToReceive = xTaskGetCurrentTaskHandle();
 1421              		.loc 1 757 66 is_stmt 1 view .LVU422
 758:FreeRTOS/src/stream_buffer.c **** 			}
 1422              		.loc 1 758 5 view .LVU423
 758:FreeRTOS/src/stream_buffer.c **** 			}
 1423              		.loc 1 758 45 is_stmt 0 view .LVU424
 1424 0056 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1425              	.LVL162:
 758:FreeRTOS/src/stream_buffer.c **** 			}
 1426              		.loc 1 758 43 view .LVU425
 1427 005a 2061     		str	r0, [r4, #16]
 1428 005c E5E7     		b	.L79
 1429              	.LVL163:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 58


 1430              	.L78:
 784:FreeRTOS/src/stream_buffer.c **** 	}
 1431              		.loc 1 784 3 is_stmt 1 view .LVU426
 784:FreeRTOS/src/stream_buffer.c **** 	}
 1432              		.loc 1 784 21 is_stmt 0 view .LVU427
 1433 005e 2046     		mov	r0, r4
 1434              	.LVL164:
 784:FreeRTOS/src/stream_buffer.c **** 	}
 1435              		.loc 1 784 21 view .LVU428
 1436 0060 FFF7FEFF 		bl	prvBytesInBuffer
 1437              	.LVL165:
 784:FreeRTOS/src/stream_buffer.c **** 	}
 1438              		.loc 1 784 21 view .LVU429
 1439 0064 0546     		mov	r5, r0
 1440              	.LVL166:
 1441              	.L80:
 792:FreeRTOS/src/stream_buffer.c **** 	{
 1442              		.loc 1 792 2 is_stmt 1 view .LVU430
 792:FreeRTOS/src/stream_buffer.c **** 	{
 1443              		.loc 1 792 4 is_stmt 0 view .LVU431
 1444 0066 B542     		cmp	r5, r6
 1445 0068 04D8     		bhi	.L87
 719:FreeRTOS/src/stream_buffer.c **** 
 1446              		.loc 1 719 8 view .LVU432
 1447 006a 0025     		movs	r5, #0
 1448              	.LVL167:
 809:FreeRTOS/src/stream_buffer.c **** 		mtCOVERAGE_TEST_MARKER();
 1449              		.loc 1 809 53 is_stmt 1 view .LVU433
 810:FreeRTOS/src/stream_buffer.c **** 	}
 1450              		.loc 1 810 27 view .LVU434
 813:FreeRTOS/src/stream_buffer.c **** }
 1451              		.loc 1 813 2 view .LVU435
 1452              	.L76:
 814:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1453              		.loc 1 814 1 is_stmt 0 view .LVU436
 1454 006c 2846     		mov	r0, r5
 1455 006e 03B0     		add	sp, sp, #12
 1456              	.LCFI31:
 1457              		.cfi_remember_state
 1458              		.cfi_def_cfa_offset 28
 1459              		@ sp needed
 1460 0070 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1461              	.LVL168:
 1462              	.L87:
 1463              	.LCFI32:
 1464              		.cfi_restore_state
 794:FreeRTOS/src/stream_buffer.c **** 
 1465              		.loc 1 794 3 is_stmt 1 view .LVU437
 794:FreeRTOS/src/stream_buffer.c **** 
 1466              		.loc 1 794 21 is_stmt 0 view .LVU438
 1467 0074 0096     		str	r6, [sp]
 1468 0076 2B46     		mov	r3, r5
 1469 0078 4A46     		mov	r2, r9
 1470 007a 4146     		mov	r1, r8
 1471 007c 2046     		mov	r0, r4
 1472 007e FFF7FEFF 		bl	prvReadMessageFromBuffer
 1473              	.LVL169:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 59


 797:FreeRTOS/src/stream_buffer.c **** 		{
 1474              		.loc 1 797 3 is_stmt 1 view .LVU439
 797:FreeRTOS/src/stream_buffer.c **** 		{
 1475              		.loc 1 797 5 is_stmt 0 view .LVU440
 1476 0082 0546     		mov	r5, r0
 1477              	.LVL170:
 797:FreeRTOS/src/stream_buffer.c **** 		{
 1478              		.loc 1 797 5 view .LVU441
 1479 0084 0028     		cmp	r0, #0
 1480 0086 F1D0     		beq	.L76
 799:FreeRTOS/src/stream_buffer.c **** 			sbRECEIVE_COMPLETED( pxStreamBuffer );
 1481              		.loc 1 799 64 is_stmt 1 view .LVU442
 800:FreeRTOS/src/stream_buffer.c **** 		}
 1482              		.loc 1 800 4 view .LVU443
 1483 0088 FFF7FEFF 		bl	vTaskSuspendAll
 1484              	.LVL171:
 800:FreeRTOS/src/stream_buffer.c **** 		}
 1485              		.loc 1 800 4 view .LVU444
 1486 008c 6369     		ldr	r3, [r4, #20]
 1487 008e 3BB1     		cbz	r3, .L82
 800:FreeRTOS/src/stream_buffer.c **** 		}
 1488              		.loc 1 800 4 discriminator 1 view .LVU445
 1489 0090 6069     		ldr	r0, [r4, #20]
 1490 0092 0023     		movs	r3, #0
 1491 0094 1A46     		mov	r2, r3
 1492 0096 1946     		mov	r1, r3
 1493 0098 FFF7FEFF 		bl	xTaskGenericNotify
 1494              	.LVL172:
 800:FreeRTOS/src/stream_buffer.c **** 		}
 1495              		.loc 1 800 4 discriminator 1 view .LVU446
 1496 009c 0023     		movs	r3, #0
 1497 009e 6361     		str	r3, [r4, #20]
 1498              	.L82:
 800:FreeRTOS/src/stream_buffer.c **** 		}
 1499              		.loc 1 800 4 discriminator 3 view .LVU447
 1500 00a0 FFF7FEFF 		bl	xTaskResumeAll
 1501              	.LVL173:
 800:FreeRTOS/src/stream_buffer.c **** 		}
 1502              		.loc 1 800 41 discriminator 3 view .LVU448
 1503 00a4 E2E7     		b	.L76
 1504              		.cfi_endproc
 1505              	.LFE13:
 1507              		.section	.text.xStreamBufferNextMessageLengthBytes,"ax",%progbits
 1508              		.align	1
 1509              		.global	xStreamBufferNextMessageLengthBytes
 1510              		.syntax unified
 1511              		.thumb
 1512              		.thumb_func
 1513              		.fpu fpv4-sp-d16
 1515              	xStreamBufferNextMessageLengthBytes:
 1516              	.LVL174:
 1517              	.LFB14:
 818:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1518              		.loc 1 818 1 view -0
 1519              		.cfi_startproc
 1520              		@ args = 0, pretend = 0, frame = 8
 1521              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 60


 819:FreeRTOS/src/stream_buffer.c **** size_t xReturn, xBytesAvailable, xOriginalTail;
 1522              		.loc 1 819 1 view .LVU450
 820:FreeRTOS/src/stream_buffer.c **** configMESSAGE_BUFFER_LENGTH_TYPE xTempReturn;
 1523              		.loc 1 820 1 view .LVU451
 821:FreeRTOS/src/stream_buffer.c **** 
 1524              		.loc 1 821 1 view .LVU452
 823:FreeRTOS/src/stream_buffer.c **** 
 1525              		.loc 1 823 32 view .LVU453
 826:FreeRTOS/src/stream_buffer.c **** 	{
 1526              		.loc 1 826 2 view .LVU454
 826:FreeRTOS/src/stream_buffer.c **** 	{
 1527              		.loc 1 826 22 is_stmt 0 view .LVU455
 1528 0000 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 826:FreeRTOS/src/stream_buffer.c **** 	{
 1529              		.loc 1 826 4 view .LVU456
 1530 0002 13F0010F 		tst	r3, #1
 1531 0006 01D1     		bne	.L96
 854:FreeRTOS/src/stream_buffer.c **** 	}
 1532              		.loc 1 854 11 view .LVU457
 1533 0008 0020     		movs	r0, #0
 1534              	.LVL175:
 858:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1535              		.loc 1 858 1 view .LVU458
 1536 000a 7047     		bx	lr
 1537              	.LVL176:
 1538              	.L96:
 818:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1539              		.loc 1 818 1 view .LVU459
 1540 000c 30B5     		push	{r4, r5, lr}
 1541              	.LCFI33:
 1542              		.cfi_def_cfa_offset 12
 1543              		.cfi_offset 4, -12
 1544              		.cfi_offset 5, -8
 1545              		.cfi_offset 14, -4
 1546 000e 83B0     		sub	sp, sp, #12
 1547              	.LCFI34:
 1548              		.cfi_def_cfa_offset 24
 1549 0010 0446     		mov	r4, r0
 828:FreeRTOS/src/stream_buffer.c **** 		if( xBytesAvailable > sbBYTES_TO_STORE_MESSAGE_LENGTH )
 1550              		.loc 1 828 3 is_stmt 1 view .LVU460
 828:FreeRTOS/src/stream_buffer.c **** 		if( xBytesAvailable > sbBYTES_TO_STORE_MESSAGE_LENGTH )
 1551              		.loc 1 828 21 is_stmt 0 view .LVU461
 1552 0012 FFF7FEFF 		bl	prvBytesInBuffer
 1553              	.LVL177:
 829:FreeRTOS/src/stream_buffer.c **** 		{
 1554              		.loc 1 829 3 is_stmt 1 view .LVU462
 829:FreeRTOS/src/stream_buffer.c **** 		{
 1555              		.loc 1 829 5 is_stmt 0 view .LVU463
 1556 0016 0428     		cmp	r0, #4
 1557 0018 02D8     		bhi	.L97
 849:FreeRTOS/src/stream_buffer.c **** 		}
 1558              		.loc 1 849 12 view .LVU464
 1559 001a 0020     		movs	r0, #0
 1560              	.LVL178:
 857:FreeRTOS/src/stream_buffer.c **** }
 1561              		.loc 1 857 2 is_stmt 1 view .LVU465
 1562              	.L88:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 61


 858:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1563              		.loc 1 858 1 is_stmt 0 view .LVU466
 1564 001c 03B0     		add	sp, sp, #12
 1565              	.LCFI35:
 1566              		.cfi_remember_state
 1567              		.cfi_def_cfa_offset 12
 1568              		@ sp needed
 1569 001e 30BD     		pop	{r4, r5, pc}
 1570              	.LVL179:
 1571              	.L97:
 1572              	.LCFI36:
 1573              		.cfi_restore_state
 837:FreeRTOS/src/stream_buffer.c **** 			( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempReturn, sbBYTES_TO_STORE_ME
 1574              		.loc 1 837 4 is_stmt 1 view .LVU467
 837:FreeRTOS/src/stream_buffer.c **** 			( void ) prvReadBytesFromBuffer( pxStreamBuffer, ( uint8_t * ) &xTempReturn, sbBYTES_TO_STORE_ME
 1575              		.loc 1 837 18 is_stmt 0 view .LVU468
 1576 0020 2568     		ldr	r5, [r4]
 1577              	.LVL180:
 838:FreeRTOS/src/stream_buffer.c **** 			xReturn = ( size_t ) xTempReturn;
 1578              		.loc 1 838 4 is_stmt 1 view .LVU469
 838:FreeRTOS/src/stream_buffer.c **** 			xReturn = ( size_t ) xTempReturn;
 1579              		.loc 1 838 13 is_stmt 0 view .LVU470
 1580 0022 0346     		mov	r3, r0
 1581 0024 0422     		movs	r2, #4
 1582 0026 0DEB0201 		add	r1, sp, r2
 1583 002a 2046     		mov	r0, r4
 1584              	.LVL181:
 838:FreeRTOS/src/stream_buffer.c **** 			xReturn = ( size_t ) xTempReturn;
 1585              		.loc 1 838 13 view .LVU471
 1586 002c FFF7FEFF 		bl	prvReadBytesFromBuffer
 1587              	.LVL182:
 839:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTail = xOriginalTail;
 1588              		.loc 1 839 4 is_stmt 1 view .LVU472
 839:FreeRTOS/src/stream_buffer.c **** 			pxStreamBuffer->xTail = xOriginalTail;
 1589              		.loc 1 839 12 is_stmt 0 view .LVU473
 1590 0030 0198     		ldr	r0, [sp, #4]
 1591              	.LVL183:
 840:FreeRTOS/src/stream_buffer.c **** 		}
 1592              		.loc 1 840 4 is_stmt 1 view .LVU474
 840:FreeRTOS/src/stream_buffer.c **** 		}
 1593              		.loc 1 840 26 is_stmt 0 view .LVU475
 1594 0032 2560     		str	r5, [r4]
 1595 0034 F2E7     		b	.L88
 1596              		.cfi_endproc
 1597              	.LFE14:
 1599              		.section	.text.xStreamBufferReceiveFromISR,"ax",%progbits
 1600              		.align	1
 1601              		.global	xStreamBufferReceiveFromISR
 1602              		.syntax unified
 1603              		.thumb
 1604              		.thumb_func
 1605              		.fpu fpv4-sp-d16
 1607              	xStreamBufferReceiveFromISR:
 1608              	.LVL184:
 1609              	.LFB15:
 865:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1610              		.loc 1 865 1 is_stmt 1 view -0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 62


 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 0
 1613              		@ frame_needed = 0, uses_anonymous_args = 0
 865:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1614              		.loc 1 865 1 is_stmt 0 view .LVU477
 1615 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1616              	.LCFI37:
 1617              		.cfi_def_cfa_offset 24
 1618              		.cfi_offset 4, -24
 1619              		.cfi_offset 5, -20
 1620              		.cfi_offset 6, -16
 1621              		.cfi_offset 7, -12
 1622              		.cfi_offset 8, -8
 1623              		.cfi_offset 14, -4
 1624 0004 82B0     		sub	sp, sp, #8
 1625              	.LCFI38:
 1626              		.cfi_def_cfa_offset 32
 1627 0006 0446     		mov	r4, r0
 1628 0008 0E46     		mov	r6, r1
 1629 000a 1746     		mov	r7, r2
 1630 000c 9846     		mov	r8, r3
 866:FreeRTOS/src/stream_buffer.c **** size_t xReceivedLength = 0, xBytesAvailable, xBytesToStoreMessageLength;
 1631              		.loc 1 866 1 is_stmt 1 view .LVU478
 1632              	.LVL185:
 867:FreeRTOS/src/stream_buffer.c **** 
 1633              		.loc 1 867 1 view .LVU479
 869:FreeRTOS/src/stream_buffer.c **** 	configASSERT( pxStreamBuffer );
 1634              		.loc 1 869 26 view .LVU480
 870:FreeRTOS/src/stream_buffer.c **** 
 1635              		.loc 1 870 32 view .LVU481
 877:FreeRTOS/src/stream_buffer.c **** 	{
 1636              		.loc 1 877 2 view .LVU482
 877:FreeRTOS/src/stream_buffer.c **** 	{
 1637              		.loc 1 877 22 is_stmt 0 view .LVU483
 1638 000e 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
 1639              	.LVL186:
 877:FreeRTOS/src/stream_buffer.c **** 	{
 1640              		.loc 1 877 4 view .LVU484
 1641 0010 13F0010F 		tst	r3, #1
 1642 0014 0AD0     		beq	.L102
 879:FreeRTOS/src/stream_buffer.c **** 	}
 1643              		.loc 1 879 30 view .LVU485
 1644 0016 0425     		movs	r5, #4
 1645              	.L99:
 1646              	.LVL187:
 886:FreeRTOS/src/stream_buffer.c **** 
 1647              		.loc 1 886 2 is_stmt 1 view .LVU486
 886:FreeRTOS/src/stream_buffer.c **** 
 1648              		.loc 1 886 20 is_stmt 0 view .LVU487
 1649 0018 2046     		mov	r0, r4
 1650              	.LVL188:
 886:FreeRTOS/src/stream_buffer.c **** 
 1651              		.loc 1 886 20 view .LVU488
 1652 001a FFF7FEFF 		bl	prvBytesInBuffer
 1653              	.LVL189:
 893:FreeRTOS/src/stream_buffer.c **** 	{
 1654              		.loc 1 893 2 is_stmt 1 view .LVU489
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 63


 893:FreeRTOS/src/stream_buffer.c **** 	{
 1655              		.loc 1 893 4 is_stmt 0 view .LVU490
 1656 001e 8542     		cmp	r5, r0
 1657 0020 06D3     		bcc	.L105
 867:FreeRTOS/src/stream_buffer.c **** 
 1658              		.loc 1 867 8 view .LVU491
 1659 0022 0025     		movs	r5, #0
 1660              	.LVL190:
 909:FreeRTOS/src/stream_buffer.c **** 	}
 1661              		.loc 1 909 27 is_stmt 1 view .LVU492
 912:FreeRTOS/src/stream_buffer.c **** 
 1662              		.loc 1 912 71 view .LVU493
 914:FreeRTOS/src/stream_buffer.c **** }
 1663              		.loc 1 914 2 view .LVU494
 1664              	.L98:
 915:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1665              		.loc 1 915 1 is_stmt 0 view .LVU495
 1666 0024 2846     		mov	r0, r5
 1667 0026 02B0     		add	sp, sp, #8
 1668              	.LCFI39:
 1669              		.cfi_remember_state
 1670              		.cfi_def_cfa_offset 24
 1671              		@ sp needed
 1672 0028 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1673              	.LVL191:
 1674              	.L102:
 1675              	.LCFI40:
 1676              		.cfi_restore_state
 883:FreeRTOS/src/stream_buffer.c **** 	}
 1677              		.loc 1 883 30 view .LVU496
 1678 002c 0025     		movs	r5, #0
 1679 002e F3E7     		b	.L99
 1680              	.LVL192:
 1681              	.L105:
 895:FreeRTOS/src/stream_buffer.c **** 
 1682              		.loc 1 895 3 is_stmt 1 view .LVU497
 895:FreeRTOS/src/stream_buffer.c **** 
 1683              		.loc 1 895 21 is_stmt 0 view .LVU498
 1684 0030 0095     		str	r5, [sp]
 1685 0032 0346     		mov	r3, r0
 1686 0034 3A46     		mov	r2, r7
 1687 0036 3146     		mov	r1, r6
 1688 0038 2046     		mov	r0, r4
 1689              	.LVL193:
 895:FreeRTOS/src/stream_buffer.c **** 
 1690              		.loc 1 895 21 view .LVU499
 1691 003a FFF7FEFF 		bl	prvReadMessageFromBuffer
 1692              	.LVL194:
 898:FreeRTOS/src/stream_buffer.c **** 		{
 1693              		.loc 1 898 3 is_stmt 1 view .LVU500
 898:FreeRTOS/src/stream_buffer.c **** 		{
 1694              		.loc 1 898 5 is_stmt 0 view .LVU501
 1695 003e 0546     		mov	r5, r0
 1696              	.LVL195:
 898:FreeRTOS/src/stream_buffer.c **** 		{
 1697              		.loc 1 898 5 view .LVU502
 1698 0040 0028     		cmp	r0, #0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 64


 1699 0042 EFD0     		beq	.L98
 1700              	.LBB25:
 900:FreeRTOS/src/stream_buffer.c **** 		}
 1701              		.loc 1 900 4 is_stmt 1 view .LVU503
 900:FreeRTOS/src/stream_buffer.c **** 		}
 1702              		.loc 1 900 4 view .LVU504
 1703              	.LBB26:
 1704              	.LBI26:
 207:FreeRTOS/inc/portmacro.h **** {
 1705              		.loc 2 207 34 view .LVU505
 1706              	.LBB27:
 209:FreeRTOS/inc/portmacro.h **** 
 1707              		.loc 2 209 1 view .LVU506
 211:FreeRTOS/inc/portmacro.h **** 	(
 1708              		.loc 2 211 2 view .LVU507
 1709              		.syntax unified
 1710              	@ 211 "FreeRTOS/inc/portmacro.h" 1
 1711 0044 EFF31186 			mrs r6, basepri											
 1712 0048 4FF0BF03 		mov r3, #191												
 1713 004c 83F31188 		msr basepri, r3											
 1714 0050 BFF36F8F 		isb														
 1715 0054 BFF34F8F 		dsb														
 1716              	
 1717              	@ 0 "" 2
 1718              	.LVL196:
 223:FreeRTOS/inc/portmacro.h **** }
 1719              		.loc 2 223 2 view .LVU508
 223:FreeRTOS/inc/portmacro.h **** }
 1720              		.loc 2 223 2 is_stmt 0 view .LVU509
 1721              		.thumb
 1722              		.syntax unified
 1723              	.LBE27:
 1724              	.LBE26:
 900:FreeRTOS/src/stream_buffer.c **** 		}
 1725              		.loc 1 900 4 is_stmt 1 view .LVU510
 1726 0058 6369     		ldr	r3, [r4, #20]
 1727 005a 4BB1     		cbz	r3, .L101
 900:FreeRTOS/src/stream_buffer.c **** 		}
 1728              		.loc 1 900 4 discriminator 1 view .LVU511
 1729 005c 6069     		ldr	r0, [r4, #20]
 1730              	.LVL197:
 900:FreeRTOS/src/stream_buffer.c **** 		}
 1731              		.loc 1 900 4 is_stmt 0 discriminator 1 view .LVU512
 1732 005e CDF80080 		str	r8, [sp]
 1733 0062 0023     		movs	r3, #0
 1734 0064 1A46     		mov	r2, r3
 1735 0066 1946     		mov	r1, r3
 1736 0068 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 1737              	.LVL198:
 900:FreeRTOS/src/stream_buffer.c **** 		}
 1738              		.loc 1 900 4 is_stmt 1 discriminator 1 view .LVU513
 1739 006c 0023     		movs	r3, #0
 1740 006e 6361     		str	r3, [r4, #20]
 1741              	.L101:
 900:FreeRTOS/src/stream_buffer.c **** 		}
 1742              		.loc 1 900 4 discriminator 3 view .LVU514
 1743              	.LVL199:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 65


 1744              	.LBB28:
 1745              	.LBI28:
 227:FreeRTOS/inc/portmacro.h **** {
 1746              		.loc 2 227 30 discriminator 3 view .LVU515
 1747              	.LBB29:
 1748              		.loc 2 229 2 discriminator 3 view .LVU516
 1749              		.syntax unified
 1750              	@ 229 "FreeRTOS/inc/portmacro.h" 1
 1751 0070 86F31188 			msr basepri, r6	
 1752              	@ 0 "" 2
 1753              		.thumb
 1754              		.syntax unified
 1755 0074 D6E7     		b	.L98
 1756              	.LBE29:
 1757              	.LBE28:
 1758              	.LBE25:
 1759              		.cfi_endproc
 1760              	.LFE15:
 1762              		.section	.text.xStreamBufferIsEmpty,"ax",%progbits
 1763              		.align	1
 1764              		.global	xStreamBufferIsEmpty
 1765              		.syntax unified
 1766              		.thumb
 1767              		.thumb_func
 1768              		.fpu fpv4-sp-d16
 1770              	xStreamBufferIsEmpty:
 1771              	.LVL200:
 1772              	.LFB17:
 971:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1773              		.loc 1 971 1 view -0
 1774              		.cfi_startproc
 1775              		@ args = 0, pretend = 0, frame = 0
 1776              		@ frame_needed = 0, uses_anonymous_args = 0
 1777              		@ link register save eliminated.
 972:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 1778              		.loc 1 972 1 view .LVU518
 973:FreeRTOS/src/stream_buffer.c **** size_t xTail;
 1779              		.loc 1 973 1 view .LVU519
 974:FreeRTOS/src/stream_buffer.c **** 
 1780              		.loc 1 974 1 view .LVU520
 976:FreeRTOS/src/stream_buffer.c **** 
 1781              		.loc 1 976 32 view .LVU521
 979:FreeRTOS/src/stream_buffer.c **** 	if( pxStreamBuffer->xHead == xTail )
 1782              		.loc 1 979 2 view .LVU522
 979:FreeRTOS/src/stream_buffer.c **** 	if( pxStreamBuffer->xHead == xTail )
 1783              		.loc 1 979 8 is_stmt 0 view .LVU523
 1784 0000 0368     		ldr	r3, [r0]
 1785              	.LVL201:
 980:FreeRTOS/src/stream_buffer.c **** 	{
 1786              		.loc 1 980 2 is_stmt 1 view .LVU524
 980:FreeRTOS/src/stream_buffer.c **** 	{
 1787              		.loc 1 980 20 is_stmt 0 view .LVU525
 1788 0002 4268     		ldr	r2, [r0, #4]
 980:FreeRTOS/src/stream_buffer.c **** 	{
 1789              		.loc 1 980 4 view .LVU526
 1790 0004 9A42     		cmp	r2, r3
 1791 0006 01D0     		beq	.L109
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 66


 986:FreeRTOS/src/stream_buffer.c **** 	}
 1792              		.loc 1 986 11 view .LVU527
 1793 0008 0020     		movs	r0, #0
 1794              	.LVL202:
 989:FreeRTOS/src/stream_buffer.c **** }
 1795              		.loc 1 989 2 is_stmt 1 view .LVU528
 990:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1796              		.loc 1 990 1 is_stmt 0 view .LVU529
 1797 000a 7047     		bx	lr
 1798              	.LVL203:
 1799              	.L109:
 982:FreeRTOS/src/stream_buffer.c **** 	}
 1800              		.loc 1 982 11 view .LVU530
 1801 000c 0120     		movs	r0, #1
 1802              	.LVL204:
 982:FreeRTOS/src/stream_buffer.c **** 	}
 1803              		.loc 1 982 11 view .LVU531
 1804 000e 7047     		bx	lr
 1805              		.cfi_endproc
 1806              	.LFE17:
 1808              		.section	.text.xStreamBufferIsFull,"ax",%progbits
 1809              		.align	1
 1810              		.global	xStreamBufferIsFull
 1811              		.syntax unified
 1812              		.thumb
 1813              		.thumb_func
 1814              		.fpu fpv4-sp-d16
 1816              	xStreamBufferIsFull:
 1817              	.LVL205:
 1818              	.LFB18:
 994:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 1819              		.loc 1 994 1 is_stmt 1 view -0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 0
 1822              		@ frame_needed = 0, uses_anonymous_args = 0
 994:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 1823              		.loc 1 994 1 is_stmt 0 view .LVU533
 1824 0000 10B5     		push	{r4, lr}
 1825              	.LCFI41:
 1826              		.cfi_def_cfa_offset 8
 1827              		.cfi_offset 4, -8
 1828              		.cfi_offset 14, -4
 995:FreeRTOS/src/stream_buffer.c **** size_t xBytesToStoreMessageLength;
 1829              		.loc 1 995 1 is_stmt 1 view .LVU534
 996:FreeRTOS/src/stream_buffer.c **** const StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1830              		.loc 1 996 1 view .LVU535
 997:FreeRTOS/src/stream_buffer.c **** 
 1831              		.loc 1 997 1 view .LVU536
 1832              	.LVL206:
 999:FreeRTOS/src/stream_buffer.c **** 
 1833              		.loc 1 999 32 view .LVU537
1005:FreeRTOS/src/stream_buffer.c **** 	{
 1834              		.loc 1 1005 2 view .LVU538
1005:FreeRTOS/src/stream_buffer.c **** 	{
 1835              		.loc 1 1005 22 is_stmt 0 view .LVU539
 1836 0002 037F     		ldrb	r3, [r0, #28]	@ zero_extendqisi2
1005:FreeRTOS/src/stream_buffer.c **** 	{
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 67


 1837              		.loc 1 1005 4 view .LVU540
 1838 0004 13F0010F 		tst	r3, #1
 1839 0008 06D0     		beq	.L113
1007:FreeRTOS/src/stream_buffer.c **** 	}
 1840              		.loc 1 1007 30 view .LVU541
 1841 000a 0424     		movs	r4, #4
 1842              	.L111:
 1843              	.LVL207:
1015:FreeRTOS/src/stream_buffer.c **** 	{
 1844              		.loc 1 1015 2 is_stmt 1 view .LVU542
1015:FreeRTOS/src/stream_buffer.c **** 	{
 1845              		.loc 1 1015 6 is_stmt 0 view .LVU543
 1846 000c FFF7FEFF 		bl	xStreamBufferSpacesAvailable
 1847              	.LVL208:
1015:FreeRTOS/src/stream_buffer.c **** 	{
 1848              		.loc 1 1015 4 view .LVU544
 1849 0010 A042     		cmp	r0, r4
 1850 0012 03D8     		bhi	.L114
1017:FreeRTOS/src/stream_buffer.c **** 	}
 1851              		.loc 1 1017 11 view .LVU545
 1852 0014 0120     		movs	r0, #1
 1853              	.L110:
1025:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1854              		.loc 1 1025 1 view .LVU546
 1855 0016 10BD     		pop	{r4, pc}
 1856              	.LVL209:
 1857              	.L113:
1011:FreeRTOS/src/stream_buffer.c **** 	}
 1858              		.loc 1 1011 30 view .LVU547
 1859 0018 0024     		movs	r4, #0
 1860 001a F7E7     		b	.L111
 1861              	.LVL210:
 1862              	.L114:
1021:FreeRTOS/src/stream_buffer.c **** 	}
 1863              		.loc 1 1021 11 view .LVU548
 1864 001c 0020     		movs	r0, #0
 1865              	.LVL211:
1024:FreeRTOS/src/stream_buffer.c **** }
 1866              		.loc 1 1024 2 is_stmt 1 view .LVU549
1024:FreeRTOS/src/stream_buffer.c **** }
 1867              		.loc 1 1024 9 is_stmt 0 view .LVU550
 1868 001e FAE7     		b	.L110
 1869              		.cfi_endproc
 1870              	.LFE18:
 1872              		.section	.text.xStreamBufferSendCompletedFromISR,"ax",%progbits
 1873              		.align	1
 1874              		.global	xStreamBufferSendCompletedFromISR
 1875              		.syntax unified
 1876              		.thumb
 1877              		.thumb_func
 1878              		.fpu fpv4-sp-d16
 1880              	xStreamBufferSendCompletedFromISR:
 1881              	.LVL212:
 1882              	.LFB19:
1029:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1883              		.loc 1 1029 1 is_stmt 1 view -0
 1884              		.cfi_startproc
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 68


 1885              		@ args = 0, pretend = 0, frame = 0
 1886              		@ frame_needed = 0, uses_anonymous_args = 0
1029:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 1887              		.loc 1 1029 1 is_stmt 0 view .LVU552
 1888 0000 30B5     		push	{r4, r5, lr}
 1889              	.LCFI42:
 1890              		.cfi_def_cfa_offset 12
 1891              		.cfi_offset 4, -12
 1892              		.cfi_offset 5, -8
 1893              		.cfi_offset 14, -4
 1894 0002 83B0     		sub	sp, sp, #12
 1895              	.LCFI43:
 1896              		.cfi_def_cfa_offset 24
1030:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 1897              		.loc 1 1030 1 is_stmt 1 view .LVU553
 1898              	.LVL213:
1031:FreeRTOS/src/stream_buffer.c **** UBaseType_t uxSavedInterruptStatus;
 1899              		.loc 1 1031 1 view .LVU554
1032:FreeRTOS/src/stream_buffer.c **** 
 1900              		.loc 1 1032 1 view .LVU555
1034:FreeRTOS/src/stream_buffer.c **** 
 1901              		.loc 1 1034 32 view .LVU556
1036:FreeRTOS/src/stream_buffer.c **** 	{
 1902              		.loc 1 1036 2 view .LVU557
 1903              	.LBB30:
 1904              	.LBI30:
 207:FreeRTOS/inc/portmacro.h **** {
 1905              		.loc 2 207 34 view .LVU558
 1906              	.LBB31:
 209:FreeRTOS/inc/portmacro.h **** 
 1907              		.loc 2 209 1 view .LVU559
 211:FreeRTOS/inc/portmacro.h **** 	(
 1908              		.loc 2 211 2 view .LVU560
 1909              		.syntax unified
 1910              	@ 211 "FreeRTOS/inc/portmacro.h" 1
 1911 0004 EFF31185 			mrs r5, basepri											
 1912 0008 4FF0BF03 		mov r3, #191												
 1913 000c 83F31188 		msr basepri, r3											
 1914 0010 BFF36F8F 		isb														
 1915 0014 BFF34F8F 		dsb														
 1916              	
 1917              	@ 0 "" 2
 1918              	.LVL214:
 223:FreeRTOS/inc/portmacro.h **** }
 1919              		.loc 2 223 2 view .LVU561
 223:FreeRTOS/inc/portmacro.h **** }
 1920              		.loc 2 223 2 is_stmt 0 view .LVU562
 1921              		.thumb
 1922              		.syntax unified
 1923              	.LBE31:
 1924              	.LBE30:
1038:FreeRTOS/src/stream_buffer.c **** 		{
 1925              		.loc 1 1038 3 is_stmt 1 view .LVU563
1038:FreeRTOS/src/stream_buffer.c **** 		{
 1926              		.loc 1 1038 25 is_stmt 0 view .LVU564
 1927 0018 0369     		ldr	r3, [r0, #16]
1038:FreeRTOS/src/stream_buffer.c **** 		{
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 69


 1928              		.loc 1 1038 5 view .LVU565
 1929 001a 73B1     		cbz	r3, .L118
 1930 001c 0446     		mov	r4, r0
1040:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 1931              		.loc 1 1040 4 is_stmt 1 view .LVU566
1040:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 1932              		.loc 1 1040 13 is_stmt 0 view .LVU567
 1933 001e 0069     		ldr	r0, [r0, #16]
 1934              	.LVL215:
1040:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 1935              		.loc 1 1040 13 view .LVU568
 1936 0020 0091     		str	r1, [sp]
 1937 0022 0023     		movs	r3, #0
 1938 0024 1A46     		mov	r2, r3
 1939 0026 1946     		mov	r1, r3
 1940              	.LVL216:
1040:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 1941              		.loc 1 1040 13 view .LVU569
 1942 0028 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 1943              	.LVL217:
1044:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdTRUE;
 1944              		.loc 1 1044 4 is_stmt 1 view .LVU570
1044:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdTRUE;
 1945              		.loc 1 1044 46 is_stmt 0 view .LVU571
 1946 002c 0023     		movs	r3, #0
 1947 002e 2361     		str	r3, [r4, #16]
1045:FreeRTOS/src/stream_buffer.c **** 		}
 1948              		.loc 1 1045 4 is_stmt 1 view .LVU572
 1949              	.LVL218:
1045:FreeRTOS/src/stream_buffer.c **** 		}
 1950              		.loc 1 1045 12 is_stmt 0 view .LVU573
 1951 0030 0120     		movs	r0, #1
 1952              	.LVL219:
 1953              	.L117:
1052:FreeRTOS/src/stream_buffer.c **** 
 1954              		.loc 1 1052 2 is_stmt 1 view .LVU574
 1955              	.LBB32:
 1956              	.LBI32:
 227:FreeRTOS/inc/portmacro.h **** {
 1957              		.loc 2 227 30 view .LVU575
 1958              	.LBB33:
 1959              		.loc 2 229 2 view .LVU576
 1960              		.syntax unified
 1961              	@ 229 "FreeRTOS/inc/portmacro.h" 1
 1962 0032 85F31188 			msr basepri, r5	
 1963              	@ 0 "" 2
 1964              	.LVL220:
 1965              		.loc 2 229 2 is_stmt 0 view .LVU577
 1966              		.thumb
 1967              		.syntax unified
 1968              	.LBE33:
 1969              	.LBE32:
1054:FreeRTOS/src/stream_buffer.c **** }
 1970              		.loc 1 1054 2 is_stmt 1 view .LVU578
1055:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 1971              		.loc 1 1055 1 is_stmt 0 view .LVU579
 1972 0036 03B0     		add	sp, sp, #12
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 70


 1973              	.LCFI44:
 1974              		.cfi_remember_state
 1975              		.cfi_def_cfa_offset 12
 1976              		@ sp needed
 1977 0038 30BD     		pop	{r4, r5, pc}
 1978              	.LVL221:
 1979              	.L118:
 1980              	.LCFI45:
 1981              		.cfi_restore_state
1049:FreeRTOS/src/stream_buffer.c **** 		}
 1982              		.loc 1 1049 12 view .LVU580
 1983 003a 0020     		movs	r0, #0
 1984              	.LVL222:
1049:FreeRTOS/src/stream_buffer.c **** 		}
 1985              		.loc 1 1049 12 view .LVU581
 1986 003c F9E7     		b	.L117
 1987              		.cfi_endproc
 1988              	.LFE19:
 1990              		.section	.text.xStreamBufferReceiveCompletedFromISR,"ax",%progbits
 1991              		.align	1
 1992              		.global	xStreamBufferReceiveCompletedFromISR
 1993              		.syntax unified
 1994              		.thumb
 1995              		.thumb_func
 1996              		.fpu fpv4-sp-d16
 1998              	xStreamBufferReceiveCompletedFromISR:
 1999              	.LVL223:
 2000              	.LFB20:
1059:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2001              		.loc 1 1059 1 is_stmt 1 view -0
 2002              		.cfi_startproc
 2003              		@ args = 0, pretend = 0, frame = 0
 2004              		@ frame_needed = 0, uses_anonymous_args = 0
1059:FreeRTOS/src/stream_buffer.c **** StreamBuffer_t * const pxStreamBuffer = xStreamBuffer;
 2005              		.loc 1 1059 1 is_stmt 0 view .LVU583
 2006 0000 30B5     		push	{r4, r5, lr}
 2007              	.LCFI46:
 2008              		.cfi_def_cfa_offset 12
 2009              		.cfi_offset 4, -12
 2010              		.cfi_offset 5, -8
 2011              		.cfi_offset 14, -4
 2012 0002 83B0     		sub	sp, sp, #12
 2013              	.LCFI47:
 2014              		.cfi_def_cfa_offset 24
1060:FreeRTOS/src/stream_buffer.c **** BaseType_t xReturn;
 2015              		.loc 1 1060 1 is_stmt 1 view .LVU584
 2016              	.LVL224:
1061:FreeRTOS/src/stream_buffer.c **** UBaseType_t uxSavedInterruptStatus;
 2017              		.loc 1 1061 1 view .LVU585
1062:FreeRTOS/src/stream_buffer.c **** 
 2018              		.loc 1 1062 1 view .LVU586
1064:FreeRTOS/src/stream_buffer.c **** 
 2019              		.loc 1 1064 32 view .LVU587
1066:FreeRTOS/src/stream_buffer.c **** 	{
 2020              		.loc 1 1066 2 view .LVU588
 2021              	.LBB34:
 2022              	.LBI34:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 71


 207:FreeRTOS/inc/portmacro.h **** {
 2023              		.loc 2 207 34 view .LVU589
 2024              	.LBB35:
 209:FreeRTOS/inc/portmacro.h **** 
 2025              		.loc 2 209 1 view .LVU590
 211:FreeRTOS/inc/portmacro.h **** 	(
 2026              		.loc 2 211 2 view .LVU591
 2027              		.syntax unified
 2028              	@ 211 "FreeRTOS/inc/portmacro.h" 1
 2029 0004 EFF31185 			mrs r5, basepri											
 2030 0008 4FF0BF03 		mov r3, #191												
 2031 000c 83F31188 		msr basepri, r3											
 2032 0010 BFF36F8F 		isb														
 2033 0014 BFF34F8F 		dsb														
 2034              	
 2035              	@ 0 "" 2
 2036              	.LVL225:
 223:FreeRTOS/inc/portmacro.h **** }
 2037              		.loc 2 223 2 view .LVU592
 223:FreeRTOS/inc/portmacro.h **** }
 2038              		.loc 2 223 2 is_stmt 0 view .LVU593
 2039              		.thumb
 2040              		.syntax unified
 2041              	.LBE35:
 2042              	.LBE34:
1068:FreeRTOS/src/stream_buffer.c **** 		{
 2043              		.loc 1 1068 3 is_stmt 1 view .LVU594
1068:FreeRTOS/src/stream_buffer.c **** 		{
 2044              		.loc 1 1068 25 is_stmt 0 view .LVU595
 2045 0018 4369     		ldr	r3, [r0, #20]
1068:FreeRTOS/src/stream_buffer.c **** 		{
 2046              		.loc 1 1068 5 view .LVU596
 2047 001a 73B1     		cbz	r3, .L122
 2048 001c 0446     		mov	r4, r0
1070:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 2049              		.loc 1 1070 4 is_stmt 1 view .LVU597
1070:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 2050              		.loc 1 1070 13 is_stmt 0 view .LVU598
 2051 001e 4069     		ldr	r0, [r0, #20]
 2052              	.LVL226:
1070:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 2053              		.loc 1 1070 13 view .LVU599
 2054 0020 0091     		str	r1, [sp]
 2055 0022 0023     		movs	r3, #0
 2056 0024 1A46     		mov	r2, r3
 2057 0026 1946     		mov	r1, r3
 2058              	.LVL227:
1070:FreeRTOS/src/stream_buffer.c **** 										 ( uint32_t ) 0,
 2059              		.loc 1 1070 13 view .LVU600
 2060 0028 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 2061              	.LVL228:
1074:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdTRUE;
 2062              		.loc 1 1074 4 is_stmt 1 view .LVU601
1074:FreeRTOS/src/stream_buffer.c **** 			xReturn = pdTRUE;
 2063              		.loc 1 1074 43 is_stmt 0 view .LVU602
 2064 002c 0023     		movs	r3, #0
 2065 002e 6361     		str	r3, [r4, #20]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 72


1075:FreeRTOS/src/stream_buffer.c **** 		}
 2066              		.loc 1 1075 4 is_stmt 1 view .LVU603
 2067              	.LVL229:
1075:FreeRTOS/src/stream_buffer.c **** 		}
 2068              		.loc 1 1075 12 is_stmt 0 view .LVU604
 2069 0030 0120     		movs	r0, #1
 2070              	.LVL230:
 2071              	.L121:
1082:FreeRTOS/src/stream_buffer.c **** 
 2072              		.loc 1 1082 2 is_stmt 1 view .LVU605
 2073              	.LBB36:
 2074              	.LBI36:
 227:FreeRTOS/inc/portmacro.h **** {
 2075              		.loc 2 227 30 view .LVU606
 2076              	.LBB37:
 2077              		.loc 2 229 2 view .LVU607
 2078              		.syntax unified
 2079              	@ 229 "FreeRTOS/inc/portmacro.h" 1
 2080 0032 85F31188 			msr basepri, r5	
 2081              	@ 0 "" 2
 2082              	.LVL231:
 2083              		.loc 2 229 2 is_stmt 0 view .LVU608
 2084              		.thumb
 2085              		.syntax unified
 2086              	.LBE37:
 2087              	.LBE36:
1084:FreeRTOS/src/stream_buffer.c **** }
 2088              		.loc 1 1084 2 is_stmt 1 view .LVU609
1085:FreeRTOS/src/stream_buffer.c **** /*-----------------------------------------------------------*/
 2089              		.loc 1 1085 1 is_stmt 0 view .LVU610
 2090 0036 03B0     		add	sp, sp, #12
 2091              	.LCFI48:
 2092              		.cfi_remember_state
 2093              		.cfi_def_cfa_offset 12
 2094              		@ sp needed
 2095 0038 30BD     		pop	{r4, r5, pc}
 2096              	.LVL232:
 2097              	.L122:
 2098              	.LCFI49:
 2099              		.cfi_restore_state
1079:FreeRTOS/src/stream_buffer.c **** 		}
 2100              		.loc 1 1079 12 view .LVU611
 2101 003a 0020     		movs	r0, #0
 2102              	.LVL233:
1079:FreeRTOS/src/stream_buffer.c **** 		}
 2103              		.loc 1 1079 12 view .LVU612
 2104 003c F9E7     		b	.L121
 2105              		.cfi_endproc
 2106              	.LFE20:
 2108              		.text
 2109              	.Letext0:
 2110              		.file 3 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 2111              		.file 4 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 2112              		.file 5 "c:\\software\\embeddedgcc\\arm_gcc\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 2113              		.file 6 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\lock.h"
 2114              		.file 7 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\_types.h"
 2115              		.file 8 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\reent.h"
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 73


 2116              		.file 9 "FreeRTOS/inc/task.h"
 2117              		.file 10 "FreeRTOS/inc/stream_buffer.h"
 2118              		.file 11 "<built-in>"
 2119              		.file 12 "FreeRTOS/inc/portable.h"
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 74


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stream_buffer.c
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:18     .text.prvBytesInBuffer:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:25     .text.prvBytesInBuffer:0000000000000000 prvBytesInBuffer
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:67     .text.prvInitialiseNewStreamBuffer:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:73     .text.prvInitialiseNewStreamBuffer:0000000000000000 prvInitialiseNewStreamBuffer
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:124    .text.prvWriteBytesToBuffer:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:130    .text.prvWriteBytesToBuffer:0000000000000000 prvWriteBytesToBuffer
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:221    .text.prvWriteMessageToBuffer:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:227    .text.prvWriteMessageToBuffer:0000000000000000 prvWriteMessageToBuffer
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:327    .text.prvReadBytesFromBuffer:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:333    .text.prvReadBytesFromBuffer:0000000000000000 prvReadBytesFromBuffer
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:444    .text.prvReadMessageFromBuffer:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:450    .text.prvReadMessageFromBuffer:0000000000000000 prvReadMessageFromBuffer
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:550    .text.xStreamBufferGenericCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:557    .text.xStreamBufferGenericCreate:0000000000000000 xStreamBufferGenericCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:639    .text.vStreamBufferDelete:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:646    .text.vStreamBufferDelete:0000000000000000 vStreamBufferDelete
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:689    .text.xStreamBufferReset:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:696    .text.xStreamBufferReset:0000000000000000 xStreamBufferReset
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:777    .text.xStreamBufferSetTriggerLevel:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:784    .text.xStreamBufferSetTriggerLevel:0000000000000000 xStreamBufferSetTriggerLevel
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:831    .text.xStreamBufferSpacesAvailable:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:838    .text.xStreamBufferSpacesAvailable:0000000000000000 xStreamBufferSpacesAvailable
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:885    .text.xStreamBufferBytesAvailable:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:892    .text.xStreamBufferBytesAvailable:0000000000000000 xStreamBufferBytesAvailable
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:920    .text.xStreamBufferSend:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:927    .text.xStreamBufferSend:0000000000000000 xStreamBufferSend
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1137   .text.xStreamBufferSendFromISR:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1144   .text.xStreamBufferSendFromISR:0000000000000000 xStreamBufferSendFromISR
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1310   .text.xStreamBufferReceive:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1317   .text.xStreamBufferReceive:0000000000000000 xStreamBufferReceive
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1508   .text.xStreamBufferNextMessageLengthBytes:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1515   .text.xStreamBufferNextMessageLengthBytes:0000000000000000 xStreamBufferNextMessageLengthBytes
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1600   .text.xStreamBufferReceiveFromISR:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1607   .text.xStreamBufferReceiveFromISR:0000000000000000 xStreamBufferReceiveFromISR
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1763   .text.xStreamBufferIsEmpty:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1770   .text.xStreamBufferIsEmpty:0000000000000000 xStreamBufferIsEmpty
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1809   .text.xStreamBufferIsFull:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1816   .text.xStreamBufferIsFull:0000000000000000 xStreamBufferIsFull
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1873   .text.xStreamBufferSendCompletedFromISR:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1880   .text.xStreamBufferSendCompletedFromISR:0000000000000000 xStreamBufferSendCompletedFromISR
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1991   .text.xStreamBufferReceiveCompletedFromISR:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s:1998   .text.xStreamBufferReceiveCompletedFromISR:0000000000000000 xStreamBufferReceiveCompletedFromISR

UNDEFINED SYMBOLS
memset
memcpy
pvPortMalloc
vPortFree
vPortEnterCritical
vPortExitCritical
vTaskSetTimeOutState
xTaskNotifyStateClear
xTaskGetCurrentTaskHandle
xTaskNotifyWait
xTaskCheckForTimeOut
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccQ2rLj4.s 			page 75


vTaskSuspendAll
xTaskGenericNotify
xTaskResumeAll
xTaskGenericNotifyFromISR
