ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"cmsis_os.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.makeFreeRtosPriority,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	makeFreeRtosPriority:
  24              	.LVL0:
  25              	.LFB70:
  26              		.file 1 "FreeRTOS/src/cmsis_os.c"
   1:FreeRTOS/src/cmsis_os.c **** /* ----------------------------------------------------------------------
   2:FreeRTOS/src/cmsis_os.c ****  * $Date:        5. February 2013
   3:FreeRTOS/src/cmsis_os.c ****  * $Revision:    V1.02
   4:FreeRTOS/src/cmsis_os.c ****  *
   5:FreeRTOS/src/cmsis_os.c ****  * Project:      CMSIS-RTOS API
   6:FreeRTOS/src/cmsis_os.c ****  * Title:        cmsis_os.c
   7:FreeRTOS/src/cmsis_os.c ****  *
   8:FreeRTOS/src/cmsis_os.c ****  * Version 0.02
   9:FreeRTOS/src/cmsis_os.c ****  *    Initial Proposal Phase
  10:FreeRTOS/src/cmsis_os.c ****  * Version 0.03
  11:FreeRTOS/src/cmsis_os.c ****  *    osKernelStart added, optional feature: main started as thread
  12:FreeRTOS/src/cmsis_os.c ****  *    osSemaphores have standard behavior
  13:FreeRTOS/src/cmsis_os.c ****  *    osTimerCreate does not start the timer, added osTimerStart
  14:FreeRTOS/src/cmsis_os.c ****  *    osThreadPass is renamed to osThreadYield
  15:FreeRTOS/src/cmsis_os.c ****  * Version 1.01
  16:FreeRTOS/src/cmsis_os.c ****  *    Support for C++ interface
  17:FreeRTOS/src/cmsis_os.c ****  *     - const attribute removed from the osXxxxDef_t typedef's
  18:FreeRTOS/src/cmsis_os.c ****  *     - const attribute added to the osXxxxDef macros
  19:FreeRTOS/src/cmsis_os.c ****  *    Added: osTimerDelete, osMutexDelete, osSemaphoreDelete
  20:FreeRTOS/src/cmsis_os.c ****  *    Added: osKernelInitialize
  21:FreeRTOS/src/cmsis_os.c ****  * Version 1.02
  22:FreeRTOS/src/cmsis_os.c ****  *    Control functions for short timeouts in microsecond resolution:
  23:FreeRTOS/src/cmsis_os.c ****  *    Added: osKernelSysTick, osKernelSysTickFrequency, osKernelSysTickMicroSec
  24:FreeRTOS/src/cmsis_os.c ****  *    Removed: osSignalGet 
  25:FreeRTOS/src/cmsis_os.c ****  *    
  26:FreeRTOS/src/cmsis_os.c ****  *  
  27:FreeRTOS/src/cmsis_os.c ****  *----------------------------------------------------------------------------
  28:FreeRTOS/src/cmsis_os.c ****  *
  29:FreeRTOS/src/cmsis_os.c ****  * Portions Copyright © 2016 STMicroelectronics International N.V. All rights reserved.
  30:FreeRTOS/src/cmsis_os.c ****  * Portions Copyright (c) 2013 ARM LIMITED
  31:FreeRTOS/src/cmsis_os.c ****  * All rights reserved.
  32:FreeRTOS/src/cmsis_os.c ****  * Redistribution and use in source and binary forms, with or without
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 2


  33:FreeRTOS/src/cmsis_os.c ****  * modification, are permitted provided that the following conditions are met:
  34:FreeRTOS/src/cmsis_os.c ****  *  - Redistributions of source code must retain the above copyright
  35:FreeRTOS/src/cmsis_os.c ****  *    notice, this list of conditions and the following disclaimer.
  36:FreeRTOS/src/cmsis_os.c ****  *  - Redistributions in binary form must reproduce the above copyright
  37:FreeRTOS/src/cmsis_os.c ****  *    notice, this list of conditions and the following disclaimer in the
  38:FreeRTOS/src/cmsis_os.c ****  *    documentation and/or other materials provided with the distribution.
  39:FreeRTOS/src/cmsis_os.c ****  *  - Neither the name of ARM  nor the names of its contributors may be used
  40:FreeRTOS/src/cmsis_os.c ****  *    to endorse or promote products derived from this software without
  41:FreeRTOS/src/cmsis_os.c ****  *    specific prior written permission.
  42:FreeRTOS/src/cmsis_os.c ****  *
  43:FreeRTOS/src/cmsis_os.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  44:FreeRTOS/src/cmsis_os.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  45:FreeRTOS/src/cmsis_os.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  46:FreeRTOS/src/cmsis_os.c ****  * ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  47:FreeRTOS/src/cmsis_os.c ****  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  48:FreeRTOS/src/cmsis_os.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  49:FreeRTOS/src/cmsis_os.c ****  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  50:FreeRTOS/src/cmsis_os.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  51:FreeRTOS/src/cmsis_os.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  52:FreeRTOS/src/cmsis_os.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  53:FreeRTOS/src/cmsis_os.c ****  * POSSIBILITY OF SUCH DAMAGE.
  54:FreeRTOS/src/cmsis_os.c ****  *---------------------------------------------------------------------------*/
  55:FreeRTOS/src/cmsis_os.c **** 
  56:FreeRTOS/src/cmsis_os.c **** #include <string.h>
  57:FreeRTOS/src/cmsis_os.c **** #include "cmsis_os.h"
  58:FreeRTOS/src/cmsis_os.c **** 
  59:FreeRTOS/src/cmsis_os.c **** /*
  60:FreeRTOS/src/cmsis_os.c ****  * ARM Compiler 4/5
  61:FreeRTOS/src/cmsis_os.c ****  */
  62:FreeRTOS/src/cmsis_os.c **** #if   defined ( __CC_ARM )
  63:FreeRTOS/src/cmsis_os.c **** 
  64:FreeRTOS/src/cmsis_os.c ****   #define __ASM            __asm                                      
  65:FreeRTOS/src/cmsis_os.c ****   #define __INLINE         __inline                                     
  66:FreeRTOS/src/cmsis_os.c ****   #define __STATIC_INLINE  static __inline
  67:FreeRTOS/src/cmsis_os.c **** 
  68:FreeRTOS/src/cmsis_os.c ****   #include "cmsis_armcc.h"
  69:FreeRTOS/src/cmsis_os.c **** 
  70:FreeRTOS/src/cmsis_os.c **** /*
  71:FreeRTOS/src/cmsis_os.c ****  * GNU Compiler
  72:FreeRTOS/src/cmsis_os.c ****  */
  73:FreeRTOS/src/cmsis_os.c **** #elif defined ( __GNUC__ )
  74:FreeRTOS/src/cmsis_os.c **** 
  75:FreeRTOS/src/cmsis_os.c ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  76:FreeRTOS/src/cmsis_os.c ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  77:FreeRTOS/src/cmsis_os.c ****   #define __STATIC_INLINE  static inline
  78:FreeRTOS/src/cmsis_os.c **** 
  79:FreeRTOS/src/cmsis_os.c ****   #include "cmsis_gcc.h"
  80:FreeRTOS/src/cmsis_os.c **** 
  81:FreeRTOS/src/cmsis_os.c **** 
  82:FreeRTOS/src/cmsis_os.c **** /*
  83:FreeRTOS/src/cmsis_os.c ****  * IAR Compiler
  84:FreeRTOS/src/cmsis_os.c ****  */
  85:FreeRTOS/src/cmsis_os.c **** #elif defined ( __ICCARM__ )
  86:FreeRTOS/src/cmsis_os.c **** 
  87:FreeRTOS/src/cmsis_os.c ****   #ifndef   __ASM
  88:FreeRTOS/src/cmsis_os.c ****     #define __ASM                     __asm
  89:FreeRTOS/src/cmsis_os.c ****   #endif
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 3


  90:FreeRTOS/src/cmsis_os.c ****   #ifndef   __INLINE
  91:FreeRTOS/src/cmsis_os.c ****     #define __INLINE                  inline
  92:FreeRTOS/src/cmsis_os.c ****   #endif
  93:FreeRTOS/src/cmsis_os.c ****   #ifndef   __STATIC_INLINE
  94:FreeRTOS/src/cmsis_os.c ****     #define __STATIC_INLINE           static inline
  95:FreeRTOS/src/cmsis_os.c ****   #endif
  96:FreeRTOS/src/cmsis_os.c **** 
  97:FreeRTOS/src/cmsis_os.c ****   #include <cmsis_iar.h>
  98:FreeRTOS/src/cmsis_os.c **** #endif
  99:FreeRTOS/src/cmsis_os.c **** 
 100:FreeRTOS/src/cmsis_os.c **** extern void xPortSysTickHandler(void);
 101:FreeRTOS/src/cmsis_os.c **** 
 102:FreeRTOS/src/cmsis_os.c **** /* Convert from CMSIS type osPriority to FreeRTOS priority number */
 103:FreeRTOS/src/cmsis_os.c **** static unsigned portBASE_TYPE makeFreeRtosPriority (osPriority priority)
 104:FreeRTOS/src/cmsis_os.c **** {
  27              		.loc 1 104 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 105:FreeRTOS/src/cmsis_os.c ****   unsigned portBASE_TYPE fpriority = tskIDLE_PRIORITY;
  32              		.loc 1 105 3 view .LVU1
 106:FreeRTOS/src/cmsis_os.c ****   
 107:FreeRTOS/src/cmsis_os.c ****   if (priority != osPriorityError) {
  33              		.loc 1 107 3 view .LVU2
  34              		.loc 1 107 6 is_stmt 0 view .LVU3
  35 0000 8428     		cmp	r0, #132
  36 0002 01D0     		beq	.L3
 108:FreeRTOS/src/cmsis_os.c ****     fpriority += (priority - osPriorityIdle);
  37              		.loc 1 108 5 is_stmt 1 view .LVU4
  38              		.loc 1 108 15 is_stmt 0 view .LVU5
  39 0004 0330     		adds	r0, r0, #3
  40              	.LVL1:
  41              		.loc 1 108 15 view .LVU6
  42 0006 7047     		bx	lr
  43              	.LVL2:
  44              	.L3:
 105:FreeRTOS/src/cmsis_os.c ****   unsigned portBASE_TYPE fpriority = tskIDLE_PRIORITY;
  45              		.loc 1 105 26 view .LVU7
  46 0008 0020     		movs	r0, #0
  47              	.LVL3:
 109:FreeRTOS/src/cmsis_os.c ****   }
 110:FreeRTOS/src/cmsis_os.c ****   
 111:FreeRTOS/src/cmsis_os.c ****   return fpriority;
  48              		.loc 1 111 3 is_stmt 1 view .LVU8
 112:FreeRTOS/src/cmsis_os.c **** }
  49              		.loc 1 112 1 is_stmt 0 view .LVU9
  50 000a 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE70:
  54              		.section	.text.makeCmsisPriority,"ax",%progbits
  55              		.align	1
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu softvfp
  61              	makeCmsisPriority:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 4


  62              	.LVL4:
  63              	.LFB71:
 113:FreeRTOS/src/cmsis_os.c **** 
 114:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_uxTaskPriorityGet == 1)
 115:FreeRTOS/src/cmsis_os.c **** /* Convert from FreeRTOS priority number to CMSIS type osPriority */
 116:FreeRTOS/src/cmsis_os.c **** static osPriority makeCmsisPriority (unsigned portBASE_TYPE fpriority)
 117:FreeRTOS/src/cmsis_os.c **** {
  64              		.loc 1 117 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
 118:FreeRTOS/src/cmsis_os.c ****   osPriority priority = osPriorityError;
  69              		.loc 1 118 3 view .LVU11
 119:FreeRTOS/src/cmsis_os.c ****   
 120:FreeRTOS/src/cmsis_os.c ****   if ((fpriority - tskIDLE_PRIORITY) <= (osPriorityRealtime - osPriorityIdle)) {
  70              		.loc 1 120 3 view .LVU12
  71              		.loc 1 120 6 is_stmt 0 view .LVU13
  72 0000 0628     		cmp	r0, #6
  73 0002 02D8     		bhi	.L6
 121:FreeRTOS/src/cmsis_os.c ****     priority = (osPriority)((int)osPriorityIdle + (int)(fpriority - tskIDLE_PRIORITY));
  74              		.loc 1 121 5 is_stmt 1 view .LVU14
  75              		.loc 1 121 49 is_stmt 0 view .LVU15
  76 0004 0338     		subs	r0, r0, #3
  77              	.LVL5:
  78              		.loc 1 121 14 view .LVU16
  79 0006 00B2     		sxth	r0, r0
  80              	.LVL6:
  81              		.loc 1 121 14 view .LVU17
  82 0008 7047     		bx	lr
  83              	.LVL7:
  84              	.L6:
 118:FreeRTOS/src/cmsis_os.c ****   osPriority priority = osPriorityError;
  85              		.loc 1 118 14 view .LVU18
  86 000a 8420     		movs	r0, #132
  87              	.LVL8:
 122:FreeRTOS/src/cmsis_os.c ****   }
 123:FreeRTOS/src/cmsis_os.c ****   
 124:FreeRTOS/src/cmsis_os.c ****   return priority;
  88              		.loc 1 124 3 is_stmt 1 view .LVU19
 125:FreeRTOS/src/cmsis_os.c **** }
  89              		.loc 1 125 1 is_stmt 0 view .LVU20
  90 000c 7047     		bx	lr
  91              		.cfi_endproc
  92              	.LFE71:
  94              		.section	.text.inHandlerMode,"ax",%progbits
  95              		.align	1
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu softvfp
 101              	inHandlerMode:
 102              	.LFB72:
 126:FreeRTOS/src/cmsis_os.c **** #endif
 127:FreeRTOS/src/cmsis_os.c **** 
 128:FreeRTOS/src/cmsis_os.c **** 
 129:FreeRTOS/src/cmsis_os.c **** /* Determine whether we are in thread mode or handler mode. */
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 5


 130:FreeRTOS/src/cmsis_os.c **** static int inHandlerMode (void)
 131:FreeRTOS/src/cmsis_os.c **** {
 103              		.loc 1 131 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		@ link register save eliminated.
 132:FreeRTOS/src/cmsis_os.c ****   return __get_IPSR() != 0;
 108              		.loc 1 132 3 view .LVU22
 109              	.LBB8:
 110              	.LBI8:
 111              		.file 2 "CMSIS/inc/cmsis_gcc.h"
   1:CMSIS/inc/cmsis_gcc.h **** /**************************************************************************//**
   2:CMSIS/inc/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:CMSIS/inc/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:CMSIS/inc/cmsis_gcc.h ****  * @version  V5.0.4
   5:CMSIS/inc/cmsis_gcc.h ****  * @date     09. April 2018
   6:CMSIS/inc/cmsis_gcc.h ****  ******************************************************************************/
   7:CMSIS/inc/cmsis_gcc.h **** /*
   8:CMSIS/inc/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:CMSIS/inc/cmsis_gcc.h ****  *
  10:CMSIS/inc/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:CMSIS/inc/cmsis_gcc.h ****  *
  12:CMSIS/inc/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:CMSIS/inc/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:CMSIS/inc/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:CMSIS/inc/cmsis_gcc.h ****  *
  16:CMSIS/inc/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:CMSIS/inc/cmsis_gcc.h ****  *
  18:CMSIS/inc/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:CMSIS/inc/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:CMSIS/inc/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:CMSIS/inc/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:CMSIS/inc/cmsis_gcc.h ****  * limitations under the License.
  23:CMSIS/inc/cmsis_gcc.h ****  */
  24:CMSIS/inc/cmsis_gcc.h **** 
  25:CMSIS/inc/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:CMSIS/inc/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:CMSIS/inc/cmsis_gcc.h **** 
  28:CMSIS/inc/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:CMSIS/inc/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:CMSIS/inc/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:CMSIS/inc/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:CMSIS/inc/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:CMSIS/inc/cmsis_gcc.h **** 
  34:CMSIS/inc/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:CMSIS/inc/cmsis_gcc.h **** #ifndef __has_builtin
  36:CMSIS/inc/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:CMSIS/inc/cmsis_gcc.h **** #endif
  38:CMSIS/inc/cmsis_gcc.h **** 
  39:CMSIS/inc/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:CMSIS/inc/cmsis_gcc.h **** #ifndef   __ASM
  41:CMSIS/inc/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:CMSIS/inc/cmsis_gcc.h **** #endif
  43:CMSIS/inc/cmsis_gcc.h **** #ifndef   __INLINE
  44:CMSIS/inc/cmsis_gcc.h ****   #define __INLINE                               inline
  45:CMSIS/inc/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 6


  46:CMSIS/inc/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:CMSIS/inc/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:CMSIS/inc/cmsis_gcc.h **** #endif
  49:CMSIS/inc/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:CMSIS/inc/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:CMSIS/inc/cmsis_gcc.h **** #endif                                           
  52:CMSIS/inc/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:CMSIS/inc/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:CMSIS/inc/cmsis_gcc.h **** #endif
  55:CMSIS/inc/cmsis_gcc.h **** #ifndef   __USED
  56:CMSIS/inc/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:CMSIS/inc/cmsis_gcc.h **** #endif
  58:CMSIS/inc/cmsis_gcc.h **** #ifndef   __WEAK
  59:CMSIS/inc/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:CMSIS/inc/cmsis_gcc.h **** #endif
  61:CMSIS/inc/cmsis_gcc.h **** #ifndef   __PACKED
  62:CMSIS/inc/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:CMSIS/inc/cmsis_gcc.h **** #endif
  64:CMSIS/inc/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:CMSIS/inc/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:CMSIS/inc/cmsis_gcc.h **** #endif
  67:CMSIS/inc/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:CMSIS/inc/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:CMSIS/inc/cmsis_gcc.h **** #endif
  70:CMSIS/inc/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:CMSIS/inc/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:CMSIS/inc/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:CMSIS/inc/cmsis_gcc.h **** #endif
  78:CMSIS/inc/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:CMSIS/inc/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:CMSIS/inc/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:CMSIS/inc/cmsis_gcc.h **** #endif
  86:CMSIS/inc/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:CMSIS/inc/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:CMSIS/inc/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:CMSIS/inc/cmsis_gcc.h **** #endif
  94:CMSIS/inc/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:CMSIS/inc/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:CMSIS/inc/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:CMSIS/inc/cmsis_gcc.h **** #endif
 102:CMSIS/inc/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 7


 103:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:CMSIS/inc/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:CMSIS/inc/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:CMSIS/inc/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:CMSIS/inc/cmsis_gcc.h **** #endif
 110:CMSIS/inc/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:CMSIS/inc/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:CMSIS/inc/cmsis_gcc.h **** #endif
 113:CMSIS/inc/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:CMSIS/inc/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:CMSIS/inc/cmsis_gcc.h **** #endif
 116:CMSIS/inc/cmsis_gcc.h **** 
 117:CMSIS/inc/cmsis_gcc.h **** 
 118:CMSIS/inc/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:CMSIS/inc/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:CMSIS/inc/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:CMSIS/inc/cmsis_gcc.h ****   @{
 122:CMSIS/inc/cmsis_gcc.h ****  */
 123:CMSIS/inc/cmsis_gcc.h **** 
 124:CMSIS/inc/cmsis_gcc.h **** /**
 125:CMSIS/inc/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:CMSIS/inc/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:CMSIS/inc/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:CMSIS/inc/cmsis_gcc.h ****  */
 129:CMSIS/inc/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:CMSIS/inc/cmsis_gcc.h **** {
 131:CMSIS/inc/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:CMSIS/inc/cmsis_gcc.h **** }
 133:CMSIS/inc/cmsis_gcc.h **** 
 134:CMSIS/inc/cmsis_gcc.h **** 
 135:CMSIS/inc/cmsis_gcc.h **** /**
 136:CMSIS/inc/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:CMSIS/inc/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:CMSIS/inc/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:CMSIS/inc/cmsis_gcc.h ****  */
 140:CMSIS/inc/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:CMSIS/inc/cmsis_gcc.h **** {
 142:CMSIS/inc/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:CMSIS/inc/cmsis_gcc.h **** }
 144:CMSIS/inc/cmsis_gcc.h **** 
 145:CMSIS/inc/cmsis_gcc.h **** 
 146:CMSIS/inc/cmsis_gcc.h **** /**
 147:CMSIS/inc/cmsis_gcc.h ****   \brief   Get Control Register
 148:CMSIS/inc/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:CMSIS/inc/cmsis_gcc.h ****   \return               Control Register value
 150:CMSIS/inc/cmsis_gcc.h ****  */
 151:CMSIS/inc/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:CMSIS/inc/cmsis_gcc.h **** {
 153:CMSIS/inc/cmsis_gcc.h ****   uint32_t result;
 154:CMSIS/inc/cmsis_gcc.h **** 
 155:CMSIS/inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:CMSIS/inc/cmsis_gcc.h ****   return(result);
 157:CMSIS/inc/cmsis_gcc.h **** }
 158:CMSIS/inc/cmsis_gcc.h **** 
 159:CMSIS/inc/cmsis_gcc.h **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 8


 160:CMSIS/inc/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:CMSIS/inc/cmsis_gcc.h **** /**
 162:CMSIS/inc/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:CMSIS/inc/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:CMSIS/inc/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:CMSIS/inc/cmsis_gcc.h ****  */
 166:CMSIS/inc/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:CMSIS/inc/cmsis_gcc.h **** {
 168:CMSIS/inc/cmsis_gcc.h ****   uint32_t result;
 169:CMSIS/inc/cmsis_gcc.h **** 
 170:CMSIS/inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:CMSIS/inc/cmsis_gcc.h ****   return(result);
 172:CMSIS/inc/cmsis_gcc.h **** }
 173:CMSIS/inc/cmsis_gcc.h **** #endif
 174:CMSIS/inc/cmsis_gcc.h **** 
 175:CMSIS/inc/cmsis_gcc.h **** 
 176:CMSIS/inc/cmsis_gcc.h **** /**
 177:CMSIS/inc/cmsis_gcc.h ****   \brief   Set Control Register
 178:CMSIS/inc/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:CMSIS/inc/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:CMSIS/inc/cmsis_gcc.h ****  */
 181:CMSIS/inc/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:CMSIS/inc/cmsis_gcc.h **** {
 183:CMSIS/inc/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:CMSIS/inc/cmsis_gcc.h **** }
 185:CMSIS/inc/cmsis_gcc.h **** 
 186:CMSIS/inc/cmsis_gcc.h **** 
 187:CMSIS/inc/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:CMSIS/inc/cmsis_gcc.h **** /**
 189:CMSIS/inc/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:CMSIS/inc/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:CMSIS/inc/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:CMSIS/inc/cmsis_gcc.h ****  */
 193:CMSIS/inc/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:CMSIS/inc/cmsis_gcc.h **** {
 195:CMSIS/inc/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:CMSIS/inc/cmsis_gcc.h **** }
 197:CMSIS/inc/cmsis_gcc.h **** #endif
 198:CMSIS/inc/cmsis_gcc.h **** 
 199:CMSIS/inc/cmsis_gcc.h **** 
 200:CMSIS/inc/cmsis_gcc.h **** /**
 201:CMSIS/inc/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:CMSIS/inc/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:CMSIS/inc/cmsis_gcc.h ****   \return               IPSR Register value
 204:CMSIS/inc/cmsis_gcc.h ****  */
 205:CMSIS/inc/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 112              		.loc 2 205 31 view .LVU23
 113              	.LBB9:
 206:CMSIS/inc/cmsis_gcc.h **** {
 207:CMSIS/inc/cmsis_gcc.h ****   uint32_t result;
 114              		.loc 2 207 3 view .LVU24
 208:CMSIS/inc/cmsis_gcc.h **** 
 209:CMSIS/inc/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 115              		.loc 2 209 3 view .LVU25
 116              		.syntax unified
 117              	@ 209 "CMSIS/inc/cmsis_gcc.h" 1
 118 0000 EFF30580 		MRS r0, ipsr
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 9


 119              	@ 0 "" 2
 120              	.LVL9:
 210:CMSIS/inc/cmsis_gcc.h ****   return(result);
 121              		.loc 2 210 3 view .LVU26
 122              		.loc 2 210 3 is_stmt 0 view .LVU27
 123              		.thumb
 124              		.syntax unified
 125              	.LBE9:
 126              	.LBE8:
 133:FreeRTOS/src/cmsis_os.c **** }
 127              		.loc 1 133 1 view .LVU28
 128 0004 0030     		adds	r0, r0, #0
 129 0006 18BF     		it	ne
 130 0008 0120     		movne	r0, #1
 131 000a 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE72:
 135              		.section	.text.osKernelStart,"ax",%progbits
 136              		.align	1
 137              		.global	osKernelStart
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu softvfp
 143              	osKernelStart:
 144              	.LFB73:
 134:FreeRTOS/src/cmsis_os.c **** 
 135:FreeRTOS/src/cmsis_os.c **** /*********************** Kernel Control Functions *****************************/
 136:FreeRTOS/src/cmsis_os.c **** /**
 137:FreeRTOS/src/cmsis_os.c **** * @brief  Initialize the RTOS Kernel for creating objects.
 138:FreeRTOS/src/cmsis_os.c **** * @retval status code that indicates the execution status of the function.
 139:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osKernelInitialize shall be consistent in every CMSIS-RTOS.
 140:FreeRTOS/src/cmsis_os.c **** */
 141:FreeRTOS/src/cmsis_os.c **** osStatus osKernelInitialize (void);
 142:FreeRTOS/src/cmsis_os.c **** 
 143:FreeRTOS/src/cmsis_os.c **** /**
 144:FreeRTOS/src/cmsis_os.c **** * @brief  Start the RTOS Kernel with executing the specified thread.
 145:FreeRTOS/src/cmsis_os.c **** * @param  thread_def    thread definition referenced with \ref osThread.
 146:FreeRTOS/src/cmsis_os.c **** * @param  argument      pointer that is passed to the thread function as start argument.
 147:FreeRTOS/src/cmsis_os.c **** * @retval status code that indicates the execution status of the function
 148:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osKernelStart shall be consistent in every CMSIS-RTOS.
 149:FreeRTOS/src/cmsis_os.c **** */
 150:FreeRTOS/src/cmsis_os.c **** osStatus osKernelStart (void)
 151:FreeRTOS/src/cmsis_os.c **** {
 145              		.loc 1 151 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 0
 148              		@ frame_needed = 0, uses_anonymous_args = 0
 149 0000 08B5     		push	{r3, lr}
 150              	.LCFI0:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 3, -8
 153              		.cfi_offset 14, -4
 152:FreeRTOS/src/cmsis_os.c ****   vTaskStartScheduler();
 154              		.loc 1 152 3 view .LVU30
 155 0002 FFF7FEFF 		bl	vTaskStartScheduler
 156              	.LVL10:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 10


 153:FreeRTOS/src/cmsis_os.c ****   
 154:FreeRTOS/src/cmsis_os.c ****   return osOK;
 157              		.loc 1 154 3 view .LVU31
 155:FreeRTOS/src/cmsis_os.c **** }
 158              		.loc 1 155 1 is_stmt 0 view .LVU32
 159 0006 0020     		movs	r0, #0
 160 0008 08BD     		pop	{r3, pc}
 161              		.cfi_endproc
 162              	.LFE73:
 164              		.section	.text.osKernelRunning,"ax",%progbits
 165              		.align	1
 166              		.global	osKernelRunning
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 170              		.fpu softvfp
 172              	osKernelRunning:
 173              	.LFB74:
 156:FreeRTOS/src/cmsis_os.c **** 
 157:FreeRTOS/src/cmsis_os.c **** /**
 158:FreeRTOS/src/cmsis_os.c **** * @brief  Check if the RTOS kernel is already started
 159:FreeRTOS/src/cmsis_os.c **** * @param  None
 160:FreeRTOS/src/cmsis_os.c **** * @retval (0) RTOS is not started
 161:FreeRTOS/src/cmsis_os.c **** *         (1) RTOS is started
 162:FreeRTOS/src/cmsis_os.c **** *         (-1) if this feature is disabled in FreeRTOSConfig.h 
 163:FreeRTOS/src/cmsis_os.c **** * @note  MUST REMAIN UNCHANGED: \b osKernelRunning shall be consistent in every CMSIS-RTOS.
 164:FreeRTOS/src/cmsis_os.c **** */
 165:FreeRTOS/src/cmsis_os.c **** int32_t osKernelRunning(void)
 166:FreeRTOS/src/cmsis_os.c **** {
 174              		.loc 1 166 1 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 167:FreeRTOS/src/cmsis_os.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 168:FreeRTOS/src/cmsis_os.c ****   if (xTaskGetSchedulerState() == taskSCHEDULER_NOT_STARTED)
 169:FreeRTOS/src/cmsis_os.c ****     return 0;
 170:FreeRTOS/src/cmsis_os.c ****   else
 171:FreeRTOS/src/cmsis_os.c ****     return 1;
 172:FreeRTOS/src/cmsis_os.c **** #else
 173:FreeRTOS/src/cmsis_os.c **** 	return (-1);
 179              		.loc 1 173 2 view .LVU34
 174:FreeRTOS/src/cmsis_os.c **** #endif	
 175:FreeRTOS/src/cmsis_os.c **** }
 180              		.loc 1 175 1 is_stmt 0 view .LVU35
 181 0000 4FF0FF30 		mov	r0, #-1
 182 0004 7047     		bx	lr
 183              		.cfi_endproc
 184              	.LFE74:
 186              		.section	.text.osKernelSysTick,"ax",%progbits
 187              		.align	1
 188              		.global	osKernelSysTick
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 192              		.fpu softvfp
 194              	osKernelSysTick:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 11


 195              	.LFB75:
 176:FreeRTOS/src/cmsis_os.c **** 
 177:FreeRTOS/src/cmsis_os.c **** #if (defined (osFeature_SysTick)  &&  (osFeature_SysTick != 0))     // System Timer available
 178:FreeRTOS/src/cmsis_os.c **** /**
 179:FreeRTOS/src/cmsis_os.c **** * @brief  Get the value of the Kernel SysTick timer
 180:FreeRTOS/src/cmsis_os.c **** * @param  None
 181:FreeRTOS/src/cmsis_os.c **** * @retval None
 182:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osKernelSysTick shall be consistent in every CMSIS-RTOS.
 183:FreeRTOS/src/cmsis_os.c **** */
 184:FreeRTOS/src/cmsis_os.c **** uint32_t osKernelSysTick(void)
 185:FreeRTOS/src/cmsis_os.c **** {
 196              		.loc 1 185 1 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200 0000 08B5     		push	{r3, lr}
 201              	.LCFI1:
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 3, -8
 204              		.cfi_offset 14, -4
 186:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 205              		.loc 1 186 3 view .LVU37
 206              		.loc 1 186 7 is_stmt 0 view .LVU38
 207 0002 FFF7FEFF 		bl	inHandlerMode
 208              	.LVL11:
 209              		.loc 1 186 6 view .LVU39
 210 0006 10B1     		cbz	r0, .L12
 187:FreeRTOS/src/cmsis_os.c ****     return xTaskGetTickCountFromISR();
 211              		.loc 1 187 5 is_stmt 1 view .LVU40
 212              		.loc 1 187 12 is_stmt 0 view .LVU41
 213 0008 FFF7FEFF 		bl	xTaskGetTickCountFromISR
 214              	.LVL12:
 215              	.L11:
 188:FreeRTOS/src/cmsis_os.c ****   }
 189:FreeRTOS/src/cmsis_os.c ****   else {
 190:FreeRTOS/src/cmsis_os.c ****     return xTaskGetTickCount();
 191:FreeRTOS/src/cmsis_os.c ****   }
 192:FreeRTOS/src/cmsis_os.c **** }
 216              		.loc 1 192 1 view .LVU42
 217 000c 08BD     		pop	{r3, pc}
 218              	.L12:
 190:FreeRTOS/src/cmsis_os.c ****   }
 219              		.loc 1 190 5 is_stmt 1 view .LVU43
 190:FreeRTOS/src/cmsis_os.c ****   }
 220              		.loc 1 190 12 is_stmt 0 view .LVU44
 221 000e FFF7FEFF 		bl	xTaskGetTickCount
 222              	.LVL13:
 223 0012 FBE7     		b	.L11
 224              		.cfi_endproc
 225              	.LFE75:
 227              		.section	.text.osThreadCreate,"ax",%progbits
 228              		.align	1
 229              		.global	osThreadCreate
 230              		.syntax unified
 231              		.thumb
 232              		.thumb_func
 233              		.fpu softvfp
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 12


 235              	osThreadCreate:
 236              	.LVL14:
 237              	.LFB76:
 193:FreeRTOS/src/cmsis_os.c **** #endif    // System Timer available
 194:FreeRTOS/src/cmsis_os.c **** /*********************** Thread Management *****************************/
 195:FreeRTOS/src/cmsis_os.c **** /**
 196:FreeRTOS/src/cmsis_os.c **** * @brief  Create a thread and add it to Active Threads and set it to state READY.
 197:FreeRTOS/src/cmsis_os.c **** * @param  thread_def    thread definition referenced with \ref osThread.
 198:FreeRTOS/src/cmsis_os.c **** * @param  argument      pointer that is passed to the thread function as start argument.
 199:FreeRTOS/src/cmsis_os.c **** * @retval thread ID for reference by other functions or NULL in case of error.
 200:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadCreate shall be consistent in every CMSIS-RTOS.
 201:FreeRTOS/src/cmsis_os.c **** */
 202:FreeRTOS/src/cmsis_os.c **** osThreadId osThreadCreate (const osThreadDef_t *thread_def, void *argument)
 203:FreeRTOS/src/cmsis_os.c **** {
 238              		.loc 1 203 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 8
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		.loc 1 203 1 is_stmt 0 view .LVU46
 243 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 244              	.LCFI2:
 245              		.cfi_def_cfa_offset 20
 246              		.cfi_offset 4, -20
 247              		.cfi_offset 5, -16
 248              		.cfi_offset 6, -12
 249              		.cfi_offset 7, -8
 250              		.cfi_offset 14, -4
 251 0002 85B0     		sub	sp, sp, #20
 252              	.LCFI3:
 253              		.cfi_def_cfa_offset 40
 254 0004 0F46     		mov	r7, r1
 204:FreeRTOS/src/cmsis_os.c ****   TaskHandle_t handle;
 255              		.loc 1 204 3 is_stmt 1 view .LVU47
 205:FreeRTOS/src/cmsis_os.c ****   
 206:FreeRTOS/src/cmsis_os.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 ) &&  ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 207:FreeRTOS/src/cmsis_os.c ****   if((thread_def->buffer != NULL) && (thread_def->controlblock != NULL)) {
 208:FreeRTOS/src/cmsis_os.c ****     handle = xTaskCreateStatic((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->na
 209:FreeRTOS/src/cmsis_os.c ****               thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 210:FreeRTOS/src/cmsis_os.c ****               thread_def->buffer, thread_def->controlblock);
 211:FreeRTOS/src/cmsis_os.c ****   }
 212:FreeRTOS/src/cmsis_os.c ****   else {
 213:FreeRTOS/src/cmsis_os.c ****     if (xTaskCreate((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
 214:FreeRTOS/src/cmsis_os.c ****               thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 215:FreeRTOS/src/cmsis_os.c ****               &handle) != pdPASS)  {
 216:FreeRTOS/src/cmsis_os.c ****       return NULL;
 217:FreeRTOS/src/cmsis_os.c ****     } 
 218:FreeRTOS/src/cmsis_os.c ****   }
 219:FreeRTOS/src/cmsis_os.c **** #elif( configSUPPORT_STATIC_ALLOCATION == 1 )
 220:FreeRTOS/src/cmsis_os.c **** 
 221:FreeRTOS/src/cmsis_os.c ****     handle = xTaskCreateStatic((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->na
 222:FreeRTOS/src/cmsis_os.c ****               thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 223:FreeRTOS/src/cmsis_os.c ****               thread_def->buffer, thread_def->controlblock);
 224:FreeRTOS/src/cmsis_os.c **** #else
 225:FreeRTOS/src/cmsis_os.c ****   if (xTaskCreate((TaskFunction_t)thread_def->pthread,(const portCHAR *)thread_def->name,
 256              		.loc 1 225 3 view .LVU48
 257              		.loc 1 225 45 is_stmt 0 view .LVU49
 258 0006 4468     		ldr	r4, [r0, #4]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 13


 259              		.loc 1 225 83 view .LVU50
 260 0008 0568     		ldr	r5, [r0]
 226:FreeRTOS/src/cmsis_os.c ****                    thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 261              		.loc 1 226 30 view .LVU51
 262 000a 0669     		ldr	r6, [r0, #16]
 225:FreeRTOS/src/cmsis_os.c ****                    thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 263              		.loc 1 225 7 view .LVU52
 264 000c B0F90800 		ldrsh	r0, [r0, #8]
 265              	.LVL15:
 225:FreeRTOS/src/cmsis_os.c ****                    thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 266              		.loc 1 225 7 view .LVU53
 267 0010 FFF7FEFF 		bl	makeFreeRtosPriority
 268              	.LVL16:
 225:FreeRTOS/src/cmsis_os.c ****                    thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 269              		.loc 1 225 7 view .LVU54
 270 0014 03AB     		add	r3, sp, #12
 271 0016 0193     		str	r3, [sp, #4]
 272 0018 0090     		str	r0, [sp]
 273 001a 3B46     		mov	r3, r7
 274 001c B2B2     		uxth	r2, r6
 275 001e 2946     		mov	r1, r5
 276 0020 2046     		mov	r0, r4
 277 0022 FFF7FEFF 		bl	xTaskCreate
 278              	.LVL17:
 225:FreeRTOS/src/cmsis_os.c ****                    thread_def->stacksize, argument, makeFreeRtosPriority(thread_def->tpriority),
 279              		.loc 1 225 6 view .LVU55
 280 0026 0128     		cmp	r0, #1
 281 0028 02D1     		bne	.L17
 227:FreeRTOS/src/cmsis_os.c ****                    &handle) != pdPASS)  {
 228:FreeRTOS/src/cmsis_os.c ****     return NULL;
 229:FreeRTOS/src/cmsis_os.c ****   }     
 230:FreeRTOS/src/cmsis_os.c **** #endif
 231:FreeRTOS/src/cmsis_os.c ****   
 232:FreeRTOS/src/cmsis_os.c ****   return handle;
 282              		.loc 1 232 3 is_stmt 1 view .LVU56
 283              		.loc 1 232 10 is_stmt 0 view .LVU57
 284 002a 0398     		ldr	r0, [sp, #12]
 285              	.L15:
 233:FreeRTOS/src/cmsis_os.c **** }
 286              		.loc 1 233 1 view .LVU58
 287 002c 05B0     		add	sp, sp, #20
 288              	.LCFI4:
 289              		.cfi_remember_state
 290              		.cfi_def_cfa_offset 20
 291              		@ sp needed
 292 002e F0BD     		pop	{r4, r5, r6, r7, pc}
 293              	.LVL18:
 294              	.L17:
 295              	.LCFI5:
 296              		.cfi_restore_state
 228:FreeRTOS/src/cmsis_os.c ****   }     
 297              		.loc 1 228 12 view .LVU59
 298 0030 0020     		movs	r0, #0
 299 0032 FBE7     		b	.L15
 300              		.cfi_endproc
 301              	.LFE76:
 303              		.section	.text.osThreadGetId,"ax",%progbits
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 14


 304              		.align	1
 305              		.global	osThreadGetId
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu softvfp
 311              	osThreadGetId:
 312              	.LFB77:
 234:FreeRTOS/src/cmsis_os.c **** 
 235:FreeRTOS/src/cmsis_os.c **** /**
 236:FreeRTOS/src/cmsis_os.c **** * @brief  Return the thread ID of the current running thread.
 237:FreeRTOS/src/cmsis_os.c **** * @retval thread ID for reference by other functions or NULL in case of error.
 238:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadGetId shall be consistent in every CMSIS-RTOS.
 239:FreeRTOS/src/cmsis_os.c **** */
 240:FreeRTOS/src/cmsis_os.c **** osThreadId osThreadGetId (void)
 241:FreeRTOS/src/cmsis_os.c **** {
 313              		.loc 1 241 1 is_stmt 1 view -0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 08B5     		push	{r3, lr}
 318              	.LCFI6:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 3, -8
 321              		.cfi_offset 14, -4
 242:FreeRTOS/src/cmsis_os.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
 243:FreeRTOS/src/cmsis_os.c ****   return xTaskGetCurrentTaskHandle();
 322              		.loc 1 243 3 view .LVU61
 323              		.loc 1 243 10 is_stmt 0 view .LVU62
 324 0002 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 325              	.LVL19:
 244:FreeRTOS/src/cmsis_os.c **** #else
 245:FreeRTOS/src/cmsis_os.c **** 	return NULL;
 246:FreeRTOS/src/cmsis_os.c **** #endif
 247:FreeRTOS/src/cmsis_os.c **** }
 326              		.loc 1 247 1 view .LVU63
 327 0006 08BD     		pop	{r3, pc}
 328              		.cfi_endproc
 329              	.LFE77:
 331              		.section	.text.osThreadTerminate,"ax",%progbits
 332              		.align	1
 333              		.global	osThreadTerminate
 334              		.syntax unified
 335              		.thumb
 336              		.thumb_func
 337              		.fpu softvfp
 339              	osThreadTerminate:
 340              	.LVL20:
 341              	.LFB78:
 248:FreeRTOS/src/cmsis_os.c **** 
 249:FreeRTOS/src/cmsis_os.c **** /**
 250:FreeRTOS/src/cmsis_os.c **** * @brief  Terminate execution of a thread and remove it from Active Threads.
 251:FreeRTOS/src/cmsis_os.c **** * @param   thread_id   thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
 252:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 253:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadTerminate shall be consistent in every CMSIS-RTOS.
 254:FreeRTOS/src/cmsis_os.c **** */
 255:FreeRTOS/src/cmsis_os.c **** osStatus osThreadTerminate (osThreadId thread_id)
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 15


 256:FreeRTOS/src/cmsis_os.c **** {
 342              		.loc 1 256 1 is_stmt 1 view -0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              		.loc 1 256 1 is_stmt 0 view .LVU65
 347 0000 08B5     		push	{r3, lr}
 348              	.LCFI7:
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 3, -8
 351              		.cfi_offset 14, -4
 257:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_vTaskDelete == 1)
 258:FreeRTOS/src/cmsis_os.c ****   vTaskDelete(thread_id);
 352              		.loc 1 258 3 is_stmt 1 view .LVU66
 353 0002 FFF7FEFF 		bl	vTaskDelete
 354              	.LVL21:
 259:FreeRTOS/src/cmsis_os.c ****   return osOK;
 355              		.loc 1 259 3 view .LVU67
 260:FreeRTOS/src/cmsis_os.c **** #else
 261:FreeRTOS/src/cmsis_os.c ****   return osErrorOS;
 262:FreeRTOS/src/cmsis_os.c **** #endif
 263:FreeRTOS/src/cmsis_os.c **** }
 356              		.loc 1 263 1 is_stmt 0 view .LVU68
 357 0006 0020     		movs	r0, #0
 358 0008 08BD     		pop	{r3, pc}
 359              		.cfi_endproc
 360              	.LFE78:
 362              		.section	.text.osThreadYield,"ax",%progbits
 363              		.align	1
 364              		.global	osThreadYield
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu softvfp
 370              	osThreadYield:
 371              	.LFB79:
 264:FreeRTOS/src/cmsis_os.c **** 
 265:FreeRTOS/src/cmsis_os.c **** /**
 266:FreeRTOS/src/cmsis_os.c **** * @brief  Pass control to next thread that is in state \b READY.
 267:FreeRTOS/src/cmsis_os.c **** * @retval status code that indicates the execution status of the function.
 268:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadYield shall be consistent in every CMSIS-RTOS.
 269:FreeRTOS/src/cmsis_os.c **** */
 270:FreeRTOS/src/cmsis_os.c **** osStatus osThreadYield (void)
 271:FreeRTOS/src/cmsis_os.c **** {
 372              		.loc 1 271 1 is_stmt 1 view -0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 272:FreeRTOS/src/cmsis_os.c ****   taskYIELD();
 377              		.loc 1 272 3 view .LVU70
 378 0000 044B     		ldr	r3, .L24
 379 0002 4FF08052 		mov	r2, #268435456
 380 0006 1A60     		str	r2, [r3]
 381              		.loc 1 272 3 view .LVU71
 382              		.syntax unified
 383              	@ 272 "FreeRTOS/src/cmsis_os.c" 1
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 16


 384 0008 BFF34F8F 		dsb
 385              	@ 0 "" 2
 386              		.loc 1 272 3 view .LVU72
 387              	@ 272 "FreeRTOS/src/cmsis_os.c" 1
 388 000c BFF36F8F 		isb
 389              	@ 0 "" 2
 390              		.loc 1 272 14 view .LVU73
 273:FreeRTOS/src/cmsis_os.c ****   
 274:FreeRTOS/src/cmsis_os.c ****   return osOK;
 391              		.loc 1 274 3 view .LVU74
 275:FreeRTOS/src/cmsis_os.c **** }
 392              		.loc 1 275 1 is_stmt 0 view .LVU75
 393              		.thumb
 394              		.syntax unified
 395 0010 0020     		movs	r0, #0
 396 0012 7047     		bx	lr
 397              	.L25:
 398              		.align	2
 399              	.L24:
 400 0014 04ED00E0 		.word	-536810236
 401              		.cfi_endproc
 402              	.LFE79:
 404              		.section	.text.osThreadSetPriority,"ax",%progbits
 405              		.align	1
 406              		.global	osThreadSetPriority
 407              		.syntax unified
 408              		.thumb
 409              		.thumb_func
 410              		.fpu softvfp
 412              	osThreadSetPriority:
 413              	.LVL22:
 414              	.LFB80:
 276:FreeRTOS/src/cmsis_os.c **** 
 277:FreeRTOS/src/cmsis_os.c **** /**
 278:FreeRTOS/src/cmsis_os.c **** * @brief   Change priority of an active thread.
 279:FreeRTOS/src/cmsis_os.c **** * @param   thread_id     thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
 280:FreeRTOS/src/cmsis_os.c **** * @param   priority      new priority value for the thread function.
 281:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 282:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadSetPriority shall be consistent in every CMSIS-RTOS.
 283:FreeRTOS/src/cmsis_os.c **** */
 284:FreeRTOS/src/cmsis_os.c **** osStatus osThreadSetPriority (osThreadId thread_id, osPriority priority)
 285:FreeRTOS/src/cmsis_os.c **** {
 415              		.loc 1 285 1 is_stmt 1 view -0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 0, uses_anonymous_args = 0
 419              		.loc 1 285 1 is_stmt 0 view .LVU77
 420 0000 10B5     		push	{r4, lr}
 421              	.LCFI8:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 4, -8
 424              		.cfi_offset 14, -4
 425 0002 0446     		mov	r4, r0
 286:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_vTaskPrioritySet == 1)
 287:FreeRTOS/src/cmsis_os.c ****   vTaskPrioritySet(thread_id, makeFreeRtosPriority(priority));
 426              		.loc 1 287 3 is_stmt 1 view .LVU78
 427 0004 0846     		mov	r0, r1
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 17


 428              	.LVL23:
 429              		.loc 1 287 3 is_stmt 0 view .LVU79
 430 0006 FFF7FEFF 		bl	makeFreeRtosPriority
 431              	.LVL24:
 432              		.loc 1 287 3 view .LVU80
 433 000a 0146     		mov	r1, r0
 434 000c 2046     		mov	r0, r4
 435 000e FFF7FEFF 		bl	vTaskPrioritySet
 436              	.LVL25:
 288:FreeRTOS/src/cmsis_os.c ****   return osOK;
 437              		.loc 1 288 3 is_stmt 1 view .LVU81
 289:FreeRTOS/src/cmsis_os.c **** #else
 290:FreeRTOS/src/cmsis_os.c ****   return osErrorOS;
 291:FreeRTOS/src/cmsis_os.c **** #endif
 292:FreeRTOS/src/cmsis_os.c **** }
 438              		.loc 1 292 1 is_stmt 0 view .LVU82
 439 0012 0020     		movs	r0, #0
 440 0014 10BD     		pop	{r4, pc}
 441              		.loc 1 292 1 view .LVU83
 442              		.cfi_endproc
 443              	.LFE80:
 445              		.section	.text.osThreadGetPriority,"ax",%progbits
 446              		.align	1
 447              		.global	osThreadGetPriority
 448              		.syntax unified
 449              		.thumb
 450              		.thumb_func
 451              		.fpu softvfp
 453              	osThreadGetPriority:
 454              	.LVL26:
 455              	.LFB81:
 293:FreeRTOS/src/cmsis_os.c **** 
 294:FreeRTOS/src/cmsis_os.c **** /**
 295:FreeRTOS/src/cmsis_os.c **** * @brief   Get current priority of an active thread.
 296:FreeRTOS/src/cmsis_os.c **** * @param   thread_id     thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
 297:FreeRTOS/src/cmsis_os.c **** * @retval  current priority value of the thread function.
 298:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osThreadGetPriority shall be consistent in every CMSIS-RTOS.
 299:FreeRTOS/src/cmsis_os.c **** */
 300:FreeRTOS/src/cmsis_os.c **** osPriority osThreadGetPriority (osThreadId thread_id)
 301:FreeRTOS/src/cmsis_os.c **** {
 456              		.loc 1 301 1 is_stmt 1 view -0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		.loc 1 301 1 is_stmt 0 view .LVU85
 461 0000 10B5     		push	{r4, lr}
 462              	.LCFI9:
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 4, -8
 465              		.cfi_offset 14, -4
 466 0002 0446     		mov	r4, r0
 302:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_uxTaskPriorityGet == 1)
 303:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode())
 467              		.loc 1 303 3 is_stmt 1 view .LVU86
 468              		.loc 1 303 7 is_stmt 0 view .LVU87
 469 0004 FFF7FEFF 		bl	inHandlerMode
 470              	.LVL27:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 18


 471              		.loc 1 303 6 view .LVU88
 472 0008 28B1     		cbz	r0, .L29
 304:FreeRTOS/src/cmsis_os.c ****   {
 305:FreeRTOS/src/cmsis_os.c ****     return makeCmsisPriority(uxTaskPriorityGetFromISR(thread_id));  
 473              		.loc 1 305 5 is_stmt 1 view .LVU89
 474              		.loc 1 305 12 is_stmt 0 view .LVU90
 475 000a 2046     		mov	r0, r4
 476 000c FFF7FEFF 		bl	uxTaskPriorityGetFromISR
 477              	.LVL28:
 478 0010 FFF7FEFF 		bl	makeCmsisPriority
 479              	.LVL29:
 480              	.L30:
 306:FreeRTOS/src/cmsis_os.c ****   }
 307:FreeRTOS/src/cmsis_os.c ****   else
 308:FreeRTOS/src/cmsis_os.c ****   {  
 309:FreeRTOS/src/cmsis_os.c ****     return makeCmsisPriority(uxTaskPriorityGet(thread_id));
 310:FreeRTOS/src/cmsis_os.c ****   }
 311:FreeRTOS/src/cmsis_os.c **** #else
 312:FreeRTOS/src/cmsis_os.c ****   return osPriorityError;
 313:FreeRTOS/src/cmsis_os.c **** #endif
 314:FreeRTOS/src/cmsis_os.c **** }
 481              		.loc 1 314 1 view .LVU91
 482 0014 10BD     		pop	{r4, pc}
 483              	.LVL30:
 484              	.L29:
 309:FreeRTOS/src/cmsis_os.c ****   }
 485              		.loc 1 309 5 is_stmt 1 view .LVU92
 309:FreeRTOS/src/cmsis_os.c ****   }
 486              		.loc 1 309 12 is_stmt 0 view .LVU93
 487 0016 2046     		mov	r0, r4
 488 0018 FFF7FEFF 		bl	uxTaskPriorityGet
 489              	.LVL31:
 490 001c FFF7FEFF 		bl	makeCmsisPriority
 491              	.LVL32:
 492 0020 F8E7     		b	.L30
 493              		.cfi_endproc
 494              	.LFE81:
 496              		.section	.text.osDelay,"ax",%progbits
 497              		.align	1
 498              		.global	osDelay
 499              		.syntax unified
 500              		.thumb
 501              		.thumb_func
 502              		.fpu softvfp
 504              	osDelay:
 505              	.LVL33:
 506              	.LFB82:
 315:FreeRTOS/src/cmsis_os.c **** 
 316:FreeRTOS/src/cmsis_os.c **** /*********************** Generic Wait Functions *******************************/
 317:FreeRTOS/src/cmsis_os.c **** /**
 318:FreeRTOS/src/cmsis_os.c **** * @brief   Wait for Timeout (Time Delay)
 319:FreeRTOS/src/cmsis_os.c **** * @param   millisec      time delay value
 320:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 321:FreeRTOS/src/cmsis_os.c **** */
 322:FreeRTOS/src/cmsis_os.c **** osStatus osDelay (uint32_t millisec)
 323:FreeRTOS/src/cmsis_os.c **** {
 507              		.loc 1 323 1 is_stmt 1 view -0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 19


 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511              		.loc 1 323 1 is_stmt 0 view .LVU95
 512 0000 08B5     		push	{r3, lr}
 513              	.LCFI10:
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 3, -8
 516              		.cfi_offset 14, -4
 324:FreeRTOS/src/cmsis_os.c **** #if INCLUDE_vTaskDelay
 325:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks = millisec / portTICK_PERIOD_MS;
 517              		.loc 1 325 3 is_stmt 1 view .LVU96
 518              	.LVL34:
 326:FreeRTOS/src/cmsis_os.c ****   
 327:FreeRTOS/src/cmsis_os.c ****   vTaskDelay(ticks ? ticks : 1);          /* Minimum delay = 1 tick */
 519              		.loc 1 327 3 view .LVU97
 520 0002 0346     		mov	r3, r0
 521 0004 00B9     		cbnz	r0, .L33
 522 0006 0123     		movs	r3, #1
 523              	.L33:
 524              		.loc 1 327 3 is_stmt 0 discriminator 4 view .LVU98
 525 0008 1846     		mov	r0, r3
 526              	.LVL35:
 527              		.loc 1 327 3 discriminator 4 view .LVU99
 528 000a FFF7FEFF 		bl	vTaskDelay
 529              	.LVL36:
 328:FreeRTOS/src/cmsis_os.c ****   
 329:FreeRTOS/src/cmsis_os.c ****   return osOK;
 530              		.loc 1 329 3 is_stmt 1 discriminator 4 view .LVU100
 330:FreeRTOS/src/cmsis_os.c **** #else
 331:FreeRTOS/src/cmsis_os.c ****   (void) millisec;
 332:FreeRTOS/src/cmsis_os.c ****   
 333:FreeRTOS/src/cmsis_os.c ****   return osErrorResource;
 334:FreeRTOS/src/cmsis_os.c **** #endif
 335:FreeRTOS/src/cmsis_os.c **** }
 531              		.loc 1 335 1 is_stmt 0 discriminator 4 view .LVU101
 532 000e 0020     		movs	r0, #0
 533 0010 08BD     		pop	{r3, pc}
 534              		.cfi_endproc
 535              	.LFE82:
 537              		.section	.text.osTimerCreate,"ax",%progbits
 538              		.align	1
 539              		.global	osTimerCreate
 540              		.syntax unified
 541              		.thumb
 542              		.thumb_func
 543              		.fpu softvfp
 545              	osTimerCreate:
 546              	.LVL37:
 547              	.LFB83:
 336:FreeRTOS/src/cmsis_os.c **** 
 337:FreeRTOS/src/cmsis_os.c **** #if (defined (osFeature_Wait)  &&  (osFeature_Wait != 0)) /* Generic Wait available */
 338:FreeRTOS/src/cmsis_os.c **** /**
 339:FreeRTOS/src/cmsis_os.c **** * @brief  Wait for Signal, Message, Mail, or Timeout
 340:FreeRTOS/src/cmsis_os.c **** * @param   millisec  timeout value or 0 in case of no time-out
 341:FreeRTOS/src/cmsis_os.c **** * @retval  event that contains signal, message, or mail information or error code.
 342:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osWait shall be consistent in every CMSIS-RTOS.
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 20


 343:FreeRTOS/src/cmsis_os.c **** */
 344:FreeRTOS/src/cmsis_os.c **** osEvent osWait (uint32_t millisec);
 345:FreeRTOS/src/cmsis_os.c **** 
 346:FreeRTOS/src/cmsis_os.c **** #endif  /* Generic Wait available */
 347:FreeRTOS/src/cmsis_os.c **** 
 348:FreeRTOS/src/cmsis_os.c **** /***********************  Timer Management Functions ***************************/
 349:FreeRTOS/src/cmsis_os.c **** /**
 350:FreeRTOS/src/cmsis_os.c **** * @brief  Create a timer.
 351:FreeRTOS/src/cmsis_os.c **** * @param  timer_def     timer object referenced with \ref osTimer.
 352:FreeRTOS/src/cmsis_os.c **** * @param  type          osTimerOnce for one-shot or osTimerPeriodic for periodic behavior.
 353:FreeRTOS/src/cmsis_os.c **** * @param  argument      argument to the timer call back function.
 354:FreeRTOS/src/cmsis_os.c **** * @retval  timer ID for reference by other functions or NULL in case of error.
 355:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osTimerCreate shall be consistent in every CMSIS-RTOS.
 356:FreeRTOS/src/cmsis_os.c **** */
 357:FreeRTOS/src/cmsis_os.c **** osTimerId osTimerCreate (const osTimerDef_t *timer_def, os_timer_type type, void *argument)
 358:FreeRTOS/src/cmsis_os.c **** {
 548              		.loc 1 358 1 is_stmt 1 view -0
 549              		.cfi_startproc
 550              		@ args = 0, pretend = 0, frame = 0
 551              		@ frame_needed = 0, uses_anonymous_args = 0
 552              		@ link register save eliminated.
 359:FreeRTOS/src/cmsis_os.c **** #if (configUSE_TIMERS == 1)
 360:FreeRTOS/src/cmsis_os.c **** 
 361:FreeRTOS/src/cmsis_os.c **** #if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) 
 362:FreeRTOS/src/cmsis_os.c ****   if(timer_def->controlblock != NULL) {
 363:FreeRTOS/src/cmsis_os.c ****     return xTimerCreateStatic((const char *)"",
 364:FreeRTOS/src/cmsis_os.c ****                       1, // period should be filled when starting the Timer using osTimerStart
 365:FreeRTOS/src/cmsis_os.c ****                       (type == osTimerPeriodic) ? pdTRUE : pdFALSE,
 366:FreeRTOS/src/cmsis_os.c ****                       (void *) argument,
 367:FreeRTOS/src/cmsis_os.c ****                       (TaskFunction_t)timer_def->ptimer,
 368:FreeRTOS/src/cmsis_os.c ****                       (StaticTimer_t *)timer_def->controlblock);
 369:FreeRTOS/src/cmsis_os.c ****   }
 370:FreeRTOS/src/cmsis_os.c ****   else {
 371:FreeRTOS/src/cmsis_os.c ****     return xTimerCreate((const char *)"",
 372:FreeRTOS/src/cmsis_os.c ****                       1, // period should be filled when starting the Timer using osTimerStart
 373:FreeRTOS/src/cmsis_os.c ****                       (type == osTimerPeriodic) ? pdTRUE : pdFALSE,
 374:FreeRTOS/src/cmsis_os.c ****                       (void *) argument,
 375:FreeRTOS/src/cmsis_os.c ****                       (TaskFunction_t)timer_def->ptimer);
 376:FreeRTOS/src/cmsis_os.c ****  }
 377:FreeRTOS/src/cmsis_os.c **** #elif( configSUPPORT_STATIC_ALLOCATION == 1 )
 378:FreeRTOS/src/cmsis_os.c ****   return xTimerCreateStatic((const char *)"",
 379:FreeRTOS/src/cmsis_os.c ****                       1, // period should be filled when starting the Timer using osTimerStart
 380:FreeRTOS/src/cmsis_os.c ****                       (type == osTimerPeriodic) ? pdTRUE : pdFALSE,
 381:FreeRTOS/src/cmsis_os.c ****                       (void *) argument,
 382:FreeRTOS/src/cmsis_os.c ****                       (TaskFunction_t)timer_def->ptimer,
 383:FreeRTOS/src/cmsis_os.c ****                       (StaticTimer_t *)timer_def->controlblock);  
 384:FreeRTOS/src/cmsis_os.c **** #else
 385:FreeRTOS/src/cmsis_os.c ****   return xTimerCreate((const char *)"",
 386:FreeRTOS/src/cmsis_os.c ****                       1, // period should be filled when starting the Timer using osTimerStart
 387:FreeRTOS/src/cmsis_os.c ****                       (type == osTimerPeriodic) ? pdTRUE : pdFALSE,
 388:FreeRTOS/src/cmsis_os.c ****                       (void *) argument,
 389:FreeRTOS/src/cmsis_os.c ****                       (TaskFunction_t)timer_def->ptimer);
 390:FreeRTOS/src/cmsis_os.c **** #endif
 391:FreeRTOS/src/cmsis_os.c **** 
 392:FreeRTOS/src/cmsis_os.c **** #else 
 393:FreeRTOS/src/cmsis_os.c **** 	return NULL;
 553              		.loc 1 393 2 view .LVU103
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 21


 394:FreeRTOS/src/cmsis_os.c **** #endif
 395:FreeRTOS/src/cmsis_os.c **** }
 554              		.loc 1 395 1 is_stmt 0 view .LVU104
 555 0000 0020     		movs	r0, #0
 556              	.LVL38:
 557              		.loc 1 395 1 view .LVU105
 558 0002 7047     		bx	lr
 559              		.cfi_endproc
 560              	.LFE83:
 562              		.section	.text.osTimerStart,"ax",%progbits
 563              		.align	1
 564              		.global	osTimerStart
 565              		.syntax unified
 566              		.thumb
 567              		.thumb_func
 568              		.fpu softvfp
 570              	osTimerStart:
 571              	.LVL39:
 572              	.LFB84:
 396:FreeRTOS/src/cmsis_os.c **** 
 397:FreeRTOS/src/cmsis_os.c **** /**
 398:FreeRTOS/src/cmsis_os.c **** * @brief  Start or restart a timer.
 399:FreeRTOS/src/cmsis_os.c **** * @param  timer_id      timer ID obtained by \ref osTimerCreate.
 400:FreeRTOS/src/cmsis_os.c **** * @param  millisec      time delay value of the timer.
 401:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function
 402:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osTimerStart shall be consistent in every CMSIS-RTOS.
 403:FreeRTOS/src/cmsis_os.c **** */
 404:FreeRTOS/src/cmsis_os.c **** osStatus osTimerStart (osTimerId timer_id, uint32_t millisec)
 405:FreeRTOS/src/cmsis_os.c **** {
 573              		.loc 1 405 1 is_stmt 1 view -0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 0, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 406:FreeRTOS/src/cmsis_os.c ****   osStatus result = osOK;
 578              		.loc 1 406 3 view .LVU107
 407:FreeRTOS/src/cmsis_os.c **** #if (configUSE_TIMERS == 1)  
 408:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 409:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks = millisec / portTICK_PERIOD_MS;
 410:FreeRTOS/src/cmsis_os.c **** 
 411:FreeRTOS/src/cmsis_os.c ****   if (ticks == 0)
 412:FreeRTOS/src/cmsis_os.c ****     ticks = 1;
 413:FreeRTOS/src/cmsis_os.c ****     
 414:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) 
 415:FreeRTOS/src/cmsis_os.c ****   {
 416:FreeRTOS/src/cmsis_os.c ****     if (xTimerChangePeriodFromISR(timer_id, ticks, &taskWoken) != pdPASS)
 417:FreeRTOS/src/cmsis_os.c ****     {
 418:FreeRTOS/src/cmsis_os.c ****       result = osErrorOS;
 419:FreeRTOS/src/cmsis_os.c ****     }
 420:FreeRTOS/src/cmsis_os.c ****     else
 421:FreeRTOS/src/cmsis_os.c ****     {
 422:FreeRTOS/src/cmsis_os.c ****       portEND_SWITCHING_ISR(taskWoken);     
 423:FreeRTOS/src/cmsis_os.c ****     }
 424:FreeRTOS/src/cmsis_os.c ****   }
 425:FreeRTOS/src/cmsis_os.c ****   else 
 426:FreeRTOS/src/cmsis_os.c ****   {
 427:FreeRTOS/src/cmsis_os.c ****     if (xTimerChangePeriod(timer_id, ticks, 0) != pdPASS)
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 22


 428:FreeRTOS/src/cmsis_os.c ****       result = osErrorOS;
 429:FreeRTOS/src/cmsis_os.c ****   }
 430:FreeRTOS/src/cmsis_os.c **** 
 431:FreeRTOS/src/cmsis_os.c **** #else 
 432:FreeRTOS/src/cmsis_os.c ****   result = osErrorOS;
 579              		.loc 1 432 3 view .LVU108
 433:FreeRTOS/src/cmsis_os.c **** #endif
 434:FreeRTOS/src/cmsis_os.c ****   return result;
 580              		.loc 1 434 3 view .LVU109
 435:FreeRTOS/src/cmsis_os.c **** }
 581              		.loc 1 435 1 is_stmt 0 view .LVU110
 582 0000 FF20     		movs	r0, #255
 583              	.LVL40:
 584              		.loc 1 435 1 view .LVU111
 585 0002 7047     		bx	lr
 586              		.cfi_endproc
 587              	.LFE84:
 589              		.section	.text.osTimerStop,"ax",%progbits
 590              		.align	1
 591              		.global	osTimerStop
 592              		.syntax unified
 593              		.thumb
 594              		.thumb_func
 595              		.fpu softvfp
 597              	osTimerStop:
 598              	.LVL41:
 599              	.LFB85:
 436:FreeRTOS/src/cmsis_os.c **** 
 437:FreeRTOS/src/cmsis_os.c **** /**
 438:FreeRTOS/src/cmsis_os.c **** * @brief  Stop a timer.
 439:FreeRTOS/src/cmsis_os.c **** * @param  timer_id      timer ID obtained by \ref osTimerCreate
 440:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 441:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osTimerStop shall be consistent in every CMSIS-RTOS.
 442:FreeRTOS/src/cmsis_os.c **** */
 443:FreeRTOS/src/cmsis_os.c **** osStatus osTimerStop (osTimerId timer_id)
 444:FreeRTOS/src/cmsis_os.c **** {
 600              		.loc 1 444 1 is_stmt 1 view -0
 601              		.cfi_startproc
 602              		@ args = 0, pretend = 0, frame = 0
 603              		@ frame_needed = 0, uses_anonymous_args = 0
 604              		@ link register save eliminated.
 445:FreeRTOS/src/cmsis_os.c ****   osStatus result = osOK;
 605              		.loc 1 445 3 view .LVU113
 446:FreeRTOS/src/cmsis_os.c **** #if (configUSE_TIMERS == 1)  
 447:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 448:FreeRTOS/src/cmsis_os.c **** 
 449:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 450:FreeRTOS/src/cmsis_os.c ****     if (xTimerStopFromISR(timer_id, &taskWoken) != pdPASS) {
 451:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 452:FreeRTOS/src/cmsis_os.c ****     }
 453:FreeRTOS/src/cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 454:FreeRTOS/src/cmsis_os.c ****   }
 455:FreeRTOS/src/cmsis_os.c ****   else {
 456:FreeRTOS/src/cmsis_os.c ****     if (xTimerStop(timer_id, 0) != pdPASS) {
 457:FreeRTOS/src/cmsis_os.c ****       result = osErrorOS;
 458:FreeRTOS/src/cmsis_os.c ****     }
 459:FreeRTOS/src/cmsis_os.c ****   }
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 23


 460:FreeRTOS/src/cmsis_os.c **** #else 
 461:FreeRTOS/src/cmsis_os.c ****   result = osErrorOS;
 606              		.loc 1 461 3 view .LVU114
 462:FreeRTOS/src/cmsis_os.c **** #endif 
 463:FreeRTOS/src/cmsis_os.c ****   return result;
 607              		.loc 1 463 3 view .LVU115
 464:FreeRTOS/src/cmsis_os.c **** }
 608              		.loc 1 464 1 is_stmt 0 view .LVU116
 609 0000 FF20     		movs	r0, #255
 610              	.LVL42:
 611              		.loc 1 464 1 view .LVU117
 612 0002 7047     		bx	lr
 613              		.cfi_endproc
 614              	.LFE85:
 616              		.section	.text.osTimerDelete,"ax",%progbits
 617              		.align	1
 618              		.global	osTimerDelete
 619              		.syntax unified
 620              		.thumb
 621              		.thumb_func
 622              		.fpu softvfp
 624              	osTimerDelete:
 625              	.LVL43:
 626              	.LFB86:
 465:FreeRTOS/src/cmsis_os.c **** 
 466:FreeRTOS/src/cmsis_os.c **** /**
 467:FreeRTOS/src/cmsis_os.c **** * @brief  Delete a timer.
 468:FreeRTOS/src/cmsis_os.c **** * @param  timer_id      timer ID obtained by \ref osTimerCreate
 469:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 470:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osTimerDelete shall be consistent in every CMSIS-RTOS.
 471:FreeRTOS/src/cmsis_os.c **** */
 472:FreeRTOS/src/cmsis_os.c **** osStatus osTimerDelete (osTimerId timer_id)
 473:FreeRTOS/src/cmsis_os.c **** {
 627              		.loc 1 473 1 is_stmt 1 view -0
 628              		.cfi_startproc
 629              		@ args = 0, pretend = 0, frame = 0
 630              		@ frame_needed = 0, uses_anonymous_args = 0
 631              		@ link register save eliminated.
 474:FreeRTOS/src/cmsis_os.c **** osStatus result = osOK;
 632              		.loc 1 474 1 view .LVU119
 475:FreeRTOS/src/cmsis_os.c **** 
 476:FreeRTOS/src/cmsis_os.c **** #if (configUSE_TIMERS == 1)
 477:FreeRTOS/src/cmsis_os.c **** 
 478:FreeRTOS/src/cmsis_os.c ****    if (inHandlerMode()) {
 479:FreeRTOS/src/cmsis_os.c ****      return osErrorISR;
 480:FreeRTOS/src/cmsis_os.c ****   }
 481:FreeRTOS/src/cmsis_os.c ****   else { 
 482:FreeRTOS/src/cmsis_os.c ****     if ((xTimerDelete(timer_id, osWaitForever )) != pdPASS) {
 483:FreeRTOS/src/cmsis_os.c ****       result = osErrorOS;
 484:FreeRTOS/src/cmsis_os.c ****     }
 485:FreeRTOS/src/cmsis_os.c ****   } 
 486:FreeRTOS/src/cmsis_os.c ****     
 487:FreeRTOS/src/cmsis_os.c **** #else 
 488:FreeRTOS/src/cmsis_os.c ****   result = osErrorOS;
 633              		.loc 1 488 3 view .LVU120
 489:FreeRTOS/src/cmsis_os.c **** #endif 
 490:FreeRTOS/src/cmsis_os.c ****  
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 24


 491:FreeRTOS/src/cmsis_os.c ****   return result;
 634              		.loc 1 491 3 view .LVU121
 492:FreeRTOS/src/cmsis_os.c **** }
 635              		.loc 1 492 1 is_stmt 0 view .LVU122
 636 0000 FF20     		movs	r0, #255
 637              	.LVL44:
 638              		.loc 1 492 1 view .LVU123
 639 0002 7047     		bx	lr
 640              		.cfi_endproc
 641              	.LFE86:
 643              		.section	.text.osSignalSet,"ax",%progbits
 644              		.align	1
 645              		.global	osSignalSet
 646              		.syntax unified
 647              		.thumb
 648              		.thumb_func
 649              		.fpu softvfp
 651              	osSignalSet:
 652              	.LVL45:
 653              	.LFB87:
 493:FreeRTOS/src/cmsis_os.c **** 
 494:FreeRTOS/src/cmsis_os.c **** /***************************  Signal Management ********************************/
 495:FreeRTOS/src/cmsis_os.c **** /**
 496:FreeRTOS/src/cmsis_os.c **** * @brief  Set the specified Signal Flags of an active thread.
 497:FreeRTOS/src/cmsis_os.c **** * @param  thread_id     thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
 498:FreeRTOS/src/cmsis_os.c **** * @param  signals       specifies the signal flags of the thread that should be set.
 499:FreeRTOS/src/cmsis_os.c **** * @retval previous signal flags of the specified thread or 0x80000000 in case of incorrect paramete
 500:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSignalSet shall be consistent in every CMSIS-RTOS.
 501:FreeRTOS/src/cmsis_os.c **** */
 502:FreeRTOS/src/cmsis_os.c **** int32_t osSignalSet (osThreadId thread_id, int32_t signal)
 503:FreeRTOS/src/cmsis_os.c **** {
 654              		.loc 1 503 1 is_stmt 1 view -0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 8
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		.loc 1 503 1 is_stmt 0 view .LVU125
 659 0000 30B5     		push	{r4, r5, lr}
 660              	.LCFI11:
 661              		.cfi_def_cfa_offset 12
 662              		.cfi_offset 4, -12
 663              		.cfi_offset 5, -8
 664              		.cfi_offset 14, -4
 665 0002 85B0     		sub	sp, sp, #20
 666              	.LCFI12:
 667              		.cfi_def_cfa_offset 32
 668 0004 0446     		mov	r4, r0
 669 0006 0D46     		mov	r5, r1
 504:FreeRTOS/src/cmsis_os.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )	
 505:FreeRTOS/src/cmsis_os.c ****   BaseType_t xHigherPriorityTaskWoken = pdFALSE;
 670              		.loc 1 505 3 is_stmt 1 view .LVU126
 671              		.loc 1 505 14 is_stmt 0 view .LVU127
 672 0008 0023     		movs	r3, #0
 673 000a 0393     		str	r3, [sp, #12]
 506:FreeRTOS/src/cmsis_os.c ****   uint32_t ulPreviousNotificationValue = 0;
 674              		.loc 1 506 3 is_stmt 1 view .LVU128
 675              		.loc 1 506 12 is_stmt 0 view .LVU129
 676 000c 0293     		str	r3, [sp, #8]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 25


 507:FreeRTOS/src/cmsis_os.c ****   
 508:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode())
 677              		.loc 1 508 3 is_stmt 1 view .LVU130
 678              		.loc 1 508 7 is_stmt 0 view .LVU131
 679 000e FFF7FEFF 		bl	inHandlerMode
 680              	.LVL46:
 681              		.loc 1 508 6 view .LVU132
 682 0012 A0B1     		cbz	r0, .L41
 509:FreeRTOS/src/cmsis_os.c ****   {
 510:FreeRTOS/src/cmsis_os.c ****     if(xTaskGenericNotifyFromISR( thread_id , (uint32_t)signal, eSetBits, &ulPreviousNotificationVa
 683              		.loc 1 510 5 is_stmt 1 view .LVU133
 684              		.loc 1 510 8 is_stmt 0 view .LVU134
 685 0014 03AB     		add	r3, sp, #12
 686 0016 0093     		str	r3, [sp]
 687 0018 02AB     		add	r3, sp, #8
 688 001a 0122     		movs	r2, #1
 689 001c 2946     		mov	r1, r5
 690 001e 2046     		mov	r0, r4
 691 0020 FFF7FEFF 		bl	xTaskGenericNotifyFromISR
 692              	.LVL47:
 693              		.loc 1 510 7 view .LVU135
 694 0024 0128     		cmp	r0, #1
 695 0026 15D1     		bne	.L44
 511:FreeRTOS/src/cmsis_os.c ****       return 0x80000000;
 512:FreeRTOS/src/cmsis_os.c ****     
 513:FreeRTOS/src/cmsis_os.c ****     portYIELD_FROM_ISR( xHigherPriorityTaskWoken );
 696              		.loc 1 513 5 is_stmt 1 view .LVU136
 697 0028 039B     		ldr	r3, [sp, #12]
 698 002a 83B1     		cbz	r3, .L43
 699              		.loc 1 513 5 discriminator 1 view .LVU137
 700 002c 0C4B     		ldr	r3, .L47
 701 002e 4FF08052 		mov	r2, #268435456
 702 0032 1A60     		str	r2, [r3]
 703              		.loc 1 513 5 discriminator 1 view .LVU138
 704              		.syntax unified
 705              	@ 513 "FreeRTOS/src/cmsis_os.c" 1
 706 0034 BFF34F8F 		dsb
 707              	@ 0 "" 2
 708              		.loc 1 513 5 discriminator 1 view .LVU139
 709              	@ 513 "FreeRTOS/src/cmsis_os.c" 1
 710 0038 BFF36F8F 		isb
 711              	@ 0 "" 2
 712              		.thumb
 713              		.syntax unified
 714 003c 07E0     		b	.L43
 715              	.L41:
 514:FreeRTOS/src/cmsis_os.c ****   }  
 515:FreeRTOS/src/cmsis_os.c ****   else if(xTaskGenericNotify( thread_id , (uint32_t)signal, eSetBits, &ulPreviousNotificationValue)
 716              		.loc 1 515 8 view .LVU140
 717              		.loc 1 515 11 is_stmt 0 view .LVU141
 718 003e 02AB     		add	r3, sp, #8
 719 0040 0122     		movs	r2, #1
 720 0042 2946     		mov	r1, r5
 721 0044 2046     		mov	r0, r4
 722 0046 FFF7FEFF 		bl	xTaskGenericNotify
 723              	.LVL48:
 724              		.loc 1 515 10 view .LVU142
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 26


 725 004a 0128     		cmp	r0, #1
 726 004c 05D1     		bne	.L45
 727              	.L43:
 516:FreeRTOS/src/cmsis_os.c ****     return 0x80000000;
 517:FreeRTOS/src/cmsis_os.c ****   
 518:FreeRTOS/src/cmsis_os.c ****   return ulPreviousNotificationValue;
 728              		.loc 1 518 3 is_stmt 1 view .LVU143
 729              		.loc 1 518 10 is_stmt 0 view .LVU144
 730 004e 0298     		ldr	r0, [sp, #8]
 731              	.L40:
 519:FreeRTOS/src/cmsis_os.c **** #else
 520:FreeRTOS/src/cmsis_os.c ****   (void) thread_id;
 521:FreeRTOS/src/cmsis_os.c ****   (void) signal;
 522:FreeRTOS/src/cmsis_os.c **** 
 523:FreeRTOS/src/cmsis_os.c ****   return 0x80000000; /* Task Notification not supported */ 	
 524:FreeRTOS/src/cmsis_os.c **** #endif
 525:FreeRTOS/src/cmsis_os.c **** }
 732              		.loc 1 525 1 view .LVU145
 733 0050 05B0     		add	sp, sp, #20
 734              	.LCFI13:
 735              		.cfi_remember_state
 736              		.cfi_def_cfa_offset 12
 737              		@ sp needed
 738 0052 30BD     		pop	{r4, r5, pc}
 739              	.LVL49:
 740              	.L44:
 741              	.LCFI14:
 742              		.cfi_restore_state
 511:FreeRTOS/src/cmsis_os.c ****     
 743              		.loc 1 511 14 view .LVU146
 744 0054 4FF00040 		mov	r0, #-2147483648
 745 0058 FAE7     		b	.L40
 746              	.L45:
 516:FreeRTOS/src/cmsis_os.c ****     return 0x80000000;
 747              		.loc 1 516 12 view .LVU147
 748 005a 4FF00040 		mov	r0, #-2147483648
 749 005e F7E7     		b	.L40
 750              	.L48:
 751              		.align	2
 752              	.L47:
 753 0060 04ED00E0 		.word	-536810236
 754              		.cfi_endproc
 755              	.LFE87:
 757              		.section	.text.osSignalWait,"ax",%progbits
 758              		.align	1
 759              		.global	osSignalWait
 760              		.syntax unified
 761              		.thumb
 762              		.thumb_func
 763              		.fpu softvfp
 765              	osSignalWait:
 766              	.LVL50:
 767              	.LFB88:
 526:FreeRTOS/src/cmsis_os.c **** 
 527:FreeRTOS/src/cmsis_os.c **** /**
 528:FreeRTOS/src/cmsis_os.c **** * @brief  Clear the specified Signal Flags of an active thread.
 529:FreeRTOS/src/cmsis_os.c **** * @param  thread_id  thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 27


 530:FreeRTOS/src/cmsis_os.c **** * @param  signals    specifies the signal flags of the thread that shall be cleared.
 531:FreeRTOS/src/cmsis_os.c **** * @retval  previous signal flags of the specified thread or 0x80000000 in case of incorrect paramet
 532:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSignalClear shall be consistent in every CMSIS-RTOS.
 533:FreeRTOS/src/cmsis_os.c **** */
 534:FreeRTOS/src/cmsis_os.c **** int32_t osSignalClear (osThreadId thread_id, int32_t signal);
 535:FreeRTOS/src/cmsis_os.c **** 
 536:FreeRTOS/src/cmsis_os.c **** /**
 537:FreeRTOS/src/cmsis_os.c **** * @brief  Wait for one or more Signal Flags to become signaled for the current \b RUNNING thread.
 538:FreeRTOS/src/cmsis_os.c **** * @param  signals   wait until all specified signal flags set or 0 for any single signal flag.
 539:FreeRTOS/src/cmsis_os.c **** * @param  millisec  timeout value or 0 in case of no time-out.
 540:FreeRTOS/src/cmsis_os.c **** * @retval  event flag information or error code.
 541:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSignalWait shall be consistent in every CMSIS-RTOS.
 542:FreeRTOS/src/cmsis_os.c **** */
 543:FreeRTOS/src/cmsis_os.c **** osEvent osSignalWait (int32_t signals, uint32_t millisec)
 544:FreeRTOS/src/cmsis_os.c **** {
 768              		.loc 1 544 1 is_stmt 1 view -0
 769              		.cfi_startproc
 770              		@ args = 0, pretend = 0, frame = 16
 771              		@ frame_needed = 0, uses_anonymous_args = 0
 772              		.loc 1 544 1 is_stmt 0 view .LVU149
 773 0000 70B5     		push	{r4, r5, r6, lr}
 774              	.LCFI15:
 775              		.cfi_def_cfa_offset 16
 776              		.cfi_offset 4, -16
 777              		.cfi_offset 5, -12
 778              		.cfi_offset 6, -8
 779              		.cfi_offset 14, -4
 780 0002 84B0     		sub	sp, sp, #16
 781              	.LCFI16:
 782              		.cfi_def_cfa_offset 32
 783 0004 0446     		mov	r4, r0
 784 0006 0E46     		mov	r6, r1
 545:FreeRTOS/src/cmsis_os.c ****   osEvent ret;
 785              		.loc 1 545 3 is_stmt 1 view .LVU150
 546:FreeRTOS/src/cmsis_os.c **** 
 547:FreeRTOS/src/cmsis_os.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
 548:FreeRTOS/src/cmsis_os.c **** 	
 549:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 786              		.loc 1 549 3 view .LVU151
 550:FreeRTOS/src/cmsis_os.c **** 
 551:FreeRTOS/src/cmsis_os.c ****   ret.value.signals = 0;  
 787              		.loc 1 551 3 view .LVU152
 788              		.loc 1 551 21 is_stmt 0 view .LVU153
 789 0008 0023     		movs	r3, #0
 790 000a 0293     		str	r3, [sp, #8]
 552:FreeRTOS/src/cmsis_os.c ****   ticks = 0;
 791              		.loc 1 552 3 is_stmt 1 view .LVU154
 792              	.LVL51:
 553:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 793              		.loc 1 553 3 view .LVU155
 794              		.loc 1 553 6 is_stmt 0 view .LVU156
 795 000c B2F1FF3F 		cmp	r2, #-1
 796 0010 03D0     		beq	.L56
 797 0012 1546     		mov	r5, r2
 554:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
 555:FreeRTOS/src/cmsis_os.c ****   }
 556:FreeRTOS/src/cmsis_os.c ****   else if (millisec != 0) {
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 28


 798              		.loc 1 556 8 is_stmt 1 view .LVU157
 799              		.loc 1 556 11 is_stmt 0 view .LVU158
 800 0014 1AB9     		cbnz	r2, .L50
 552:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 801              		.loc 1 552 9 view .LVU159
 802 0016 1D46     		mov	r5, r3
 803 0018 01E0     		b	.L50
 804              	.L56:
 554:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
 805              		.loc 1 554 11 view .LVU160
 806 001a 4FF0FF35 		mov	r5, #-1
 807              	.L50:
 808              	.LVL52:
 557:FreeRTOS/src/cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
 558:FreeRTOS/src/cmsis_os.c ****     if (ticks == 0) {
 559:FreeRTOS/src/cmsis_os.c ****       ticks = 1;
 560:FreeRTOS/src/cmsis_os.c ****     }
 561:FreeRTOS/src/cmsis_os.c ****   }  
 562:FreeRTOS/src/cmsis_os.c ****   
 563:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode())
 809              		.loc 1 563 3 is_stmt 1 view .LVU161
 810              		.loc 1 563 7 is_stmt 0 view .LVU162
 811 001e FFF7FEFF 		bl	inHandlerMode
 812              	.LVL53:
 813              		.loc 1 563 6 view .LVU163
 814 0022 48B1     		cbz	r0, .L51
 564:FreeRTOS/src/cmsis_os.c ****   {
 565:FreeRTOS/src/cmsis_os.c ****     ret.status = osErrorISR;  /*Not allowed in ISR*/
 815              		.loc 1 565 5 is_stmt 1 view .LVU164
 816              		.loc 1 565 16 is_stmt 0 view .LVU165
 817 0024 8223     		movs	r3, #130
 818 0026 0193     		str	r3, [sp, #4]
 819              	.L52:
 566:FreeRTOS/src/cmsis_os.c ****   }
 567:FreeRTOS/src/cmsis_os.c ****   else
 568:FreeRTOS/src/cmsis_os.c ****   {
 569:FreeRTOS/src/cmsis_os.c ****     if(xTaskNotifyWait( 0,(uint32_t) signals, (uint32_t *)&ret.value.signals, ticks) != pdTRUE)
 570:FreeRTOS/src/cmsis_os.c ****     {
 571:FreeRTOS/src/cmsis_os.c ****       if(ticks == 0)  ret.status = osOK;
 572:FreeRTOS/src/cmsis_os.c ****       else  ret.status = osEventTimeout;
 573:FreeRTOS/src/cmsis_os.c ****     }
 574:FreeRTOS/src/cmsis_os.c ****     else if(ret.value.signals < 0)
 575:FreeRTOS/src/cmsis_os.c ****     {
 576:FreeRTOS/src/cmsis_os.c ****       ret.status =  osErrorValue;     
 577:FreeRTOS/src/cmsis_os.c ****     }
 578:FreeRTOS/src/cmsis_os.c ****     else  ret.status =  osEventSignal;
 579:FreeRTOS/src/cmsis_os.c ****   }
 580:FreeRTOS/src/cmsis_os.c **** #else
 581:FreeRTOS/src/cmsis_os.c ****   (void) signals;
 582:FreeRTOS/src/cmsis_os.c ****   (void) millisec;
 583:FreeRTOS/src/cmsis_os.c **** 	
 584:FreeRTOS/src/cmsis_os.c ****   ret.status =  osErrorOS;	/* Task Notification not supported */
 585:FreeRTOS/src/cmsis_os.c **** #endif
 586:FreeRTOS/src/cmsis_os.c ****   
 587:FreeRTOS/src/cmsis_os.c ****   return ret;
 820              		.loc 1 587 3 is_stmt 1 view .LVU166
 821              		.loc 1 587 10 is_stmt 0 view .LVU167
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 29


 822 0028 04AB     		add	r3, sp, #16
 823 002a 13E90700 		ldmdb	r3, {r0, r1, r2}
 824 002e 84E80700 		stm	r4, {r0, r1, r2}
 588:FreeRTOS/src/cmsis_os.c **** }
 825              		.loc 1 588 1 view .LVU168
 826 0032 2046     		mov	r0, r4
 827 0034 04B0     		add	sp, sp, #16
 828              	.LCFI17:
 829              		.cfi_remember_state
 830              		.cfi_def_cfa_offset 16
 831              		@ sp needed
 832 0036 70BD     		pop	{r4, r5, r6, pc}
 833              	.LVL54:
 834              	.L51:
 835              	.LCFI18:
 836              		.cfi_restore_state
 569:FreeRTOS/src/cmsis_os.c ****     {
 837              		.loc 1 569 5 is_stmt 1 view .LVU169
 569:FreeRTOS/src/cmsis_os.c ****     {
 838              		.loc 1 569 8 is_stmt 0 view .LVU170
 839 0038 2B46     		mov	r3, r5
 840 003a 02AA     		add	r2, sp, #8
 841 003c 3146     		mov	r1, r6
 842 003e 0020     		movs	r0, #0
 843 0040 FFF7FEFF 		bl	xTaskNotifyWait
 844              	.LVL55:
 569:FreeRTOS/src/cmsis_os.c ****     {
 845              		.loc 1 569 7 view .LVU171
 846 0044 0128     		cmp	r0, #1
 847 0046 06D0     		beq	.L53
 571:FreeRTOS/src/cmsis_os.c ****       else  ret.status = osEventTimeout;
 848              		.loc 1 571 7 is_stmt 1 view .LVU172
 571:FreeRTOS/src/cmsis_os.c ****       else  ret.status = osEventTimeout;
 849              		.loc 1 571 9 is_stmt 0 view .LVU173
 850 0048 15B9     		cbnz	r5, .L54
 571:FreeRTOS/src/cmsis_os.c ****       else  ret.status = osEventTimeout;
 851              		.loc 1 571 23 is_stmt 1 discriminator 1 view .LVU174
 571:FreeRTOS/src/cmsis_os.c ****       else  ret.status = osEventTimeout;
 852              		.loc 1 571 34 is_stmt 0 discriminator 1 view .LVU175
 853 004a 0023     		movs	r3, #0
 854 004c 0193     		str	r3, [sp, #4]
 855 004e EBE7     		b	.L52
 856              	.L54:
 572:FreeRTOS/src/cmsis_os.c ****     }
 857              		.loc 1 572 13 is_stmt 1 view .LVU176
 572:FreeRTOS/src/cmsis_os.c ****     }
 858              		.loc 1 572 24 is_stmt 0 view .LVU177
 859 0050 4023     		movs	r3, #64
 860 0052 0193     		str	r3, [sp, #4]
 861 0054 E8E7     		b	.L52
 862              	.L53:
 574:FreeRTOS/src/cmsis_os.c ****     {
 863              		.loc 1 574 10 is_stmt 1 view .LVU178
 574:FreeRTOS/src/cmsis_os.c ****     {
 864              		.loc 1 574 22 is_stmt 0 view .LVU179
 865 0056 029B     		ldr	r3, [sp, #8]
 574:FreeRTOS/src/cmsis_os.c ****     {
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 30


 866              		.loc 1 574 12 view .LVU180
 867 0058 002B     		cmp	r3, #0
 868 005a 02DB     		blt	.L58
 578:FreeRTOS/src/cmsis_os.c ****   }
 869              		.loc 1 578 11 is_stmt 1 view .LVU181
 578:FreeRTOS/src/cmsis_os.c ****   }
 870              		.loc 1 578 22 is_stmt 0 view .LVU182
 871 005c 0823     		movs	r3, #8
 872 005e 0193     		str	r3, [sp, #4]
 873 0060 E2E7     		b	.L52
 874              	.L58:
 576:FreeRTOS/src/cmsis_os.c ****     }
 875              		.loc 1 576 7 is_stmt 1 view .LVU183
 576:FreeRTOS/src/cmsis_os.c ****     }
 876              		.loc 1 576 18 is_stmt 0 view .LVU184
 877 0062 8623     		movs	r3, #134
 878 0064 0193     		str	r3, [sp, #4]
 879 0066 DFE7     		b	.L52
 880              		.cfi_endproc
 881              	.LFE88:
 883              		.section	.text.osMutexCreate,"ax",%progbits
 884              		.align	1
 885              		.global	osMutexCreate
 886              		.syntax unified
 887              		.thumb
 888              		.thumb_func
 889              		.fpu softvfp
 891              	osMutexCreate:
 892              	.LVL56:
 893              	.LFB89:
 589:FreeRTOS/src/cmsis_os.c **** 
 590:FreeRTOS/src/cmsis_os.c **** /****************************  Mutex Management ********************************/
 591:FreeRTOS/src/cmsis_os.c **** /**
 592:FreeRTOS/src/cmsis_os.c **** * @brief  Create and Initialize a Mutex object
 593:FreeRTOS/src/cmsis_os.c **** * @param  mutex_def     mutex definition referenced with \ref osMutex.
 594:FreeRTOS/src/cmsis_os.c **** * @retval  mutex ID for reference by other functions or NULL in case of error.
 595:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMutexCreate shall be consistent in every CMSIS-RTOS.
 596:FreeRTOS/src/cmsis_os.c **** */
 597:FreeRTOS/src/cmsis_os.c **** osMutexId osMutexCreate (const osMutexDef_t *mutex_def)
 598:FreeRTOS/src/cmsis_os.c **** {
 894              		.loc 1 598 1 is_stmt 1 view -0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898              		.loc 1 598 1 is_stmt 0 view .LVU186
 899 0000 08B5     		push	{r3, lr}
 900              	.LCFI19:
 901              		.cfi_def_cfa_offset 8
 902              		.cfi_offset 3, -8
 903              		.cfi_offset 14, -4
 599:FreeRTOS/src/cmsis_os.c **** #if ( configUSE_MUTEXES == 1)
 600:FreeRTOS/src/cmsis_os.c **** 
 601:FreeRTOS/src/cmsis_os.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 602:FreeRTOS/src/cmsis_os.c **** 
 603:FreeRTOS/src/cmsis_os.c ****   if (mutex_def->controlblock != NULL) {
 604:FreeRTOS/src/cmsis_os.c ****     return xSemaphoreCreateMutexStatic( mutex_def->controlblock );
 605:FreeRTOS/src/cmsis_os.c ****      }
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 31


 606:FreeRTOS/src/cmsis_os.c ****   else {
 607:FreeRTOS/src/cmsis_os.c ****     return xSemaphoreCreateMutex(); 
 608:FreeRTOS/src/cmsis_os.c ****   }
 609:FreeRTOS/src/cmsis_os.c **** #elif ( configSUPPORT_STATIC_ALLOCATION == 1 )
 610:FreeRTOS/src/cmsis_os.c ****   return xSemaphoreCreateMutexStatic( mutex_def->controlblock );
 611:FreeRTOS/src/cmsis_os.c **** #else  
 612:FreeRTOS/src/cmsis_os.c ****     return xSemaphoreCreateMutex(); 
 904              		.loc 1 612 5 is_stmt 1 view .LVU187
 905              		.loc 1 612 12 is_stmt 0 view .LVU188
 906 0002 0120     		movs	r0, #1
 907              	.LVL57:
 908              		.loc 1 612 12 view .LVU189
 909 0004 FFF7FEFF 		bl	xQueueCreateMutex
 910              	.LVL58:
 613:FreeRTOS/src/cmsis_os.c **** #endif
 614:FreeRTOS/src/cmsis_os.c **** #else
 615:FreeRTOS/src/cmsis_os.c ****   return NULL;
 616:FreeRTOS/src/cmsis_os.c **** #endif
 617:FreeRTOS/src/cmsis_os.c **** }
 911              		.loc 1 617 1 view .LVU190
 912 0008 08BD     		pop	{r3, pc}
 913              		.cfi_endproc
 914              	.LFE89:
 916              		.section	.text.osMutexWait,"ax",%progbits
 917              		.align	1
 918              		.global	osMutexWait
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
 922              		.fpu softvfp
 924              	osMutexWait:
 925              	.LVL59:
 926              	.LFB90:
 618:FreeRTOS/src/cmsis_os.c **** 
 619:FreeRTOS/src/cmsis_os.c **** /**
 620:FreeRTOS/src/cmsis_os.c **** * @brief Wait until a Mutex becomes available
 621:FreeRTOS/src/cmsis_os.c **** * @param mutex_id      mutex ID obtained by \ref osMutexCreate.
 622:FreeRTOS/src/cmsis_os.c **** * @param millisec      timeout value or 0 in case of no time-out.
 623:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 624:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMutexWait shall be consistent in every CMSIS-RTOS.
 625:FreeRTOS/src/cmsis_os.c **** */
 626:FreeRTOS/src/cmsis_os.c **** osStatus osMutexWait (osMutexId mutex_id, uint32_t millisec)
 627:FreeRTOS/src/cmsis_os.c **** {
 927              		.loc 1 627 1 is_stmt 1 view -0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 8
 930              		@ frame_needed = 0, uses_anonymous_args = 0
 931              		.loc 1 627 1 is_stmt 0 view .LVU192
 932 0000 30B5     		push	{r4, r5, lr}
 933              	.LCFI20:
 934              		.cfi_def_cfa_offset 12
 935              		.cfi_offset 4, -12
 936              		.cfi_offset 5, -8
 937              		.cfi_offset 14, -4
 938 0002 83B0     		sub	sp, sp, #12
 939              	.LCFI21:
 940              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 32


 628:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 941              		.loc 1 628 3 is_stmt 1 view .LVU193
 629:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;  
 942              		.loc 1 629 3 view .LVU194
 943              		.loc 1 629 17 is_stmt 0 view .LVU195
 944 0004 0023     		movs	r3, #0
 945 0006 0193     		str	r3, [sp, #4]
 630:FreeRTOS/src/cmsis_os.c ****   
 631:FreeRTOS/src/cmsis_os.c ****   
 632:FreeRTOS/src/cmsis_os.c ****   if (mutex_id == NULL) {
 946              		.loc 1 632 3 is_stmt 1 view .LVU196
 947              		.loc 1 632 6 is_stmt 0 view .LVU197
 948 0008 40B3     		cbz	r0, .L65
 949 000a 0C46     		mov	r4, r1
 950 000c 0546     		mov	r5, r0
 633:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
 634:FreeRTOS/src/cmsis_os.c ****   }
 635:FreeRTOS/src/cmsis_os.c ****   
 636:FreeRTOS/src/cmsis_os.c ****   ticks = 0;
 951              		.loc 1 636 3 is_stmt 1 view .LVU198
 952              	.LVL60:
 637:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 953              		.loc 1 637 3 view .LVU199
 954              		.loc 1 637 6 is_stmt 0 view .LVU200
 955 000e B1F1FF3F 		cmp	r1, #-1
 956 0012 02D0     		beq	.L66
 638:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
 639:FreeRTOS/src/cmsis_os.c ****   }
 640:FreeRTOS/src/cmsis_os.c ****   else if (millisec != 0) {
 957              		.loc 1 640 8 is_stmt 1 view .LVU201
 958              		.loc 1 640 11 is_stmt 0 view .LVU202
 959 0014 19B9     		cbnz	r1, .L63
 636:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 960              		.loc 1 636 9 view .LVU203
 961 0016 1C46     		mov	r4, r3
 962 0018 01E0     		b	.L63
 963              	.L66:
 638:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
 964              		.loc 1 638 11 view .LVU204
 965 001a 4FF0FF34 		mov	r4, #-1
 966              	.L63:
 967              	.LVL61:
 641:FreeRTOS/src/cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
 642:FreeRTOS/src/cmsis_os.c ****     if (ticks == 0) {
 643:FreeRTOS/src/cmsis_os.c ****       ticks = 1;
 644:FreeRTOS/src/cmsis_os.c ****     }
 645:FreeRTOS/src/cmsis_os.c ****   }
 646:FreeRTOS/src/cmsis_os.c ****   
 647:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 968              		.loc 1 647 3 is_stmt 1 view .LVU205
 969              		.loc 1 647 7 is_stmt 0 view .LVU206
 970 001e FFF7FEFF 		bl	inHandlerMode
 971              	.LVL62:
 972              		.loc 1 647 6 view .LVU207
 973 0022 90B1     		cbz	r0, .L64
 648:FreeRTOS/src/cmsis_os.c ****     if (xSemaphoreTakeFromISR(mutex_id, &taskWoken) != pdTRUE) {
 974              		.loc 1 648 5 is_stmt 1 view .LVU208
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 33


 975              		.loc 1 648 9 is_stmt 0 view .LVU209
 976 0024 01AA     		add	r2, sp, #4
 977 0026 0021     		movs	r1, #0
 978 0028 2846     		mov	r0, r5
 979 002a FFF7FEFF 		bl	xQueueReceiveFromISR
 980              	.LVL63:
 981              		.loc 1 648 8 view .LVU210
 982 002e 0128     		cmp	r0, #1
 983 0030 16D1     		bne	.L67
 649:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 650:FreeRTOS/src/cmsis_os.c ****     }
 651:FreeRTOS/src/cmsis_os.c **** 	portEND_SWITCHING_ISR(taskWoken);
 984              		.loc 1 651 2 is_stmt 1 view .LVU211
 985 0032 019B     		ldr	r3, [sp, #4]
 986 0034 B3B1     		cbz	r3, .L68
 987              		.loc 1 651 2 discriminator 1 view .LVU212
 988 0036 0D4B     		ldr	r3, .L71
 989 0038 4FF08052 		mov	r2, #268435456
 990 003c 1A60     		str	r2, [r3]
 991              		.loc 1 651 2 discriminator 1 view .LVU213
 992              		.syntax unified
 993              	@ 651 "FreeRTOS/src/cmsis_os.c" 1
 994 003e BFF34F8F 		dsb
 995              	@ 0 "" 2
 996              		.loc 1 651 2 discriminator 1 view .LVU214
 997              	@ 651 "FreeRTOS/src/cmsis_os.c" 1
 998 0042 BFF36F8F 		isb
 999              	@ 0 "" 2
 652:FreeRTOS/src/cmsis_os.c ****   } 
 653:FreeRTOS/src/cmsis_os.c ****   else if (xSemaphoreTake(mutex_id, ticks) != pdTRUE) {
 654:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 655:FreeRTOS/src/cmsis_os.c ****   }
 656:FreeRTOS/src/cmsis_os.c ****   
 657:FreeRTOS/src/cmsis_os.c ****   return osOK;
 1000              		.loc 1 657 10 is_stmt 0 discriminator 1 view .LVU215
 1001              		.thumb
 1002              		.syntax unified
 1003 0046 0020     		movs	r0, #0
 1004 0048 06E0     		b	.L61
 1005              	.L64:
 653:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 1006              		.loc 1 653 8 is_stmt 1 view .LVU216
 653:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 1007              		.loc 1 653 12 is_stmt 0 view .LVU217
 1008 004a 2146     		mov	r1, r4
 1009 004c 2846     		mov	r0, r5
 1010 004e FFF7FEFF 		bl	xQueueSemaphoreTake
 1011              	.LVL64:
 653:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 1012              		.loc 1 653 11 view .LVU218
 1013 0052 0128     		cmp	r0, #1
 1014 0054 08D1     		bne	.L69
 1015              		.loc 1 657 10 view .LVU219
 1016 0056 0020     		movs	r0, #0
 1017              	.LVL65:
 1018              	.L61:
 658:FreeRTOS/src/cmsis_os.c **** }
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 34


 1019              		.loc 1 658 1 view .LVU220
 1020 0058 03B0     		add	sp, sp, #12
 1021              	.LCFI22:
 1022              		.cfi_remember_state
 1023              		.cfi_def_cfa_offset 12
 1024              		@ sp needed
 1025 005a 30BD     		pop	{r4, r5, pc}
 1026              	.LVL66:
 1027              	.L65:
 1028              	.LCFI23:
 1029              		.cfi_restore_state
 633:FreeRTOS/src/cmsis_os.c ****   }
 1030              		.loc 1 633 12 view .LVU221
 1031 005c 8020     		movs	r0, #128
 1032              	.LVL67:
 633:FreeRTOS/src/cmsis_os.c ****   }
 1033              		.loc 1 633 12 view .LVU222
 1034 005e FBE7     		b	.L61
 1035              	.LVL68:
 1036              	.L67:
 649:FreeRTOS/src/cmsis_os.c ****     }
 1037              		.loc 1 649 14 view .LVU223
 1038 0060 FF20     		movs	r0, #255
 1039 0062 F9E7     		b	.L61
 1040              	.L68:
 657:FreeRTOS/src/cmsis_os.c **** }
 1041              		.loc 1 657 10 view .LVU224
 1042 0064 0020     		movs	r0, #0
 1043 0066 F7E7     		b	.L61
 1044              	.L69:
 654:FreeRTOS/src/cmsis_os.c ****   }
 1045              		.loc 1 654 12 view .LVU225
 1046 0068 FF20     		movs	r0, #255
 1047 006a F5E7     		b	.L61
 1048              	.L72:
 1049              		.align	2
 1050              	.L71:
 1051 006c 04ED00E0 		.word	-536810236
 1052              		.cfi_endproc
 1053              	.LFE90:
 1055              		.section	.text.osMutexRelease,"ax",%progbits
 1056              		.align	1
 1057              		.global	osMutexRelease
 1058              		.syntax unified
 1059              		.thumb
 1060              		.thumb_func
 1061              		.fpu softvfp
 1063              	osMutexRelease:
 1064              	.LVL69:
 1065              	.LFB91:
 659:FreeRTOS/src/cmsis_os.c **** 
 660:FreeRTOS/src/cmsis_os.c **** /**
 661:FreeRTOS/src/cmsis_os.c **** * @brief Release a Mutex that was obtained by \ref osMutexWait
 662:FreeRTOS/src/cmsis_os.c **** * @param mutex_id      mutex ID obtained by \ref osMutexCreate.
 663:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 664:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMutexRelease shall be consistent in every CMSIS-RTOS.
 665:FreeRTOS/src/cmsis_os.c **** */
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 35


 666:FreeRTOS/src/cmsis_os.c **** osStatus osMutexRelease (osMutexId mutex_id)
 667:FreeRTOS/src/cmsis_os.c **** {
 1066              		.loc 1 667 1 is_stmt 1 view -0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 8
 1069              		@ frame_needed = 0, uses_anonymous_args = 0
 1070              		.loc 1 667 1 is_stmt 0 view .LVU227
 1071 0000 10B5     		push	{r4, lr}
 1072              	.LCFI24:
 1073              		.cfi_def_cfa_offset 8
 1074              		.cfi_offset 4, -8
 1075              		.cfi_offset 14, -4
 1076 0002 82B0     		sub	sp, sp, #8
 1077              	.LCFI25:
 1078              		.cfi_def_cfa_offset 16
 1079 0004 0446     		mov	r4, r0
 668:FreeRTOS/src/cmsis_os.c ****   osStatus result = osOK;
 1080              		.loc 1 668 3 is_stmt 1 view .LVU228
 1081              	.LVL70:
 669:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1082              		.loc 1 669 3 view .LVU229
 1083              		.loc 1 669 17 is_stmt 0 view .LVU230
 1084 0006 0023     		movs	r3, #0
 1085 0008 0193     		str	r3, [sp, #4]
 670:FreeRTOS/src/cmsis_os.c ****   
 671:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 1086              		.loc 1 671 3 is_stmt 1 view .LVU231
 1087              		.loc 1 671 7 is_stmt 0 view .LVU232
 1088 000a FFF7FEFF 		bl	inHandlerMode
 1089              	.LVL71:
 1090              		.loc 1 671 6 view .LVU233
 1091 000e 88B1     		cbz	r0, .L74
 672:FreeRTOS/src/cmsis_os.c ****     if (xSemaphoreGiveFromISR(mutex_id, &taskWoken) != pdTRUE) {
 1092              		.loc 1 672 5 is_stmt 1 view .LVU234
 1093              		.loc 1 672 9 is_stmt 0 view .LVU235
 1094 0010 01A9     		add	r1, sp, #4
 1095 0012 2046     		mov	r0, r4
 1096 0014 FFF7FEFF 		bl	xQueueGiveFromISR
 1097              	.LVL72:
 1098              		.loc 1 672 8 view .LVU236
 1099 0018 0128     		cmp	r0, #1
 1100 001a 18D1     		bne	.L76
 673:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 674:FreeRTOS/src/cmsis_os.c ****     }
 675:FreeRTOS/src/cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 1101              		.loc 1 675 5 is_stmt 1 view .LVU237
 1102 001c 019B     		ldr	r3, [sp, #4]
 1103 001e C3B1     		cbz	r3, .L77
 1104              		.loc 1 675 5 discriminator 1 view .LVU238
 1105 0020 0D4B     		ldr	r3, .L81
 1106 0022 4FF08052 		mov	r2, #268435456
 1107 0026 1A60     		str	r2, [r3]
 1108              		.loc 1 675 5 discriminator 1 view .LVU239
 1109              		.syntax unified
 1110              	@ 675 "FreeRTOS/src/cmsis_os.c" 1
 1111 0028 BFF34F8F 		dsb
 1112              	@ 0 "" 2
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 36


 1113              		.loc 1 675 5 discriminator 1 view .LVU240
 1114              	@ 675 "FreeRTOS/src/cmsis_os.c" 1
 1115 002c BFF36F8F 		isb
 1116              	@ 0 "" 2
 668:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1117              		.loc 1 668 12 is_stmt 0 discriminator 1 view .LVU241
 1118              		.thumb
 1119              		.syntax unified
 1120 0030 0020     		movs	r0, #0
 1121 0032 08E0     		b	.L73
 1122              	.L74:
 676:FreeRTOS/src/cmsis_os.c ****   }
 677:FreeRTOS/src/cmsis_os.c ****   else if (xSemaphoreGive(mutex_id) != pdTRUE) 
 1123              		.loc 1 677 8 is_stmt 1 view .LVU242
 1124              		.loc 1 677 12 is_stmt 0 view .LVU243
 1125 0034 0023     		movs	r3, #0
 1126 0036 1A46     		mov	r2, r3
 1127 0038 1946     		mov	r1, r3
 1128 003a 2046     		mov	r0, r4
 1129 003c FFF7FEFF 		bl	xQueueGenericSend
 1130              	.LVL73:
 1131              		.loc 1 677 11 view .LVU244
 1132 0040 0128     		cmp	r0, #1
 1133 0042 02D0     		beq	.L80
 678:FreeRTOS/src/cmsis_os.c ****   {
 679:FreeRTOS/src/cmsis_os.c ****     result = osErrorOS;
 1134              		.loc 1 679 12 view .LVU245
 1135 0044 FF20     		movs	r0, #255
 1136              	.L73:
 680:FreeRTOS/src/cmsis_os.c ****   }
 681:FreeRTOS/src/cmsis_os.c ****   return result;
 682:FreeRTOS/src/cmsis_os.c **** }
 1137              		.loc 1 682 1 view .LVU246
 1138 0046 02B0     		add	sp, sp, #8
 1139              	.LCFI26:
 1140              		.cfi_remember_state
 1141              		.cfi_def_cfa_offset 8
 1142              		@ sp needed
 1143 0048 10BD     		pop	{r4, pc}
 1144              	.LVL74:
 1145              	.L80:
 1146              	.LCFI27:
 1147              		.cfi_restore_state
 668:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1148              		.loc 1 668 12 view .LVU247
 1149 004a 0020     		movs	r0, #0
 1150 004c FBE7     		b	.L73
 1151              	.L76:
 673:FreeRTOS/src/cmsis_os.c ****     }
 1152              		.loc 1 673 14 view .LVU248
 1153 004e FF20     		movs	r0, #255
 1154 0050 F9E7     		b	.L73
 1155              	.L77:
 668:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1156              		.loc 1 668 12 view .LVU249
 1157 0052 0020     		movs	r0, #0
 1158 0054 F7E7     		b	.L73
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 37


 1159              	.L82:
 1160 0056 00BF     		.align	2
 1161              	.L81:
 1162 0058 04ED00E0 		.word	-536810236
 1163              		.cfi_endproc
 1164              	.LFE91:
 1166              		.section	.text.osMutexDelete,"ax",%progbits
 1167              		.align	1
 1168              		.global	osMutexDelete
 1169              		.syntax unified
 1170              		.thumb
 1171              		.thumb_func
 1172              		.fpu softvfp
 1174              	osMutexDelete:
 1175              	.LVL75:
 1176              	.LFB92:
 683:FreeRTOS/src/cmsis_os.c **** 
 684:FreeRTOS/src/cmsis_os.c **** /**
 685:FreeRTOS/src/cmsis_os.c **** * @brief Delete a Mutex
 686:FreeRTOS/src/cmsis_os.c **** * @param mutex_id  mutex ID obtained by \ref osMutexCreate.
 687:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 688:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMutexDelete shall be consistent in every CMSIS-RTOS.
 689:FreeRTOS/src/cmsis_os.c **** */
 690:FreeRTOS/src/cmsis_os.c **** osStatus osMutexDelete (osMutexId mutex_id)
 691:FreeRTOS/src/cmsis_os.c **** {
 1177              		.loc 1 691 1 is_stmt 1 view -0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 0
 1180              		@ frame_needed = 0, uses_anonymous_args = 0
 1181              		.loc 1 691 1 is_stmt 0 view .LVU251
 1182 0000 10B5     		push	{r4, lr}
 1183              	.LCFI28:
 1184              		.cfi_def_cfa_offset 8
 1185              		.cfi_offset 4, -8
 1186              		.cfi_offset 14, -4
 1187 0002 0446     		mov	r4, r0
 692:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 1188              		.loc 1 692 3 is_stmt 1 view .LVU252
 1189              		.loc 1 692 7 is_stmt 0 view .LVU253
 1190 0004 FFF7FEFF 		bl	inHandlerMode
 1191              	.LVL76:
 1192              		.loc 1 692 6 view .LVU254
 1193 0008 20B9     		cbnz	r0, .L85
 693:FreeRTOS/src/cmsis_os.c ****     return osErrorISR;
 694:FreeRTOS/src/cmsis_os.c ****   }
 695:FreeRTOS/src/cmsis_os.c **** 
 696:FreeRTOS/src/cmsis_os.c ****   vQueueDelete(mutex_id);
 1194              		.loc 1 696 3 is_stmt 1 view .LVU255
 1195 000a 2046     		mov	r0, r4
 1196 000c FFF7FEFF 		bl	vQueueDelete
 1197              	.LVL77:
 697:FreeRTOS/src/cmsis_os.c **** 
 698:FreeRTOS/src/cmsis_os.c ****   return osOK;
 1198              		.loc 1 698 3 view .LVU256
 1199              		.loc 1 698 10 is_stmt 0 view .LVU257
 1200 0010 0020     		movs	r0, #0
 1201              	.L83:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 38


 699:FreeRTOS/src/cmsis_os.c **** }
 1202              		.loc 1 699 1 view .LVU258
 1203 0012 10BD     		pop	{r4, pc}
 1204              	.LVL78:
 1205              	.L85:
 693:FreeRTOS/src/cmsis_os.c ****     return osErrorISR;
 1206              		.loc 1 693 12 view .LVU259
 1207 0014 8220     		movs	r0, #130
 1208 0016 FCE7     		b	.L83
 1209              		.cfi_endproc
 1210              	.LFE92:
 1212              		.section	.text.osSemaphoreCreate,"ax",%progbits
 1213              		.align	1
 1214              		.global	osSemaphoreCreate
 1215              		.syntax unified
 1216              		.thumb
 1217              		.thumb_func
 1218              		.fpu softvfp
 1220              	osSemaphoreCreate:
 1221              	.LVL79:
 1222              	.LFB93:
 700:FreeRTOS/src/cmsis_os.c **** 
 701:FreeRTOS/src/cmsis_os.c **** /********************  Semaphore Management Functions **************************/
 702:FreeRTOS/src/cmsis_os.c **** 
 703:FreeRTOS/src/cmsis_os.c **** #if (defined (osFeature_Semaphore)  &&  (osFeature_Semaphore != 0))
 704:FreeRTOS/src/cmsis_os.c **** 
 705:FreeRTOS/src/cmsis_os.c **** /**
 706:FreeRTOS/src/cmsis_os.c **** * @brief Create and Initialize a Semaphore object used for managing resources
 707:FreeRTOS/src/cmsis_os.c **** * @param semaphore_def semaphore definition referenced with \ref osSemaphore.
 708:FreeRTOS/src/cmsis_os.c **** * @param count         number of available resources.
 709:FreeRTOS/src/cmsis_os.c **** * @retval  semaphore ID for reference by other functions or NULL in case of error.
 710:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSemaphoreCreate shall be consistent in every CMSIS-RTOS.
 711:FreeRTOS/src/cmsis_os.c **** */
 712:FreeRTOS/src/cmsis_os.c **** osSemaphoreId osSemaphoreCreate (const osSemaphoreDef_t *semaphore_def, int32_t count)
 713:FreeRTOS/src/cmsis_os.c **** { 
 1223              		.loc 1 713 1 is_stmt 1 view -0
 1224              		.cfi_startproc
 1225              		@ args = 0, pretend = 0, frame = 0
 1226              		@ frame_needed = 0, uses_anonymous_args = 0
 1227              		.loc 1 713 1 is_stmt 0 view .LVU261
 1228 0000 10B5     		push	{r4, lr}
 1229              	.LCFI29:
 1230              		.cfi_def_cfa_offset 8
 1231              		.cfi_offset 4, -8
 1232              		.cfi_offset 14, -4
 714:FreeRTOS/src/cmsis_os.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 715:FreeRTOS/src/cmsis_os.c **** 
 716:FreeRTOS/src/cmsis_os.c ****   osSemaphoreId sema;
 717:FreeRTOS/src/cmsis_os.c ****   
 718:FreeRTOS/src/cmsis_os.c ****   if (semaphore_def->controlblock != NULL){
 719:FreeRTOS/src/cmsis_os.c ****     if (count == 1) {
 720:FreeRTOS/src/cmsis_os.c ****       return xSemaphoreCreateBinaryStatic( semaphore_def->controlblock );
 721:FreeRTOS/src/cmsis_os.c ****     }
 722:FreeRTOS/src/cmsis_os.c ****     else {
 723:FreeRTOS/src/cmsis_os.c **** #if (configUSE_COUNTING_SEMAPHORES == 1 )
 724:FreeRTOS/src/cmsis_os.c ****       return xSemaphoreCreateCountingStatic( count, count, semaphore_def->controlblock );
 725:FreeRTOS/src/cmsis_os.c **** #else
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 39


 726:FreeRTOS/src/cmsis_os.c ****       return NULL;
 727:FreeRTOS/src/cmsis_os.c **** #endif
 728:FreeRTOS/src/cmsis_os.c ****     }
 729:FreeRTOS/src/cmsis_os.c ****   }
 730:FreeRTOS/src/cmsis_os.c ****   else {
 731:FreeRTOS/src/cmsis_os.c ****     if (count == 1) {
 732:FreeRTOS/src/cmsis_os.c ****       vSemaphoreCreateBinary(sema);
 733:FreeRTOS/src/cmsis_os.c ****       return sema;
 734:FreeRTOS/src/cmsis_os.c ****     }
 735:FreeRTOS/src/cmsis_os.c ****     else {
 736:FreeRTOS/src/cmsis_os.c **** #if (configUSE_COUNTING_SEMAPHORES == 1 )	
 737:FreeRTOS/src/cmsis_os.c ****       return xSemaphoreCreateCounting(count, count);
 738:FreeRTOS/src/cmsis_os.c **** #else
 739:FreeRTOS/src/cmsis_os.c ****       return NULL;
 740:FreeRTOS/src/cmsis_os.c **** #endif    
 741:FreeRTOS/src/cmsis_os.c ****     }
 742:FreeRTOS/src/cmsis_os.c ****   }
 743:FreeRTOS/src/cmsis_os.c **** #elif ( configSUPPORT_STATIC_ALLOCATION == 1 ) // configSUPPORT_DYNAMIC_ALLOCATION == 0
 744:FreeRTOS/src/cmsis_os.c ****   if(count == 1) {
 745:FreeRTOS/src/cmsis_os.c ****     return xSemaphoreCreateBinaryStatic( semaphore_def->controlblock );
 746:FreeRTOS/src/cmsis_os.c ****   }
 747:FreeRTOS/src/cmsis_os.c ****   else
 748:FreeRTOS/src/cmsis_os.c ****   {
 749:FreeRTOS/src/cmsis_os.c **** #if (configUSE_COUNTING_SEMAPHORES == 1 )
 750:FreeRTOS/src/cmsis_os.c ****       return xSemaphoreCreateCountingStatic( count, count, semaphore_def->controlblock );
 751:FreeRTOS/src/cmsis_os.c **** #else
 752:FreeRTOS/src/cmsis_os.c ****       return NULL;
 753:FreeRTOS/src/cmsis_os.c **** #endif    
 754:FreeRTOS/src/cmsis_os.c ****   }
 755:FreeRTOS/src/cmsis_os.c **** #else  // configSUPPORT_STATIC_ALLOCATION == 0  && configSUPPORT_DYNAMIC_ALLOCATION == 1
 756:FreeRTOS/src/cmsis_os.c ****   osSemaphoreId sema;
 1233              		.loc 1 756 3 is_stmt 1 view .LVU262
 757:FreeRTOS/src/cmsis_os.c ****  
 758:FreeRTOS/src/cmsis_os.c ****   if (count == 1) {
 1234              		.loc 1 758 3 view .LVU263
 1235              		.loc 1 758 6 is_stmt 0 view .LVU264
 1236 0002 0129     		cmp	r1, #1
 1237 0004 02D0     		beq	.L92
 759:FreeRTOS/src/cmsis_os.c ****     vSemaphoreCreateBinary(sema);
 760:FreeRTOS/src/cmsis_os.c ****     return sema;
 761:FreeRTOS/src/cmsis_os.c ****   }
 762:FreeRTOS/src/cmsis_os.c ****   else {
 763:FreeRTOS/src/cmsis_os.c **** #if (configUSE_COUNTING_SEMAPHORES == 1 )	
 764:FreeRTOS/src/cmsis_os.c ****     return xSemaphoreCreateCounting(count, count);
 765:FreeRTOS/src/cmsis_os.c **** #else
 766:FreeRTOS/src/cmsis_os.c ****     return NULL;
 1238              		.loc 1 766 12 view .LVU265
 1239 0006 0024     		movs	r4, #0
 1240              	.LVL80:
 1241              	.L87:
 767:FreeRTOS/src/cmsis_os.c **** #endif
 768:FreeRTOS/src/cmsis_os.c ****   }
 769:FreeRTOS/src/cmsis_os.c **** #endif
 770:FreeRTOS/src/cmsis_os.c **** }
 1242              		.loc 1 770 1 view .LVU266
 1243 0008 2046     		mov	r0, r4
 1244 000a 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 40


 1245              	.LVL81:
 1246              	.L92:
 759:FreeRTOS/src/cmsis_os.c ****     vSemaphoreCreateBinary(sema);
 1247              		.loc 1 759 5 is_stmt 1 view .LVU267
 1248 000c 0322     		movs	r2, #3
 1249 000e 0021     		movs	r1, #0
 1250              	.LVL82:
 759:FreeRTOS/src/cmsis_os.c ****     vSemaphoreCreateBinary(sema);
 1251              		.loc 1 759 5 is_stmt 0 view .LVU268
 1252 0010 0120     		movs	r0, #1
 1253              	.LVL83:
 759:FreeRTOS/src/cmsis_os.c ****     vSemaphoreCreateBinary(sema);
 1254              		.loc 1 759 5 view .LVU269
 1255 0012 FFF7FEFF 		bl	xQueueGenericCreate
 1256              	.LVL84:
 759:FreeRTOS/src/cmsis_os.c ****     vSemaphoreCreateBinary(sema);
 1257              		.loc 1 759 5 is_stmt 1 view .LVU270
 1258 0016 0446     		mov	r4, r0
 1259 0018 0028     		cmp	r0, #0
 1260 001a F5D0     		beq	.L87
 759:FreeRTOS/src/cmsis_os.c ****     vSemaphoreCreateBinary(sema);
 1261              		.loc 1 759 5 discriminator 1 view .LVU271
 1262 001c 0023     		movs	r3, #0
 1263 001e 1A46     		mov	r2, r3
 1264 0020 1946     		mov	r1, r3
 1265 0022 FFF7FEFF 		bl	xQueueGenericSend
 1266              	.LVL85:
 759:FreeRTOS/src/cmsis_os.c ****     vSemaphoreCreateBinary(sema);
 1267              		.loc 1 759 33 discriminator 1 view .LVU272
 760:FreeRTOS/src/cmsis_os.c ****   }
 1268              		.loc 1 760 5 discriminator 1 view .LVU273
 760:FreeRTOS/src/cmsis_os.c ****   }
 1269              		.loc 1 760 12 is_stmt 0 discriminator 1 view .LVU274
 1270 0026 EFE7     		b	.L87
 1271              		.cfi_endproc
 1272              	.LFE93:
 1274              		.section	.text.osSemaphoreWait,"ax",%progbits
 1275              		.align	1
 1276              		.global	osSemaphoreWait
 1277              		.syntax unified
 1278              		.thumb
 1279              		.thumb_func
 1280              		.fpu softvfp
 1282              	osSemaphoreWait:
 1283              	.LVL86:
 1284              	.LFB94:
 771:FreeRTOS/src/cmsis_os.c **** 
 772:FreeRTOS/src/cmsis_os.c **** /**
 773:FreeRTOS/src/cmsis_os.c **** * @brief Wait until a Semaphore token becomes available
 774:FreeRTOS/src/cmsis_os.c **** * @param  semaphore_id  semaphore object referenced with \ref osSemaphore.
 775:FreeRTOS/src/cmsis_os.c **** * @param  millisec      timeout value or 0 in case of no time-out.
 776:FreeRTOS/src/cmsis_os.c **** * @retval  number of available tokens, or -1 in case of incorrect parameters.
 777:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSemaphoreWait shall be consistent in every CMSIS-RTOS.
 778:FreeRTOS/src/cmsis_os.c **** */
 779:FreeRTOS/src/cmsis_os.c **** int32_t osSemaphoreWait (osSemaphoreId semaphore_id, uint32_t millisec)
 780:FreeRTOS/src/cmsis_os.c **** {
 1285              		.loc 1 780 1 is_stmt 1 view -0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 41


 1286              		.cfi_startproc
 1287              		@ args = 0, pretend = 0, frame = 8
 1288              		@ frame_needed = 0, uses_anonymous_args = 0
 1289              		.loc 1 780 1 is_stmt 0 view .LVU276
 1290 0000 30B5     		push	{r4, r5, lr}
 1291              	.LCFI30:
 1292              		.cfi_def_cfa_offset 12
 1293              		.cfi_offset 4, -12
 1294              		.cfi_offset 5, -8
 1295              		.cfi_offset 14, -4
 1296 0002 83B0     		sub	sp, sp, #12
 1297              	.LCFI31:
 1298              		.cfi_def_cfa_offset 24
 781:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 1299              		.loc 1 781 3 is_stmt 1 view .LVU277
 782:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;  
 1300              		.loc 1 782 3 view .LVU278
 1301              		.loc 1 782 17 is_stmt 0 view .LVU279
 1302 0004 0023     		movs	r3, #0
 1303 0006 0193     		str	r3, [sp, #4]
 783:FreeRTOS/src/cmsis_os.c ****   
 784:FreeRTOS/src/cmsis_os.c ****   
 785:FreeRTOS/src/cmsis_os.c ****   if (semaphore_id == NULL) {
 1304              		.loc 1 785 3 is_stmt 1 view .LVU280
 1305              		.loc 1 785 6 is_stmt 0 view .LVU281
 1306 0008 40B3     		cbz	r0, .L97
 1307 000a 0C46     		mov	r4, r1
 1308 000c 0546     		mov	r5, r0
 786:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
 787:FreeRTOS/src/cmsis_os.c ****   }
 788:FreeRTOS/src/cmsis_os.c ****   
 789:FreeRTOS/src/cmsis_os.c ****   ticks = 0;
 1309              		.loc 1 789 3 is_stmt 1 view .LVU282
 1310              	.LVL87:
 790:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 1311              		.loc 1 790 3 view .LVU283
 1312              		.loc 1 790 6 is_stmt 0 view .LVU284
 1313 000e B1F1FF3F 		cmp	r1, #-1
 1314 0012 02D0     		beq	.L98
 791:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
 792:FreeRTOS/src/cmsis_os.c ****   }
 793:FreeRTOS/src/cmsis_os.c ****   else if (millisec != 0) {
 1315              		.loc 1 793 8 is_stmt 1 view .LVU285
 1316              		.loc 1 793 11 is_stmt 0 view .LVU286
 1317 0014 19B9     		cbnz	r1, .L95
 789:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 1318              		.loc 1 789 9 view .LVU287
 1319 0016 1C46     		mov	r4, r3
 1320 0018 01E0     		b	.L95
 1321              	.L98:
 791:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
 1322              		.loc 1 791 11 view .LVU288
 1323 001a 4FF0FF34 		mov	r4, #-1
 1324              	.L95:
 1325              	.LVL88:
 794:FreeRTOS/src/cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
 795:FreeRTOS/src/cmsis_os.c ****     if (ticks == 0) {
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 42


 796:FreeRTOS/src/cmsis_os.c ****       ticks = 1;
 797:FreeRTOS/src/cmsis_os.c ****     }
 798:FreeRTOS/src/cmsis_os.c ****   }
 799:FreeRTOS/src/cmsis_os.c ****   
 800:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 1326              		.loc 1 800 3 is_stmt 1 view .LVU289
 1327              		.loc 1 800 7 is_stmt 0 view .LVU290
 1328 001e FFF7FEFF 		bl	inHandlerMode
 1329              	.LVL89:
 1330              		.loc 1 800 6 view .LVU291
 1331 0022 90B1     		cbz	r0, .L96
 801:FreeRTOS/src/cmsis_os.c ****     if (xSemaphoreTakeFromISR(semaphore_id, &taskWoken) != pdTRUE) {
 1332              		.loc 1 801 5 is_stmt 1 view .LVU292
 1333              		.loc 1 801 9 is_stmt 0 view .LVU293
 1334 0024 01AA     		add	r2, sp, #4
 1335 0026 0021     		movs	r1, #0
 1336 0028 2846     		mov	r0, r5
 1337 002a FFF7FEFF 		bl	xQueueReceiveFromISR
 1338              	.LVL90:
 1339              		.loc 1 801 8 view .LVU294
 1340 002e 0128     		cmp	r0, #1
 1341 0030 16D1     		bne	.L99
 802:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 803:FreeRTOS/src/cmsis_os.c ****     }
 804:FreeRTOS/src/cmsis_os.c **** 	portEND_SWITCHING_ISR(taskWoken);
 1342              		.loc 1 804 2 is_stmt 1 view .LVU295
 1343 0032 019B     		ldr	r3, [sp, #4]
 1344 0034 B3B1     		cbz	r3, .L100
 1345              		.loc 1 804 2 discriminator 1 view .LVU296
 1346 0036 0D4B     		ldr	r3, .L103
 1347 0038 4FF08052 		mov	r2, #268435456
 1348 003c 1A60     		str	r2, [r3]
 1349              		.loc 1 804 2 discriminator 1 view .LVU297
 1350              		.syntax unified
 1351              	@ 804 "FreeRTOS/src/cmsis_os.c" 1
 1352 003e BFF34F8F 		dsb
 1353              	@ 0 "" 2
 1354              		.loc 1 804 2 discriminator 1 view .LVU298
 1355              	@ 804 "FreeRTOS/src/cmsis_os.c" 1
 1356 0042 BFF36F8F 		isb
 1357              	@ 0 "" 2
 805:FreeRTOS/src/cmsis_os.c ****   }  
 806:FreeRTOS/src/cmsis_os.c ****   else if (xSemaphoreTake(semaphore_id, ticks) != pdTRUE) {
 807:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 808:FreeRTOS/src/cmsis_os.c ****   }
 809:FreeRTOS/src/cmsis_os.c ****   
 810:FreeRTOS/src/cmsis_os.c ****   return osOK;
 1358              		.loc 1 810 10 is_stmt 0 discriminator 1 view .LVU299
 1359              		.thumb
 1360              		.syntax unified
 1361 0046 0020     		movs	r0, #0
 1362 0048 06E0     		b	.L93
 1363              	.L96:
 806:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 1364              		.loc 1 806 8 is_stmt 1 view .LVU300
 806:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 1365              		.loc 1 806 12 is_stmt 0 view .LVU301
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 43


 1366 004a 2146     		mov	r1, r4
 1367 004c 2846     		mov	r0, r5
 1368 004e FFF7FEFF 		bl	xQueueSemaphoreTake
 1369              	.LVL91:
 806:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 1370              		.loc 1 806 11 view .LVU302
 1371 0052 0128     		cmp	r0, #1
 1372 0054 08D1     		bne	.L101
 1373              		.loc 1 810 10 view .LVU303
 1374 0056 0020     		movs	r0, #0
 1375              	.LVL92:
 1376              	.L93:
 811:FreeRTOS/src/cmsis_os.c **** }
 1377              		.loc 1 811 1 view .LVU304
 1378 0058 03B0     		add	sp, sp, #12
 1379              	.LCFI32:
 1380              		.cfi_remember_state
 1381              		.cfi_def_cfa_offset 12
 1382              		@ sp needed
 1383 005a 30BD     		pop	{r4, r5, pc}
 1384              	.LVL93:
 1385              	.L97:
 1386              	.LCFI33:
 1387              		.cfi_restore_state
 786:FreeRTOS/src/cmsis_os.c ****   }
 1388              		.loc 1 786 12 view .LVU305
 1389 005c 8020     		movs	r0, #128
 1390              	.LVL94:
 786:FreeRTOS/src/cmsis_os.c ****   }
 1391              		.loc 1 786 12 view .LVU306
 1392 005e FBE7     		b	.L93
 1393              	.LVL95:
 1394              	.L99:
 802:FreeRTOS/src/cmsis_os.c ****     }
 1395              		.loc 1 802 14 view .LVU307
 1396 0060 FF20     		movs	r0, #255
 1397 0062 F9E7     		b	.L93
 1398              	.L100:
 810:FreeRTOS/src/cmsis_os.c **** }
 1399              		.loc 1 810 10 view .LVU308
 1400 0064 0020     		movs	r0, #0
 1401 0066 F7E7     		b	.L93
 1402              	.L101:
 807:FreeRTOS/src/cmsis_os.c ****   }
 1403              		.loc 1 807 12 view .LVU309
 1404 0068 FF20     		movs	r0, #255
 1405 006a F5E7     		b	.L93
 1406              	.L104:
 1407              		.align	2
 1408              	.L103:
 1409 006c 04ED00E0 		.word	-536810236
 1410              		.cfi_endproc
 1411              	.LFE94:
 1413              		.section	.text.osSemaphoreRelease,"ax",%progbits
 1414              		.align	1
 1415              		.global	osSemaphoreRelease
 1416              		.syntax unified
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 44


 1417              		.thumb
 1418              		.thumb_func
 1419              		.fpu softvfp
 1421              	osSemaphoreRelease:
 1422              	.LVL96:
 1423              	.LFB95:
 812:FreeRTOS/src/cmsis_os.c **** 
 813:FreeRTOS/src/cmsis_os.c **** /**
 814:FreeRTOS/src/cmsis_os.c **** * @brief Release a Semaphore token
 815:FreeRTOS/src/cmsis_os.c **** * @param  semaphore_id  semaphore object referenced with \ref osSemaphore.
 816:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 817:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSemaphoreRelease shall be consistent in every CMSIS-RTOS.
 818:FreeRTOS/src/cmsis_os.c **** */
 819:FreeRTOS/src/cmsis_os.c **** osStatus osSemaphoreRelease (osSemaphoreId semaphore_id)
 820:FreeRTOS/src/cmsis_os.c **** {
 1424              		.loc 1 820 1 is_stmt 1 view -0
 1425              		.cfi_startproc
 1426              		@ args = 0, pretend = 0, frame = 8
 1427              		@ frame_needed = 0, uses_anonymous_args = 0
 1428              		.loc 1 820 1 is_stmt 0 view .LVU311
 1429 0000 10B5     		push	{r4, lr}
 1430              	.LCFI34:
 1431              		.cfi_def_cfa_offset 8
 1432              		.cfi_offset 4, -8
 1433              		.cfi_offset 14, -4
 1434 0002 82B0     		sub	sp, sp, #8
 1435              	.LCFI35:
 1436              		.cfi_def_cfa_offset 16
 1437 0004 0446     		mov	r4, r0
 821:FreeRTOS/src/cmsis_os.c ****   osStatus result = osOK;
 1438              		.loc 1 821 3 is_stmt 1 view .LVU312
 1439              	.LVL97:
 822:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1440              		.loc 1 822 3 view .LVU313
 1441              		.loc 1 822 17 is_stmt 0 view .LVU314
 1442 0006 0023     		movs	r3, #0
 1443 0008 0193     		str	r3, [sp, #4]
 823:FreeRTOS/src/cmsis_os.c ****   
 824:FreeRTOS/src/cmsis_os.c ****   
 825:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 1444              		.loc 1 825 3 is_stmt 1 view .LVU315
 1445              		.loc 1 825 7 is_stmt 0 view .LVU316
 1446 000a FFF7FEFF 		bl	inHandlerMode
 1447              	.LVL98:
 1448              		.loc 1 825 6 view .LVU317
 1449 000e 88B1     		cbz	r0, .L106
 826:FreeRTOS/src/cmsis_os.c ****     if (xSemaphoreGiveFromISR(semaphore_id, &taskWoken) != pdTRUE) {
 1450              		.loc 1 826 5 is_stmt 1 view .LVU318
 1451              		.loc 1 826 9 is_stmt 0 view .LVU319
 1452 0010 01A9     		add	r1, sp, #4
 1453 0012 2046     		mov	r0, r4
 1454 0014 FFF7FEFF 		bl	xQueueGiveFromISR
 1455              	.LVL99:
 1456              		.loc 1 826 8 view .LVU320
 1457 0018 0128     		cmp	r0, #1
 1458 001a 18D1     		bne	.L108
 827:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 45


 828:FreeRTOS/src/cmsis_os.c ****     }
 829:FreeRTOS/src/cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 1459              		.loc 1 829 5 is_stmt 1 view .LVU321
 1460 001c 019B     		ldr	r3, [sp, #4]
 1461 001e C3B1     		cbz	r3, .L109
 1462              		.loc 1 829 5 discriminator 1 view .LVU322
 1463 0020 0D4B     		ldr	r3, .L113
 1464 0022 4FF08052 		mov	r2, #268435456
 1465 0026 1A60     		str	r2, [r3]
 1466              		.loc 1 829 5 discriminator 1 view .LVU323
 1467              		.syntax unified
 1468              	@ 829 "FreeRTOS/src/cmsis_os.c" 1
 1469 0028 BFF34F8F 		dsb
 1470              	@ 0 "" 2
 1471              		.loc 1 829 5 discriminator 1 view .LVU324
 1472              	@ 829 "FreeRTOS/src/cmsis_os.c" 1
 1473 002c BFF36F8F 		isb
 1474              	@ 0 "" 2
 821:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1475              		.loc 1 821 12 is_stmt 0 discriminator 1 view .LVU325
 1476              		.thumb
 1477              		.syntax unified
 1478 0030 0020     		movs	r0, #0
 1479 0032 08E0     		b	.L105
 1480              	.L106:
 830:FreeRTOS/src/cmsis_os.c ****   }
 831:FreeRTOS/src/cmsis_os.c ****   else {
 832:FreeRTOS/src/cmsis_os.c ****     if (xSemaphoreGive(semaphore_id) != pdTRUE) {
 1481              		.loc 1 832 5 is_stmt 1 view .LVU326
 1482              		.loc 1 832 9 is_stmt 0 view .LVU327
 1483 0034 0023     		movs	r3, #0
 1484 0036 1A46     		mov	r2, r3
 1485 0038 1946     		mov	r1, r3
 1486 003a 2046     		mov	r0, r4
 1487 003c FFF7FEFF 		bl	xQueueGenericSend
 1488              	.LVL100:
 1489              		.loc 1 832 8 view .LVU328
 1490 0040 0128     		cmp	r0, #1
 1491 0042 02D0     		beq	.L112
 833:FreeRTOS/src/cmsis_os.c ****       result = osErrorOS;
 1492              		.loc 1 833 14 view .LVU329
 1493 0044 FF20     		movs	r0, #255
 1494              	.L105:
 834:FreeRTOS/src/cmsis_os.c ****     }
 835:FreeRTOS/src/cmsis_os.c ****   }
 836:FreeRTOS/src/cmsis_os.c ****   
 837:FreeRTOS/src/cmsis_os.c ****   return result;
 838:FreeRTOS/src/cmsis_os.c **** }
 1495              		.loc 1 838 1 view .LVU330
 1496 0046 02B0     		add	sp, sp, #8
 1497              	.LCFI36:
 1498              		.cfi_remember_state
 1499              		.cfi_def_cfa_offset 8
 1500              		@ sp needed
 1501 0048 10BD     		pop	{r4, pc}
 1502              	.LVL101:
 1503              	.L112:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 46


 1504              	.LCFI37:
 1505              		.cfi_restore_state
 821:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1506              		.loc 1 821 12 view .LVU331
 1507 004a 0020     		movs	r0, #0
 1508 004c FBE7     		b	.L105
 1509              	.L108:
 827:FreeRTOS/src/cmsis_os.c ****     }
 1510              		.loc 1 827 14 view .LVU332
 1511 004e FF20     		movs	r0, #255
 1512 0050 F9E7     		b	.L105
 1513              	.L109:
 821:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 1514              		.loc 1 821 12 view .LVU333
 1515 0052 0020     		movs	r0, #0
 1516 0054 F7E7     		b	.L105
 1517              	.L114:
 1518 0056 00BF     		.align	2
 1519              	.L113:
 1520 0058 04ED00E0 		.word	-536810236
 1521              		.cfi_endproc
 1522              	.LFE95:
 1524              		.section	.text.osSemaphoreDelete,"ax",%progbits
 1525              		.align	1
 1526              		.global	osSemaphoreDelete
 1527              		.syntax unified
 1528              		.thumb
 1529              		.thumb_func
 1530              		.fpu softvfp
 1532              	osSemaphoreDelete:
 1533              	.LVL102:
 1534              	.LFB96:
 839:FreeRTOS/src/cmsis_os.c **** 
 840:FreeRTOS/src/cmsis_os.c **** /**
 841:FreeRTOS/src/cmsis_os.c **** * @brief Delete a Semaphore
 842:FreeRTOS/src/cmsis_os.c **** * @param  semaphore_id  semaphore object referenced with \ref osSemaphore.
 843:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 844:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osSemaphoreDelete shall be consistent in every CMSIS-RTOS.
 845:FreeRTOS/src/cmsis_os.c **** */
 846:FreeRTOS/src/cmsis_os.c **** osStatus osSemaphoreDelete (osSemaphoreId semaphore_id)
 847:FreeRTOS/src/cmsis_os.c **** {
 1535              		.loc 1 847 1 is_stmt 1 view -0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 0
 1538              		@ frame_needed = 0, uses_anonymous_args = 0
 1539              		.loc 1 847 1 is_stmt 0 view .LVU335
 1540 0000 10B5     		push	{r4, lr}
 1541              	.LCFI38:
 1542              		.cfi_def_cfa_offset 8
 1543              		.cfi_offset 4, -8
 1544              		.cfi_offset 14, -4
 1545 0002 0446     		mov	r4, r0
 848:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 1546              		.loc 1 848 3 is_stmt 1 view .LVU336
 1547              		.loc 1 848 7 is_stmt 0 view .LVU337
 1548 0004 FFF7FEFF 		bl	inHandlerMode
 1549              	.LVL103:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 47


 1550              		.loc 1 848 6 view .LVU338
 1551 0008 20B9     		cbnz	r0, .L117
 849:FreeRTOS/src/cmsis_os.c ****     return osErrorISR;
 850:FreeRTOS/src/cmsis_os.c ****   }
 851:FreeRTOS/src/cmsis_os.c **** 
 852:FreeRTOS/src/cmsis_os.c ****   vSemaphoreDelete(semaphore_id);
 1552              		.loc 1 852 3 is_stmt 1 view .LVU339
 1553 000a 2046     		mov	r0, r4
 1554 000c FFF7FEFF 		bl	vQueueDelete
 1555              	.LVL104:
 853:FreeRTOS/src/cmsis_os.c **** 
 854:FreeRTOS/src/cmsis_os.c ****   return osOK; 
 1556              		.loc 1 854 3 view .LVU340
 1557              		.loc 1 854 10 is_stmt 0 view .LVU341
 1558 0010 0020     		movs	r0, #0
 1559              	.L115:
 855:FreeRTOS/src/cmsis_os.c **** }
 1560              		.loc 1 855 1 view .LVU342
 1561 0012 10BD     		pop	{r4, pc}
 1562              	.LVL105:
 1563              	.L117:
 849:FreeRTOS/src/cmsis_os.c ****     return osErrorISR;
 1564              		.loc 1 849 12 view .LVU343
 1565 0014 8220     		movs	r0, #130
 1566 0016 FCE7     		b	.L115
 1567              		.cfi_endproc
 1568              	.LFE96:
 1570              		.section	.text.osPoolCreate,"ax",%progbits
 1571              		.align	1
 1572              		.global	osPoolCreate
 1573              		.syntax unified
 1574              		.thumb
 1575              		.thumb_func
 1576              		.fpu softvfp
 1578              	osPoolCreate:
 1579              	.LVL106:
 1580              	.LFB97:
 856:FreeRTOS/src/cmsis_os.c **** 
 857:FreeRTOS/src/cmsis_os.c **** #endif    /* Use Semaphores */
 858:FreeRTOS/src/cmsis_os.c **** 
 859:FreeRTOS/src/cmsis_os.c **** /*******************   Memory Pool Management Functions  ***********************/
 860:FreeRTOS/src/cmsis_os.c **** 
 861:FreeRTOS/src/cmsis_os.c **** #if (defined (osFeature_Pool)  &&  (osFeature_Pool != 0)) 
 862:FreeRTOS/src/cmsis_os.c **** 
 863:FreeRTOS/src/cmsis_os.c **** //TODO
 864:FreeRTOS/src/cmsis_os.c **** //This is a primitive and inefficient wrapper around the existing FreeRTOS memory management.
 865:FreeRTOS/src/cmsis_os.c **** //A better implementation will have to modify heap_x.c!
 866:FreeRTOS/src/cmsis_os.c **** 
 867:FreeRTOS/src/cmsis_os.c **** 
 868:FreeRTOS/src/cmsis_os.c **** typedef struct os_pool_cb {
 869:FreeRTOS/src/cmsis_os.c ****   void *pool;
 870:FreeRTOS/src/cmsis_os.c ****   uint8_t *markers;
 871:FreeRTOS/src/cmsis_os.c ****   uint32_t pool_sz;
 872:FreeRTOS/src/cmsis_os.c ****   uint32_t item_sz;
 873:FreeRTOS/src/cmsis_os.c ****   uint32_t currentIndex;
 874:FreeRTOS/src/cmsis_os.c **** } os_pool_cb_t;
 875:FreeRTOS/src/cmsis_os.c **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 48


 876:FreeRTOS/src/cmsis_os.c **** 
 877:FreeRTOS/src/cmsis_os.c **** /**
 878:FreeRTOS/src/cmsis_os.c **** * @brief Create and Initialize a memory pool
 879:FreeRTOS/src/cmsis_os.c **** * @param  pool_def      memory pool definition referenced with \ref osPool.
 880:FreeRTOS/src/cmsis_os.c **** * @retval  memory pool ID for reference by other functions or NULL in case of error.
 881:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osPoolCreate shall be consistent in every CMSIS-RTOS.
 882:FreeRTOS/src/cmsis_os.c **** */
 883:FreeRTOS/src/cmsis_os.c **** osPoolId osPoolCreate (const osPoolDef_t *pool_def)
 884:FreeRTOS/src/cmsis_os.c **** {
 1581              		.loc 1 884 1 is_stmt 1 view -0
 1582              		.cfi_startproc
 1583              		@ args = 0, pretend = 0, frame = 0
 1584              		@ frame_needed = 0, uses_anonymous_args = 0
 1585              		.loc 1 884 1 is_stmt 0 view .LVU345
 1586 0000 70B5     		push	{r4, r5, r6, lr}
 1587              	.LCFI39:
 1588              		.cfi_def_cfa_offset 16
 1589              		.cfi_offset 4, -16
 1590              		.cfi_offset 5, -12
 1591              		.cfi_offset 6, -8
 1592              		.cfi_offset 14, -4
 1593 0002 0546     		mov	r5, r0
 885:FreeRTOS/src/cmsis_os.c **** #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
 886:FreeRTOS/src/cmsis_os.c ****   osPoolId thePool;
 1594              		.loc 1 886 3 is_stmt 1 view .LVU346
 887:FreeRTOS/src/cmsis_os.c ****   int itemSize = 4 * ((pool_def->item_sz + 3) / 4);
 1595              		.loc 1 887 3 view .LVU347
 1596              		.loc 1 887 32 is_stmt 0 view .LVU348
 1597 0004 4368     		ldr	r3, [r0, #4]
 1598              		.loc 1 887 42 view .LVU349
 1599 0006 0333     		adds	r3, r3, #3
 1600              		.loc 1 887 7 view .LVU350
 1601 0008 23F00306 		bic	r6, r3, #3
 1602              	.LVL107:
 888:FreeRTOS/src/cmsis_os.c ****   uint32_t i;
 1603              		.loc 1 888 3 is_stmt 1 view .LVU351
 889:FreeRTOS/src/cmsis_os.c ****   
 890:FreeRTOS/src/cmsis_os.c ****   /* First have to allocate memory for the pool control block. */
 891:FreeRTOS/src/cmsis_os.c ****  thePool = pvPortMalloc(sizeof(os_pool_cb_t));
 1604              		.loc 1 891 2 view .LVU352
 1605              		.loc 1 891 12 is_stmt 0 view .LVU353
 1606 000c 1420     		movs	r0, #20
 1607              	.LVL108:
 1608              		.loc 1 891 12 view .LVU354
 1609 000e FFF7FEFF 		bl	pvPortMalloc
 1610              	.LVL109:
 892:FreeRTOS/src/cmsis_os.c **** 
 893:FreeRTOS/src/cmsis_os.c ****   
 894:FreeRTOS/src/cmsis_os.c ****   if (thePool) {
 1611              		.loc 1 894 3 is_stmt 1 view .LVU355
 1612              		.loc 1 894 6 is_stmt 0 view .LVU356
 1613 0012 0446     		mov	r4, r0
 1614 0014 28B3     		cbz	r0, .L119
 895:FreeRTOS/src/cmsis_os.c ****     thePool->pool_sz = pool_def->pool_sz;
 1615              		.loc 1 895 5 is_stmt 1 view .LVU357
 1616              		.loc 1 895 32 is_stmt 0 view .LVU358
 1617 0016 2B68     		ldr	r3, [r5]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 49


 1618              		.loc 1 895 22 view .LVU359
 1619 0018 8360     		str	r3, [r0, #8]
 896:FreeRTOS/src/cmsis_os.c ****     thePool->item_sz = itemSize;
 1620              		.loc 1 896 5 is_stmt 1 view .LVU360
 1621              		.loc 1 896 22 is_stmt 0 view .LVU361
 1622 001a C660     		str	r6, [r0, #12]
 897:FreeRTOS/src/cmsis_os.c ****     thePool->currentIndex = 0;
 1623              		.loc 1 897 5 is_stmt 1 view .LVU362
 1624              		.loc 1 897 27 is_stmt 0 view .LVU363
 1625 001c 0023     		movs	r3, #0
 1626 001e 0361     		str	r3, [r0, #16]
 898:FreeRTOS/src/cmsis_os.c ****     
 899:FreeRTOS/src/cmsis_os.c ****     /* Memory for markers */
 900:FreeRTOS/src/cmsis_os.c ****     thePool->markers = pvPortMalloc(pool_def->pool_sz);
 1627              		.loc 1 900 5 is_stmt 1 view .LVU364
 1628              		.loc 1 900 24 is_stmt 0 view .LVU365
 1629 0020 2868     		ldr	r0, [r5]
 1630              	.LVL110:
 1631              		.loc 1 900 24 view .LVU366
 1632 0022 FFF7FEFF 		bl	pvPortMalloc
 1633              	.LVL111:
 1634              		.loc 1 900 22 view .LVU367
 1635 0026 6060     		str	r0, [r4, #4]
 901:FreeRTOS/src/cmsis_os.c ****    
 902:FreeRTOS/src/cmsis_os.c ****     if (thePool->markers) {
 1636              		.loc 1 902 5 is_stmt 1 view .LVU368
 1637              		.loc 1 902 8 is_stmt 0 view .LVU369
 1638 0028 B8B1     		cbz	r0, .L121
 903:FreeRTOS/src/cmsis_os.c ****       /* Now allocate the pool itself. */
 904:FreeRTOS/src/cmsis_os.c ****      thePool->pool = pvPortMalloc(pool_def->pool_sz * itemSize);
 1639              		.loc 1 904 6 is_stmt 1 view .LVU370
 1640              		.loc 1 904 43 is_stmt 0 view .LVU371
 1641 002a 2868     		ldr	r0, [r5]
 1642              		.loc 1 904 22 view .LVU372
 1643 002c 00FB06F0 		mul	r0, r0, r6
 1644 0030 FFF7FEFF 		bl	pvPortMalloc
 1645              	.LVL112:
 1646              		.loc 1 904 20 view .LVU373
 1647 0034 2060     		str	r0, [r4]
 905:FreeRTOS/src/cmsis_os.c ****       
 906:FreeRTOS/src/cmsis_os.c ****       if (thePool->pool) {
 1648              		.loc 1 906 7 is_stmt 1 view .LVU374
 1649              		.loc 1 906 10 is_stmt 0 view .LVU375
 1650 0036 40B1     		cbz	r0, .L128
 907:FreeRTOS/src/cmsis_os.c ****         for (i = 0; i < pool_def->pool_sz; i++) {
 1651              		.loc 1 907 16 view .LVU376
 1652 0038 0023     		movs	r3, #0
 1653              	.L122:
 1654              	.LVL113:
 1655              		.loc 1 907 33 discriminator 1 view .LVU377
 1656 003a 2A68     		ldr	r2, [r5]
 1657              		.loc 1 907 9 discriminator 1 view .LVU378
 1658 003c 9A42     		cmp	r2, r3
 1659 003e 10D9     		bls	.L119
 908:FreeRTOS/src/cmsis_os.c ****           thePool->markers[i] = 0;
 1660              		.loc 1 908 11 is_stmt 1 discriminator 3 view .LVU379
 1661              		.loc 1 908 18 is_stmt 0 discriminator 3 view .LVU380
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 50


 1662 0040 6268     		ldr	r2, [r4, #4]
 1663              		.loc 1 908 31 discriminator 3 view .LVU381
 1664 0042 0021     		movs	r1, #0
 1665 0044 D154     		strb	r1, [r2, r3]
 907:FreeRTOS/src/cmsis_os.c ****         for (i = 0; i < pool_def->pool_sz; i++) {
 1666              		.loc 1 907 45 discriminator 3 view .LVU382
 1667 0046 0133     		adds	r3, r3, #1
 1668              	.LVL114:
 907:FreeRTOS/src/cmsis_os.c ****         for (i = 0; i < pool_def->pool_sz; i++) {
 1669              		.loc 1 907 45 discriminator 3 view .LVU383
 1670 0048 F7E7     		b	.L122
 1671              	.LVL115:
 1672              	.L128:
 909:FreeRTOS/src/cmsis_os.c ****         }
 910:FreeRTOS/src/cmsis_os.c ****       }
 911:FreeRTOS/src/cmsis_os.c ****       else {
 912:FreeRTOS/src/cmsis_os.c ****         vPortFree(thePool->markers);
 1673              		.loc 1 912 9 is_stmt 1 view .LVU384
 1674 004a 6068     		ldr	r0, [r4, #4]
 1675 004c FFF7FEFF 		bl	vPortFree
 1676              	.LVL116:
 913:FreeRTOS/src/cmsis_os.c ****         vPortFree(thePool);
 1677              		.loc 1 913 9 view .LVU385
 1678 0050 2046     		mov	r0, r4
 1679 0052 FFF7FEFF 		bl	vPortFree
 1680              	.LVL117:
 914:FreeRTOS/src/cmsis_os.c ****         thePool = NULL;
 1681              		.loc 1 914 9 view .LVU386
 1682              		.loc 1 914 17 is_stmt 0 view .LVU387
 1683 0056 0024     		movs	r4, #0
 1684 0058 03E0     		b	.L119
 1685              	.LVL118:
 1686              	.L121:
 915:FreeRTOS/src/cmsis_os.c ****       }
 916:FreeRTOS/src/cmsis_os.c ****     }
 917:FreeRTOS/src/cmsis_os.c ****     else {
 918:FreeRTOS/src/cmsis_os.c ****       vPortFree(thePool);
 1687              		.loc 1 918 7 is_stmt 1 view .LVU388
 1688 005a 2046     		mov	r0, r4
 1689 005c FFF7FEFF 		bl	vPortFree
 1690              	.LVL119:
 919:FreeRTOS/src/cmsis_os.c ****       thePool = NULL;
 1691              		.loc 1 919 7 view .LVU389
 1692              		.loc 1 919 15 is_stmt 0 view .LVU390
 1693 0060 0024     		movs	r4, #0
 920:FreeRTOS/src/cmsis_os.c ****     }
 921:FreeRTOS/src/cmsis_os.c ****   }
 922:FreeRTOS/src/cmsis_os.c **** 
 923:FreeRTOS/src/cmsis_os.c ****   return thePool;
 1694              		.loc 1 923 3 is_stmt 1 view .LVU391
 1695              	.LVL120:
 1696              	.L119:
 924:FreeRTOS/src/cmsis_os.c ****  
 925:FreeRTOS/src/cmsis_os.c **** #else
 926:FreeRTOS/src/cmsis_os.c ****   return NULL;
 927:FreeRTOS/src/cmsis_os.c **** #endif
 928:FreeRTOS/src/cmsis_os.c **** }
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 51


 1697              		.loc 1 928 1 is_stmt 0 view .LVU392
 1698 0062 2046     		mov	r0, r4
 1699 0064 70BD     		pop	{r4, r5, r6, pc}
 1700              		.loc 1 928 1 view .LVU393
 1701              		.cfi_endproc
 1702              	.LFE97:
 1704              		.section	.text.osPoolAlloc,"ax",%progbits
 1705              		.align	1
 1706              		.global	osPoolAlloc
 1707              		.syntax unified
 1708              		.thumb
 1709              		.thumb_func
 1710              		.fpu softvfp
 1712              	osPoolAlloc:
 1713              	.LVL121:
 1714              	.LFB98:
 929:FreeRTOS/src/cmsis_os.c **** 
 930:FreeRTOS/src/cmsis_os.c **** /**
 931:FreeRTOS/src/cmsis_os.c **** * @brief Allocate a memory block from a memory pool
 932:FreeRTOS/src/cmsis_os.c **** * @param pool_id       memory pool ID obtain referenced with \ref osPoolCreate.
 933:FreeRTOS/src/cmsis_os.c **** * @retval  address of the allocated memory block or NULL in case of no memory available.
 934:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osPoolAlloc shall be consistent in every CMSIS-RTOS.
 935:FreeRTOS/src/cmsis_os.c **** */
 936:FreeRTOS/src/cmsis_os.c **** void *osPoolAlloc (osPoolId pool_id)
 937:FreeRTOS/src/cmsis_os.c **** {
 1715              		.loc 1 937 1 is_stmt 1 view -0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 1719              		.loc 1 937 1 is_stmt 0 view .LVU395
 1720 0000 70B5     		push	{r4, r5, r6, lr}
 1721              	.LCFI40:
 1722              		.cfi_def_cfa_offset 16
 1723              		.cfi_offset 4, -16
 1724              		.cfi_offset 5, -12
 1725              		.cfi_offset 6, -8
 1726              		.cfi_offset 14, -4
 1727 0002 0446     		mov	r4, r0
 938:FreeRTOS/src/cmsis_os.c ****   int dummy = 0;
 1728              		.loc 1 938 3 is_stmt 1 view .LVU396
 1729              	.LVL122:
 939:FreeRTOS/src/cmsis_os.c ****   void *p = NULL;
 1730              		.loc 1 939 3 view .LVU397
 940:FreeRTOS/src/cmsis_os.c ****   uint32_t i;
 1731              		.loc 1 940 3 view .LVU398
 941:FreeRTOS/src/cmsis_os.c ****   uint32_t index;
 1732              		.loc 1 941 3 view .LVU399
 942:FreeRTOS/src/cmsis_os.c ****   
 943:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 1733              		.loc 1 943 3 view .LVU400
 1734              		.loc 1 943 7 is_stmt 0 view .LVU401
 1735 0004 FFF7FEFF 		bl	inHandlerMode
 1736              	.LVL123:
 1737              		.loc 1 943 6 view .LVU402
 1738 0008 C8B1     		cbz	r0, .L130
 944:FreeRTOS/src/cmsis_os.c ****     dummy = portSET_INTERRUPT_MASK_FROM_ISR();
 1739              		.loc 1 944 5 is_stmt 1 view .LVU403
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 52


 1740              	.LBB10:
 1741              	.LBI10:
 1742              		.file 3 "FreeRTOS/inc/portmacro.h"
   1:FreeRTOS/inc/portmacro.h **** /*
   2:FreeRTOS/inc/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:FreeRTOS/inc/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:FreeRTOS/inc/portmacro.h ****  *
   5:FreeRTOS/inc/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:FreeRTOS/inc/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:FreeRTOS/inc/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:FreeRTOS/inc/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:FreeRTOS/inc/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:FreeRTOS/inc/portmacro.h ****  * subject to the following conditions:
  11:FreeRTOS/inc/portmacro.h ****  *
  12:FreeRTOS/inc/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:FreeRTOS/inc/portmacro.h ****  * copies or substantial portions of the Software.
  14:FreeRTOS/inc/portmacro.h ****  *
  15:FreeRTOS/inc/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:FreeRTOS/inc/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:FreeRTOS/inc/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:FreeRTOS/inc/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:FreeRTOS/inc/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:FreeRTOS/inc/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:FreeRTOS/inc/portmacro.h ****  *
  22:FreeRTOS/inc/portmacro.h ****  * http://www.FreeRTOS.org
  23:FreeRTOS/inc/portmacro.h ****  * http://aws.amazon.com/freertos
  24:FreeRTOS/inc/portmacro.h ****  *
  25:FreeRTOS/inc/portmacro.h ****  * 1 tab == 4 spaces!
  26:FreeRTOS/inc/portmacro.h ****  */
  27:FreeRTOS/inc/portmacro.h **** 
  28:FreeRTOS/inc/portmacro.h **** 
  29:FreeRTOS/inc/portmacro.h **** #ifndef PORTMACRO_H
  30:FreeRTOS/inc/portmacro.h **** #define PORTMACRO_H
  31:FreeRTOS/inc/portmacro.h **** 
  32:FreeRTOS/inc/portmacro.h **** #ifdef __cplusplus
  33:FreeRTOS/inc/portmacro.h **** extern "C" {
  34:FreeRTOS/inc/portmacro.h **** #endif
  35:FreeRTOS/inc/portmacro.h **** 
  36:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------
  37:FreeRTOS/inc/portmacro.h ****  * Port specific definitions.
  38:FreeRTOS/inc/portmacro.h ****  *
  39:FreeRTOS/inc/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:FreeRTOS/inc/portmacro.h ****  * given hardware and compiler.
  41:FreeRTOS/inc/portmacro.h ****  *
  42:FreeRTOS/inc/portmacro.h ****  * These settings should not be altered.
  43:FreeRTOS/inc/portmacro.h ****  *-----------------------------------------------------------
  44:FreeRTOS/inc/portmacro.h ****  */
  45:FreeRTOS/inc/portmacro.h **** 
  46:FreeRTOS/inc/portmacro.h **** /* Type definitions. */
  47:FreeRTOS/inc/portmacro.h **** #define portCHAR		char
  48:FreeRTOS/inc/portmacro.h **** #define portFLOAT		float
  49:FreeRTOS/inc/portmacro.h **** #define portDOUBLE		double
  50:FreeRTOS/inc/portmacro.h **** #define portLONG		long
  51:FreeRTOS/inc/portmacro.h **** #define portSHORT		short
  52:FreeRTOS/inc/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:FreeRTOS/inc/portmacro.h **** #define portBASE_TYPE	long
  54:FreeRTOS/inc/portmacro.h **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 53


  55:FreeRTOS/inc/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:FreeRTOS/inc/portmacro.h **** typedef long BaseType_t;
  57:FreeRTOS/inc/portmacro.h **** typedef unsigned long UBaseType_t;
  58:FreeRTOS/inc/portmacro.h **** 
  59:FreeRTOS/inc/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:FreeRTOS/inc/portmacro.h **** 	typedef uint16_t TickType_t;
  61:FreeRTOS/inc/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:FreeRTOS/inc/portmacro.h **** #else
  63:FreeRTOS/inc/portmacro.h **** 	typedef uint32_t TickType_t;
  64:FreeRTOS/inc/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:FreeRTOS/inc/portmacro.h **** 
  66:FreeRTOS/inc/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:FreeRTOS/inc/portmacro.h **** 	not need to be guarded with a critical section. */
  68:FreeRTOS/inc/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:FreeRTOS/inc/portmacro.h **** #endif
  70:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
  71:FreeRTOS/inc/portmacro.h **** 
  72:FreeRTOS/inc/portmacro.h **** /* Architecture specifics. */
  73:FreeRTOS/inc/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:FreeRTOS/inc/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:FreeRTOS/inc/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
  77:FreeRTOS/inc/portmacro.h **** 
  78:FreeRTOS/inc/portmacro.h **** /* Scheduler utilities. */
  79:FreeRTOS/inc/portmacro.h **** #define portYIELD() 															\
  80:FreeRTOS/inc/portmacro.h **** {																				\
  81:FreeRTOS/inc/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:FreeRTOS/inc/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:FreeRTOS/inc/portmacro.h **** 																				\
  84:FreeRTOS/inc/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:FreeRTOS/inc/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:FreeRTOS/inc/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:FreeRTOS/inc/portmacro.h **** 	__asm volatile( "isb" );													\
  88:FreeRTOS/inc/portmacro.h **** }
  89:FreeRTOS/inc/portmacro.h **** 
  90:FreeRTOS/inc/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:FreeRTOS/inc/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:FreeRTOS/inc/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:FreeRTOS/inc/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
  95:FreeRTOS/inc/portmacro.h **** 
  96:FreeRTOS/inc/portmacro.h **** /* Critical section management. */
  97:FreeRTOS/inc/portmacro.h **** extern void vPortEnterCritical( void );
  98:FreeRTOS/inc/portmacro.h **** extern void vPortExitCritical( void );
  99:FreeRTOS/inc/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:FreeRTOS/inc/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:FreeRTOS/inc/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:FreeRTOS/inc/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:FreeRTOS/inc/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:FreeRTOS/inc/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:FreeRTOS/inc/portmacro.h **** 
 106:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 107:FreeRTOS/inc/portmacro.h **** 
 108:FreeRTOS/inc/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:FreeRTOS/inc/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:FreeRTOS/inc/portmacro.h **** (which build with all the ports) will build. */
 111:FreeRTOS/inc/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 54


 112:FreeRTOS/inc/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 114:FreeRTOS/inc/portmacro.h **** 
 115:FreeRTOS/inc/portmacro.h **** /* Tickless idle/low power functionality. */
 116:FreeRTOS/inc/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:FreeRTOS/inc/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:FreeRTOS/inc/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:FreeRTOS/inc/portmacro.h **** #endif
 120:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 121:FreeRTOS/inc/portmacro.h **** 
 122:FreeRTOS/inc/portmacro.h **** /* Architecture specific optimisations. */
 123:FreeRTOS/inc/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:FreeRTOS/inc/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:FreeRTOS/inc/portmacro.h **** #endif
 126:FreeRTOS/inc/portmacro.h **** 
 127:FreeRTOS/inc/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:FreeRTOS/inc/portmacro.h **** 
 129:FreeRTOS/inc/portmacro.h **** 	/* Generic helper function. */
 130:FreeRTOS/inc/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:FreeRTOS/inc/portmacro.h **** 	{
 132:FreeRTOS/inc/portmacro.h **** 	uint8_t ucReturn;
 133:FreeRTOS/inc/portmacro.h **** 
 134:FreeRTOS/inc/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:FreeRTOS/inc/portmacro.h **** 		return ucReturn;
 136:FreeRTOS/inc/portmacro.h **** 	}
 137:FreeRTOS/inc/portmacro.h **** 
 138:FreeRTOS/inc/portmacro.h **** 	/* Check the configuration. */
 139:FreeRTOS/inc/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:FreeRTOS/inc/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:FreeRTOS/inc/portmacro.h **** 	#endif
 142:FreeRTOS/inc/portmacro.h **** 
 143:FreeRTOS/inc/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:FreeRTOS/inc/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:FreeRTOS/inc/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:FreeRTOS/inc/portmacro.h **** 
 147:FreeRTOS/inc/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:FreeRTOS/inc/portmacro.h **** 
 149:FreeRTOS/inc/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:FreeRTOS/inc/portmacro.h **** 
 151:FreeRTOS/inc/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:FreeRTOS/inc/portmacro.h **** 
 153:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 154:FreeRTOS/inc/portmacro.h **** 
 155:FreeRTOS/inc/portmacro.h **** #ifdef configASSERT
 156:FreeRTOS/inc/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:FreeRTOS/inc/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:FreeRTOS/inc/portmacro.h **** #endif
 159:FreeRTOS/inc/portmacro.h **** 
 160:FreeRTOS/inc/portmacro.h **** /* portNOP() is not required by this port. */
 161:FreeRTOS/inc/portmacro.h **** #define portNOP()
 162:FreeRTOS/inc/portmacro.h **** 
 163:FreeRTOS/inc/portmacro.h **** #define portINLINE	__inline
 164:FreeRTOS/inc/portmacro.h **** 
 165:FreeRTOS/inc/portmacro.h **** #ifndef portFORCE_INLINE
 166:FreeRTOS/inc/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:FreeRTOS/inc/portmacro.h **** #endif
 168:FreeRTOS/inc/portmacro.h **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 55


 169:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 170:FreeRTOS/inc/portmacro.h **** 
 171:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 172:FreeRTOS/inc/portmacro.h **** {
 173:FreeRTOS/inc/portmacro.h **** uint32_t ulCurrentInterrupt;
 174:FreeRTOS/inc/portmacro.h **** BaseType_t xReturn;
 175:FreeRTOS/inc/portmacro.h **** 
 176:FreeRTOS/inc/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 177:FreeRTOS/inc/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 178:FreeRTOS/inc/portmacro.h **** 
 179:FreeRTOS/inc/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 180:FreeRTOS/inc/portmacro.h **** 	{
 181:FreeRTOS/inc/portmacro.h **** 		xReturn = pdFALSE;
 182:FreeRTOS/inc/portmacro.h **** 	}
 183:FreeRTOS/inc/portmacro.h **** 	else
 184:FreeRTOS/inc/portmacro.h **** 	{
 185:FreeRTOS/inc/portmacro.h **** 		xReturn = pdTRUE;
 186:FreeRTOS/inc/portmacro.h **** 	}
 187:FreeRTOS/inc/portmacro.h **** 
 188:FreeRTOS/inc/portmacro.h **** 	return xReturn;
 189:FreeRTOS/inc/portmacro.h **** }
 190:FreeRTOS/inc/portmacro.h **** 
 191:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 192:FreeRTOS/inc/portmacro.h **** 
 193:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 194:FreeRTOS/inc/portmacro.h **** {
 195:FreeRTOS/inc/portmacro.h **** uint32_t ulNewBASEPRI;
 196:FreeRTOS/inc/portmacro.h **** 
 197:FreeRTOS/inc/portmacro.h **** 	__asm volatile
 198:FreeRTOS/inc/portmacro.h **** 	(
 199:FreeRTOS/inc/portmacro.h **** 		"	mov %0, %1												\n" \
 200:FreeRTOS/inc/portmacro.h **** 		"	msr basepri, %0											\n" \
 201:FreeRTOS/inc/portmacro.h **** 		"	isb														\n" \
 202:FreeRTOS/inc/portmacro.h **** 		"	dsb														\n" \
 203:FreeRTOS/inc/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 204:FreeRTOS/inc/portmacro.h **** 	);
 205:FreeRTOS/inc/portmacro.h **** }
 206:FreeRTOS/inc/portmacro.h **** 
 207:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 208:FreeRTOS/inc/portmacro.h **** 
 209:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 1743              		.loc 3 209 34 view .LVU404
 1744              	.LBB11:
 210:FreeRTOS/inc/portmacro.h **** {
 211:FreeRTOS/inc/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 1745              		.loc 3 211 1 view .LVU405
 212:FreeRTOS/inc/portmacro.h **** 
 213:FreeRTOS/inc/portmacro.h **** 	__asm volatile
 1746              		.loc 3 213 2 view .LVU406
 1747              		.syntax unified
 1748              	@ 213 "FreeRTOS/inc/portmacro.h" 1
 1749 000a EFF31185 			mrs r5, basepri											
 1750 000e 4FF0BF03 		mov r3, #191												
 1751 0012 83F31188 		msr basepri, r3											
 1752 0016 BFF36F8F 		isb														
 1753 001a BFF34F8F 		dsb														
 1754              	
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 56


 1755              	@ 0 "" 2
 1756              	.LVL124:
 214:FreeRTOS/inc/portmacro.h **** 	(
 215:FreeRTOS/inc/portmacro.h **** 		"	mrs %0, basepri											\n" \
 216:FreeRTOS/inc/portmacro.h **** 		"	mov %1, %2												\n" \
 217:FreeRTOS/inc/portmacro.h **** 		"	msr basepri, %1											\n" \
 218:FreeRTOS/inc/portmacro.h **** 		"	isb														\n" \
 219:FreeRTOS/inc/portmacro.h **** 		"	dsb														\n" \
 220:FreeRTOS/inc/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 221:FreeRTOS/inc/portmacro.h **** 	);
 222:FreeRTOS/inc/portmacro.h **** 
 223:FreeRTOS/inc/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 224:FreeRTOS/inc/portmacro.h **** 	warnings. */
 225:FreeRTOS/inc/portmacro.h **** 	return ulOriginalBASEPRI;
 1757              		.loc 3 225 2 view .LVU407
 1758              		.thumb
 1759              		.syntax unified
 1760              	.L131:
 1761              		.loc 3 225 2 is_stmt 0 view .LVU408
 1762              	.LBE11:
 1763              	.LBE10:
 945:FreeRTOS/src/cmsis_os.c ****   }
 946:FreeRTOS/src/cmsis_os.c ****   else {
 947:FreeRTOS/src/cmsis_os.c ****     vPortEnterCritical();
 948:FreeRTOS/src/cmsis_os.c ****   }
 949:FreeRTOS/src/cmsis_os.c ****   
 950:FreeRTOS/src/cmsis_os.c ****   for (i = 0; i < pool_id->pool_sz; i++) {
 1764              		.loc 1 950 3 is_stmt 1 view .LVU409
 1765              		.loc 1 950 10 is_stmt 0 view .LVU410
 1766 001e 0020     		movs	r0, #0
 1767              	.LVL125:
 1768              	.L132:
 1769              		.loc 1 950 26 discriminator 1 view .LVU411
 1770 0020 A168     		ldr	r1, [r4, #8]
 1771              		.loc 1 950 3 discriminator 1 view .LVU412
 1772 0022 8142     		cmp	r1, r0
 1773 0024 17D9     		bls	.L139
 951:FreeRTOS/src/cmsis_os.c ****     index = (pool_id->currentIndex + i) % pool_id->pool_sz;
 1774              		.loc 1 951 5 is_stmt 1 view .LVU413
 1775              		.loc 1 951 21 is_stmt 0 view .LVU414
 1776 0026 2369     		ldr	r3, [r4, #16]
 1777              		.loc 1 951 36 view .LVU415
 1778 0028 1A18     		adds	r2, r3, r0
 1779              		.loc 1 951 11 view .LVU416
 1780 002a B2FBF1F3 		udiv	r3, r2, r1
 1781 002e 01FB1323 		mls	r3, r1, r3, r2
 1782              	.LVL126:
 952:FreeRTOS/src/cmsis_os.c ****     
 953:FreeRTOS/src/cmsis_os.c ****     if (pool_id->markers[index] == 0) {
 1783              		.loc 1 953 5 is_stmt 1 view .LVU417
 1784              		.loc 1 953 16 is_stmt 0 view .LVU418
 1785 0032 6268     		ldr	r2, [r4, #4]
 1786              		.loc 1 953 25 view .LVU419
 1787 0034 D118     		adds	r1, r2, r3
 1788 0036 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1789              		.loc 1 953 8 view .LVU420
 1790 0038 2AB1     		cbz	r2, .L140
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 57


 950:FreeRTOS/src/cmsis_os.c ****     index = (pool_id->currentIndex + i) % pool_id->pool_sz;
 1791              		.loc 1 950 38 discriminator 2 view .LVU421
 1792 003a 0130     		adds	r0, r0, #1
 1793              	.LVL127:
 950:FreeRTOS/src/cmsis_os.c ****     index = (pool_id->currentIndex + i) % pool_id->pool_sz;
 1794              		.loc 1 950 38 discriminator 2 view .LVU422
 1795 003c F0E7     		b	.L132
 1796              	.LVL128:
 1797              	.L130:
 950:FreeRTOS/src/cmsis_os.c ****     index = (pool_id->currentIndex + i) % pool_id->pool_sz;
 1798              		.loc 1 950 38 discriminator 2 view .LVU423
 1799 003e 0546     		mov	r5, r0
 947:FreeRTOS/src/cmsis_os.c ****   }
 1800              		.loc 1 947 5 is_stmt 1 view .LVU424
 1801 0040 FFF7FEFF 		bl	vPortEnterCritical
 1802              	.LVL129:
 1803 0044 EBE7     		b	.L131
 1804              	.LVL130:
 1805              	.L140:
 954:FreeRTOS/src/cmsis_os.c ****       pool_id->markers[index] = 1;
 1806              		.loc 1 954 7 view .LVU425
 1807              		.loc 1 954 31 is_stmt 0 view .LVU426
 1808 0046 0122     		movs	r2, #1
 1809 0048 0A70     		strb	r2, [r1]
 955:FreeRTOS/src/cmsis_os.c ****       p = (void *)((uint32_t)(pool_id->pool) + (index * pool_id->item_sz));
 1810              		.loc 1 955 7 is_stmt 1 view .LVU427
 1811              		.loc 1 955 38 is_stmt 0 view .LVU428
 1812 004a 2268     		ldr	r2, [r4]
 1813              		.loc 1 955 64 view .LVU429
 1814 004c E668     		ldr	r6, [r4, #12]
 1815              		.loc 1 955 46 view .LVU430
 1816 004e 03FB0626 		mla	r6, r3, r6, r2
 1817              	.LVL131:
 956:FreeRTOS/src/cmsis_os.c ****       pool_id->currentIndex = index;
 1818              		.loc 1 956 7 is_stmt 1 view .LVU431
 1819              		.loc 1 956 29 is_stmt 0 view .LVU432
 1820 0052 2361     		str	r3, [r4, #16]
 957:FreeRTOS/src/cmsis_os.c ****       break;
 1821              		.loc 1 957 7 is_stmt 1 view .LVU433
 1822 0054 00E0     		b	.L134
 1823              	.LVL132:
 1824              	.L139:
 939:FreeRTOS/src/cmsis_os.c ****   uint32_t i;
 1825              		.loc 1 939 9 is_stmt 0 view .LVU434
 1826 0056 0026     		movs	r6, #0
 1827              	.LVL133:
 1828              	.L134:
 958:FreeRTOS/src/cmsis_os.c ****     }
 959:FreeRTOS/src/cmsis_os.c ****   }
 960:FreeRTOS/src/cmsis_os.c ****   
 961:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 1829              		.loc 1 961 3 is_stmt 1 view .LVU435
 1830              		.loc 1 961 7 is_stmt 0 view .LVU436
 1831 0058 FFF7FEFF 		bl	inHandlerMode
 1832              	.LVL134:
 1833              		.loc 1 961 6 view .LVU437
 1834 005c 18B1     		cbz	r0, .L136
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 58


 962:FreeRTOS/src/cmsis_os.c ****     portCLEAR_INTERRUPT_MASK_FROM_ISR(dummy);
 1835              		.loc 1 962 5 is_stmt 1 view .LVU438
 1836              	.LVL135:
 1837              	.LBB12:
 1838              	.LBI12:
 226:FreeRTOS/inc/portmacro.h **** }
 227:FreeRTOS/inc/portmacro.h **** /*-----------------------------------------------------------*/
 228:FreeRTOS/inc/portmacro.h **** 
 229:FreeRTOS/inc/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 1839              		.loc 3 229 30 view .LVU439
 1840              	.LBB13:
 230:FreeRTOS/inc/portmacro.h **** {
 231:FreeRTOS/inc/portmacro.h **** 	__asm volatile
 1841              		.loc 3 231 2 view .LVU440
 1842              		.syntax unified
 1843              	@ 231 "FreeRTOS/inc/portmacro.h" 1
 1844 005e 85F31188 			msr basepri, r5	
 1845              	@ 0 "" 2
 1846              	.LVL136:
 1847              		.thumb
 1848              		.syntax unified
 1849              	.L129:
 1850              		.loc 3 231 2 is_stmt 0 view .LVU441
 1851              	.LBE13:
 1852              	.LBE12:
 963:FreeRTOS/src/cmsis_os.c ****   }
 964:FreeRTOS/src/cmsis_os.c ****   else {
 965:FreeRTOS/src/cmsis_os.c ****     vPortExitCritical();
 966:FreeRTOS/src/cmsis_os.c ****   }
 967:FreeRTOS/src/cmsis_os.c ****   
 968:FreeRTOS/src/cmsis_os.c ****   return p;
 969:FreeRTOS/src/cmsis_os.c **** }
 1853              		.loc 1 969 1 view .LVU442
 1854 0062 3046     		mov	r0, r6
 1855 0064 70BD     		pop	{r4, r5, r6, pc}
 1856              	.LVL137:
 1857              	.L136:
 965:FreeRTOS/src/cmsis_os.c ****   }
 1858              		.loc 1 965 5 is_stmt 1 view .LVU443
 1859 0066 FFF7FEFF 		bl	vPortExitCritical
 1860              	.LVL138:
 968:FreeRTOS/src/cmsis_os.c **** }
 1861              		.loc 1 968 3 view .LVU444
 968:FreeRTOS/src/cmsis_os.c **** }
 1862              		.loc 1 968 10 is_stmt 0 view .LVU445
 1863 006a FAE7     		b	.L129
 1864              		.cfi_endproc
 1865              	.LFE98:
 1867              		.section	.text.osPoolCAlloc,"ax",%progbits
 1868              		.align	1
 1869              		.global	osPoolCAlloc
 1870              		.syntax unified
 1871              		.thumb
 1872              		.thumb_func
 1873              		.fpu softvfp
 1875              	osPoolCAlloc:
 1876              	.LVL139:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 59


 1877              	.LFB99:
 970:FreeRTOS/src/cmsis_os.c **** 
 971:FreeRTOS/src/cmsis_os.c **** /**
 972:FreeRTOS/src/cmsis_os.c **** * @brief Allocate a memory block from a memory pool and set memory block to zero
 973:FreeRTOS/src/cmsis_os.c **** * @param  pool_id       memory pool ID obtain referenced with \ref osPoolCreate.
 974:FreeRTOS/src/cmsis_os.c **** * @retval  address of the allocated memory block or NULL in case of no memory available.
 975:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osPoolCAlloc shall be consistent in every CMSIS-RTOS.
 976:FreeRTOS/src/cmsis_os.c **** */
 977:FreeRTOS/src/cmsis_os.c **** void *osPoolCAlloc (osPoolId pool_id)
 978:FreeRTOS/src/cmsis_os.c **** {
 1878              		.loc 1 978 1 is_stmt 1 view -0
 1879              		.cfi_startproc
 1880              		@ args = 0, pretend = 0, frame = 0
 1881              		@ frame_needed = 0, uses_anonymous_args = 0
 1882              		.loc 1 978 1 is_stmt 0 view .LVU447
 1883 0000 08B5     		push	{r3, lr}
 1884              	.LCFI41:
 1885              		.cfi_def_cfa_offset 8
 1886              		.cfi_offset 3, -8
 1887              		.cfi_offset 14, -4
 979:FreeRTOS/src/cmsis_os.c ****   void *p = osPoolAlloc(pool_id);
 1888              		.loc 1 979 3 is_stmt 1 view .LVU448
 1889              		.loc 1 979 13 is_stmt 0 view .LVU449
 1890 0002 FFF7FEFF 		bl	osPoolAlloc
 1891              	.LVL140:
 980:FreeRTOS/src/cmsis_os.c ****   
 981:FreeRTOS/src/cmsis_os.c ****   if (p != NULL)
 1892              		.loc 1 981 3 is_stmt 1 view .LVU450
 1893              		.loc 1 981 6 is_stmt 0 view .LVU451
 1894 0006 0346     		mov	r3, r0
 1895 0008 08B1     		cbz	r0, .L141
 982:FreeRTOS/src/cmsis_os.c ****   {
 983:FreeRTOS/src/cmsis_os.c ****     memset(p, 0, sizeof(pool_id->pool_sz));
 1896              		.loc 1 983 5 is_stmt 1 view .LVU452
 1897 000a 0022     		movs	r2, #0
 1898 000c 0260     		str	r2, [r0]	@ unaligned
 984:FreeRTOS/src/cmsis_os.c ****   }
 985:FreeRTOS/src/cmsis_os.c ****   
 986:FreeRTOS/src/cmsis_os.c ****   return p;
 1899              		.loc 1 986 3 view .LVU453
 1900              	.L141:
 987:FreeRTOS/src/cmsis_os.c **** }
 1901              		.loc 1 987 1 is_stmt 0 view .LVU454
 1902 000e 1846     		mov	r0, r3
 1903              	.LVL141:
 1904              		.loc 1 987 1 view .LVU455
 1905 0010 08BD     		pop	{r3, pc}
 1906              		.loc 1 987 1 view .LVU456
 1907              		.cfi_endproc
 1908              	.LFE99:
 1910              		.section	.text.osPoolFree,"ax",%progbits
 1911              		.align	1
 1912              		.global	osPoolFree
 1913              		.syntax unified
 1914              		.thumb
 1915              		.thumb_func
 1916              		.fpu softvfp
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 60


 1918              	osPoolFree:
 1919              	.LVL142:
 1920              	.LFB100:
 988:FreeRTOS/src/cmsis_os.c **** 
 989:FreeRTOS/src/cmsis_os.c **** /**
 990:FreeRTOS/src/cmsis_os.c **** * @brief Return an allocated memory block back to a specific memory pool
 991:FreeRTOS/src/cmsis_os.c **** * @param  pool_id       memory pool ID obtain referenced with \ref osPoolCreate.
 992:FreeRTOS/src/cmsis_os.c **** * @param  block         address of the allocated memory block that is returned to the memory pool.
 993:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
 994:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osPoolFree shall be consistent in every CMSIS-RTOS.
 995:FreeRTOS/src/cmsis_os.c **** */
 996:FreeRTOS/src/cmsis_os.c **** osStatus osPoolFree (osPoolId pool_id, void *block)
 997:FreeRTOS/src/cmsis_os.c **** {
 1921              		.loc 1 997 1 is_stmt 1 view -0
 1922              		.cfi_startproc
 1923              		@ args = 0, pretend = 0, frame = 0
 1924              		@ frame_needed = 0, uses_anonymous_args = 0
 1925              		@ link register save eliminated.
 998:FreeRTOS/src/cmsis_os.c ****   uint32_t index;
 1926              		.loc 1 998 3 view .LVU458
 999:FreeRTOS/src/cmsis_os.c ****   
1000:FreeRTOS/src/cmsis_os.c ****   if (pool_id == NULL) {
 1927              		.loc 1 1000 3 view .LVU459
 1928              		.loc 1 1000 6 is_stmt 0 view .LVU460
 1929 0000 0346     		mov	r3, r0
 1930 0002 98B1     		cbz	r0, .L146
1001:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1002:FreeRTOS/src/cmsis_os.c ****   }
1003:FreeRTOS/src/cmsis_os.c ****   
1004:FreeRTOS/src/cmsis_os.c ****   if (block == NULL) {
 1931              		.loc 1 1004 3 is_stmt 1 view .LVU461
 1932              		.loc 1 1004 6 is_stmt 0 view .LVU462
 1933 0004 A1B1     		cbz	r1, .L147
1005:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1006:FreeRTOS/src/cmsis_os.c ****   }
1007:FreeRTOS/src/cmsis_os.c ****   
1008:FreeRTOS/src/cmsis_os.c ****   if (block < pool_id->pool) {
 1934              		.loc 1 1008 3 is_stmt 1 view .LVU463
 1935              		.loc 1 1008 22 is_stmt 0 view .LVU464
 1936 0006 0268     		ldr	r2, [r0]
 1937              		.loc 1 1008 6 view .LVU465
 1938 0008 8A42     		cmp	r2, r1
 1939 000a 13D8     		bhi	.L148
1009:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1010:FreeRTOS/src/cmsis_os.c ****   }
1011:FreeRTOS/src/cmsis_os.c ****   
1012:FreeRTOS/src/cmsis_os.c ****   index = (uint32_t)block - (uint32_t)(pool_id->pool);
 1940              		.loc 1 1012 3 is_stmt 1 view .LVU466
 1941              		.loc 1 1012 9 is_stmt 0 view .LVU467
 1942 000c 891A     		subs	r1, r1, r2
 1943              	.LVL143:
1013:FreeRTOS/src/cmsis_os.c ****   if (index % pool_id->item_sz) {
 1944              		.loc 1 1013 3 is_stmt 1 view .LVU468
 1945              		.loc 1 1013 22 is_stmt 0 view .LVU469
 1946 000e C068     		ldr	r0, [r0, #12]
 1947              	.LVL144:
 1948              		.loc 1 1013 13 view .LVU470
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 61


 1949 0010 B1FBF0F2 		udiv	r2, r1, r0
 1950 0014 00FB1212 		mls	r2, r0, r2, r1
 1951              		.loc 1 1013 6 view .LVU471
 1952 0018 72B9     		cbnz	r2, .L149
1014:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1015:FreeRTOS/src/cmsis_os.c ****   }
1016:FreeRTOS/src/cmsis_os.c ****   index = index / pool_id->item_sz;
 1953              		.loc 1 1016 3 is_stmt 1 view .LVU472
 1954              		.loc 1 1016 9 is_stmt 0 view .LVU473
 1955 001a B1FBF0F1 		udiv	r1, r1, r0
 1956              	.LVL145:
1017:FreeRTOS/src/cmsis_os.c ****   if (index >= pool_id->pool_sz) {
 1957              		.loc 1 1017 3 is_stmt 1 view .LVU474
 1958              		.loc 1 1017 23 is_stmt 0 view .LVU475
 1959 001e 9A68     		ldr	r2, [r3, #8]
 1960              		.loc 1 1017 6 view .LVU476
 1961 0020 8A42     		cmp	r2, r1
 1962 0022 0BD9     		bls	.L150
1018:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1019:FreeRTOS/src/cmsis_os.c ****   }
1020:FreeRTOS/src/cmsis_os.c ****   
1021:FreeRTOS/src/cmsis_os.c ****   pool_id->markers[index] = 0;
 1963              		.loc 1 1021 3 is_stmt 1 view .LVU477
 1964              		.loc 1 1021 10 is_stmt 0 view .LVU478
 1965 0024 5B68     		ldr	r3, [r3, #4]
 1966              	.LVL146:
 1967              		.loc 1 1021 27 view .LVU479
 1968 0026 0020     		movs	r0, #0
 1969 0028 5854     		strb	r0, [r3, r1]
1022:FreeRTOS/src/cmsis_os.c ****   
1023:FreeRTOS/src/cmsis_os.c ****   return osOK;
 1970              		.loc 1 1023 3 is_stmt 1 view .LVU480
 1971              		.loc 1 1023 10 is_stmt 0 view .LVU481
 1972 002a 7047     		bx	lr
 1973              	.LVL147:
 1974              	.L146:
1001:FreeRTOS/src/cmsis_os.c ****   }
 1975              		.loc 1 1001 12 view .LVU482
 1976 002c 8020     		movs	r0, #128
 1977              	.LVL148:
1001:FreeRTOS/src/cmsis_os.c ****   }
 1978              		.loc 1 1001 12 view .LVU483
 1979 002e 7047     		bx	lr
 1980              	.LVL149:
 1981              	.L147:
1005:FreeRTOS/src/cmsis_os.c ****   }
 1982              		.loc 1 1005 12 view .LVU484
 1983 0030 8020     		movs	r0, #128
 1984              	.LVL150:
1005:FreeRTOS/src/cmsis_os.c ****   }
 1985              		.loc 1 1005 12 view .LVU485
 1986 0032 7047     		bx	lr
 1987              	.LVL151:
 1988              	.L148:
1009:FreeRTOS/src/cmsis_os.c ****   }
 1989              		.loc 1 1009 12 view .LVU486
 1990 0034 8020     		movs	r0, #128
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 62


 1991              	.LVL152:
1009:FreeRTOS/src/cmsis_os.c ****   }
 1992              		.loc 1 1009 12 view .LVU487
 1993 0036 7047     		bx	lr
 1994              	.LVL153:
 1995              	.L149:
1014:FreeRTOS/src/cmsis_os.c ****   }
 1996              		.loc 1 1014 12 view .LVU488
 1997 0038 8020     		movs	r0, #128
 1998 003a 7047     		bx	lr
 1999              	.L150:
1018:FreeRTOS/src/cmsis_os.c ****   }
 2000              		.loc 1 1018 12 view .LVU489
 2001 003c 8020     		movs	r0, #128
1024:FreeRTOS/src/cmsis_os.c **** }
 2002              		.loc 1 1024 1 view .LVU490
 2003 003e 7047     		bx	lr
 2004              		.cfi_endproc
 2005              	.LFE100:
 2007              		.section	.text.osMessageCreate,"ax",%progbits
 2008              		.align	1
 2009              		.global	osMessageCreate
 2010              		.syntax unified
 2011              		.thumb
 2012              		.thumb_func
 2013              		.fpu softvfp
 2015              	osMessageCreate:
 2016              	.LVL154:
 2017              	.LFB101:
1025:FreeRTOS/src/cmsis_os.c **** 
1026:FreeRTOS/src/cmsis_os.c **** 
1027:FreeRTOS/src/cmsis_os.c **** #endif   /* Use Memory Pool Management */
1028:FreeRTOS/src/cmsis_os.c **** 
1029:FreeRTOS/src/cmsis_os.c **** /*******************   Message Queue Management Functions  *********************/
1030:FreeRTOS/src/cmsis_os.c **** 
1031:FreeRTOS/src/cmsis_os.c **** #if (defined (osFeature_MessageQ)  &&  (osFeature_MessageQ != 0)) /* Use Message Queues */
1032:FreeRTOS/src/cmsis_os.c **** 
1033:FreeRTOS/src/cmsis_os.c **** /**
1034:FreeRTOS/src/cmsis_os.c **** * @brief Create and Initialize a Message Queue
1035:FreeRTOS/src/cmsis_os.c **** * @param queue_def     queue definition referenced with \ref osMessageQ.
1036:FreeRTOS/src/cmsis_os.c **** * @param  thread_id     thread ID (obtained by \ref osThreadCreate or \ref osThreadGetId) or NULL.
1037:FreeRTOS/src/cmsis_os.c **** * @retval  message queue ID for reference by other functions or NULL in case of error.
1038:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMessageCreate shall be consistent in every CMSIS-RTOS.
1039:FreeRTOS/src/cmsis_os.c **** */
1040:FreeRTOS/src/cmsis_os.c **** osMessageQId osMessageCreate (const osMessageQDef_t *queue_def, osThreadId thread_id)
1041:FreeRTOS/src/cmsis_os.c **** {
 2018              		.loc 1 1041 1 is_stmt 1 view -0
 2019              		.cfi_startproc
 2020              		@ args = 0, pretend = 0, frame = 0
 2021              		@ frame_needed = 0, uses_anonymous_args = 0
 2022              		.loc 1 1041 1 is_stmt 0 view .LVU492
 2023 0000 08B5     		push	{r3, lr}
 2024              	.LCFI42:
 2025              		.cfi_def_cfa_offset 8
 2026              		.cfi_offset 3, -8
 2027              		.cfi_offset 14, -4
1042:FreeRTOS/src/cmsis_os.c ****   (void) thread_id;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 63


 2028              		.loc 1 1042 3 is_stmt 1 view .LVU493
1043:FreeRTOS/src/cmsis_os.c ****   
1044:FreeRTOS/src/cmsis_os.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
1045:FreeRTOS/src/cmsis_os.c **** 
1046:FreeRTOS/src/cmsis_os.c ****   if ((queue_def->buffer != NULL) && (queue_def->controlblock != NULL)) {
1047:FreeRTOS/src/cmsis_os.c ****     return xQueueCreateStatic(queue_def->queue_sz, queue_def->item_sz, queue_def->buffer, queue_def
1048:FreeRTOS/src/cmsis_os.c ****   }
1049:FreeRTOS/src/cmsis_os.c ****   else {
1050:FreeRTOS/src/cmsis_os.c ****     return xQueueCreate(queue_def->queue_sz, queue_def->item_sz);
1051:FreeRTOS/src/cmsis_os.c ****   }
1052:FreeRTOS/src/cmsis_os.c **** #elif ( configSUPPORT_STATIC_ALLOCATION == 1 )
1053:FreeRTOS/src/cmsis_os.c ****   return xQueueCreateStatic(queue_def->queue_sz, queue_def->item_sz, queue_def->buffer, queue_def->
1054:FreeRTOS/src/cmsis_os.c **** #else  
1055:FreeRTOS/src/cmsis_os.c ****   return xQueueCreate(queue_def->queue_sz, queue_def->item_sz);
 2029              		.loc 1 1055 3 view .LVU494
 2030              		.loc 1 1055 10 is_stmt 0 view .LVU495
 2031 0002 0022     		movs	r2, #0
 2032 0004 4168     		ldr	r1, [r0, #4]
 2033              	.LVL155:
 2034              		.loc 1 1055 10 view .LVU496
 2035 0006 0068     		ldr	r0, [r0]
 2036              	.LVL156:
 2037              		.loc 1 1055 10 view .LVU497
 2038 0008 FFF7FEFF 		bl	xQueueGenericCreate
 2039              	.LVL157:
1056:FreeRTOS/src/cmsis_os.c **** #endif
1057:FreeRTOS/src/cmsis_os.c **** }
 2040              		.loc 1 1057 1 view .LVU498
 2041 000c 08BD     		pop	{r3, pc}
 2042              		.cfi_endproc
 2043              	.LFE101:
 2045              		.section	.text.osMessagePut,"ax",%progbits
 2046              		.align	1
 2047              		.global	osMessagePut
 2048              		.syntax unified
 2049              		.thumb
 2050              		.thumb_func
 2051              		.fpu softvfp
 2053              	osMessagePut:
 2054              	.LVL158:
 2055              	.LFB102:
1058:FreeRTOS/src/cmsis_os.c **** 
1059:FreeRTOS/src/cmsis_os.c **** /**
1060:FreeRTOS/src/cmsis_os.c **** * @brief Put a Message to a Queue.
1061:FreeRTOS/src/cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
1062:FreeRTOS/src/cmsis_os.c **** * @param  info      message information.
1063:FreeRTOS/src/cmsis_os.c **** * @param  millisec  timeout value or 0 in case of no time-out.
1064:FreeRTOS/src/cmsis_os.c **** * @retval status code that indicates the execution status of the function.
1065:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMessagePut shall be consistent in every CMSIS-RTOS.
1066:FreeRTOS/src/cmsis_os.c **** */
1067:FreeRTOS/src/cmsis_os.c **** osStatus osMessagePut (osMessageQId queue_id, uint32_t info, uint32_t millisec)
1068:FreeRTOS/src/cmsis_os.c **** {
 2056              		.loc 1 1068 1 is_stmt 1 view -0
 2057              		.cfi_startproc
 2058              		@ args = 0, pretend = 0, frame = 16
 2059              		@ frame_needed = 0, uses_anonymous_args = 0
 2060              		.loc 1 1068 1 is_stmt 0 view .LVU500
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 64


 2061 0000 30B5     		push	{r4, r5, lr}
 2062              	.LCFI43:
 2063              		.cfi_def_cfa_offset 12
 2064              		.cfi_offset 4, -12
 2065              		.cfi_offset 5, -8
 2066              		.cfi_offset 14, -4
 2067 0002 85B0     		sub	sp, sp, #20
 2068              	.LCFI44:
 2069              		.cfi_def_cfa_offset 32
 2070 0004 0446     		mov	r4, r0
 2071 0006 0191     		str	r1, [sp, #4]
1069:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken = pdFALSE;
 2072              		.loc 1 1069 3 is_stmt 1 view .LVU501
 2073              		.loc 1 1069 17 is_stmt 0 view .LVU502
 2074 0008 0023     		movs	r3, #0
 2075 000a 0393     		str	r3, [sp, #12]
1070:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 2076              		.loc 1 1070 3 is_stmt 1 view .LVU503
1071:FreeRTOS/src/cmsis_os.c ****   
1072:FreeRTOS/src/cmsis_os.c ****   ticks = millisec / portTICK_PERIOD_MS;
 2077              		.loc 1 1072 3 view .LVU504
 2078              	.LVL159:
1073:FreeRTOS/src/cmsis_os.c ****   if (ticks == 0) {
 2079              		.loc 1 1073 3 view .LVU505
 2080              		.loc 1 1073 6 is_stmt 0 view .LVU506
 2081 000c 1546     		mov	r5, r2
 2082 000e 02B9     		cbnz	r2, .L154
1074:FreeRTOS/src/cmsis_os.c ****     ticks = 1;
 2083              		.loc 1 1074 11 view .LVU507
 2084 0010 0125     		movs	r5, #1
 2085              	.L154:
 2086              	.LVL160:
1075:FreeRTOS/src/cmsis_os.c ****   }
1076:FreeRTOS/src/cmsis_os.c ****   
1077:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 2087              		.loc 1 1077 3 is_stmt 1 view .LVU508
 2088              		.loc 1 1077 7 is_stmt 0 view .LVU509
 2089 0012 FFF7FEFF 		bl	inHandlerMode
 2090              	.LVL161:
 2091              		.loc 1 1077 6 view .LVU510
 2092 0016 98B1     		cbz	r0, .L155
1078:FreeRTOS/src/cmsis_os.c ****     if (xQueueSendFromISR(queue_id, &info, &taskWoken) != pdTRUE) {
 2093              		.loc 1 1078 5 is_stmt 1 view .LVU511
 2094              		.loc 1 1078 9 is_stmt 0 view .LVU512
 2095 0018 0023     		movs	r3, #0
 2096 001a 03AA     		add	r2, sp, #12
 2097 001c 01A9     		add	r1, sp, #4
 2098 001e 2046     		mov	r0, r4
 2099 0020 FFF7FEFF 		bl	xQueueGenericSendFromISR
 2100              	.LVL162:
 2101              		.loc 1 1078 8 view .LVU513
 2102 0024 0128     		cmp	r0, #1
 2103 0026 16D1     		bne	.L158
1079:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
1080:FreeRTOS/src/cmsis_os.c ****     }
1081:FreeRTOS/src/cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 2104              		.loc 1 1081 5 is_stmt 1 view .LVU514
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 65


 2105 0028 039B     		ldr	r3, [sp, #12]
 2106 002a B3B1     		cbz	r3, .L159
 2107              		.loc 1 1081 5 discriminator 1 view .LVU515
 2108 002c 0D4B     		ldr	r3, .L162
 2109 002e 4FF08052 		mov	r2, #268435456
 2110 0032 1A60     		str	r2, [r3]
 2111              		.loc 1 1081 5 discriminator 1 view .LVU516
 2112              		.syntax unified
 2113              	@ 1081 "FreeRTOS/src/cmsis_os.c" 1
 2114 0034 BFF34F8F 		dsb
 2115              	@ 0 "" 2
 2116              		.loc 1 1081 5 discriminator 1 view .LVU517
 2117              	@ 1081 "FreeRTOS/src/cmsis_os.c" 1
 2118 0038 BFF36F8F 		isb
 2119              	@ 0 "" 2
1082:FreeRTOS/src/cmsis_os.c ****   }
1083:FreeRTOS/src/cmsis_os.c ****   else {
1084:FreeRTOS/src/cmsis_os.c ****     if (xQueueSend(queue_id, &info, ticks) != pdTRUE) {
1085:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
1086:FreeRTOS/src/cmsis_os.c ****     }
1087:FreeRTOS/src/cmsis_os.c ****   }
1088:FreeRTOS/src/cmsis_os.c ****   
1089:FreeRTOS/src/cmsis_os.c ****   return osOK;
 2120              		.loc 1 1089 10 is_stmt 0 discriminator 1 view .LVU518
 2121              		.thumb
 2122              		.syntax unified
 2123 003c 0020     		movs	r0, #0
 2124 003e 08E0     		b	.L153
 2125              	.L155:
1084:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 2126              		.loc 1 1084 5 is_stmt 1 view .LVU519
1084:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 2127              		.loc 1 1084 9 is_stmt 0 view .LVU520
 2128 0040 0023     		movs	r3, #0
 2129 0042 2A46     		mov	r2, r5
 2130 0044 01A9     		add	r1, sp, #4
 2131 0046 2046     		mov	r0, r4
 2132 0048 FFF7FEFF 		bl	xQueueGenericSend
 2133              	.LVL163:
1084:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 2134              		.loc 1 1084 8 view .LVU521
 2135 004c 0128     		cmp	r0, #1
 2136 004e 06D1     		bne	.L160
 2137              		.loc 1 1089 10 view .LVU522
 2138 0050 0020     		movs	r0, #0
 2139              	.L153:
1090:FreeRTOS/src/cmsis_os.c **** }
 2140              		.loc 1 1090 1 view .LVU523
 2141 0052 05B0     		add	sp, sp, #20
 2142              	.LCFI45:
 2143              		.cfi_remember_state
 2144              		.cfi_def_cfa_offset 12
 2145              		@ sp needed
 2146 0054 30BD     		pop	{r4, r5, pc}
 2147              	.LVL164:
 2148              	.L158:
 2149              	.LCFI46:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 66


 2150              		.cfi_restore_state
1079:FreeRTOS/src/cmsis_os.c ****     }
 2151              		.loc 1 1079 14 view .LVU524
 2152 0056 FF20     		movs	r0, #255
 2153 0058 FBE7     		b	.L153
 2154              	.L159:
1089:FreeRTOS/src/cmsis_os.c **** }
 2155              		.loc 1 1089 10 view .LVU525
 2156 005a 0020     		movs	r0, #0
 2157 005c F9E7     		b	.L153
 2158              	.L160:
1085:FreeRTOS/src/cmsis_os.c ****     }
 2159              		.loc 1 1085 14 view .LVU526
 2160 005e FF20     		movs	r0, #255
 2161 0060 F7E7     		b	.L153
 2162              	.L163:
 2163 0062 00BF     		.align	2
 2164              	.L162:
 2165 0064 04ED00E0 		.word	-536810236
 2166              		.cfi_endproc
 2167              	.LFE102:
 2169              		.section	.text.osMessageGet,"ax",%progbits
 2170              		.align	1
 2171              		.global	osMessageGet
 2172              		.syntax unified
 2173              		.thumb
 2174              		.thumb_func
 2175              		.fpu softvfp
 2177              	osMessageGet:
 2178              	.LVL165:
 2179              	.LFB103:
1091:FreeRTOS/src/cmsis_os.c **** 
1092:FreeRTOS/src/cmsis_os.c **** /**
1093:FreeRTOS/src/cmsis_os.c **** * @brief Get a Message or Wait for a Message from a Queue.
1094:FreeRTOS/src/cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
1095:FreeRTOS/src/cmsis_os.c **** * @param  millisec  timeout value or 0 in case of no time-out.
1096:FreeRTOS/src/cmsis_os.c **** * @retval event information that includes status code.
1097:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMessageGet shall be consistent in every CMSIS-RTOS.
1098:FreeRTOS/src/cmsis_os.c **** */
1099:FreeRTOS/src/cmsis_os.c **** osEvent osMessageGet (osMessageQId queue_id, uint32_t millisec)
1100:FreeRTOS/src/cmsis_os.c **** {
 2180              		.loc 1 1100 1 is_stmt 1 view -0
 2181              		.cfi_startproc
 2182              		@ args = 0, pretend = 0, frame = 16
 2183              		@ frame_needed = 0, uses_anonymous_args = 0
 2184              		.loc 1 1100 1 is_stmt 0 view .LVU528
 2185 0000 70B5     		push	{r4, r5, r6, lr}
 2186              	.LCFI47:
 2187              		.cfi_def_cfa_offset 16
 2188              		.cfi_offset 4, -16
 2189              		.cfi_offset 5, -12
 2190              		.cfi_offset 6, -8
 2191              		.cfi_offset 14, -4
 2192 0002 84B0     		sub	sp, sp, #16
 2193              	.LCFI48:
 2194              		.cfi_def_cfa_offset 32
 2195 0004 0446     		mov	r4, r0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 67


1101:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken;
 2196              		.loc 1 1101 3 is_stmt 1 view .LVU529
1102:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 2197              		.loc 1 1102 3 view .LVU530
1103:FreeRTOS/src/cmsis_os.c ****   osEvent event;
 2198              		.loc 1 1103 3 view .LVU531
1104:FreeRTOS/src/cmsis_os.c ****   
1105:FreeRTOS/src/cmsis_os.c ****   event.def.message_id = queue_id;
 2199              		.loc 1 1105 3 view .LVU532
 2200              		.loc 1 1105 24 is_stmt 0 view .LVU533
 2201 0006 0291     		str	r1, [sp, #8]
1106:FreeRTOS/src/cmsis_os.c ****   event.value.v = 0;
 2202              		.loc 1 1106 3 is_stmt 1 view .LVU534
 2203              		.loc 1 1106 17 is_stmt 0 view .LVU535
 2204 0008 0023     		movs	r3, #0
 2205 000a 0193     		str	r3, [sp, #4]
1107:FreeRTOS/src/cmsis_os.c ****   
1108:FreeRTOS/src/cmsis_os.c ****   if (queue_id == NULL) {
 2206              		.loc 1 1108 3 is_stmt 1 view .LVU536
 2207              		.loc 1 1108 6 is_stmt 0 view .LVU537
 2208 000c 49B1     		cbz	r1, .L177
 2209 000e 0D46     		mov	r5, r1
 2210 0010 1646     		mov	r6, r2
1109:FreeRTOS/src/cmsis_os.c ****     event.status = osErrorParameter;
1110:FreeRTOS/src/cmsis_os.c ****     return event;
1111:FreeRTOS/src/cmsis_os.c ****   }
1112:FreeRTOS/src/cmsis_os.c ****   
1113:FreeRTOS/src/cmsis_os.c ****   taskWoken = pdFALSE;
 2211              		.loc 1 1113 3 is_stmt 1 view .LVU538
 2212              		.loc 1 1113 13 is_stmt 0 view .LVU539
 2213 0012 0023     		movs	r3, #0
 2214 0014 0393     		str	r3, [sp, #12]
1114:FreeRTOS/src/cmsis_os.c ****   
1115:FreeRTOS/src/cmsis_os.c ****   ticks = 0;
 2215              		.loc 1 1115 3 is_stmt 1 view .LVU540
 2216              	.LVL166:
1116:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 2217              		.loc 1 1116 3 view .LVU541
 2218              		.loc 1 1116 6 is_stmt 0 view .LVU542
 2219 0016 B2F1FF3F 		cmp	r2, #-1
 2220 001a 0AD0     		beq	.L174
1117:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
1118:FreeRTOS/src/cmsis_os.c ****   }
1119:FreeRTOS/src/cmsis_os.c ****   else if (millisec != 0) {
 2221              		.loc 1 1119 8 is_stmt 1 view .LVU543
 2222              		.loc 1 1119 11 is_stmt 0 view .LVU544
 2223 001c 5AB9     		cbnz	r2, .L167
1115:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 2224              		.loc 1 1115 9 view .LVU545
 2225 001e 1E46     		mov	r6, r3
 2226 0020 09E0     		b	.L167
 2227              	.LVL167:
 2228              	.L177:
1109:FreeRTOS/src/cmsis_os.c ****     return event;
 2229              		.loc 1 1109 5 is_stmt 1 view .LVU546
1109:FreeRTOS/src/cmsis_os.c ****     return event;
 2230              		.loc 1 1109 18 is_stmt 0 view .LVU547
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 68


 2231 0022 8023     		movs	r3, #128
 2232 0024 0093     		str	r3, [sp]
1110:FreeRTOS/src/cmsis_os.c ****   }
 2233              		.loc 1 1110 5 is_stmt 1 view .LVU548
1110:FreeRTOS/src/cmsis_os.c ****   }
 2234              		.loc 1 1110 12 is_stmt 0 view .LVU549
 2235 0026 6B46     		mov	r3, sp
 2236 0028 93E80700 		ldm	r3, {r0, r1, r2}
 2237              	.LVL168:
1110:FreeRTOS/src/cmsis_os.c ****   }
 2238              		.loc 1 1110 12 view .LVU550
 2239 002c 84E80700 		stm	r4, {r0, r1, r2}
 2240 0030 2AE0     		b	.L164
 2241              	.LVL169:
 2242              	.L174:
1117:FreeRTOS/src/cmsis_os.c ****   }
 2243              		.loc 1 1117 11 view .LVU551
 2244 0032 4FF0FF36 		mov	r6, #-1
 2245              	.L167:
 2246              	.LVL170:
1120:FreeRTOS/src/cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
1121:FreeRTOS/src/cmsis_os.c ****     if (ticks == 0) {
1122:FreeRTOS/src/cmsis_os.c ****       ticks = 1;
1123:FreeRTOS/src/cmsis_os.c ****     }
1124:FreeRTOS/src/cmsis_os.c ****   }
1125:FreeRTOS/src/cmsis_os.c ****   
1126:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 2247              		.loc 1 1126 3 is_stmt 1 view .LVU552
 2248              		.loc 1 1126 7 is_stmt 0 view .LVU553
 2249 0036 FFF7FEFF 		bl	inHandlerMode
 2250              	.LVL171:
 2251              		.loc 1 1126 6 view .LVU554
 2252 003a B0B1     		cbz	r0, .L168
1127:FreeRTOS/src/cmsis_os.c ****     if (xQueueReceiveFromISR(queue_id, &event.value.v, &taskWoken) == pdTRUE) {
 2253              		.loc 1 1127 5 is_stmt 1 view .LVU555
 2254              		.loc 1 1127 9 is_stmt 0 view .LVU556
 2255 003c 03AA     		add	r2, sp, #12
 2256 003e 01A9     		add	r1, sp, #4
 2257 0040 2846     		mov	r0, r5
 2258 0042 FFF7FEFF 		bl	xQueueReceiveFromISR
 2259              	.LVL172:
 2260              		.loc 1 1127 8 view .LVU557
 2261 0046 0128     		cmp	r0, #1
 2262 0048 0CD0     		beq	.L178
1128:FreeRTOS/src/cmsis_os.c ****       /* We have mail */
1129:FreeRTOS/src/cmsis_os.c ****       event.status = osEventMessage;
1130:FreeRTOS/src/cmsis_os.c ****     }
1131:FreeRTOS/src/cmsis_os.c ****     else {
1132:FreeRTOS/src/cmsis_os.c ****       event.status = osOK;
 2263              		.loc 1 1132 7 is_stmt 1 view .LVU558
 2264              		.loc 1 1132 20 is_stmt 0 view .LVU559
 2265 004a 0023     		movs	r3, #0
 2266 004c 0093     		str	r3, [sp]
 2267              	.L170:
1133:FreeRTOS/src/cmsis_os.c ****     }
1134:FreeRTOS/src/cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 2268              		.loc 1 1134 5 is_stmt 1 view .LVU560
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 69


 2269 004e 039B     		ldr	r3, [sp, #12]
 2270 0050 ABB1     		cbz	r3, .L171
 2271              		.loc 1 1134 5 discriminator 1 view .LVU561
 2272 0052 114B     		ldr	r3, .L180
 2273 0054 4FF08052 		mov	r2, #268435456
 2274 0058 1A60     		str	r2, [r3]
 2275              		.loc 1 1134 5 discriminator 1 view .LVU562
 2276              		.syntax unified
 2277              	@ 1134 "FreeRTOS/src/cmsis_os.c" 1
 2278 005a BFF34F8F 		dsb
 2279              	@ 0 "" 2
 2280              		.loc 1 1134 5 discriminator 1 view .LVU563
 2281              	@ 1134 "FreeRTOS/src/cmsis_os.c" 1
 2282 005e BFF36F8F 		isb
 2283              	@ 0 "" 2
 2284              		.thumb
 2285              		.syntax unified
 2286 0062 0CE0     		b	.L171
 2287              	.L178:
1129:FreeRTOS/src/cmsis_os.c ****     }
 2288              		.loc 1 1129 7 view .LVU564
1129:FreeRTOS/src/cmsis_os.c ****     }
 2289              		.loc 1 1129 20 is_stmt 0 view .LVU565
 2290 0064 1023     		movs	r3, #16
 2291 0066 0093     		str	r3, [sp]
 2292 0068 F1E7     		b	.L170
 2293              	.L168:
1135:FreeRTOS/src/cmsis_os.c ****   }
1136:FreeRTOS/src/cmsis_os.c ****   else {
1137:FreeRTOS/src/cmsis_os.c ****     if (xQueueReceive(queue_id, &event.value.v, ticks) == pdTRUE) {
 2294              		.loc 1 1137 5 is_stmt 1 view .LVU566
 2295              		.loc 1 1137 9 is_stmt 0 view .LVU567
 2296 006a 3246     		mov	r2, r6
 2297 006c 01A9     		add	r1, sp, #4
 2298 006e 2846     		mov	r0, r5
 2299 0070 FFF7FEFF 		bl	xQueueReceive
 2300              	.LVL173:
 2301              		.loc 1 1137 8 view .LVU568
 2302 0074 0128     		cmp	r0, #1
 2303 0076 0AD0     		beq	.L179
1138:FreeRTOS/src/cmsis_os.c ****       /* We have mail */
1139:FreeRTOS/src/cmsis_os.c ****       event.status = osEventMessage;
1140:FreeRTOS/src/cmsis_os.c ****     }
1141:FreeRTOS/src/cmsis_os.c ****     else {
1142:FreeRTOS/src/cmsis_os.c ****       event.status = (ticks == 0) ? osOK : osEventTimeout;
 2304              		.loc 1 1142 7 is_stmt 1 view .LVU569
 2305              		.loc 1 1142 42 is_stmt 0 view .LVU570
 2306 0078 66B9     		cbnz	r6, .L175
 2307 007a 0023     		movs	r3, #0
 2308              	.L173:
 2309              		.loc 1 1142 20 discriminator 4 view .LVU571
 2310 007c 0093     		str	r3, [sp]
 2311              	.L171:
1143:FreeRTOS/src/cmsis_os.c ****     }
1144:FreeRTOS/src/cmsis_os.c ****   }
1145:FreeRTOS/src/cmsis_os.c ****   
1146:FreeRTOS/src/cmsis_os.c ****   return event;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 70


 2312              		.loc 1 1146 3 is_stmt 1 view .LVU572
 2313              		.loc 1 1146 10 is_stmt 0 view .LVU573
 2314 007e 6B46     		mov	r3, sp
 2315 0080 93E80700 		ldm	r3, {r0, r1, r2}
 2316 0084 84E80700 		stm	r4, {r0, r1, r2}
 2317              	.LVL174:
 2318              	.L164:
1147:FreeRTOS/src/cmsis_os.c **** }
 2319              		.loc 1 1147 1 view .LVU574
 2320 0088 2046     		mov	r0, r4
 2321 008a 04B0     		add	sp, sp, #16
 2322              	.LCFI49:
 2323              		.cfi_remember_state
 2324              		.cfi_def_cfa_offset 16
 2325              		@ sp needed
 2326 008c 70BD     		pop	{r4, r5, r6, pc}
 2327              	.LVL175:
 2328              	.L179:
 2329              	.LCFI50:
 2330              		.cfi_restore_state
1139:FreeRTOS/src/cmsis_os.c ****     }
 2331              		.loc 1 1139 7 is_stmt 1 view .LVU575
1139:FreeRTOS/src/cmsis_os.c ****     }
 2332              		.loc 1 1139 20 is_stmt 0 view .LVU576
 2333 008e 1023     		movs	r3, #16
 2334 0090 0093     		str	r3, [sp]
 2335 0092 F4E7     		b	.L171
 2336              	.L175:
1142:FreeRTOS/src/cmsis_os.c ****     }
 2337              		.loc 1 1142 42 view .LVU577
 2338 0094 4023     		movs	r3, #64
 2339 0096 F1E7     		b	.L173
 2340              	.L181:
 2341              		.align	2
 2342              	.L180:
 2343 0098 04ED00E0 		.word	-536810236
 2344              		.cfi_endproc
 2345              	.LFE103:
 2347              		.section	.text.osMailCreate,"ax",%progbits
 2348              		.align	1
 2349              		.global	osMailCreate
 2350              		.syntax unified
 2351              		.thumb
 2352              		.thumb_func
 2353              		.fpu softvfp
 2355              	osMailCreate:
 2356              	.LVL176:
 2357              	.LFB104:
1148:FreeRTOS/src/cmsis_os.c **** 
1149:FreeRTOS/src/cmsis_os.c **** #endif     /* Use Message Queues */
1150:FreeRTOS/src/cmsis_os.c **** 
1151:FreeRTOS/src/cmsis_os.c **** /********************   Mail Queue Management Functions  ***********************/
1152:FreeRTOS/src/cmsis_os.c **** #if (defined (osFeature_MailQ)  &&  (osFeature_MailQ != 0))  /* Use Mail Queues */
1153:FreeRTOS/src/cmsis_os.c **** 
1154:FreeRTOS/src/cmsis_os.c **** 
1155:FreeRTOS/src/cmsis_os.c **** typedef struct os_mailQ_cb {
1156:FreeRTOS/src/cmsis_os.c ****   const osMailQDef_t *queue_def;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 71


1157:FreeRTOS/src/cmsis_os.c ****   QueueHandle_t handle;
1158:FreeRTOS/src/cmsis_os.c ****   osPoolId pool;
1159:FreeRTOS/src/cmsis_os.c **** } os_mailQ_cb_t;
1160:FreeRTOS/src/cmsis_os.c **** 
1161:FreeRTOS/src/cmsis_os.c **** /**
1162:FreeRTOS/src/cmsis_os.c **** * @brief Create and Initialize mail queue
1163:FreeRTOS/src/cmsis_os.c **** * @param  queue_def     reference to the mail queue definition obtain with \ref osMailQ
1164:FreeRTOS/src/cmsis_os.c **** * @param   thread_id     thread ID (obtained by \ref osThreadCreate or \ref osThreadGetId) or NULL.
1165:FreeRTOS/src/cmsis_os.c **** * @retval mail queue ID for reference by other functions or NULL in case of error.
1166:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailCreate shall be consistent in every CMSIS-RTOS.
1167:FreeRTOS/src/cmsis_os.c **** */
1168:FreeRTOS/src/cmsis_os.c **** osMailQId osMailCreate (const osMailQDef_t *queue_def, osThreadId thread_id)
1169:FreeRTOS/src/cmsis_os.c **** {
 2358              		.loc 1 1169 1 is_stmt 1 view -0
 2359              		.cfi_startproc
 2360              		@ args = 0, pretend = 0, frame = 16
 2361              		@ frame_needed = 0, uses_anonymous_args = 0
 2362              		.loc 1 1169 1 is_stmt 0 view .LVU579
 2363 0000 30B5     		push	{r4, r5, lr}
 2364              	.LCFI51:
 2365              		.cfi_def_cfa_offset 12
 2366              		.cfi_offset 4, -12
 2367              		.cfi_offset 5, -8
 2368              		.cfi_offset 14, -4
 2369 0002 85B0     		sub	sp, sp, #20
 2370              	.LCFI52:
 2371              		.cfi_def_cfa_offset 32
 2372 0004 0446     		mov	r4, r0
1170:FreeRTOS/src/cmsis_os.c **** #if (configSUPPORT_DYNAMIC_ALLOCATION == 1)
1171:FreeRTOS/src/cmsis_os.c ****   (void) thread_id;
 2373              		.loc 1 1171 3 is_stmt 1 view .LVU580
1172:FreeRTOS/src/cmsis_os.c ****   
1173:FreeRTOS/src/cmsis_os.c ****   osPoolDef_t pool_def = {queue_def->queue_sz, queue_def->item_sz, NULL};
 2374              		.loc 1 1173 3 view .LVU581
 2375              		.loc 1 1173 36 is_stmt 0 view .LVU582
 2376 0006 0368     		ldr	r3, [r0]
 2377              		.loc 1 1173 15 view .LVU583
 2378 0008 0193     		str	r3, [sp, #4]
 2379              		.loc 1 1173 57 view .LVU584
 2380 000a 4368     		ldr	r3, [r0, #4]
 2381              		.loc 1 1173 15 view .LVU585
 2382 000c 0293     		str	r3, [sp, #8]
 2383 000e 0023     		movs	r3, #0
 2384 0010 0393     		str	r3, [sp, #12]
1174:FreeRTOS/src/cmsis_os.c ****   
1175:FreeRTOS/src/cmsis_os.c ****   /* Create a mail queue control block */
1176:FreeRTOS/src/cmsis_os.c **** 
1177:FreeRTOS/src/cmsis_os.c ****   *(queue_def->cb) = pvPortMalloc(sizeof(struct os_mailQ_cb));
 2385              		.loc 1 1177 3 is_stmt 1 view .LVU586
 2386              		.loc 1 1177 14 is_stmt 0 view .LVU587
 2387 0012 8568     		ldr	r5, [r0, #8]
 2388              		.loc 1 1177 22 view .LVU588
 2389 0014 0C20     		movs	r0, #12
 2390              	.LVL177:
 2391              		.loc 1 1177 22 view .LVU589
 2392 0016 FFF7FEFF 		bl	pvPortMalloc
 2393              	.LVL178:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 72


 2394              		.loc 1 1177 20 view .LVU590
 2395 001a 2860     		str	r0, [r5]
1178:FreeRTOS/src/cmsis_os.c **** 
1179:FreeRTOS/src/cmsis_os.c ****   if (*(queue_def->cb) == NULL) {
 2396              		.loc 1 1179 3 is_stmt 1 view .LVU591
 2397              		.loc 1 1179 18 is_stmt 0 view .LVU592
 2398 001c A368     		ldr	r3, [r4, #8]
 2399              		.loc 1 1179 7 view .LVU593
 2400 001e 1B68     		ldr	r3, [r3]
 2401              		.loc 1 1179 6 view .LVU594
 2402 0020 FBB1     		cbz	r3, .L185
1180:FreeRTOS/src/cmsis_os.c ****     return NULL;
1181:FreeRTOS/src/cmsis_os.c ****   }
1182:FreeRTOS/src/cmsis_os.c ****   (*(queue_def->cb))->queue_def = queue_def;
 2403              		.loc 1 1182 3 is_stmt 1 view .LVU595
 2404              		.loc 1 1182 33 is_stmt 0 view .LVU596
 2405 0022 1C60     		str	r4, [r3]
1183:FreeRTOS/src/cmsis_os.c ****   
1184:FreeRTOS/src/cmsis_os.c ****   /* Create a queue in FreeRTOS */
1185:FreeRTOS/src/cmsis_os.c ****   (*(queue_def->cb))->handle = xQueueCreate(queue_def->queue_sz, sizeof(void *));
 2406              		.loc 1 1185 3 is_stmt 1 view .LVU597
 2407              		.loc 1 1185 15 is_stmt 0 view .LVU598
 2408 0024 A368     		ldr	r3, [r4, #8]
 2409              		.loc 1 1185 4 view .LVU599
 2410 0026 1D68     		ldr	r5, [r3]
 2411              		.loc 1 1185 32 view .LVU600
 2412 0028 0022     		movs	r2, #0
 2413 002a 0421     		movs	r1, #4
 2414 002c 2068     		ldr	r0, [r4]
 2415 002e FFF7FEFF 		bl	xQueueGenericCreate
 2416              	.LVL179:
 2417              		.loc 1 1185 30 view .LVU601
 2418 0032 6860     		str	r0, [r5, #4]
1186:FreeRTOS/src/cmsis_os.c **** 
1187:FreeRTOS/src/cmsis_os.c **** 
1188:FreeRTOS/src/cmsis_os.c ****   if ((*(queue_def->cb))->handle == NULL) {
 2419              		.loc 1 1188 3 is_stmt 1 view .LVU602
 2420              		.loc 1 1188 19 is_stmt 0 view .LVU603
 2421 0034 A368     		ldr	r3, [r4, #8]
 2422              		.loc 1 1188 8 view .LVU604
 2423 0036 1D68     		ldr	r5, [r3]
 2424              		.loc 1 1188 25 view .LVU605
 2425 0038 6B68     		ldr	r3, [r5, #4]
 2426              		.loc 1 1188 6 view .LVU606
 2427 003a 4BB1     		cbz	r3, .L187
1189:FreeRTOS/src/cmsis_os.c ****     vPortFree(*(queue_def->cb));
1190:FreeRTOS/src/cmsis_os.c ****     return NULL;
1191:FreeRTOS/src/cmsis_os.c ****   }
1192:FreeRTOS/src/cmsis_os.c ****   
1193:FreeRTOS/src/cmsis_os.c ****   /* Create a mail pool */
1194:FreeRTOS/src/cmsis_os.c ****   (*(queue_def->cb))->pool = osPoolCreate(&pool_def);
 2428              		.loc 1 1194 3 is_stmt 1 view .LVU607
 2429              		.loc 1 1194 30 is_stmt 0 view .LVU608
 2430 003c 01A8     		add	r0, sp, #4
 2431 003e FFF7FEFF 		bl	osPoolCreate
 2432              	.LVL180:
 2433              		.loc 1 1194 28 view .LVU609
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 73


 2434 0042 A860     		str	r0, [r5, #8]
1195:FreeRTOS/src/cmsis_os.c ****   if ((*(queue_def->cb))->pool == NULL) {
 2435              		.loc 1 1195 3 is_stmt 1 view .LVU610
 2436              		.loc 1 1195 19 is_stmt 0 view .LVU611
 2437 0044 A368     		ldr	r3, [r4, #8]
 2438              		.loc 1 1195 8 view .LVU612
 2439 0046 1868     		ldr	r0, [r3]
 2440              		.loc 1 1195 25 view .LVU613
 2441 0048 8368     		ldr	r3, [r0, #8]
 2442              		.loc 1 1195 6 view .LVU614
 2443 004a 33B1     		cbz	r3, .L188
 2444              	.L182:
1196:FreeRTOS/src/cmsis_os.c ****     //TODO: Delete queue. How to do it in FreeRTOS?
1197:FreeRTOS/src/cmsis_os.c ****     vPortFree(*(queue_def->cb));
1198:FreeRTOS/src/cmsis_os.c ****     return NULL;
1199:FreeRTOS/src/cmsis_os.c ****   }
1200:FreeRTOS/src/cmsis_os.c ****   
1201:FreeRTOS/src/cmsis_os.c ****   return *(queue_def->cb);
1202:FreeRTOS/src/cmsis_os.c **** #else
1203:FreeRTOS/src/cmsis_os.c ****   return NULL;
1204:FreeRTOS/src/cmsis_os.c **** #endif
1205:FreeRTOS/src/cmsis_os.c **** }
 2445              		.loc 1 1205 1 view .LVU615
 2446 004c 05B0     		add	sp, sp, #20
 2447              	.LCFI53:
 2448              		.cfi_remember_state
 2449              		.cfi_def_cfa_offset 12
 2450              		@ sp needed
 2451 004e 30BD     		pop	{r4, r5, pc}
 2452              	.LVL181:
 2453              	.L187:
 2454              	.LCFI54:
 2455              		.cfi_restore_state
1189:FreeRTOS/src/cmsis_os.c ****     return NULL;
 2456              		.loc 1 1189 5 is_stmt 1 view .LVU616
 2457 0050 2846     		mov	r0, r5
 2458 0052 FFF7FEFF 		bl	vPortFree
 2459              	.LVL182:
1190:FreeRTOS/src/cmsis_os.c ****   }
 2460              		.loc 1 1190 5 view .LVU617
1190:FreeRTOS/src/cmsis_os.c ****   }
 2461              		.loc 1 1190 12 is_stmt 0 view .LVU618
 2462 0056 0020     		movs	r0, #0
 2463 0058 F8E7     		b	.L182
 2464              	.L188:
1197:FreeRTOS/src/cmsis_os.c ****     return NULL;
 2465              		.loc 1 1197 5 is_stmt 1 view .LVU619
 2466 005a FFF7FEFF 		bl	vPortFree
 2467              	.LVL183:
1198:FreeRTOS/src/cmsis_os.c ****   }
 2468              		.loc 1 1198 5 view .LVU620
1198:FreeRTOS/src/cmsis_os.c ****   }
 2469              		.loc 1 1198 12 is_stmt 0 view .LVU621
 2470 005e 0020     		movs	r0, #0
 2471 0060 F4E7     		b	.L182
 2472              	.L185:
1180:FreeRTOS/src/cmsis_os.c ****   }
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 74


 2473              		.loc 1 1180 12 view .LVU622
 2474 0062 0020     		movs	r0, #0
 2475 0064 F2E7     		b	.L182
 2476              		.cfi_endproc
 2477              	.LFE104:
 2479              		.section	.text.osMailAlloc,"ax",%progbits
 2480              		.align	1
 2481              		.global	osMailAlloc
 2482              		.syntax unified
 2483              		.thumb
 2484              		.thumb_func
 2485              		.fpu softvfp
 2487              	osMailAlloc:
 2488              	.LVL184:
 2489              	.LFB105:
1206:FreeRTOS/src/cmsis_os.c **** 
1207:FreeRTOS/src/cmsis_os.c **** /**
1208:FreeRTOS/src/cmsis_os.c **** * @brief Allocate a memory block from a mail
1209:FreeRTOS/src/cmsis_os.c **** * @param  queue_id      mail queue ID obtained with \ref osMailCreate.
1210:FreeRTOS/src/cmsis_os.c **** * @param  millisec      timeout value or 0 in case of no time-out.
1211:FreeRTOS/src/cmsis_os.c **** * @retval pointer to memory block that can be filled with mail or NULL in case error.
1212:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailAlloc shall be consistent in every CMSIS-RTOS.
1213:FreeRTOS/src/cmsis_os.c **** */
1214:FreeRTOS/src/cmsis_os.c **** void *osMailAlloc (osMailQId queue_id, uint32_t millisec)
1215:FreeRTOS/src/cmsis_os.c **** {
 2490              		.loc 1 1215 1 is_stmt 1 view -0
 2491              		.cfi_startproc
 2492              		@ args = 0, pretend = 0, frame = 0
 2493              		@ frame_needed = 0, uses_anonymous_args = 0
1216:FreeRTOS/src/cmsis_os.c ****   (void) millisec;
 2494              		.loc 1 1216 3 view .LVU624
1217:FreeRTOS/src/cmsis_os.c ****   void *p;
 2495              		.loc 1 1217 3 view .LVU625
1218:FreeRTOS/src/cmsis_os.c ****   
1219:FreeRTOS/src/cmsis_os.c ****   
1220:FreeRTOS/src/cmsis_os.c ****   if (queue_id == NULL) {
 2496              		.loc 1 1220 3 view .LVU626
 2497              		.loc 1 1220 6 is_stmt 0 view .LVU627
 2498 0000 20B1     		cbz	r0, .L191
1215:FreeRTOS/src/cmsis_os.c ****   (void) millisec;
 2499              		.loc 1 1215 1 view .LVU628
 2500 0002 08B5     		push	{r3, lr}
 2501              	.LCFI55:
 2502              		.cfi_def_cfa_offset 8
 2503              		.cfi_offset 3, -8
 2504              		.cfi_offset 14, -4
1221:FreeRTOS/src/cmsis_os.c ****     return NULL;
1222:FreeRTOS/src/cmsis_os.c ****   }
1223:FreeRTOS/src/cmsis_os.c ****   
1224:FreeRTOS/src/cmsis_os.c ****   p = osPoolAlloc(queue_id->pool);
 2505              		.loc 1 1224 3 is_stmt 1 view .LVU629
 2506              		.loc 1 1224 7 is_stmt 0 view .LVU630
 2507 0004 8068     		ldr	r0, [r0, #8]
 2508              	.LVL185:
 2509              		.loc 1 1224 7 view .LVU631
 2510 0006 FFF7FEFF 		bl	osPoolAlloc
 2511              	.LVL186:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 75


1225:FreeRTOS/src/cmsis_os.c ****   
1226:FreeRTOS/src/cmsis_os.c ****   return p;
 2512              		.loc 1 1226 3 is_stmt 1 view .LVU632
1227:FreeRTOS/src/cmsis_os.c **** }
 2513              		.loc 1 1227 1 is_stmt 0 view .LVU633
 2514 000a 08BD     		pop	{r3, pc}
 2515              	.LVL187:
 2516              	.L191:
 2517              	.LCFI56:
 2518              		.cfi_def_cfa_offset 0
 2519              		.cfi_restore 3
 2520              		.cfi_restore 14
1221:FreeRTOS/src/cmsis_os.c ****     return NULL;
 2521              		.loc 1 1221 12 view .LVU634
 2522 000c 0020     		movs	r0, #0
 2523              	.LVL188:
 2524              		.loc 1 1227 1 view .LVU635
 2525 000e 7047     		bx	lr
 2526              		.cfi_endproc
 2527              	.LFE105:
 2529              		.section	.text.osMailCAlloc,"ax",%progbits
 2530              		.align	1
 2531              		.global	osMailCAlloc
 2532              		.syntax unified
 2533              		.thumb
 2534              		.thumb_func
 2535              		.fpu softvfp
 2537              	osMailCAlloc:
 2538              	.LVL189:
 2539              	.LFB106:
1228:FreeRTOS/src/cmsis_os.c **** 
1229:FreeRTOS/src/cmsis_os.c **** /**
1230:FreeRTOS/src/cmsis_os.c **** * @brief Allocate a memory block from a mail and set memory block to zero
1231:FreeRTOS/src/cmsis_os.c **** * @param  queue_id      mail queue ID obtained with \ref osMailCreate.
1232:FreeRTOS/src/cmsis_os.c **** * @param  millisec      timeout value or 0 in case of no time-out.
1233:FreeRTOS/src/cmsis_os.c **** * @retval pointer to memory block that can be filled with mail or NULL in case error.
1234:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailCAlloc shall be consistent in every CMSIS-RTOS.
1235:FreeRTOS/src/cmsis_os.c **** */
1236:FreeRTOS/src/cmsis_os.c **** void *osMailCAlloc (osMailQId queue_id, uint32_t millisec)
1237:FreeRTOS/src/cmsis_os.c **** {
 2540              		.loc 1 1237 1 is_stmt 1 view -0
 2541              		.cfi_startproc
 2542              		@ args = 0, pretend = 0, frame = 0
 2543              		@ frame_needed = 0, uses_anonymous_args = 0
 2544              		.loc 1 1237 1 is_stmt 0 view .LVU637
 2545 0000 10B5     		push	{r4, lr}
 2546              	.LCFI57:
 2547              		.cfi_def_cfa_offset 8
 2548              		.cfi_offset 4, -8
 2549              		.cfi_offset 14, -4
 2550 0002 0446     		mov	r4, r0
1238:FreeRTOS/src/cmsis_os.c ****   uint32_t i;
 2551              		.loc 1 1238 3 is_stmt 1 view .LVU638
1239:FreeRTOS/src/cmsis_os.c ****   void *p = osMailAlloc(queue_id, millisec);
 2552              		.loc 1 1239 3 view .LVU639
 2553              		.loc 1 1239 13 is_stmt 0 view .LVU640
 2554 0004 FFF7FEFF 		bl	osMailAlloc
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 76


 2555              	.LVL190:
1240:FreeRTOS/src/cmsis_os.c ****   
1241:FreeRTOS/src/cmsis_os.c ****   if (p) {
 2556              		.loc 1 1241 3 is_stmt 1 view .LVU641
 2557              		.loc 1 1241 6 is_stmt 0 view .LVU642
 2558 0008 0146     		mov	r1, r0
 2559 000a 40B1     		cbz	r0, .L196
1242:FreeRTOS/src/cmsis_os.c ****     for (i = 0; i < queue_id->queue_def->item_sz; i++) {
 2560              		.loc 1 1242 12 view .LVU643
 2561 000c 0023     		movs	r3, #0
 2562              	.L197:
 2563              	.LVL191:
 2564              		.loc 1 1242 29 discriminator 1 view .LVU644
 2565 000e 2268     		ldr	r2, [r4]
 2566              		.loc 1 1242 40 discriminator 1 view .LVU645
 2567 0010 5268     		ldr	r2, [r2, #4]
 2568              		.loc 1 1242 5 discriminator 1 view .LVU646
 2569 0012 9A42     		cmp	r2, r3
 2570 0014 03D9     		bls	.L196
1243:FreeRTOS/src/cmsis_os.c ****       ((uint8_t *)p)[i] = 0;
 2571              		.loc 1 1243 7 is_stmt 1 discriminator 3 view .LVU647
 2572              		.loc 1 1243 25 is_stmt 0 discriminator 3 view .LVU648
 2573 0016 0022     		movs	r2, #0
 2574 0018 CA54     		strb	r2, [r1, r3]
1242:FreeRTOS/src/cmsis_os.c ****     for (i = 0; i < queue_id->queue_def->item_sz; i++) {
 2575              		.loc 1 1242 52 discriminator 3 view .LVU649
 2576 001a 0133     		adds	r3, r3, #1
 2577              	.LVL192:
1242:FreeRTOS/src/cmsis_os.c ****     for (i = 0; i < queue_id->queue_def->item_sz; i++) {
 2578              		.loc 1 1242 52 discriminator 3 view .LVU650
 2579 001c F7E7     		b	.L197
 2580              	.LVL193:
 2581              	.L196:
1244:FreeRTOS/src/cmsis_os.c ****     }
1245:FreeRTOS/src/cmsis_os.c ****   }
1246:FreeRTOS/src/cmsis_os.c ****   
1247:FreeRTOS/src/cmsis_os.c ****   return p;
1248:FreeRTOS/src/cmsis_os.c **** }
 2582              		.loc 1 1248 1 view .LVU651
 2583 001e 0846     		mov	r0, r1
 2584              	.LVL194:
 2585              		.loc 1 1248 1 view .LVU652
 2586 0020 10BD     		pop	{r4, pc}
 2587              		.loc 1 1248 1 view .LVU653
 2588              		.cfi_endproc
 2589              	.LFE106:
 2591              		.section	.text.osMailPut,"ax",%progbits
 2592              		.align	1
 2593              		.global	osMailPut
 2594              		.syntax unified
 2595              		.thumb
 2596              		.thumb_func
 2597              		.fpu softvfp
 2599              	osMailPut:
 2600              	.LVL195:
 2601              	.LFB107:
1249:FreeRTOS/src/cmsis_os.c **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 77


1250:FreeRTOS/src/cmsis_os.c **** /**
1251:FreeRTOS/src/cmsis_os.c **** * @brief Put a mail to a queue
1252:FreeRTOS/src/cmsis_os.c **** * @param  queue_id      mail queue ID obtained with \ref osMailCreate.
1253:FreeRTOS/src/cmsis_os.c **** * @param  mail          memory block previously allocated with \ref osMailAlloc or \ref osMailCAllo
1254:FreeRTOS/src/cmsis_os.c **** * @retval status code that indicates the execution status of the function.
1255:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailPut shall be consistent in every CMSIS-RTOS.
1256:FreeRTOS/src/cmsis_os.c **** */
1257:FreeRTOS/src/cmsis_os.c **** osStatus osMailPut (osMailQId queue_id, void *mail)
1258:FreeRTOS/src/cmsis_os.c **** {
 2602              		.loc 1 1258 1 is_stmt 1 view -0
 2603              		.cfi_startproc
 2604              		@ args = 0, pretend = 0, frame = 16
 2605              		@ frame_needed = 0, uses_anonymous_args = 0
 2606              		.loc 1 1258 1 is_stmt 0 view .LVU655
 2607 0000 10B5     		push	{r4, lr}
 2608              	.LCFI58:
 2609              		.cfi_def_cfa_offset 8
 2610              		.cfi_offset 4, -8
 2611              		.cfi_offset 14, -4
 2612 0002 84B0     		sub	sp, sp, #16
 2613              	.LCFI59:
 2614              		.cfi_def_cfa_offset 24
 2615 0004 0191     		str	r1, [sp, #4]
1259:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken;
 2616              		.loc 1 1259 3 is_stmt 1 view .LVU656
1260:FreeRTOS/src/cmsis_os.c ****   
1261:FreeRTOS/src/cmsis_os.c ****   
1262:FreeRTOS/src/cmsis_os.c ****   if (queue_id == NULL) {
 2617              		.loc 1 1262 3 view .LVU657
 2618              		.loc 1 1262 6 is_stmt 0 view .LVU658
 2619 0006 20B3     		cbz	r0, .L205
 2620 0008 0446     		mov	r4, r0
1263:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1264:FreeRTOS/src/cmsis_os.c ****   }
1265:FreeRTOS/src/cmsis_os.c ****   
1266:FreeRTOS/src/cmsis_os.c ****   taskWoken = pdFALSE;
 2621              		.loc 1 1266 3 is_stmt 1 view .LVU659
 2622              		.loc 1 1266 13 is_stmt 0 view .LVU660
 2623 000a 0023     		movs	r3, #0
 2624 000c 0393     		str	r3, [sp, #12]
1267:FreeRTOS/src/cmsis_os.c ****   
1268:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 2625              		.loc 1 1268 3 is_stmt 1 view .LVU661
 2626              		.loc 1 1268 7 is_stmt 0 view .LVU662
 2627 000e FFF7FEFF 		bl	inHandlerMode
 2628              	.LVL196:
 2629              		.loc 1 1268 6 view .LVU663
 2630 0012 98B1     		cbz	r0, .L204
1269:FreeRTOS/src/cmsis_os.c ****     if (xQueueSendFromISR(queue_id->handle, &mail, &taskWoken) != pdTRUE) {
 2631              		.loc 1 1269 5 is_stmt 1 view .LVU664
 2632              		.loc 1 1269 9 is_stmt 0 view .LVU665
 2633 0014 0023     		movs	r3, #0
 2634 0016 03AA     		add	r2, sp, #12
 2635 0018 01A9     		add	r1, sp, #4
 2636 001a 6068     		ldr	r0, [r4, #4]
 2637 001c FFF7FEFF 		bl	xQueueGenericSendFromISR
 2638              	.LVL197:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 78


 2639              		.loc 1 1269 8 view .LVU666
 2640 0020 0128     		cmp	r0, #1
 2641 0022 18D1     		bne	.L206
1270:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
1271:FreeRTOS/src/cmsis_os.c ****     }
1272:FreeRTOS/src/cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 2642              		.loc 1 1272 5 is_stmt 1 view .LVU667
 2643 0024 039B     		ldr	r3, [sp, #12]
 2644 0026 C3B1     		cbz	r3, .L207
 2645              		.loc 1 1272 5 discriminator 1 view .LVU668
 2646 0028 0E4B     		ldr	r3, .L210
 2647 002a 4FF08052 		mov	r2, #268435456
 2648 002e 1A60     		str	r2, [r3]
 2649              		.loc 1 1272 5 discriminator 1 view .LVU669
 2650              		.syntax unified
 2651              	@ 1272 "FreeRTOS/src/cmsis_os.c" 1
 2652 0030 BFF34F8F 		dsb
 2653              	@ 0 "" 2
 2654              		.loc 1 1272 5 discriminator 1 view .LVU670
 2655              	@ 1272 "FreeRTOS/src/cmsis_os.c" 1
 2656 0034 BFF36F8F 		isb
 2657              	@ 0 "" 2
1273:FreeRTOS/src/cmsis_os.c ****   }
1274:FreeRTOS/src/cmsis_os.c ****   else {
1275:FreeRTOS/src/cmsis_os.c ****     if (xQueueSend(queue_id->handle, &mail, 0) != pdTRUE) { 
1276:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
1277:FreeRTOS/src/cmsis_os.c ****     }
1278:FreeRTOS/src/cmsis_os.c ****   }
1279:FreeRTOS/src/cmsis_os.c ****   
1280:FreeRTOS/src/cmsis_os.c ****   return osOK;
 2658              		.loc 1 1280 10 is_stmt 0 discriminator 1 view .LVU671
 2659              		.thumb
 2660              		.syntax unified
 2661 0038 0020     		movs	r0, #0
 2662 003a 08E0     		b	.L202
 2663              	.L204:
1275:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 2664              		.loc 1 1275 5 is_stmt 1 view .LVU672
1275:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 2665              		.loc 1 1275 9 is_stmt 0 view .LVU673
 2666 003c 0023     		movs	r3, #0
 2667 003e 1A46     		mov	r2, r3
 2668 0040 01A9     		add	r1, sp, #4
 2669 0042 6068     		ldr	r0, [r4, #4]
 2670 0044 FFF7FEFF 		bl	xQueueGenericSend
 2671              	.LVL198:
1275:FreeRTOS/src/cmsis_os.c ****       return osErrorOS;
 2672              		.loc 1 1275 8 view .LVU674
 2673 0048 0128     		cmp	r0, #1
 2674 004a 08D1     		bne	.L208
 2675              		.loc 1 1280 10 view .LVU675
 2676 004c 0020     		movs	r0, #0
 2677              	.LVL199:
 2678              	.L202:
1281:FreeRTOS/src/cmsis_os.c **** }
 2679              		.loc 1 1281 1 view .LVU676
 2680 004e 04B0     		add	sp, sp, #16
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 79


 2681              	.LCFI60:
 2682              		.cfi_remember_state
 2683              		.cfi_def_cfa_offset 8
 2684              		@ sp needed
 2685 0050 10BD     		pop	{r4, pc}
 2686              	.LVL200:
 2687              	.L205:
 2688              	.LCFI61:
 2689              		.cfi_restore_state
1263:FreeRTOS/src/cmsis_os.c ****   }
 2690              		.loc 1 1263 12 view .LVU677
 2691 0052 8020     		movs	r0, #128
 2692              	.LVL201:
1263:FreeRTOS/src/cmsis_os.c ****   }
 2693              		.loc 1 1263 12 view .LVU678
 2694 0054 FBE7     		b	.L202
 2695              	.LVL202:
 2696              	.L206:
1270:FreeRTOS/src/cmsis_os.c ****     }
 2697              		.loc 1 1270 14 view .LVU679
 2698 0056 FF20     		movs	r0, #255
 2699 0058 F9E7     		b	.L202
 2700              	.L207:
1280:FreeRTOS/src/cmsis_os.c **** }
 2701              		.loc 1 1280 10 view .LVU680
 2702 005a 0020     		movs	r0, #0
 2703 005c F7E7     		b	.L202
 2704              	.L208:
1276:FreeRTOS/src/cmsis_os.c ****     }
 2705              		.loc 1 1276 14 view .LVU681
 2706 005e FF20     		movs	r0, #255
 2707 0060 F5E7     		b	.L202
 2708              	.L211:
 2709 0062 00BF     		.align	2
 2710              	.L210:
 2711 0064 04ED00E0 		.word	-536810236
 2712              		.cfi_endproc
 2713              	.LFE107:
 2715              		.section	.text.osMailGet,"ax",%progbits
 2716              		.align	1
 2717              		.global	osMailGet
 2718              		.syntax unified
 2719              		.thumb
 2720              		.thumb_func
 2721              		.fpu softvfp
 2723              	osMailGet:
 2724              	.LVL203:
 2725              	.LFB108:
1282:FreeRTOS/src/cmsis_os.c **** 
1283:FreeRTOS/src/cmsis_os.c **** /**
1284:FreeRTOS/src/cmsis_os.c **** * @brief Get a mail from a queue
1285:FreeRTOS/src/cmsis_os.c **** * @param  queue_id   mail queue ID obtained with \ref osMailCreate.
1286:FreeRTOS/src/cmsis_os.c **** * @param millisec    timeout value or 0 in case of no time-out
1287:FreeRTOS/src/cmsis_os.c **** * @retval event that contains mail information or error code.
1288:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailGet shall be consistent in every CMSIS-RTOS.
1289:FreeRTOS/src/cmsis_os.c **** */
1290:FreeRTOS/src/cmsis_os.c **** osEvent osMailGet (osMailQId queue_id, uint32_t millisec)
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 80


1291:FreeRTOS/src/cmsis_os.c **** {
 2726              		.loc 1 1291 1 is_stmt 1 view -0
 2727              		.cfi_startproc
 2728              		@ args = 0, pretend = 0, frame = 16
 2729              		@ frame_needed = 0, uses_anonymous_args = 0
 2730              		.loc 1 1291 1 is_stmt 0 view .LVU683
 2731 0000 70B5     		push	{r4, r5, r6, lr}
 2732              	.LCFI62:
 2733              		.cfi_def_cfa_offset 16
 2734              		.cfi_offset 4, -16
 2735              		.cfi_offset 5, -12
 2736              		.cfi_offset 6, -8
 2737              		.cfi_offset 14, -4
 2738 0002 84B0     		sub	sp, sp, #16
 2739              	.LCFI63:
 2740              		.cfi_def_cfa_offset 32
 2741 0004 0446     		mov	r4, r0
1292:FreeRTOS/src/cmsis_os.c ****   portBASE_TYPE taskWoken;
 2742              		.loc 1 1292 3 is_stmt 1 view .LVU684
1293:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 2743              		.loc 1 1293 3 view .LVU685
1294:FreeRTOS/src/cmsis_os.c ****   osEvent event;
 2744              		.loc 1 1294 3 view .LVU686
1295:FreeRTOS/src/cmsis_os.c ****   
1296:FreeRTOS/src/cmsis_os.c ****   event.def.mail_id = queue_id;
 2745              		.loc 1 1296 3 view .LVU687
 2746              		.loc 1 1296 21 is_stmt 0 view .LVU688
 2747 0006 0291     		str	r1, [sp, #8]
1297:FreeRTOS/src/cmsis_os.c ****   
1298:FreeRTOS/src/cmsis_os.c ****   if (queue_id == NULL) {
 2748              		.loc 1 1298 3 is_stmt 1 view .LVU689
 2749              		.loc 1 1298 6 is_stmt 0 view .LVU690
 2750 0008 49B1     		cbz	r1, .L225
 2751 000a 0D46     		mov	r5, r1
 2752 000c 1646     		mov	r6, r2
1299:FreeRTOS/src/cmsis_os.c ****     event.status = osErrorParameter;
1300:FreeRTOS/src/cmsis_os.c ****     return event;
1301:FreeRTOS/src/cmsis_os.c ****   }
1302:FreeRTOS/src/cmsis_os.c ****   
1303:FreeRTOS/src/cmsis_os.c ****   taskWoken = pdFALSE;
 2753              		.loc 1 1303 3 is_stmt 1 view .LVU691
 2754              		.loc 1 1303 13 is_stmt 0 view .LVU692
 2755 000e 0023     		movs	r3, #0
 2756 0010 0393     		str	r3, [sp, #12]
1304:FreeRTOS/src/cmsis_os.c ****   
1305:FreeRTOS/src/cmsis_os.c ****   ticks = 0;
 2757              		.loc 1 1305 3 is_stmt 1 view .LVU693
 2758              	.LVL204:
1306:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 2759              		.loc 1 1306 3 view .LVU694
 2760              		.loc 1 1306 6 is_stmt 0 view .LVU695
 2761 0012 B2F1FF3F 		cmp	r2, #-1
 2762 0016 0AD0     		beq	.L222
1307:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
1308:FreeRTOS/src/cmsis_os.c ****   }
1309:FreeRTOS/src/cmsis_os.c ****   else if (millisec != 0) {
 2763              		.loc 1 1309 8 is_stmt 1 view .LVU696
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 81


 2764              		.loc 1 1309 11 is_stmt 0 view .LVU697
 2765 0018 5AB9     		cbnz	r2, .L215
1305:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 2766              		.loc 1 1305 9 view .LVU698
 2767 001a 1E46     		mov	r6, r3
 2768 001c 09E0     		b	.L215
 2769              	.LVL205:
 2770              	.L225:
1299:FreeRTOS/src/cmsis_os.c ****     return event;
 2771              		.loc 1 1299 5 is_stmt 1 view .LVU699
1299:FreeRTOS/src/cmsis_os.c ****     return event;
 2772              		.loc 1 1299 18 is_stmt 0 view .LVU700
 2773 001e 8023     		movs	r3, #128
 2774 0020 0093     		str	r3, [sp]
1300:FreeRTOS/src/cmsis_os.c ****   }
 2775              		.loc 1 1300 5 is_stmt 1 view .LVU701
1300:FreeRTOS/src/cmsis_os.c ****   }
 2776              		.loc 1 1300 12 is_stmt 0 view .LVU702
 2777 0022 6B46     		mov	r3, sp
 2778 0024 93E80700 		ldm	r3, {r0, r1, r2}
 2779              	.LVL206:
1300:FreeRTOS/src/cmsis_os.c ****   }
 2780              		.loc 1 1300 12 view .LVU703
 2781 0028 84E80700 		stm	r4, {r0, r1, r2}
 2782 002c 2AE0     		b	.L212
 2783              	.LVL207:
 2784              	.L222:
1307:FreeRTOS/src/cmsis_os.c ****   }
 2785              		.loc 1 1307 11 view .LVU704
 2786 002e 4FF0FF36 		mov	r6, #-1
 2787              	.L215:
 2788              	.LVL208:
1310:FreeRTOS/src/cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
1311:FreeRTOS/src/cmsis_os.c ****     if (ticks == 0) {
1312:FreeRTOS/src/cmsis_os.c ****       ticks = 1;
1313:FreeRTOS/src/cmsis_os.c ****     }
1314:FreeRTOS/src/cmsis_os.c ****   }
1315:FreeRTOS/src/cmsis_os.c ****   
1316:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 2789              		.loc 1 1316 3 is_stmt 1 view .LVU705
 2790              		.loc 1 1316 7 is_stmt 0 view .LVU706
 2791 0032 FFF7FEFF 		bl	inHandlerMode
 2792              	.LVL209:
 2793              		.loc 1 1316 6 view .LVU707
 2794 0036 B0B1     		cbz	r0, .L216
1317:FreeRTOS/src/cmsis_os.c ****     if (xQueueReceiveFromISR(queue_id->handle, &event.value.p, &taskWoken) == pdTRUE) {
 2795              		.loc 1 1317 5 is_stmt 1 view .LVU708
 2796              		.loc 1 1317 9 is_stmt 0 view .LVU709
 2797 0038 03AA     		add	r2, sp, #12
 2798 003a 01A9     		add	r1, sp, #4
 2799 003c 6868     		ldr	r0, [r5, #4]
 2800 003e FFF7FEFF 		bl	xQueueReceiveFromISR
 2801              	.LVL210:
 2802              		.loc 1 1317 8 view .LVU710
 2803 0042 0128     		cmp	r0, #1
 2804 0044 0CD0     		beq	.L226
1318:FreeRTOS/src/cmsis_os.c ****       /* We have mail */
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 82


1319:FreeRTOS/src/cmsis_os.c ****       event.status = osEventMail;
1320:FreeRTOS/src/cmsis_os.c ****     }
1321:FreeRTOS/src/cmsis_os.c ****     else {
1322:FreeRTOS/src/cmsis_os.c ****       event.status = osOK;
 2805              		.loc 1 1322 7 is_stmt 1 view .LVU711
 2806              		.loc 1 1322 20 is_stmt 0 view .LVU712
 2807 0046 0023     		movs	r3, #0
 2808 0048 0093     		str	r3, [sp]
 2809              	.L218:
1323:FreeRTOS/src/cmsis_os.c ****     }
1324:FreeRTOS/src/cmsis_os.c ****     portEND_SWITCHING_ISR(taskWoken);
 2810              		.loc 1 1324 5 is_stmt 1 view .LVU713
 2811 004a 039B     		ldr	r3, [sp, #12]
 2812 004c ABB1     		cbz	r3, .L219
 2813              		.loc 1 1324 5 discriminator 1 view .LVU714
 2814 004e 114B     		ldr	r3, .L228
 2815 0050 4FF08052 		mov	r2, #268435456
 2816 0054 1A60     		str	r2, [r3]
 2817              		.loc 1 1324 5 discriminator 1 view .LVU715
 2818              		.syntax unified
 2819              	@ 1324 "FreeRTOS/src/cmsis_os.c" 1
 2820 0056 BFF34F8F 		dsb
 2821              	@ 0 "" 2
 2822              		.loc 1 1324 5 discriminator 1 view .LVU716
 2823              	@ 1324 "FreeRTOS/src/cmsis_os.c" 1
 2824 005a BFF36F8F 		isb
 2825              	@ 0 "" 2
 2826              		.thumb
 2827              		.syntax unified
 2828 005e 0CE0     		b	.L219
 2829              	.L226:
1319:FreeRTOS/src/cmsis_os.c ****     }
 2830              		.loc 1 1319 7 view .LVU717
1319:FreeRTOS/src/cmsis_os.c ****     }
 2831              		.loc 1 1319 20 is_stmt 0 view .LVU718
 2832 0060 2023     		movs	r3, #32
 2833 0062 0093     		str	r3, [sp]
 2834 0064 F1E7     		b	.L218
 2835              	.L216:
1325:FreeRTOS/src/cmsis_os.c ****   }
1326:FreeRTOS/src/cmsis_os.c ****   else {
1327:FreeRTOS/src/cmsis_os.c ****     if (xQueueReceive(queue_id->handle, &event.value.p, ticks) == pdTRUE) {
 2836              		.loc 1 1327 5 is_stmt 1 view .LVU719
 2837              		.loc 1 1327 9 is_stmt 0 view .LVU720
 2838 0066 3246     		mov	r2, r6
 2839 0068 01A9     		add	r1, sp, #4
 2840 006a 6868     		ldr	r0, [r5, #4]
 2841 006c FFF7FEFF 		bl	xQueueReceive
 2842              	.LVL211:
 2843              		.loc 1 1327 8 view .LVU721
 2844 0070 0128     		cmp	r0, #1
 2845 0072 0AD0     		beq	.L227
1328:FreeRTOS/src/cmsis_os.c ****       /* We have mail */
1329:FreeRTOS/src/cmsis_os.c ****       event.status = osEventMail;
1330:FreeRTOS/src/cmsis_os.c ****     }
1331:FreeRTOS/src/cmsis_os.c ****     else {
1332:FreeRTOS/src/cmsis_os.c ****       event.status = (ticks == 0) ? osOK : osEventTimeout;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 83


 2846              		.loc 1 1332 7 is_stmt 1 view .LVU722
 2847              		.loc 1 1332 42 is_stmt 0 view .LVU723
 2848 0074 66B9     		cbnz	r6, .L223
 2849 0076 0023     		movs	r3, #0
 2850              	.L221:
 2851              		.loc 1 1332 20 discriminator 4 view .LVU724
 2852 0078 0093     		str	r3, [sp]
 2853              	.L219:
1333:FreeRTOS/src/cmsis_os.c ****     }
1334:FreeRTOS/src/cmsis_os.c ****   }
1335:FreeRTOS/src/cmsis_os.c ****   
1336:FreeRTOS/src/cmsis_os.c ****   return event;
 2854              		.loc 1 1336 3 is_stmt 1 view .LVU725
 2855              		.loc 1 1336 10 is_stmt 0 view .LVU726
 2856 007a 6B46     		mov	r3, sp
 2857 007c 93E80700 		ldm	r3, {r0, r1, r2}
 2858 0080 84E80700 		stm	r4, {r0, r1, r2}
 2859              	.LVL212:
 2860              	.L212:
1337:FreeRTOS/src/cmsis_os.c **** }
 2861              		.loc 1 1337 1 view .LVU727
 2862 0084 2046     		mov	r0, r4
 2863 0086 04B0     		add	sp, sp, #16
 2864              	.LCFI64:
 2865              		.cfi_remember_state
 2866              		.cfi_def_cfa_offset 16
 2867              		@ sp needed
 2868 0088 70BD     		pop	{r4, r5, r6, pc}
 2869              	.LVL213:
 2870              	.L227:
 2871              	.LCFI65:
 2872              		.cfi_restore_state
1329:FreeRTOS/src/cmsis_os.c ****     }
 2873              		.loc 1 1329 7 is_stmt 1 view .LVU728
1329:FreeRTOS/src/cmsis_os.c ****     }
 2874              		.loc 1 1329 20 is_stmt 0 view .LVU729
 2875 008a 2023     		movs	r3, #32
 2876 008c 0093     		str	r3, [sp]
 2877 008e F4E7     		b	.L219
 2878              	.L223:
1332:FreeRTOS/src/cmsis_os.c ****     }
 2879              		.loc 1 1332 42 view .LVU730
 2880 0090 4023     		movs	r3, #64
 2881 0092 F1E7     		b	.L221
 2882              	.L229:
 2883              		.align	2
 2884              	.L228:
 2885 0094 04ED00E0 		.word	-536810236
 2886              		.cfi_endproc
 2887              	.LFE108:
 2889              		.section	.text.osMailFree,"ax",%progbits
 2890              		.align	1
 2891              		.global	osMailFree
 2892              		.syntax unified
 2893              		.thumb
 2894              		.thumb_func
 2895              		.fpu softvfp
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 84


 2897              	osMailFree:
 2898              	.LVL214:
 2899              	.LFB109:
1338:FreeRTOS/src/cmsis_os.c **** 
1339:FreeRTOS/src/cmsis_os.c **** /**
1340:FreeRTOS/src/cmsis_os.c **** * @brief Free a memory block from a mail
1341:FreeRTOS/src/cmsis_os.c **** * @param  queue_id mail queue ID obtained with \ref osMailCreate.
1342:FreeRTOS/src/cmsis_os.c **** * @param  mail     pointer to the memory block that was obtained with \ref osMailGet.
1343:FreeRTOS/src/cmsis_os.c **** * @retval status code that indicates the execution status of the function.
1344:FreeRTOS/src/cmsis_os.c **** * @note   MUST REMAIN UNCHANGED: \b osMailFree shall be consistent in every CMSIS-RTOS.
1345:FreeRTOS/src/cmsis_os.c **** */
1346:FreeRTOS/src/cmsis_os.c **** osStatus osMailFree (osMailQId queue_id, void *mail)
1347:FreeRTOS/src/cmsis_os.c **** {
 2900              		.loc 1 1347 1 is_stmt 1 view -0
 2901              		.cfi_startproc
 2902              		@ args = 0, pretend = 0, frame = 0
 2903              		@ frame_needed = 0, uses_anonymous_args = 0
1348:FreeRTOS/src/cmsis_os.c ****   if (queue_id == NULL) {
 2904              		.loc 1 1348 3 view .LVU732
 2905              		.loc 1 1348 6 is_stmt 0 view .LVU733
 2906 0000 20B1     		cbz	r0, .L232
1347:FreeRTOS/src/cmsis_os.c ****   if (queue_id == NULL) {
 2907              		.loc 1 1347 1 view .LVU734
 2908 0002 08B5     		push	{r3, lr}
 2909              	.LCFI66:
 2910              		.cfi_def_cfa_offset 8
 2911              		.cfi_offset 3, -8
 2912              		.cfi_offset 14, -4
1349:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1350:FreeRTOS/src/cmsis_os.c ****   }
1351:FreeRTOS/src/cmsis_os.c ****   
1352:FreeRTOS/src/cmsis_os.c ****   return osPoolFree(queue_id->pool, mail);
 2913              		.loc 1 1352 3 is_stmt 1 view .LVU735
 2914              		.loc 1 1352 10 is_stmt 0 view .LVU736
 2915 0004 8068     		ldr	r0, [r0, #8]
 2916              	.LVL215:
 2917              		.loc 1 1352 10 view .LVU737
 2918 0006 FFF7FEFF 		bl	osPoolFree
 2919              	.LVL216:
1353:FreeRTOS/src/cmsis_os.c **** }
 2920              		.loc 1 1353 1 view .LVU738
 2921 000a 08BD     		pop	{r3, pc}
 2922              	.LVL217:
 2923              	.L232:
 2924              	.LCFI67:
 2925              		.cfi_def_cfa_offset 0
 2926              		.cfi_restore 3
 2927              		.cfi_restore 14
1349:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
 2928              		.loc 1 1349 12 view .LVU739
 2929 000c 8020     		movs	r0, #128
 2930              	.LVL218:
 2931              		.loc 1 1353 1 view .LVU740
 2932 000e 7047     		bx	lr
 2933              		.cfi_endproc
 2934              	.LFE109:
 2936              		.section	.text.osSystickHandler,"ax",%progbits
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 85


 2937              		.align	1
 2938              		.global	osSystickHandler
 2939              		.syntax unified
 2940              		.thumb
 2941              		.thumb_func
 2942              		.fpu softvfp
 2944              	osSystickHandler:
 2945              	.LFB110:
1354:FreeRTOS/src/cmsis_os.c **** #endif  /* Use Mail Queues */
1355:FreeRTOS/src/cmsis_os.c **** 
1356:FreeRTOS/src/cmsis_os.c **** /*************************** Additional specific APIs to Free RTOS ************/
1357:FreeRTOS/src/cmsis_os.c **** /**
1358:FreeRTOS/src/cmsis_os.c **** * @brief  Handles the tick increment
1359:FreeRTOS/src/cmsis_os.c **** * @param  none.
1360:FreeRTOS/src/cmsis_os.c **** * @retval none.
1361:FreeRTOS/src/cmsis_os.c **** */
1362:FreeRTOS/src/cmsis_os.c **** void osSystickHandler(void)
1363:FreeRTOS/src/cmsis_os.c **** {
 2946              		.loc 1 1363 1 is_stmt 1 view -0
 2947              		.cfi_startproc
 2948              		@ args = 0, pretend = 0, frame = 0
 2949              		@ frame_needed = 0, uses_anonymous_args = 0
 2950 0000 08B5     		push	{r3, lr}
 2951              	.LCFI68:
 2952              		.cfi_def_cfa_offset 8
 2953              		.cfi_offset 3, -8
 2954              		.cfi_offset 14, -4
1364:FreeRTOS/src/cmsis_os.c **** 
1365:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_xTaskGetSchedulerState  == 1 )
1366:FreeRTOS/src/cmsis_os.c ****   if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
1367:FreeRTOS/src/cmsis_os.c ****   {
1368:FreeRTOS/src/cmsis_os.c **** #endif  /* INCLUDE_xTaskGetSchedulerState */  
1369:FreeRTOS/src/cmsis_os.c ****     xPortSysTickHandler();
 2955              		.loc 1 1369 5 view .LVU742
 2956 0002 FFF7FEFF 		bl	xPortSysTickHandler
 2957              	.LVL219:
1370:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_xTaskGetSchedulerState  == 1 )
1371:FreeRTOS/src/cmsis_os.c ****   }
1372:FreeRTOS/src/cmsis_os.c **** #endif  /* INCLUDE_xTaskGetSchedulerState */  
1373:FreeRTOS/src/cmsis_os.c **** }
 2958              		.loc 1 1373 1 is_stmt 0 view .LVU743
 2959 0006 08BD     		pop	{r3, pc}
 2960              		.cfi_endproc
 2961              	.LFE110:
 2963              		.section	.text.osThreadSuspend,"ax",%progbits
 2964              		.align	1
 2965              		.global	osThreadSuspend
 2966              		.syntax unified
 2967              		.thumb
 2968              		.thumb_func
 2969              		.fpu softvfp
 2971              	osThreadSuspend:
 2972              	.LVL220:
 2973              	.LFB111:
1374:FreeRTOS/src/cmsis_os.c **** 
1375:FreeRTOS/src/cmsis_os.c **** #if ( INCLUDE_eTaskGetState == 1 )
1376:FreeRTOS/src/cmsis_os.c **** /**
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 86


1377:FreeRTOS/src/cmsis_os.c **** * @brief  Obtain the state of any thread.
1378:FreeRTOS/src/cmsis_os.c **** * @param   thread_id   thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
1379:FreeRTOS/src/cmsis_os.c **** * @retval  the stae of the thread, states are encoded by the osThreadState enumerated type.
1380:FreeRTOS/src/cmsis_os.c **** */
1381:FreeRTOS/src/cmsis_os.c **** osThreadState osThreadGetState(osThreadId thread_id)
1382:FreeRTOS/src/cmsis_os.c **** {
1383:FreeRTOS/src/cmsis_os.c ****   eTaskState ThreadState;
1384:FreeRTOS/src/cmsis_os.c ****   osThreadState result;
1385:FreeRTOS/src/cmsis_os.c ****   
1386:FreeRTOS/src/cmsis_os.c ****   ThreadState = eTaskGetState(thread_id);
1387:FreeRTOS/src/cmsis_os.c ****   
1388:FreeRTOS/src/cmsis_os.c ****   switch (ThreadState)
1389:FreeRTOS/src/cmsis_os.c ****   {
1390:FreeRTOS/src/cmsis_os.c ****   case eRunning :
1391:FreeRTOS/src/cmsis_os.c ****     result = osThreadRunning;
1392:FreeRTOS/src/cmsis_os.c ****     break;
1393:FreeRTOS/src/cmsis_os.c ****   case eReady :
1394:FreeRTOS/src/cmsis_os.c ****     result = osThreadReady;
1395:FreeRTOS/src/cmsis_os.c ****     break;
1396:FreeRTOS/src/cmsis_os.c ****   case eBlocked :
1397:FreeRTOS/src/cmsis_os.c ****     result = osThreadBlocked;
1398:FreeRTOS/src/cmsis_os.c ****     break;
1399:FreeRTOS/src/cmsis_os.c ****   case eSuspended :
1400:FreeRTOS/src/cmsis_os.c ****     result = osThreadSuspended;
1401:FreeRTOS/src/cmsis_os.c ****     break;
1402:FreeRTOS/src/cmsis_os.c ****   case eDeleted :
1403:FreeRTOS/src/cmsis_os.c ****     result = osThreadDeleted;
1404:FreeRTOS/src/cmsis_os.c ****     break;
1405:FreeRTOS/src/cmsis_os.c ****   default:
1406:FreeRTOS/src/cmsis_os.c ****     result = osThreadError;
1407:FreeRTOS/src/cmsis_os.c ****   } 
1408:FreeRTOS/src/cmsis_os.c ****   
1409:FreeRTOS/src/cmsis_os.c ****   return result;
1410:FreeRTOS/src/cmsis_os.c **** }
1411:FreeRTOS/src/cmsis_os.c **** #endif /* INCLUDE_eTaskGetState */
1412:FreeRTOS/src/cmsis_os.c **** 
1413:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_eTaskGetState == 1)
1414:FreeRTOS/src/cmsis_os.c **** /**
1415:FreeRTOS/src/cmsis_os.c **** * @brief Check if a thread is already suspended or not.
1416:FreeRTOS/src/cmsis_os.c **** * @param thread_id thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
1417:FreeRTOS/src/cmsis_os.c **** * @retval status code that indicates the execution status of the function.
1418:FreeRTOS/src/cmsis_os.c **** */
1419:FreeRTOS/src/cmsis_os.c **** osStatus osThreadIsSuspended(osThreadId thread_id)
1420:FreeRTOS/src/cmsis_os.c **** {
1421:FreeRTOS/src/cmsis_os.c ****   if (eTaskGetState(thread_id) == eSuspended)
1422:FreeRTOS/src/cmsis_os.c ****     return osOK;
1423:FreeRTOS/src/cmsis_os.c ****   else
1424:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
1425:FreeRTOS/src/cmsis_os.c **** }
1426:FreeRTOS/src/cmsis_os.c **** #endif /* INCLUDE_eTaskGetState */
1427:FreeRTOS/src/cmsis_os.c **** /**
1428:FreeRTOS/src/cmsis_os.c **** * @brief  Suspend execution of a thread.
1429:FreeRTOS/src/cmsis_os.c **** * @param   thread_id   thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
1430:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1431:FreeRTOS/src/cmsis_os.c **** */
1432:FreeRTOS/src/cmsis_os.c **** osStatus osThreadSuspend (osThreadId thread_id)
1433:FreeRTOS/src/cmsis_os.c **** {
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 87


 2974              		.loc 1 1433 1 is_stmt 1 view -0
 2975              		.cfi_startproc
 2976              		@ args = 0, pretend = 0, frame = 0
 2977              		@ frame_needed = 0, uses_anonymous_args = 0
 2978              		.loc 1 1433 1 is_stmt 0 view .LVU745
 2979 0000 08B5     		push	{r3, lr}
 2980              	.LCFI69:
 2981              		.cfi_def_cfa_offset 8
 2982              		.cfi_offset 3, -8
 2983              		.cfi_offset 14, -4
1434:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_vTaskSuspend == 1)
1435:FreeRTOS/src/cmsis_os.c ****     vTaskSuspend(thread_id);
 2984              		.loc 1 1435 5 is_stmt 1 view .LVU746
 2985 0002 FFF7FEFF 		bl	vTaskSuspend
 2986              	.LVL221:
1436:FreeRTOS/src/cmsis_os.c ****   
1437:FreeRTOS/src/cmsis_os.c ****   return osOK;
 2987              		.loc 1 1437 3 view .LVU747
1438:FreeRTOS/src/cmsis_os.c **** #else
1439:FreeRTOS/src/cmsis_os.c ****   return osErrorResource;
1440:FreeRTOS/src/cmsis_os.c **** #endif
1441:FreeRTOS/src/cmsis_os.c **** }
 2988              		.loc 1 1441 1 is_stmt 0 view .LVU748
 2989 0006 0020     		movs	r0, #0
 2990 0008 08BD     		pop	{r3, pc}
 2991              		.cfi_endproc
 2992              	.LFE111:
 2994              		.section	.text.osThreadResume,"ax",%progbits
 2995              		.align	1
 2996              		.global	osThreadResume
 2997              		.syntax unified
 2998              		.thumb
 2999              		.thumb_func
 3000              		.fpu softvfp
 3002              	osThreadResume:
 3003              	.LVL222:
 3004              	.LFB112:
1442:FreeRTOS/src/cmsis_os.c **** 
1443:FreeRTOS/src/cmsis_os.c **** /**
1444:FreeRTOS/src/cmsis_os.c **** * @brief  Resume execution of a suspended thread.
1445:FreeRTOS/src/cmsis_os.c **** * @param   thread_id   thread ID obtained by \ref osThreadCreate or \ref osThreadGetId.
1446:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1447:FreeRTOS/src/cmsis_os.c **** */
1448:FreeRTOS/src/cmsis_os.c **** osStatus osThreadResume (osThreadId thread_id)
1449:FreeRTOS/src/cmsis_os.c **** {
 3005              		.loc 1 1449 1 is_stmt 1 view -0
 3006              		.cfi_startproc
 3007              		@ args = 0, pretend = 0, frame = 0
 3008              		@ frame_needed = 0, uses_anonymous_args = 0
 3009              		.loc 1 1449 1 is_stmt 0 view .LVU750
 3010 0000 10B5     		push	{r4, lr}
 3011              	.LCFI70:
 3012              		.cfi_def_cfa_offset 8
 3013              		.cfi_offset 4, -8
 3014              		.cfi_offset 14, -4
 3015 0002 0446     		mov	r4, r0
1450:FreeRTOS/src/cmsis_os.c **** #if (INCLUDE_vTaskSuspend == 1)  
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 88


1451:FreeRTOS/src/cmsis_os.c ****   if(inHandlerMode())
 3016              		.loc 1 1451 3 is_stmt 1 view .LVU751
 3017              		.loc 1 1451 6 is_stmt 0 view .LVU752
 3018 0004 FFF7FEFF 		bl	inHandlerMode
 3019              	.LVL223:
 3020              		.loc 1 1451 5 view .LVU753
 3021 0008 68B1     		cbz	r0, .L242
1452:FreeRTOS/src/cmsis_os.c ****   {
1453:FreeRTOS/src/cmsis_os.c ****     if (xTaskResumeFromISR(thread_id) == pdTRUE)
 3022              		.loc 1 1453 5 is_stmt 1 view .LVU754
 3023              		.loc 1 1453 9 is_stmt 0 view .LVU755
 3024 000a 2046     		mov	r0, r4
 3025 000c FFF7FEFF 		bl	xTaskResumeFromISR
 3026              	.LVL224:
 3027              		.loc 1 1453 8 view .LVU756
 3028 0010 0128     		cmp	r0, #1
 3029 0012 0BD1     		bne	.L243
1454:FreeRTOS/src/cmsis_os.c ****     {
1455:FreeRTOS/src/cmsis_os.c ****       portYIELD_FROM_ISR(pdTRUE);
 3030              		.loc 1 1455 7 is_stmt 1 discriminator 1 view .LVU757
 3031              		.loc 1 1455 7 discriminator 1 view .LVU758
 3032 0014 064B     		ldr	r3, .L245
 3033 0016 4FF08052 		mov	r2, #268435456
 3034 001a 1A60     		str	r2, [r3]
 3035              		.loc 1 1455 7 discriminator 1 view .LVU759
 3036              		.syntax unified
 3037              	@ 1455 "FreeRTOS/src/cmsis_os.c" 1
 3038 001c BFF34F8F 		dsb
 3039              	@ 0 "" 2
 3040              		.loc 1 1455 7 discriminator 1 view .LVU760
 3041              	@ 1455 "FreeRTOS/src/cmsis_os.c" 1
 3042 0020 BFF36F8F 		isb
 3043              	@ 0 "" 2
 3044              		.thumb
 3045              		.syntax unified
 3046 0024 02E0     		b	.L243
 3047              	.L242:
1456:FreeRTOS/src/cmsis_os.c ****     }
1457:FreeRTOS/src/cmsis_os.c ****   }
1458:FreeRTOS/src/cmsis_os.c ****   else
1459:FreeRTOS/src/cmsis_os.c ****   {
1460:FreeRTOS/src/cmsis_os.c ****     vTaskResume(thread_id);
 3048              		.loc 1 1460 5 view .LVU761
 3049 0026 2046     		mov	r0, r4
 3050 0028 FFF7FEFF 		bl	vTaskResume
 3051              	.LVL225:
 3052              	.L243:
1461:FreeRTOS/src/cmsis_os.c ****   }
1462:FreeRTOS/src/cmsis_os.c ****   return osOK;
 3053              		.loc 1 1462 3 view .LVU762
1463:FreeRTOS/src/cmsis_os.c **** #else
1464:FreeRTOS/src/cmsis_os.c ****   return osErrorResource;
1465:FreeRTOS/src/cmsis_os.c **** #endif
1466:FreeRTOS/src/cmsis_os.c **** }
 3054              		.loc 1 1466 1 is_stmt 0 view .LVU763
 3055 002c 0020     		movs	r0, #0
 3056 002e 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 89


 3057              	.LVL226:
 3058              	.L246:
 3059              		.loc 1 1466 1 view .LVU764
 3060              		.align	2
 3061              	.L245:
 3062 0030 04ED00E0 		.word	-536810236
 3063              		.cfi_endproc
 3064              	.LFE112:
 3066              		.section	.text.osThreadSuspendAll,"ax",%progbits
 3067              		.align	1
 3068              		.global	osThreadSuspendAll
 3069              		.syntax unified
 3070              		.thumb
 3071              		.thumb_func
 3072              		.fpu softvfp
 3074              	osThreadSuspendAll:
 3075              	.LFB113:
1467:FreeRTOS/src/cmsis_os.c **** 
1468:FreeRTOS/src/cmsis_os.c **** /**
1469:FreeRTOS/src/cmsis_os.c **** * @brief  Suspend execution of a all active threads.
1470:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1471:FreeRTOS/src/cmsis_os.c **** */
1472:FreeRTOS/src/cmsis_os.c **** osStatus osThreadSuspendAll (void)
1473:FreeRTOS/src/cmsis_os.c **** {
 3076              		.loc 1 1473 1 is_stmt 1 view -0
 3077              		.cfi_startproc
 3078              		@ args = 0, pretend = 0, frame = 0
 3079              		@ frame_needed = 0, uses_anonymous_args = 0
 3080 0000 08B5     		push	{r3, lr}
 3081              	.LCFI71:
 3082              		.cfi_def_cfa_offset 8
 3083              		.cfi_offset 3, -8
 3084              		.cfi_offset 14, -4
1474:FreeRTOS/src/cmsis_os.c ****   vTaskSuspendAll();
 3085              		.loc 1 1474 3 view .LVU766
 3086 0002 FFF7FEFF 		bl	vTaskSuspendAll
 3087              	.LVL227:
1475:FreeRTOS/src/cmsis_os.c ****   
1476:FreeRTOS/src/cmsis_os.c ****   return osOK;
 3088              		.loc 1 1476 3 view .LVU767
1477:FreeRTOS/src/cmsis_os.c **** }
 3089              		.loc 1 1477 1 is_stmt 0 view .LVU768
 3090 0006 0020     		movs	r0, #0
 3091 0008 08BD     		pop	{r3, pc}
 3092              		.cfi_endproc
 3093              	.LFE113:
 3095              		.section	.text.osThreadResumeAll,"ax",%progbits
 3096              		.align	1
 3097              		.global	osThreadResumeAll
 3098              		.syntax unified
 3099              		.thumb
 3100              		.thumb_func
 3101              		.fpu softvfp
 3103              	osThreadResumeAll:
 3104              	.LFB114:
1478:FreeRTOS/src/cmsis_os.c **** 
1479:FreeRTOS/src/cmsis_os.c **** /**
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 90


1480:FreeRTOS/src/cmsis_os.c **** * @brief  Resume execution of a all suspended threads.
1481:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1482:FreeRTOS/src/cmsis_os.c **** */
1483:FreeRTOS/src/cmsis_os.c **** osStatus osThreadResumeAll (void)
1484:FreeRTOS/src/cmsis_os.c **** {
 3105              		.loc 1 1484 1 is_stmt 1 view -0
 3106              		.cfi_startproc
 3107              		@ args = 0, pretend = 0, frame = 0
 3108              		@ frame_needed = 0, uses_anonymous_args = 0
 3109 0000 08B5     		push	{r3, lr}
 3110              	.LCFI72:
 3111              		.cfi_def_cfa_offset 8
 3112              		.cfi_offset 3, -8
 3113              		.cfi_offset 14, -4
1485:FreeRTOS/src/cmsis_os.c ****   if (xTaskResumeAll() == pdTRUE)
 3114              		.loc 1 1485 3 view .LVU770
 3115              		.loc 1 1485 7 is_stmt 0 view .LVU771
 3116 0002 FFF7FEFF 		bl	xTaskResumeAll
 3117              	.LVL228:
 3118              		.loc 1 1485 6 view .LVU772
 3119 0006 0128     		cmp	r0, #1
 3120 0008 01D0     		beq	.L253
1486:FreeRTOS/src/cmsis_os.c ****     return osOK;
1487:FreeRTOS/src/cmsis_os.c ****   else
1488:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
 3121              		.loc 1 1488 12 view .LVU773
 3122 000a FF20     		movs	r0, #255
 3123              	.L249:
1489:FreeRTOS/src/cmsis_os.c ****   
1490:FreeRTOS/src/cmsis_os.c **** }
 3124              		.loc 1 1490 1 view .LVU774
 3125 000c 08BD     		pop	{r3, pc}
 3126              	.L253:
1486:FreeRTOS/src/cmsis_os.c ****     return osOK;
 3127              		.loc 1 1486 12 view .LVU775
 3128 000e 0020     		movs	r0, #0
 3129 0010 FCE7     		b	.L249
 3130              		.cfi_endproc
 3131              	.LFE114:
 3133              		.section	.text.osDelayUntil,"ax",%progbits
 3134              		.align	1
 3135              		.global	osDelayUntil
 3136              		.syntax unified
 3137              		.thumb
 3138              		.thumb_func
 3139              		.fpu softvfp
 3141              	osDelayUntil:
 3142              	.LVL229:
 3143              	.LFB115:
1491:FreeRTOS/src/cmsis_os.c **** 
1492:FreeRTOS/src/cmsis_os.c **** /**
1493:FreeRTOS/src/cmsis_os.c **** * @brief  Delay a task until a specified time
1494:FreeRTOS/src/cmsis_os.c **** * @param   PreviousWakeTime   Pointer to a variable that holds the time at which the 
1495:FreeRTOS/src/cmsis_os.c **** *          task was last unblocked. PreviousWakeTime must be initialised with the current time
1496:FreeRTOS/src/cmsis_os.c **** *          prior to its first use (PreviousWakeTime = osKernelSysTick() )
1497:FreeRTOS/src/cmsis_os.c **** * @param   millisec    time delay value
1498:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 91


1499:FreeRTOS/src/cmsis_os.c **** */
1500:FreeRTOS/src/cmsis_os.c **** osStatus osDelayUntil (uint32_t *PreviousWakeTime, uint32_t millisec)
1501:FreeRTOS/src/cmsis_os.c **** {
 3144              		.loc 1 1501 1 is_stmt 1 view -0
 3145              		.cfi_startproc
 3146              		@ args = 0, pretend = 0, frame = 0
 3147              		@ frame_needed = 0, uses_anonymous_args = 0
 3148              		.loc 1 1501 1 is_stmt 0 view .LVU777
 3149 0000 08B5     		push	{r3, lr}
 3150              	.LCFI73:
 3151              		.cfi_def_cfa_offset 8
 3152              		.cfi_offset 3, -8
 3153              		.cfi_offset 14, -4
1502:FreeRTOS/src/cmsis_os.c **** #if INCLUDE_vTaskDelayUntil
1503:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks = (millisec / portTICK_PERIOD_MS);
 3154              		.loc 1 1503 3 is_stmt 1 view .LVU778
 3155              	.LVL230:
1504:FreeRTOS/src/cmsis_os.c ****   vTaskDelayUntil((TickType_t *) PreviousWakeTime, ticks ? ticks : 1);
 3156              		.loc 1 1504 3 view .LVU779
 3157 0002 0B46     		mov	r3, r1
 3158 0004 01B9     		cbnz	r1, .L255
 3159 0006 0123     		movs	r3, #1
 3160              	.L255:
 3161              		.loc 1 1504 3 is_stmt 0 discriminator 4 view .LVU780
 3162 0008 1946     		mov	r1, r3
 3163              	.LVL231:
 3164              		.loc 1 1504 3 discriminator 4 view .LVU781
 3165 000a FFF7FEFF 		bl	vTaskDelayUntil
 3166              	.LVL232:
1505:FreeRTOS/src/cmsis_os.c ****   
1506:FreeRTOS/src/cmsis_os.c ****   return osOK;
 3167              		.loc 1 1506 3 is_stmt 1 discriminator 4 view .LVU782
1507:FreeRTOS/src/cmsis_os.c **** #else
1508:FreeRTOS/src/cmsis_os.c ****   (void) millisec;
1509:FreeRTOS/src/cmsis_os.c ****   (void) PreviousWakeTime;
1510:FreeRTOS/src/cmsis_os.c ****   
1511:FreeRTOS/src/cmsis_os.c ****   return osErrorResource;
1512:FreeRTOS/src/cmsis_os.c **** #endif
1513:FreeRTOS/src/cmsis_os.c **** }
 3168              		.loc 1 1513 1 is_stmt 0 discriminator 4 view .LVU783
 3169 000e 0020     		movs	r0, #0
 3170 0010 08BD     		pop	{r3, pc}
 3171              		.cfi_endproc
 3172              	.LFE115:
 3174              		.section	.text.osAbortDelay,"ax",%progbits
 3175              		.align	1
 3176              		.global	osAbortDelay
 3177              		.syntax unified
 3178              		.thumb
 3179              		.thumb_func
 3180              		.fpu softvfp
 3182              	osAbortDelay:
 3183              	.LVL233:
 3184              	.LFB116:
1514:FreeRTOS/src/cmsis_os.c **** 
1515:FreeRTOS/src/cmsis_os.c **** /**
1516:FreeRTOS/src/cmsis_os.c **** * @brief   Abort the delay for a specific thread
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 92


1517:FreeRTOS/src/cmsis_os.c **** * @param   thread_id   thread ID obtained by \ref osThreadCreate or \ref osThreadGetId   
1518:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1519:FreeRTOS/src/cmsis_os.c **** */
1520:FreeRTOS/src/cmsis_os.c **** osStatus osAbortDelay(osThreadId thread_id)
1521:FreeRTOS/src/cmsis_os.c **** {
 3185              		.loc 1 1521 1 is_stmt 1 view -0
 3186              		.cfi_startproc
 3187              		@ args = 0, pretend = 0, frame = 0
 3188              		@ frame_needed = 0, uses_anonymous_args = 0
 3189              		@ link register save eliminated.
1522:FreeRTOS/src/cmsis_os.c **** #if INCLUDE_xTaskAbortDelay
1523:FreeRTOS/src/cmsis_os.c ****   
1524:FreeRTOS/src/cmsis_os.c ****   xTaskAbortDelay(thread_id);
1525:FreeRTOS/src/cmsis_os.c ****   
1526:FreeRTOS/src/cmsis_os.c ****   return osOK;
1527:FreeRTOS/src/cmsis_os.c **** #else
1528:FreeRTOS/src/cmsis_os.c ****   (void) thread_id;
 3190              		.loc 1 1528 3 view .LVU785
1529:FreeRTOS/src/cmsis_os.c ****   
1530:FreeRTOS/src/cmsis_os.c ****   return osErrorResource;
 3191              		.loc 1 1530 3 view .LVU786
1531:FreeRTOS/src/cmsis_os.c **** #endif
1532:FreeRTOS/src/cmsis_os.c **** }
 3192              		.loc 1 1532 1 is_stmt 0 view .LVU787
 3193 0000 8120     		movs	r0, #129
 3194              	.LVL234:
 3195              		.loc 1 1532 1 view .LVU788
 3196 0002 7047     		bx	lr
 3197              		.cfi_endproc
 3198              	.LFE116:
 3200              		.section	.text.osThreadList,"ax",%progbits
 3201              		.align	1
 3202              		.global	osThreadList
 3203              		.syntax unified
 3204              		.thumb
 3205              		.thumb_func
 3206              		.fpu softvfp
 3208              	osThreadList:
 3209              	.LVL235:
 3210              	.LFB117:
1533:FreeRTOS/src/cmsis_os.c **** 
1534:FreeRTOS/src/cmsis_os.c **** /**
1535:FreeRTOS/src/cmsis_os.c **** * @brief   Lists all the current threads, along with their current state 
1536:FreeRTOS/src/cmsis_os.c **** *          and stack usage high water mark.
1537:FreeRTOS/src/cmsis_os.c **** * @param   buffer   A buffer into which the above mentioned details
1538:FreeRTOS/src/cmsis_os.c **** *          will be written
1539:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1540:FreeRTOS/src/cmsis_os.c **** */
1541:FreeRTOS/src/cmsis_os.c **** osStatus osThreadList (uint8_t *buffer)
1542:FreeRTOS/src/cmsis_os.c **** {
 3211              		.loc 1 1542 1 is_stmt 1 view -0
 3212              		.cfi_startproc
 3213              		@ args = 0, pretend = 0, frame = 0
 3214              		@ frame_needed = 0, uses_anonymous_args = 0
 3215              		@ link register save eliminated.
1543:FreeRTOS/src/cmsis_os.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) )
1544:FreeRTOS/src/cmsis_os.c ****   vTaskList((char *)buffer);
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 93


1545:FreeRTOS/src/cmsis_os.c **** #endif
1546:FreeRTOS/src/cmsis_os.c ****   return osOK;
 3216              		.loc 1 1546 3 view .LVU790
1547:FreeRTOS/src/cmsis_os.c **** }
 3217              		.loc 1 1547 1 is_stmt 0 view .LVU791
 3218 0000 0020     		movs	r0, #0
 3219              	.LVL236:
 3220              		.loc 1 1547 1 view .LVU792
 3221 0002 7047     		bx	lr
 3222              		.cfi_endproc
 3223              	.LFE117:
 3225              		.section	.text.osMessagePeek,"ax",%progbits
 3226              		.align	1
 3227              		.global	osMessagePeek
 3228              		.syntax unified
 3229              		.thumb
 3230              		.thumb_func
 3231              		.fpu softvfp
 3233              	osMessagePeek:
 3234              	.LVL237:
 3235              	.LFB118:
1548:FreeRTOS/src/cmsis_os.c **** 
1549:FreeRTOS/src/cmsis_os.c **** /**
1550:FreeRTOS/src/cmsis_os.c **** * @brief  Receive an item from a queue without removing the item from the queue.
1551:FreeRTOS/src/cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
1552:FreeRTOS/src/cmsis_os.c **** * @param  millisec  timeout value or 0 in case of no time-out.
1553:FreeRTOS/src/cmsis_os.c **** * @retval event information that includes status code.
1554:FreeRTOS/src/cmsis_os.c **** */
1555:FreeRTOS/src/cmsis_os.c **** osEvent osMessagePeek (osMessageQId queue_id, uint32_t millisec)
1556:FreeRTOS/src/cmsis_os.c **** {
 3236              		.loc 1 1556 1 is_stmt 1 view -0
 3237              		.cfi_startproc
 3238              		@ args = 0, pretend = 0, frame = 16
 3239              		@ frame_needed = 0, uses_anonymous_args = 0
 3240              		.loc 1 1556 1 is_stmt 0 view .LVU794
 3241 0000 30B5     		push	{r4, r5, lr}
 3242              	.LCFI74:
 3243              		.cfi_def_cfa_offset 12
 3244              		.cfi_offset 4, -12
 3245              		.cfi_offset 5, -8
 3246              		.cfi_offset 14, -4
 3247 0002 85B0     		sub	sp, sp, #20
 3248              	.LCFI75:
 3249              		.cfi_def_cfa_offset 32
 3250 0004 0446     		mov	r4, r0
1557:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
 3251              		.loc 1 1557 3 is_stmt 1 view .LVU795
1558:FreeRTOS/src/cmsis_os.c ****   osEvent event;
 3252              		.loc 1 1558 3 view .LVU796
1559:FreeRTOS/src/cmsis_os.c ****   
1560:FreeRTOS/src/cmsis_os.c ****   event.def.message_id = queue_id;
 3253              		.loc 1 1560 3 view .LVU797
 3254              		.loc 1 1560 24 is_stmt 0 view .LVU798
 3255 0006 0391     		str	r1, [sp, #12]
1561:FreeRTOS/src/cmsis_os.c ****   
1562:FreeRTOS/src/cmsis_os.c ****   if (queue_id == NULL) {
 3256              		.loc 1 1562 3 is_stmt 1 view .LVU799
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 94


 3257              		.loc 1 1562 6 is_stmt 0 view .LVU800
 3258 0008 A9B1     		cbz	r1, .L270
 3259 000a 0846     		mov	r0, r1
 3260              	.LVL238:
 3261              		.loc 1 1562 6 view .LVU801
 3262 000c 1546     		mov	r5, r2
1563:FreeRTOS/src/cmsis_os.c ****     event.status = osErrorParameter;
1564:FreeRTOS/src/cmsis_os.c ****     return event;
1565:FreeRTOS/src/cmsis_os.c ****   }
1566:FreeRTOS/src/cmsis_os.c ****   
1567:FreeRTOS/src/cmsis_os.c ****   ticks = 0;
 3263              		.loc 1 1567 3 is_stmt 1 view .LVU802
 3264              	.LVL239:
1568:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) {
 3265              		.loc 1 1568 3 view .LVU803
 3266              		.loc 1 1568 6 is_stmt 0 view .LVU804
 3267 000e B2F1FF3F 		cmp	r2, #-1
 3268 0012 18D0     		beq	.L271
 3269              	.L263:
 3270              	.LVL240:
1569:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
1570:FreeRTOS/src/cmsis_os.c ****   }
1571:FreeRTOS/src/cmsis_os.c ****   else if (millisec != 0) {
1572:FreeRTOS/src/cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
1573:FreeRTOS/src/cmsis_os.c ****     if (ticks == 0) {
1574:FreeRTOS/src/cmsis_os.c ****       ticks = 1;
1575:FreeRTOS/src/cmsis_os.c ****     }
1576:FreeRTOS/src/cmsis_os.c ****   }
1577:FreeRTOS/src/cmsis_os.c ****   
1578:FreeRTOS/src/cmsis_os.c ****   if (xQueuePeek(queue_id, &event.value.v, ticks) == pdTRUE) 
 3271              		.loc 1 1578 3 is_stmt 1 view .LVU805
 3272              		.loc 1 1578 7 is_stmt 0 view .LVU806
 3273 0014 2A46     		mov	r2, r5
 3274              	.LVL241:
 3275              		.loc 1 1578 7 view .LVU807
 3276 0016 02A9     		add	r1, sp, #8
 3277              	.LVL242:
 3278              		.loc 1 1578 7 view .LVU808
 3279 0018 FFF7FEFF 		bl	xQueuePeek
 3280              	.LVL243:
 3281              		.loc 1 1578 6 view .LVU809
 3282 001c 0128     		cmp	r0, #1
 3283 001e 15D0     		beq	.L272
1579:FreeRTOS/src/cmsis_os.c ****   {
1580:FreeRTOS/src/cmsis_os.c ****     /* We have mail */
1581:FreeRTOS/src/cmsis_os.c ****     event.status = osEventMessage;
1582:FreeRTOS/src/cmsis_os.c ****   }
1583:FreeRTOS/src/cmsis_os.c ****   else 
1584:FreeRTOS/src/cmsis_os.c ****   {
1585:FreeRTOS/src/cmsis_os.c ****     event.status = (ticks == 0) ? osOK : osEventTimeout;
 3284              		.loc 1 1585 5 is_stmt 1 view .LVU810
 3285              		.loc 1 1585 40 is_stmt 0 view .LVU811
 3286 0020 BDB9     		cbnz	r5, .L268
 3287 0022 0023     		movs	r3, #0
 3288              	.L266:
 3289              		.loc 1 1585 18 discriminator 4 view .LVU812
 3290 0024 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 95


 3291              	.L265:
1586:FreeRTOS/src/cmsis_os.c ****   }
1587:FreeRTOS/src/cmsis_os.c ****   
1588:FreeRTOS/src/cmsis_os.c ****   return event;
 3292              		.loc 1 1588 3 is_stmt 1 view .LVU813
 3293              		.loc 1 1588 10 is_stmt 0 view .LVU814
 3294 0026 04AB     		add	r3, sp, #16
 3295 0028 13E90700 		ldmdb	r3, {r0, r1, r2}
 3296 002c 84E80700 		stm	r4, {r0, r1, r2}
 3297              	.LVL244:
 3298              	.L260:
1589:FreeRTOS/src/cmsis_os.c **** }
 3299              		.loc 1 1589 1 view .LVU815
 3300 0030 2046     		mov	r0, r4
 3301 0032 05B0     		add	sp, sp, #20
 3302              	.LCFI76:
 3303              		.cfi_remember_state
 3304              		.cfi_def_cfa_offset 12
 3305              		@ sp needed
 3306 0034 30BD     		pop	{r4, r5, pc}
 3307              	.LVL245:
 3308              	.L270:
 3309              	.LCFI77:
 3310              		.cfi_restore_state
1563:FreeRTOS/src/cmsis_os.c ****     return event;
 3311              		.loc 1 1563 5 is_stmt 1 view .LVU816
1563:FreeRTOS/src/cmsis_os.c ****     return event;
 3312              		.loc 1 1563 18 is_stmt 0 view .LVU817
 3313 0036 8023     		movs	r3, #128
 3314 0038 0193     		str	r3, [sp, #4]
1564:FreeRTOS/src/cmsis_os.c ****   }
 3315              		.loc 1 1564 5 is_stmt 1 view .LVU818
1564:FreeRTOS/src/cmsis_os.c ****   }
 3316              		.loc 1 1564 12 is_stmt 0 view .LVU819
 3317 003a 04AB     		add	r3, sp, #16
 3318 003c 13E90700 		ldmdb	r3, {r0, r1, r2}
 3319              	.LVL246:
1564:FreeRTOS/src/cmsis_os.c ****   }
 3320              		.loc 1 1564 12 view .LVU820
 3321 0040 84E80700 		stm	r4, {r0, r1, r2}
 3322 0044 F4E7     		b	.L260
 3323              	.LVL247:
 3324              	.L271:
1569:FreeRTOS/src/cmsis_os.c ****   }
 3325              		.loc 1 1569 11 view .LVU821
 3326 0046 4FF0FF35 		mov	r5, #-1
 3327 004a E3E7     		b	.L263
 3328              	.LVL248:
 3329              	.L272:
1581:FreeRTOS/src/cmsis_os.c ****   }
 3330              		.loc 1 1581 5 is_stmt 1 view .LVU822
1581:FreeRTOS/src/cmsis_os.c ****   }
 3331              		.loc 1 1581 18 is_stmt 0 view .LVU823
 3332 004c 1023     		movs	r3, #16
 3333 004e 0193     		str	r3, [sp, #4]
 3334 0050 E9E7     		b	.L265
 3335              	.L268:
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 96


1585:FreeRTOS/src/cmsis_os.c ****   }
 3336              		.loc 1 1585 40 view .LVU824
 3337 0052 4023     		movs	r3, #64
 3338 0054 E6E7     		b	.L266
 3339              		.cfi_endproc
 3340              	.LFE118:
 3342              		.section	.text.osMessageWaiting,"ax",%progbits
 3343              		.align	1
 3344              		.global	osMessageWaiting
 3345              		.syntax unified
 3346              		.thumb
 3347              		.thumb_func
 3348              		.fpu softvfp
 3350              	osMessageWaiting:
 3351              	.LVL249:
 3352              	.LFB119:
1590:FreeRTOS/src/cmsis_os.c **** 
1591:FreeRTOS/src/cmsis_os.c **** /**
1592:FreeRTOS/src/cmsis_os.c **** * @brief  Get the number of messaged stored in a queue.
1593:FreeRTOS/src/cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
1594:FreeRTOS/src/cmsis_os.c **** * @retval number of messages stored in a queue.
1595:FreeRTOS/src/cmsis_os.c **** */
1596:FreeRTOS/src/cmsis_os.c **** uint32_t osMessageWaiting(osMessageQId queue_id)
1597:FreeRTOS/src/cmsis_os.c **** {
 3353              		.loc 1 1597 1 is_stmt 1 view -0
 3354              		.cfi_startproc
 3355              		@ args = 0, pretend = 0, frame = 0
 3356              		@ frame_needed = 0, uses_anonymous_args = 0
 3357              		.loc 1 1597 1 is_stmt 0 view .LVU826
 3358 0000 10B5     		push	{r4, lr}
 3359              	.LCFI78:
 3360              		.cfi_def_cfa_offset 8
 3361              		.cfi_offset 4, -8
 3362              		.cfi_offset 14, -4
 3363 0002 0446     		mov	r4, r0
1598:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 3364              		.loc 1 1598 3 is_stmt 1 view .LVU827
 3365              		.loc 1 1598 7 is_stmt 0 view .LVU828
 3366 0004 FFF7FEFF 		bl	inHandlerMode
 3367              	.LVL250:
 3368              		.loc 1 1598 6 view .LVU829
 3369 0008 18B1     		cbz	r0, .L274
1599:FreeRTOS/src/cmsis_os.c ****     return uxQueueMessagesWaitingFromISR(queue_id);
 3370              		.loc 1 1599 5 is_stmt 1 view .LVU830
 3371              		.loc 1 1599 12 is_stmt 0 view .LVU831
 3372 000a 2046     		mov	r0, r4
 3373 000c FFF7FEFF 		bl	uxQueueMessagesWaitingFromISR
 3374              	.LVL251:
 3375              	.L273:
1600:FreeRTOS/src/cmsis_os.c ****   }
1601:FreeRTOS/src/cmsis_os.c ****   else
1602:FreeRTOS/src/cmsis_os.c ****   {
1603:FreeRTOS/src/cmsis_os.c ****     return uxQueueMessagesWaiting(queue_id);
1604:FreeRTOS/src/cmsis_os.c ****   }
1605:FreeRTOS/src/cmsis_os.c **** }
 3376              		.loc 1 1605 1 view .LVU832
 3377 0010 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 97


 3378              	.LVL252:
 3379              	.L274:
1603:FreeRTOS/src/cmsis_os.c ****   }
 3380              		.loc 1 1603 5 is_stmt 1 view .LVU833
1603:FreeRTOS/src/cmsis_os.c ****   }
 3381              		.loc 1 1603 12 is_stmt 0 view .LVU834
 3382 0012 2046     		mov	r0, r4
 3383 0014 FFF7FEFF 		bl	uxQueueMessagesWaiting
 3384              	.LVL253:
 3385 0018 FAE7     		b	.L273
 3386              		.cfi_endproc
 3387              	.LFE119:
 3389              		.section	.text.osMessageAvailableSpace,"ax",%progbits
 3390              		.align	1
 3391              		.global	osMessageAvailableSpace
 3392              		.syntax unified
 3393              		.thumb
 3394              		.thumb_func
 3395              		.fpu softvfp
 3397              	osMessageAvailableSpace:
 3398              	.LVL254:
 3399              	.LFB120:
1606:FreeRTOS/src/cmsis_os.c **** 
1607:FreeRTOS/src/cmsis_os.c **** /**
1608:FreeRTOS/src/cmsis_os.c **** * @brief  Get the available space in a message queue.
1609:FreeRTOS/src/cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
1610:FreeRTOS/src/cmsis_os.c **** * @retval available space in a message queue.
1611:FreeRTOS/src/cmsis_os.c **** */
1612:FreeRTOS/src/cmsis_os.c **** uint32_t osMessageAvailableSpace(osMessageQId queue_id)  
1613:FreeRTOS/src/cmsis_os.c **** {
 3400              		.loc 1 1613 1 is_stmt 1 view -0
 3401              		.cfi_startproc
 3402              		@ args = 0, pretend = 0, frame = 0
 3403              		@ frame_needed = 0, uses_anonymous_args = 0
 3404              		.loc 1 1613 1 is_stmt 0 view .LVU836
 3405 0000 08B5     		push	{r3, lr}
 3406              	.LCFI79:
 3407              		.cfi_def_cfa_offset 8
 3408              		.cfi_offset 3, -8
 3409              		.cfi_offset 14, -4
1614:FreeRTOS/src/cmsis_os.c ****   return uxQueueSpacesAvailable(queue_id);
 3410              		.loc 1 1614 3 is_stmt 1 view .LVU837
 3411              		.loc 1 1614 10 is_stmt 0 view .LVU838
 3412 0002 FFF7FEFF 		bl	uxQueueSpacesAvailable
 3413              	.LVL255:
1615:FreeRTOS/src/cmsis_os.c **** }
 3414              		.loc 1 1615 1 view .LVU839
 3415 0006 08BD     		pop	{r3, pc}
 3416              		.cfi_endproc
 3417              	.LFE120:
 3419              		.section	.text.osMessageDelete,"ax",%progbits
 3420              		.align	1
 3421              		.global	osMessageDelete
 3422              		.syntax unified
 3423              		.thumb
 3424              		.thumb_func
 3425              		.fpu softvfp
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 98


 3427              	osMessageDelete:
 3428              	.LVL256:
 3429              	.LFB121:
1616:FreeRTOS/src/cmsis_os.c **** 
1617:FreeRTOS/src/cmsis_os.c **** /**
1618:FreeRTOS/src/cmsis_os.c **** * @brief Delete a Message Queue
1619:FreeRTOS/src/cmsis_os.c **** * @param  queue_id  message queue ID obtained with \ref osMessageCreate.
1620:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1621:FreeRTOS/src/cmsis_os.c **** */
1622:FreeRTOS/src/cmsis_os.c **** osStatus osMessageDelete (osMessageQId queue_id)
1623:FreeRTOS/src/cmsis_os.c **** {
 3430              		.loc 1 1623 1 is_stmt 1 view -0
 3431              		.cfi_startproc
 3432              		@ args = 0, pretend = 0, frame = 0
 3433              		@ frame_needed = 0, uses_anonymous_args = 0
 3434              		.loc 1 1623 1 is_stmt 0 view .LVU841
 3435 0000 10B5     		push	{r4, lr}
 3436              	.LCFI80:
 3437              		.cfi_def_cfa_offset 8
 3438              		.cfi_offset 4, -8
 3439              		.cfi_offset 14, -4
 3440 0002 0446     		mov	r4, r0
1624:FreeRTOS/src/cmsis_os.c ****   if (inHandlerMode()) {
 3441              		.loc 1 1624 3 is_stmt 1 view .LVU842
 3442              		.loc 1 1624 7 is_stmt 0 view .LVU843
 3443 0004 FFF7FEFF 		bl	inHandlerMode
 3444              	.LVL257:
 3445              		.loc 1 1624 6 view .LVU844
 3446 0008 20B9     		cbnz	r0, .L281
1625:FreeRTOS/src/cmsis_os.c ****     return osErrorISR;
1626:FreeRTOS/src/cmsis_os.c ****   }
1627:FreeRTOS/src/cmsis_os.c **** 
1628:FreeRTOS/src/cmsis_os.c ****   vQueueDelete(queue_id);
 3447              		.loc 1 1628 3 is_stmt 1 view .LVU845
 3448 000a 2046     		mov	r0, r4
 3449 000c FFF7FEFF 		bl	vQueueDelete
 3450              	.LVL258:
1629:FreeRTOS/src/cmsis_os.c **** 
1630:FreeRTOS/src/cmsis_os.c ****   return osOK; 
 3451              		.loc 1 1630 3 view .LVU846
 3452              		.loc 1 1630 10 is_stmt 0 view .LVU847
 3453 0010 0020     		movs	r0, #0
 3454              	.L279:
1631:FreeRTOS/src/cmsis_os.c **** }
 3455              		.loc 1 1631 1 view .LVU848
 3456 0012 10BD     		pop	{r4, pc}
 3457              	.LVL259:
 3458              	.L281:
1625:FreeRTOS/src/cmsis_os.c ****     return osErrorISR;
 3459              		.loc 1 1625 12 view .LVU849
 3460 0014 8220     		movs	r0, #130
 3461 0016 FCE7     		b	.L279
 3462              		.cfi_endproc
 3463              	.LFE121:
 3465              		.section	.text.osRecursiveMutexCreate,"ax",%progbits
 3466              		.align	1
 3467              		.global	osRecursiveMutexCreate
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 99


 3468              		.syntax unified
 3469              		.thumb
 3470              		.thumb_func
 3471              		.fpu softvfp
 3473              	osRecursiveMutexCreate:
 3474              	.LVL260:
 3475              	.LFB122:
1632:FreeRTOS/src/cmsis_os.c **** 
1633:FreeRTOS/src/cmsis_os.c **** /**
1634:FreeRTOS/src/cmsis_os.c **** * @brief  Create and Initialize a Recursive Mutex
1635:FreeRTOS/src/cmsis_os.c **** * @param  mutex_def     mutex definition referenced with \ref osMutex.
1636:FreeRTOS/src/cmsis_os.c **** * @retval  mutex ID for reference by other functions or NULL in case of error..
1637:FreeRTOS/src/cmsis_os.c **** */
1638:FreeRTOS/src/cmsis_os.c **** osMutexId osRecursiveMutexCreate (const osMutexDef_t *mutex_def)
1639:FreeRTOS/src/cmsis_os.c **** {
 3476              		.loc 1 1639 1 is_stmt 1 view -0
 3477              		.cfi_startproc
 3478              		@ args = 0, pretend = 0, frame = 0
 3479              		@ frame_needed = 0, uses_anonymous_args = 0
 3480              		@ link register save eliminated.
1640:FreeRTOS/src/cmsis_os.c **** #if (configUSE_RECURSIVE_MUTEXES == 1)
1641:FreeRTOS/src/cmsis_os.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
1642:FreeRTOS/src/cmsis_os.c **** 
1643:FreeRTOS/src/cmsis_os.c ****   if (mutex_def->controlblock != NULL){
1644:FreeRTOS/src/cmsis_os.c ****     return xSemaphoreCreateRecursiveMutexStatic( mutex_def->controlblock );
1645:FreeRTOS/src/cmsis_os.c ****   }
1646:FreeRTOS/src/cmsis_os.c ****   else {
1647:FreeRTOS/src/cmsis_os.c ****     return xSemaphoreCreateRecursiveMutex();
1648:FreeRTOS/src/cmsis_os.c ****   }
1649:FreeRTOS/src/cmsis_os.c **** #elif ( configSUPPORT_STATIC_ALLOCATION == 1 )
1650:FreeRTOS/src/cmsis_os.c ****   return xSemaphoreCreateRecursiveMutexStatic( mutex_def->controlblock );
1651:FreeRTOS/src/cmsis_os.c **** #else 
1652:FreeRTOS/src/cmsis_os.c ****   return xSemaphoreCreateRecursiveMutex();
1653:FreeRTOS/src/cmsis_os.c **** #endif
1654:FreeRTOS/src/cmsis_os.c **** #else
1655:FreeRTOS/src/cmsis_os.c ****   return NULL;
 3481              		.loc 1 1655 3 view .LVU851
1656:FreeRTOS/src/cmsis_os.c **** #endif	
1657:FreeRTOS/src/cmsis_os.c **** }
 3482              		.loc 1 1657 1 is_stmt 0 view .LVU852
 3483 0000 0020     		movs	r0, #0
 3484              	.LVL261:
 3485              		.loc 1 1657 1 view .LVU853
 3486 0002 7047     		bx	lr
 3487              		.cfi_endproc
 3488              	.LFE122:
 3490              		.section	.text.osRecursiveMutexRelease,"ax",%progbits
 3491              		.align	1
 3492              		.global	osRecursiveMutexRelease
 3493              		.syntax unified
 3494              		.thumb
 3495              		.thumb_func
 3496              		.fpu softvfp
 3498              	osRecursiveMutexRelease:
 3499              	.LVL262:
 3500              	.LFB123:
1658:FreeRTOS/src/cmsis_os.c **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 100


1659:FreeRTOS/src/cmsis_os.c **** /**
1660:FreeRTOS/src/cmsis_os.c **** * @brief  Release a Recursive Mutex
1661:FreeRTOS/src/cmsis_os.c **** * @param   mutex_id      mutex ID obtained by \ref osRecursiveMutexCreate.
1662:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1663:FreeRTOS/src/cmsis_os.c **** */
1664:FreeRTOS/src/cmsis_os.c **** osStatus osRecursiveMutexRelease (osMutexId mutex_id)
1665:FreeRTOS/src/cmsis_os.c **** {
 3501              		.loc 1 1665 1 is_stmt 1 view -0
 3502              		.cfi_startproc
 3503              		@ args = 0, pretend = 0, frame = 0
 3504              		@ frame_needed = 0, uses_anonymous_args = 0
 3505              		@ link register save eliminated.
1666:FreeRTOS/src/cmsis_os.c **** #if (configUSE_RECURSIVE_MUTEXES == 1)
1667:FreeRTOS/src/cmsis_os.c ****   osStatus result = osOK;
1668:FreeRTOS/src/cmsis_os.c ****  
1669:FreeRTOS/src/cmsis_os.c ****   if (xSemaphoreGiveRecursive(mutex_id) != pdTRUE) 
1670:FreeRTOS/src/cmsis_os.c ****   {
1671:FreeRTOS/src/cmsis_os.c ****     result = osErrorOS;
1672:FreeRTOS/src/cmsis_os.c ****   }
1673:FreeRTOS/src/cmsis_os.c ****   return result;
1674:FreeRTOS/src/cmsis_os.c **** #else
1675:FreeRTOS/src/cmsis_os.c **** 	return osErrorResource;
 3506              		.loc 1 1675 2 view .LVU855
1676:FreeRTOS/src/cmsis_os.c **** #endif
1677:FreeRTOS/src/cmsis_os.c **** }
 3507              		.loc 1 1677 1 is_stmt 0 view .LVU856
 3508 0000 8120     		movs	r0, #129
 3509              	.LVL263:
 3510              		.loc 1 1677 1 view .LVU857
 3511 0002 7047     		bx	lr
 3512              		.cfi_endproc
 3513              	.LFE123:
 3515              		.section	.text.osRecursiveMutexWait,"ax",%progbits
 3516              		.align	1
 3517              		.global	osRecursiveMutexWait
 3518              		.syntax unified
 3519              		.thumb
 3520              		.thumb_func
 3521              		.fpu softvfp
 3523              	osRecursiveMutexWait:
 3524              	.LVL264:
 3525              	.LFB124:
1678:FreeRTOS/src/cmsis_os.c **** 
1679:FreeRTOS/src/cmsis_os.c **** /**
1680:FreeRTOS/src/cmsis_os.c **** * @brief  Release a Recursive Mutex
1681:FreeRTOS/src/cmsis_os.c **** * @param   mutex_id    mutex ID obtained by \ref osRecursiveMutexCreate.
1682:FreeRTOS/src/cmsis_os.c **** * @param millisec      timeout value or 0 in case of no time-out.
1683:FreeRTOS/src/cmsis_os.c **** * @retval  status code that indicates the execution status of the function.
1684:FreeRTOS/src/cmsis_os.c **** */
1685:FreeRTOS/src/cmsis_os.c **** osStatus osRecursiveMutexWait (osMutexId mutex_id, uint32_t millisec)
1686:FreeRTOS/src/cmsis_os.c **** {
 3526              		.loc 1 1686 1 is_stmt 1 view -0
 3527              		.cfi_startproc
 3528              		@ args = 0, pretend = 0, frame = 0
 3529              		@ frame_needed = 0, uses_anonymous_args = 0
 3530              		@ link register save eliminated.
1687:FreeRTOS/src/cmsis_os.c **** #if (configUSE_RECURSIVE_MUTEXES == 1)
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 101


1688:FreeRTOS/src/cmsis_os.c ****   TickType_t ticks;
1689:FreeRTOS/src/cmsis_os.c ****   
1690:FreeRTOS/src/cmsis_os.c ****   if (mutex_id == NULL)
1691:FreeRTOS/src/cmsis_os.c ****   {
1692:FreeRTOS/src/cmsis_os.c ****     return osErrorParameter;
1693:FreeRTOS/src/cmsis_os.c ****   }
1694:FreeRTOS/src/cmsis_os.c ****   
1695:FreeRTOS/src/cmsis_os.c ****   ticks = 0;
1696:FreeRTOS/src/cmsis_os.c ****   if (millisec == osWaitForever) 
1697:FreeRTOS/src/cmsis_os.c ****   {
1698:FreeRTOS/src/cmsis_os.c ****     ticks = portMAX_DELAY;
1699:FreeRTOS/src/cmsis_os.c ****   }
1700:FreeRTOS/src/cmsis_os.c ****   else if (millisec != 0) 
1701:FreeRTOS/src/cmsis_os.c ****   {
1702:FreeRTOS/src/cmsis_os.c ****     ticks = millisec / portTICK_PERIOD_MS;
1703:FreeRTOS/src/cmsis_os.c ****     if (ticks == 0) 
1704:FreeRTOS/src/cmsis_os.c ****     {
1705:FreeRTOS/src/cmsis_os.c ****       ticks = 1;
1706:FreeRTOS/src/cmsis_os.c ****     }
1707:FreeRTOS/src/cmsis_os.c ****   }
1708:FreeRTOS/src/cmsis_os.c ****   
1709:FreeRTOS/src/cmsis_os.c ****   if (xSemaphoreTakeRecursive(mutex_id, ticks) != pdTRUE) 
1710:FreeRTOS/src/cmsis_os.c ****   {
1711:FreeRTOS/src/cmsis_os.c ****     return osErrorOS;
1712:FreeRTOS/src/cmsis_os.c ****   }
1713:FreeRTOS/src/cmsis_os.c ****   return osOK;
1714:FreeRTOS/src/cmsis_os.c **** #else
1715:FreeRTOS/src/cmsis_os.c **** 	return osErrorResource;
 3531              		.loc 1 1715 2 view .LVU859
1716:FreeRTOS/src/cmsis_os.c **** #endif
1717:FreeRTOS/src/cmsis_os.c **** }
 3532              		.loc 1 1717 1 is_stmt 0 view .LVU860
 3533 0000 8120     		movs	r0, #129
 3534              	.LVL265:
 3535              		.loc 1 1717 1 view .LVU861
 3536 0002 7047     		bx	lr
 3537              		.cfi_endproc
 3538              	.LFE124:
 3540              		.section	.text.osSemaphoreGetCount,"ax",%progbits
 3541              		.align	1
 3542              		.global	osSemaphoreGetCount
 3543              		.syntax unified
 3544              		.thumb
 3545              		.thumb_func
 3546              		.fpu softvfp
 3548              	osSemaphoreGetCount:
 3549              	.LVL266:
 3550              	.LFB125:
1718:FreeRTOS/src/cmsis_os.c **** 
1719:FreeRTOS/src/cmsis_os.c **** /**
1720:FreeRTOS/src/cmsis_os.c **** * @brief  Returns the current count value of a counting semaphore
1721:FreeRTOS/src/cmsis_os.c **** * @param  semaphore_id  semaphore_id ID obtained by \ref osSemaphoreCreate.
1722:FreeRTOS/src/cmsis_os.c **** * @retval  count value
1723:FreeRTOS/src/cmsis_os.c **** */
1724:FreeRTOS/src/cmsis_os.c **** uint32_t osSemaphoreGetCount(osSemaphoreId semaphore_id)
1725:FreeRTOS/src/cmsis_os.c **** {
 3551              		.loc 1 1725 1 is_stmt 1 view -0
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 102


 3552              		.cfi_startproc
 3553              		@ args = 0, pretend = 0, frame = 0
 3554              		@ frame_needed = 0, uses_anonymous_args = 0
 3555              		.loc 1 1725 1 is_stmt 0 view .LVU863
 3556 0000 08B5     		push	{r3, lr}
 3557              	.LCFI81:
 3558              		.cfi_def_cfa_offset 8
 3559              		.cfi_offset 3, -8
 3560              		.cfi_offset 14, -4
1726:FreeRTOS/src/cmsis_os.c ****   return uxSemaphoreGetCount(semaphore_id);
 3561              		.loc 1 1726 3 is_stmt 1 view .LVU864
 3562              		.loc 1 1726 10 is_stmt 0 view .LVU865
 3563 0002 FFF7FEFF 		bl	uxQueueMessagesWaiting
 3564              	.LVL267:
1727:FreeRTOS/src/cmsis_os.c **** }
 3565              		.loc 1 1727 1 view .LVU866
 3566 0006 08BD     		pop	{r3, pc}
 3567              		.cfi_endproc
 3568              	.LFE125:
 3570              		.text
 3571              	.Letext0:
 3572              		.file 4 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\lock.h"
 3573              		.file 5 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\_types.h"
 3574              		.file 6 "c:\\software\\embeddedgcc\\arm_gcc\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 3575              		.file 7 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\reent.h"
 3576              		.file 8 "FreeRTOS/inc/stdint.h"
 3577              		.file 9 "CMSIS/inc/core_cm3.h"
 3578              		.file 10 "CMSIS/inc/system_stm32f1xx.h"
 3579              		.file 11 "FreeRTOS/inc/projdefs.h"
 3580              		.file 12 "FreeRTOS/inc/task.h"
 3581              		.file 13 "FreeRTOS/inc/timers.h"
 3582              		.file 14 "FreeRTOS/inc/queue.h"
 3583              		.file 15 "FreeRTOS/inc/semphr.h"
 3584              		.file 16 "FreeRTOS/inc/cmsis_os.h"
 3585              		.file 17 "FreeRTOS/inc/portable.h"
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 103


DEFINED SYMBOLS
                            *ABS*:0000000000000000 cmsis_os.c
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:16     .text.makeFreeRtosPriority:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:23     .text.makeFreeRtosPriority:0000000000000000 makeFreeRtosPriority
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:55     .text.makeCmsisPriority:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:61     .text.makeCmsisPriority:0000000000000000 makeCmsisPriority
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:95     .text.inHandlerMode:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:101    .text.inHandlerMode:0000000000000000 inHandlerMode
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:136    .text.osKernelStart:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:143    .text.osKernelStart:0000000000000000 osKernelStart
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:165    .text.osKernelRunning:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:172    .text.osKernelRunning:0000000000000000 osKernelRunning
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:187    .text.osKernelSysTick:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:194    .text.osKernelSysTick:0000000000000000 osKernelSysTick
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:228    .text.osThreadCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:235    .text.osThreadCreate:0000000000000000 osThreadCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:304    .text.osThreadGetId:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:311    .text.osThreadGetId:0000000000000000 osThreadGetId
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:332    .text.osThreadTerminate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:339    .text.osThreadTerminate:0000000000000000 osThreadTerminate
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:363    .text.osThreadYield:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:370    .text.osThreadYield:0000000000000000 osThreadYield
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:400    .text.osThreadYield:0000000000000014 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:405    .text.osThreadSetPriority:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:412    .text.osThreadSetPriority:0000000000000000 osThreadSetPriority
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:446    .text.osThreadGetPriority:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:453    .text.osThreadGetPriority:0000000000000000 osThreadGetPriority
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:497    .text.osDelay:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:504    .text.osDelay:0000000000000000 osDelay
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:538    .text.osTimerCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:545    .text.osTimerCreate:0000000000000000 osTimerCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:563    .text.osTimerStart:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:570    .text.osTimerStart:0000000000000000 osTimerStart
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:590    .text.osTimerStop:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:597    .text.osTimerStop:0000000000000000 osTimerStop
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:617    .text.osTimerDelete:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:624    .text.osTimerDelete:0000000000000000 osTimerDelete
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:644    .text.osSignalSet:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:651    .text.osSignalSet:0000000000000000 osSignalSet
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:753    .text.osSignalSet:0000000000000060 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:758    .text.osSignalWait:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:765    .text.osSignalWait:0000000000000000 osSignalWait
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:884    .text.osMutexCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:891    .text.osMutexCreate:0000000000000000 osMutexCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:917    .text.osMutexWait:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:924    .text.osMutexWait:0000000000000000 osMutexWait
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1051   .text.osMutexWait:000000000000006c $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1056   .text.osMutexRelease:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1063   .text.osMutexRelease:0000000000000000 osMutexRelease
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1162   .text.osMutexRelease:0000000000000058 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1167   .text.osMutexDelete:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1174   .text.osMutexDelete:0000000000000000 osMutexDelete
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1213   .text.osSemaphoreCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1220   .text.osSemaphoreCreate:0000000000000000 osSemaphoreCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1275   .text.osSemaphoreWait:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1282   .text.osSemaphoreWait:0000000000000000 osSemaphoreWait
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1409   .text.osSemaphoreWait:000000000000006c $d
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 104


C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1414   .text.osSemaphoreRelease:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1421   .text.osSemaphoreRelease:0000000000000000 osSemaphoreRelease
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1520   .text.osSemaphoreRelease:0000000000000058 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1525   .text.osSemaphoreDelete:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1532   .text.osSemaphoreDelete:0000000000000000 osSemaphoreDelete
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1571   .text.osPoolCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1578   .text.osPoolCreate:0000000000000000 osPoolCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1705   .text.osPoolAlloc:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1712   .text.osPoolAlloc:0000000000000000 osPoolAlloc
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1868   .text.osPoolCAlloc:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1875   .text.osPoolCAlloc:0000000000000000 osPoolCAlloc
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1911   .text.osPoolFree:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:1918   .text.osPoolFree:0000000000000000 osPoolFree
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2008   .text.osMessageCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2015   .text.osMessageCreate:0000000000000000 osMessageCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2046   .text.osMessagePut:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2053   .text.osMessagePut:0000000000000000 osMessagePut
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2165   .text.osMessagePut:0000000000000064 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2170   .text.osMessageGet:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2177   .text.osMessageGet:0000000000000000 osMessageGet
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2343   .text.osMessageGet:0000000000000098 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2348   .text.osMailCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2355   .text.osMailCreate:0000000000000000 osMailCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2480   .text.osMailAlloc:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2487   .text.osMailAlloc:0000000000000000 osMailAlloc
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2530   .text.osMailCAlloc:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2537   .text.osMailCAlloc:0000000000000000 osMailCAlloc
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2592   .text.osMailPut:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2599   .text.osMailPut:0000000000000000 osMailPut
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2711   .text.osMailPut:0000000000000064 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2716   .text.osMailGet:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2723   .text.osMailGet:0000000000000000 osMailGet
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2885   .text.osMailGet:0000000000000094 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2890   .text.osMailFree:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2897   .text.osMailFree:0000000000000000 osMailFree
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2937   .text.osSystickHandler:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2944   .text.osSystickHandler:0000000000000000 osSystickHandler
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2964   .text.osThreadSuspend:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2971   .text.osThreadSuspend:0000000000000000 osThreadSuspend
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:2995   .text.osThreadResume:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3002   .text.osThreadResume:0000000000000000 osThreadResume
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3062   .text.osThreadResume:0000000000000030 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3067   .text.osThreadSuspendAll:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3074   .text.osThreadSuspendAll:0000000000000000 osThreadSuspendAll
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3096   .text.osThreadResumeAll:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3103   .text.osThreadResumeAll:0000000000000000 osThreadResumeAll
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3134   .text.osDelayUntil:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3141   .text.osDelayUntil:0000000000000000 osDelayUntil
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3175   .text.osAbortDelay:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3182   .text.osAbortDelay:0000000000000000 osAbortDelay
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3201   .text.osThreadList:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3208   .text.osThreadList:0000000000000000 osThreadList
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3226   .text.osMessagePeek:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3233   .text.osMessagePeek:0000000000000000 osMessagePeek
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3343   .text.osMessageWaiting:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3350   .text.osMessageWaiting:0000000000000000 osMessageWaiting
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3390   .text.osMessageAvailableSpace:0000000000000000 $t
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s 			page 105


C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3397   .text.osMessageAvailableSpace:0000000000000000 osMessageAvailableSpace
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3420   .text.osMessageDelete:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3427   .text.osMessageDelete:0000000000000000 osMessageDelete
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3466   .text.osRecursiveMutexCreate:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3473   .text.osRecursiveMutexCreate:0000000000000000 osRecursiveMutexCreate
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3491   .text.osRecursiveMutexRelease:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3498   .text.osRecursiveMutexRelease:0000000000000000 osRecursiveMutexRelease
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3516   .text.osRecursiveMutexWait:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3523   .text.osRecursiveMutexWait:0000000000000000 osRecursiveMutexWait
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3541   .text.osSemaphoreGetCount:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccT1dKz8.s:3548   .text.osSemaphoreGetCount:0000000000000000 osSemaphoreGetCount

UNDEFINED SYMBOLS
vTaskStartScheduler
xTaskGetTickCountFromISR
xTaskGetTickCount
xTaskCreate
xTaskGetCurrentTaskHandle
vTaskDelete
vTaskPrioritySet
uxTaskPriorityGetFromISR
uxTaskPriorityGet
vTaskDelay
xTaskGenericNotifyFromISR
xTaskGenericNotify
xTaskNotifyWait
xQueueCreateMutex
xQueueReceiveFromISR
xQueueSemaphoreTake
xQueueGiveFromISR
xQueueGenericSend
vQueueDelete
xQueueGenericCreate
pvPortMalloc
vPortFree
vPortEnterCritical
vPortExitCritical
xQueueGenericSendFromISR
xQueueReceive
xPortSysTickHandler
vTaskSuspend
xTaskResumeFromISR
vTaskResume
vTaskSuspendAll
xTaskResumeAll
vTaskDelayUntil
xQueuePeek
uxQueueMessagesWaitingFromISR
uxQueueMessagesWaiting
uxQueueSpacesAvailable
