ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.vTaskButtonUser,"ax",%progbits
  16              		.align	1
  17              		.global	vTaskButtonUser
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	vTaskButtonUser:
  25              	.LFB73:
  26              		.file 1 "Code/src/main.c"
   1:Code/src/main.c **** #include "main.h"
   2:Code/src/main.c **** 
   3:Code/src/main.c **** void RCC_Init(void);
   4:Code/src/main.c **** void GPIO_Init(void);
   5:Code/src/main.c **** void USART3_Init(void);
   6:Code/src/main.c **** void USART3_Send(char chr);
   7:Code/src/main.c **** void USART3_Send_String(char* str);
   8:Code/src/main.c **** void PWM_Init(void);
   9:Code/src/main.c **** //void USART3_IRQHandler(void);
  10:Code/src/main.c **** //void MCO_out(void);
  11:Code/src/main.c **** 
  12:Code/src/main.c **** 
  13:Code/src/main.c **** //void vTaskLed1(void *argument);
  14:Code/src/main.c **** //void vTaskLed2(void *argument);
  15:Code/src/main.c **** void vTaskButtonUser(void *argument);
  16:Code/src/main.c **** 
  17:Code/src/main.c **** int main(void)
  18:Code/src/main.c **** {
  19:Code/src/main.c ****     RCC_Init();
  20:Code/src/main.c ****     GPIO_Init();
  21:Code/src/main.c **** 	//USART3_Init();
  22:Code/src/main.c **** 	PWM_Init();
  23:Code/src/main.c **** 	//USART3_IRQHandler();
  24:Code/src/main.c **** 	//MCO_out();
  25:Code/src/main.c **** 
  26:Code/src/main.c **** 	//xTaskCreate(vTaskLed1, "LED1", 32, NULL, 2, NULL);
  27:Code/src/main.c **** 	//xTaskCreate(vTaskLed2, "LED2", 32, NULL, 1, NULL);
  28:Code/src/main.c **** 	xTaskCreate(vTaskButtonUser, "LED1", 32, NULL, 1, NULL);
  29:Code/src/main.c **** 	
  30:Code/src/main.c **** 	vTaskStartScheduler();
  31:Code/src/main.c **** 
  32:Code/src/main.c ****     while (1)
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 2


  33:Code/src/main.c ****     {
  34:Code/src/main.c **** 
  35:Code/src/main.c ****     }
  36:Code/src/main.c ****   
  37:Code/src/main.c **** }
  38:Code/src/main.c **** 
  39:Code/src/main.c **** //-------------------------------------------------------------------------------------------------
  40:Code/src/main.c **** 
  41:Code/src/main.c **** void RCC_Init(void)
  42:Code/src/main.c **** {
  43:Code/src/main.c **** 	
  44:Code/src/main.c **** 	RCC->CR |= ((uint32_t)RCC_CR_HSEON);									//HSE Enable
  45:Code/src/main.c **** 	while(!(RCC->CR & RCC_CR_HSERDY));										//HSE is ready				
  46:Code/src/main.c **** 	
  47:Code/src/main.c **** 	FLASH->ACR |= FLASH_ACR_PRFTBE | FLASH_ACR_LATENCY;						//Tact for Flash
  48:Code/src/main.c **** 	
  49:Code/src/main.c **** 	RCC->CFGR |= RCC_CFGR_HPRE_DIV1;										//AHB = SYSCLK/1 = 48
  50:Code/src/main.c **** 	RCC->CFGR |= RCC_CFGR_PPRE1_DIV2;										//APB1 = HCLK/2 = 24
  51:Code/src/main.c **** 	RCC->CFGR |= RCC_CFGR_PPRE2_DIV1;										//APB2 = HCLK/1 = 48
  52:Code/src/main.c **** 
  53:Code/src/main.c **** 	RCC->CFGR2 |= RCC_CFGR2_PREDIV1SRC_HSE;									//Prediv1 Source - HSE
  54:Code/src/main.c **** 	RCC->CFGR2 |= RCC_CFGR2_PREDIV1_DIV1;									//Previv1 = HSE/1 = 8
  55:Code/src/main.c **** 	RCC->CFGR |= RCC_CFGR_PLLSRC_Msk;										//PLL source - Prediv1
  56:Code/src/main.c **** 	RCC->CFGR |= RCC_CFGR_PLLMULL6;											//PLLCLK = Prediv1 * 6 = 48
  57:Code/src/main.c **** 	
  58:Code/src/main.c **** 	RCC->CR |= RCC_CR_PLLON;												//PLL Enable
  59:Code/src/main.c **** 	while((RCC->CR & RCC_CR_PLLRDY) == 0) {}									//PLL is ready
  60:Code/src/main.c **** 	
  61:Code/src/main.c **** 	RCC->CFGR &= ~RCC_CFGR_SW;												//Clear SW bits
  62:Code/src/main.c **** 	RCC->CFGR |=RCC_CFGR_SW_PLL;											//Select sourse SYSCLK - PLLCLK
  63:Code/src/main.c **** 	while((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_1) {}					//Wait till PLL is used
  64:Code/src/main.c **** 	
  65:Code/src/main.c **** }
  66:Code/src/main.c **** 
  67:Code/src/main.c **** void GPIO_Init(void)
  68:Code/src/main.c **** {
  69:Code/src/main.c **** 	RCC->APB2ENR |= RCC_APB2ENR_IOPCEN; 									//Takt on for port C
  70:Code/src/main.c **** 	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN; 									//Takt on for port A
  71:Code/src/main.c **** 	
  72:Code/src/main.c **** 	//GPIOC->CRH &= ~GPIO_CRH_CNF9; 	  									//PC9 in output
  73:Code/src/main.c **** 	//GPIOC->CRH |= GPIO_CRH_MODE9_0; 										//PC9 in output, speed 10 MHz
  74:Code/src/main.c **** 	
  75:Code/src/main.c **** 	//GPIOA->CRH &= ~GPIO_CRH_CNF9; 	 	 								//PA9 in output
  76:Code/src/main.c **** 	//GPIOA->CRH |= GPIO_CRH_MODE9_0; 										//PA9 in output, speed 10 MHz
  77:Code/src/main.c **** 	
  78:Code/src/main.c **** 	GPIOC->CRH &= ~GPIO_CRH_CNF11; 											//PC11 in output
  79:Code/src/main.c **** 	GPIOC->CRH |= GPIO_CRH_MODE11_0; 										//PC11 in output, speed 10 MHz
  80:Code/src/main.c **** 	GPIOC->BSRR |= GPIO_BSRR_BR11; 											//Reset PC11
  81:Code/src/main.c **** 	
  82:Code/src/main.c **** 	//GPIOC->CRH &= ~GPIO_CRH_CNF12; 										//PC12 in output
  83:Code/src/main.c **** 	//GPIOC->CRH |= GPIO_CRH_MODE12_0; 										//PC12 in output, speed 10 MHz
  84:Code/src/main.c **** 	
  85:Code/src/main.c **** 	//GPIOC->BSRR |= GPIO_BSRR_BR9; 										//Reset PC9
  86:Code/src/main.c **** 	//GPIOA->BSRR |= GPIO_BSRR_BR9;											//Reset PA9
  87:Code/src/main.c **** 
  88:Code/src/main.c **** 	GPIOA->CRL &= ~GPIO_CRL_CNF4_1;											//Input floating mode PA4
  89:Code/src/main.c **** 	GPIOA->CRL |= GPIO_CRL_CNF4_0;											//Input floating mode PA4
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 3


  90:Code/src/main.c **** 	GPIOA->CRL &= ~GPIO_CRL_MODE4;											//Input floating mode PA4
  91:Code/src/main.c **** }
  92:Code/src/main.c **** 
  93:Code/src/main.c **** void MCO_out(void){
  94:Code/src/main.c **** 	
  95:Code/src/main.c **** 	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
  96:Code/src/main.c **** 	
  97:Code/src/main.c **** 	GPIOA->CRH &= ~GPIO_CRH_CNF8_0;
  98:Code/src/main.c **** 	GPIOA->CRH |= GPIO_CRH_CNF8_1;
  99:Code/src/main.c **** 	GPIOA->CRH |= GPIO_CRH_MODE8;
 100:Code/src/main.c **** 	
 101:Code/src/main.c **** 	RCC->CFGR |= RCC_CFGR_MCO_SYSCLK;
 102:Code/src/main.c **** 	
 103:Code/src/main.c **** }
 104:Code/src/main.c **** 
 105:Code/src/main.c **** void vTaskLed1(void *argument)
 106:Code/src/main.c **** {
 107:Code/src/main.c **** 	while (1)
 108:Code/src/main.c **** 	{
 109:Code/src/main.c **** 		GPIOC->BSRR |= GPIO_BSRR_BR11; 		//Reset PC11
 110:Code/src/main.c **** 		vTaskDelay(1000);
 111:Code/src/main.c **** 		GPIOC->BSRR |= GPIO_BSRR_BS11; 		//Set PC11
 112:Code/src/main.c **** 		vTaskDelay(1000);
 113:Code/src/main.c **** 	}
 114:Code/src/main.c **** }
 115:Code/src/main.c **** 
 116:Code/src/main.c **** void vTaskLed2(void *argument)
 117:Code/src/main.c **** {
 118:Code/src/main.c **** 	while (1)
 119:Code/src/main.c **** 	{
 120:Code/src/main.c **** 		GPIOC->BSRR |= GPIO_BSRR_BS12; 		//Reset PC12
 121:Code/src/main.c **** 		vTaskDelay(1000);
 122:Code/src/main.c **** 		GPIOC->BSRR |= GPIO_BSRR_BR12; 		//Set PC12
 123:Code/src/main.c **** 		vTaskDelay(1000);
 124:Code/src/main.c **** 	}
 125:Code/src/main.c **** }
 126:Code/src/main.c **** 
 127:Code/src/main.c **** void vTaskButtonUser(void *argument)
 128:Code/src/main.c **** {
  27              		.loc 1 128 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32              		.loc 1 128 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38              	.LVL1:
  39              	.L6:
 129:Code/src/main.c **** 	while (1)
  40              		.loc 1 129 2 is_stmt 1 view .LVU2
 130:Code/src/main.c **** 	{	
 131:Code/src/main.c **** 		for(uint16_t i=0; i<=1000; i++)
  41              		.loc 1 131 3 view .LVU3
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 4


  42              	.LBB4:
  43              		.loc 1 131 7 view .LVU4
  44              		.loc 1 131 16 is_stmt 0 view .LVU5
  45 0002 0024     		movs	r4, #0
  46              	.LVL2:
  47              	.L2:
  48              		.loc 1 131 3 discriminator 1 view .LVU6
  49 0004 B4F57A7F 		cmp	r4, #1000
  50 0008 07D8     		bhi	.L8
 132:Code/src/main.c **** 		{	
 133:Code/src/main.c **** 			TIM1->CCR2 = i;
  51              		.loc 1 133 4 is_stmt 1 discriminator 3 view .LVU7
  52              		.loc 1 133 15 is_stmt 0 discriminator 3 view .LVU8
  53 000a 0A4B     		ldr	r3, .L9
  54 000c 9C63     		str	r4, [r3, #56]
 134:Code/src/main.c **** 			vTaskDelay(1);
  55              		.loc 1 134 4 is_stmt 1 discriminator 3 view .LVU9
  56 000e 0120     		movs	r0, #1
  57 0010 FFF7FEFF 		bl	vTaskDelay
  58              	.LVL3:
 131:Code/src/main.c **** 		{	
  59              		.loc 1 131 31 is_stmt 0 discriminator 3 view .LVU10
  60 0014 0134     		adds	r4, r4, #1
  61              	.LVL4:
 131:Code/src/main.c **** 		{	
  62              		.loc 1 131 31 discriminator 3 view .LVU11
  63 0016 A4B2     		uxth	r4, r4
  64              	.LVL5:
 131:Code/src/main.c **** 		{	
  65              		.loc 1 131 31 discriminator 3 view .LVU12
  66 0018 F4E7     		b	.L2
  67              	.L8:
 131:Code/src/main.c **** 		{	
  68              		.loc 1 131 31 discriminator 3 view .LVU13
  69              	.LBE4:
  70              	.LBB5:
 135:Code/src/main.c **** 		}	
 136:Code/src/main.c **** 		for(int16_t j=1000; j>=0; j--)
  71              		.loc 1 136 15 view .LVU14
  72 001a 4FF47A74 		mov	r4, #1000
  73              	.LVL6:
  74              	.L4:
  75              		.loc 1 136 3 discriminator 1 view .LVU15
  76 001e 002C     		cmp	r4, #0
  77 0020 EFDB     		blt	.L6
 137:Code/src/main.c **** 		{
 138:Code/src/main.c **** 			TIM1->CCR2 = j;
  78              		.loc 1 138 4 is_stmt 1 discriminator 3 view .LVU16
  79              		.loc 1 138 15 is_stmt 0 discriminator 3 view .LVU17
  80 0022 044B     		ldr	r3, .L9
  81 0024 9C63     		str	r4, [r3, #56]
 139:Code/src/main.c **** 			vTaskDelay(1);
  82              		.loc 1 139 4 is_stmt 1 discriminator 3 view .LVU18
  83 0026 0120     		movs	r0, #1
  84 0028 FFF7FEFF 		bl	vTaskDelay
  85              	.LVL7:
 136:Code/src/main.c **** 		{
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 5


  86              		.loc 1 136 30 is_stmt 0 discriminator 3 view .LVU19
  87 002c 013C     		subs	r4, r4, #1
  88              	.LVL8:
 136:Code/src/main.c **** 		{
  89              		.loc 1 136 30 discriminator 3 view .LVU20
  90 002e 24B2     		sxth	r4, r4
  91              	.LVL9:
 136:Code/src/main.c **** 		{
  92              		.loc 1 136 30 discriminator 3 view .LVU21
  93 0030 F5E7     		b	.L4
  94              	.L10:
  95 0032 00BF     		.align	2
  96              	.L9:
  97 0034 002C0140 		.word	1073818624
  98              	.LBE5:
  99              		.cfi_endproc
 100              	.LFE73:
 102              		.section	.text.RCC_Init,"ax",%progbits
 103              		.align	1
 104              		.global	RCC_Init
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 108              		.fpu softvfp
 110              	RCC_Init:
 111              	.LFB68:
  42:Code/src/main.c **** 	
 112              		.loc 1 42 1 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
  44:Code/src/main.c **** 	while(!(RCC->CR & RCC_CR_HSERDY));										//HSE is ready				
 117              		.loc 1 44 2 view .LVU23
  44:Code/src/main.c **** 	while(!(RCC->CR & RCC_CR_HSERDY));										//HSE is ready				
 118              		.loc 1 44 10 is_stmt 0 view .LVU24
 119 0000 1E4A     		ldr	r2, .L15
 120 0002 1368     		ldr	r3, [r2]
 121 0004 43F48033 		orr	r3, r3, #65536
 122 0008 1360     		str	r3, [r2]
  45:Code/src/main.c **** 	
 123              		.loc 1 45 2 is_stmt 1 view .LVU25
 124              	.L12:
  45:Code/src/main.c **** 	
 125              		.loc 1 45 35 discriminator 1 view .LVU26
  45:Code/src/main.c **** 	
 126              		.loc 1 45 13 is_stmt 0 discriminator 1 view .LVU27
 127 000a 1C4B     		ldr	r3, .L15
 128 000c 1B68     		ldr	r3, [r3]
  45:Code/src/main.c **** 	
 129              		.loc 1 45 7 discriminator 1 view .LVU28
 130 000e 13F4003F 		tst	r3, #131072
 131 0012 FAD0     		beq	.L12
  47:Code/src/main.c **** 	
 132              		.loc 1 47 2 is_stmt 1 view .LVU29
  47:Code/src/main.c **** 	
 133              		.loc 1 47 13 is_stmt 0 view .LVU30
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 6


 134 0014 1A4A     		ldr	r2, .L15+4
 135 0016 1368     		ldr	r3, [r2]
 136 0018 43F01703 		orr	r3, r3, #23
 137 001c 1360     		str	r3, [r2]
  49:Code/src/main.c **** 	RCC->CFGR |= RCC_CFGR_PPRE1_DIV2;										//APB1 = HCLK/2 = 24
 138              		.loc 1 49 2 is_stmt 1 view .LVU31
  49:Code/src/main.c **** 	RCC->CFGR |= RCC_CFGR_PPRE1_DIV2;										//APB1 = HCLK/2 = 24
 139              		.loc 1 49 12 is_stmt 0 view .LVU32
 140 001e 174B     		ldr	r3, .L15
 141 0020 5A68     		ldr	r2, [r3, #4]
 142 0022 5A60     		str	r2, [r3, #4]
  50:Code/src/main.c **** 	RCC->CFGR |= RCC_CFGR_PPRE2_DIV1;										//APB2 = HCLK/1 = 48
 143              		.loc 1 50 2 is_stmt 1 view .LVU33
  50:Code/src/main.c **** 	RCC->CFGR |= RCC_CFGR_PPRE2_DIV1;										//APB2 = HCLK/1 = 48
 144              		.loc 1 50 12 is_stmt 0 view .LVU34
 145 0024 5A68     		ldr	r2, [r3, #4]
 146 0026 42F48062 		orr	r2, r2, #1024
 147 002a 5A60     		str	r2, [r3, #4]
  51:Code/src/main.c **** 
 148              		.loc 1 51 2 is_stmt 1 view .LVU35
  51:Code/src/main.c **** 
 149              		.loc 1 51 12 is_stmt 0 view .LVU36
 150 002c 5A68     		ldr	r2, [r3, #4]
 151 002e 5A60     		str	r2, [r3, #4]
  53:Code/src/main.c **** 	RCC->CFGR2 |= RCC_CFGR2_PREDIV1_DIV1;									//Previv1 = HSE/1 = 8
 152              		.loc 1 53 2 is_stmt 1 view .LVU37
  53:Code/src/main.c **** 	RCC->CFGR2 |= RCC_CFGR2_PREDIV1_DIV1;									//Previv1 = HSE/1 = 8
 153              		.loc 1 53 13 is_stmt 0 view .LVU38
 154 0030 DA6A     		ldr	r2, [r3, #44]
 155 0032 DA62     		str	r2, [r3, #44]
  54:Code/src/main.c **** 	RCC->CFGR |= RCC_CFGR_PLLSRC_Msk;										//PLL source - Prediv1
 156              		.loc 1 54 2 is_stmt 1 view .LVU39
  54:Code/src/main.c **** 	RCC->CFGR |= RCC_CFGR_PLLSRC_Msk;										//PLL source - Prediv1
 157              		.loc 1 54 13 is_stmt 0 view .LVU40
 158 0034 DA6A     		ldr	r2, [r3, #44]
 159 0036 DA62     		str	r2, [r3, #44]
  55:Code/src/main.c **** 	RCC->CFGR |= RCC_CFGR_PLLMULL6;											//PLLCLK = Prediv1 * 6 = 48
 160              		.loc 1 55 2 is_stmt 1 view .LVU41
  55:Code/src/main.c **** 	RCC->CFGR |= RCC_CFGR_PLLMULL6;											//PLLCLK = Prediv1 * 6 = 48
 161              		.loc 1 55 12 is_stmt 0 view .LVU42
 162 0038 5A68     		ldr	r2, [r3, #4]
 163 003a 42F48032 		orr	r2, r2, #65536
 164 003e 5A60     		str	r2, [r3, #4]
  56:Code/src/main.c **** 	
 165              		.loc 1 56 2 is_stmt 1 view .LVU43
  56:Code/src/main.c **** 	
 166              		.loc 1 56 12 is_stmt 0 view .LVU44
 167 0040 5A68     		ldr	r2, [r3, #4]
 168 0042 42F48012 		orr	r2, r2, #1048576
 169 0046 5A60     		str	r2, [r3, #4]
  58:Code/src/main.c **** 	while((RCC->CR & RCC_CR_PLLRDY) == 0) {}									//PLL is ready
 170              		.loc 1 58 2 is_stmt 1 view .LVU45
  58:Code/src/main.c **** 	while((RCC->CR & RCC_CR_PLLRDY) == 0) {}									//PLL is ready
 171              		.loc 1 58 10 is_stmt 0 view .LVU46
 172 0048 1A68     		ldr	r2, [r3]
 173 004a 42F08072 		orr	r2, r2, #16777216
 174 004e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 7


  59:Code/src/main.c **** 	
 175              		.loc 1 59 2 is_stmt 1 view .LVU47
 176              	.L13:
  59:Code/src/main.c **** 	
 177              		.loc 1 59 41 discriminator 1 view .LVU48
  59:Code/src/main.c **** 	
 178              		.loc 1 59 12 is_stmt 0 discriminator 1 view .LVU49
 179 0050 0A4B     		ldr	r3, .L15
 180 0052 1B68     		ldr	r3, [r3]
  59:Code/src/main.c **** 	
 181              		.loc 1 59 7 discriminator 1 view .LVU50
 182 0054 13F0007F 		tst	r3, #33554432
 183 0058 FAD0     		beq	.L13
  61:Code/src/main.c **** 	RCC->CFGR |=RCC_CFGR_SW_PLL;											//Select sourse SYSCLK - PLLCLK
 184              		.loc 1 61 2 is_stmt 1 view .LVU51
  61:Code/src/main.c **** 	RCC->CFGR |=RCC_CFGR_SW_PLL;											//Select sourse SYSCLK - PLLCLK
 185              		.loc 1 61 12 is_stmt 0 view .LVU52
 186 005a 084B     		ldr	r3, .L15
 187 005c 5A68     		ldr	r2, [r3, #4]
 188 005e 22F00302 		bic	r2, r2, #3
 189 0062 5A60     		str	r2, [r3, #4]
  62:Code/src/main.c **** 	while((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_1) {}					//Wait till PLL is used
 190              		.loc 1 62 2 is_stmt 1 view .LVU53
  62:Code/src/main.c **** 	while((RCC->CFGR & RCC_CFGR_SWS) != RCC_CFGR_SWS_1) {}					//Wait till PLL is used
 191              		.loc 1 62 12 is_stmt 0 view .LVU54
 192 0064 5A68     		ldr	r2, [r3, #4]
 193 0066 42F00202 		orr	r2, r2, #2
 194 006a 5A60     		str	r2, [r3, #4]
  63:Code/src/main.c **** 	
 195              		.loc 1 63 2 is_stmt 1 view .LVU55
 196              	.L14:
  63:Code/src/main.c **** 	
 197              		.loc 1 63 55 discriminator 1 view .LVU56
  63:Code/src/main.c **** 	
 198              		.loc 1 63 12 is_stmt 0 discriminator 1 view .LVU57
 199 006c 034B     		ldr	r3, .L15
 200 006e 5B68     		ldr	r3, [r3, #4]
  63:Code/src/main.c **** 	
 201              		.loc 1 63 19 discriminator 1 view .LVU58
 202 0070 03F00C03 		and	r3, r3, #12
  63:Code/src/main.c **** 	
 203              		.loc 1 63 7 discriminator 1 view .LVU59
 204 0074 082B     		cmp	r3, #8
 205 0076 F9D1     		bne	.L14
  65:Code/src/main.c **** 
 206              		.loc 1 65 1 view .LVU60
 207 0078 7047     		bx	lr
 208              	.L16:
 209 007a 00BF     		.align	2
 210              	.L15:
 211 007c 00100240 		.word	1073876992
 212 0080 00200240 		.word	1073881088
 213              		.cfi_endproc
 214              	.LFE68:
 216              		.section	.text.GPIO_Init,"ax",%progbits
 217              		.align	1
 218              		.global	GPIO_Init
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 8


 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 222              		.fpu softvfp
 224              	GPIO_Init:
 225              	.LFB69:
  68:Code/src/main.c **** 	RCC->APB2ENR |= RCC_APB2ENR_IOPCEN; 									//Takt on for port C
 226              		.loc 1 68 1 is_stmt 1 view -0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
  69:Code/src/main.c **** 	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN; 									//Takt on for port A
 231              		.loc 1 69 2 view .LVU62
  69:Code/src/main.c **** 	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN; 									//Takt on for port A
 232              		.loc 1 69 15 is_stmt 0 view .LVU63
 233 0000 124B     		ldr	r3, .L18
 234 0002 9A69     		ldr	r2, [r3, #24]
 235 0004 42F01002 		orr	r2, r2, #16
 236 0008 9A61     		str	r2, [r3, #24]
  70:Code/src/main.c **** 	
 237              		.loc 1 70 2 is_stmt 1 view .LVU64
  70:Code/src/main.c **** 	
 238              		.loc 1 70 15 is_stmt 0 view .LVU65
 239 000a 9A69     		ldr	r2, [r3, #24]
 240 000c 42F00402 		orr	r2, r2, #4
 241 0010 9A61     		str	r2, [r3, #24]
  78:Code/src/main.c **** 	GPIOC->CRH |= GPIO_CRH_MODE11_0; 										//PC11 in output, speed 10 MHz
 242              		.loc 1 78 2 is_stmt 1 view .LVU66
  78:Code/src/main.c **** 	GPIOC->CRH |= GPIO_CRH_MODE11_0; 										//PC11 in output, speed 10 MHz
 243              		.loc 1 78 13 is_stmt 0 view .LVU67
 244 0012 A3F58033 		sub	r3, r3, #65536
 245 0016 5A68     		ldr	r2, [r3, #4]
 246 0018 22F44042 		bic	r2, r2, #49152
 247 001c 5A60     		str	r2, [r3, #4]
  79:Code/src/main.c **** 	GPIOC->BSRR |= GPIO_BSRR_BR11; 											//Reset PC11
 248              		.loc 1 79 2 is_stmt 1 view .LVU68
  79:Code/src/main.c **** 	GPIOC->BSRR |= GPIO_BSRR_BR11; 											//Reset PC11
 249              		.loc 1 79 13 is_stmt 0 view .LVU69
 250 001e 5A68     		ldr	r2, [r3, #4]
 251 0020 42F48052 		orr	r2, r2, #4096
 252 0024 5A60     		str	r2, [r3, #4]
  80:Code/src/main.c **** 	
 253              		.loc 1 80 2 is_stmt 1 view .LVU70
  80:Code/src/main.c **** 	
 254              		.loc 1 80 14 is_stmt 0 view .LVU71
 255 0026 1A69     		ldr	r2, [r3, #16]
 256 0028 42F00062 		orr	r2, r2, #134217728
 257 002c 1A61     		str	r2, [r3, #16]
  88:Code/src/main.c **** 	GPIOA->CRL |= GPIO_CRL_CNF4_0;											//Input floating mode PA4
 258              		.loc 1 88 2 is_stmt 1 view .LVU72
  88:Code/src/main.c **** 	GPIOA->CRL |= GPIO_CRL_CNF4_0;											//Input floating mode PA4
 259              		.loc 1 88 13 is_stmt 0 view .LVU73
 260 002e A3F50063 		sub	r3, r3, #2048
 261 0032 1A68     		ldr	r2, [r3]
 262 0034 22F40022 		bic	r2, r2, #524288
 263 0038 1A60     		str	r2, [r3]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 9


  89:Code/src/main.c **** 	GPIOA->CRL &= ~GPIO_CRL_MODE4;											//Input floating mode PA4
 264              		.loc 1 89 2 is_stmt 1 view .LVU74
  89:Code/src/main.c **** 	GPIOA->CRL &= ~GPIO_CRL_MODE4;											//Input floating mode PA4
 265              		.loc 1 89 13 is_stmt 0 view .LVU75
 266 003a 1A68     		ldr	r2, [r3]
 267 003c 42F48022 		orr	r2, r2, #262144
 268 0040 1A60     		str	r2, [r3]
  90:Code/src/main.c **** }
 269              		.loc 1 90 2 is_stmt 1 view .LVU76
  90:Code/src/main.c **** }
 270              		.loc 1 90 13 is_stmt 0 view .LVU77
 271 0042 1A68     		ldr	r2, [r3]
 272 0044 22F44032 		bic	r2, r2, #196608
 273 0048 1A60     		str	r2, [r3]
  91:Code/src/main.c **** 
 274              		.loc 1 91 1 view .LVU78
 275 004a 7047     		bx	lr
 276              	.L19:
 277              		.align	2
 278              	.L18:
 279 004c 00100240 		.word	1073876992
 280              		.cfi_endproc
 281              	.LFE69:
 283              		.section	.text.MCO_out,"ax",%progbits
 284              		.align	1
 285              		.global	MCO_out
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu softvfp
 291              	MCO_out:
 292              	.LFB70:
  93:Code/src/main.c **** 	
 293              		.loc 1 93 19 is_stmt 1 view -0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 0
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297              		@ link register save eliminated.
  95:Code/src/main.c **** 	
 298              		.loc 1 95 2 view .LVU80
  95:Code/src/main.c **** 	
 299              		.loc 1 95 15 is_stmt 0 view .LVU81
 300 0000 0B4A     		ldr	r2, .L21
 301 0002 9369     		ldr	r3, [r2, #24]
 302 0004 43F00403 		orr	r3, r3, #4
 303 0008 9361     		str	r3, [r2, #24]
  97:Code/src/main.c **** 	GPIOA->CRH |= GPIO_CRH_CNF8_1;
 304              		.loc 1 97 2 is_stmt 1 view .LVU82
  97:Code/src/main.c **** 	GPIOA->CRH |= GPIO_CRH_CNF8_1;
 305              		.loc 1 97 13 is_stmt 0 view .LVU83
 306 000a 0A4B     		ldr	r3, .L21+4
 307 000c 5968     		ldr	r1, [r3, #4]
 308 000e 21F00401 		bic	r1, r1, #4
 309 0012 5960     		str	r1, [r3, #4]
  98:Code/src/main.c **** 	GPIOA->CRH |= GPIO_CRH_MODE8;
 310              		.loc 1 98 2 is_stmt 1 view .LVU84
  98:Code/src/main.c **** 	GPIOA->CRH |= GPIO_CRH_MODE8;
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 10


 311              		.loc 1 98 13 is_stmt 0 view .LVU85
 312 0014 5968     		ldr	r1, [r3, #4]
 313 0016 41F00801 		orr	r1, r1, #8
 314 001a 5960     		str	r1, [r3, #4]
  99:Code/src/main.c **** 	
 315              		.loc 1 99 2 is_stmt 1 view .LVU86
  99:Code/src/main.c **** 	
 316              		.loc 1 99 13 is_stmt 0 view .LVU87
 317 001c 5968     		ldr	r1, [r3, #4]
 318 001e 41F00301 		orr	r1, r1, #3
 319 0022 5960     		str	r1, [r3, #4]
 101:Code/src/main.c **** 	
 320              		.loc 1 101 2 is_stmt 1 view .LVU88
 101:Code/src/main.c **** 	
 321              		.loc 1 101 12 is_stmt 0 view .LVU89
 322 0024 5368     		ldr	r3, [r2, #4]
 323 0026 43F08063 		orr	r3, r3, #67108864
 324 002a 5360     		str	r3, [r2, #4]
 103:Code/src/main.c **** 
 325              		.loc 1 103 1 view .LVU90
 326 002c 7047     		bx	lr
 327              	.L22:
 328 002e 00BF     		.align	2
 329              	.L21:
 330 0030 00100240 		.word	1073876992
 331 0034 00080140 		.word	1073809408
 332              		.cfi_endproc
 333              	.LFE70:
 335              		.section	.text.vTaskLed1,"ax",%progbits
 336              		.align	1
 337              		.global	vTaskLed1
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 341              		.fpu softvfp
 343              	vTaskLed1:
 344              	.LFB71:
 106:Code/src/main.c **** 	while (1)
 345              		.loc 1 106 1 is_stmt 1 view -0
 346              		.cfi_startproc
 347              		@ Volatile: function does not return.
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              	.LVL10:
 106:Code/src/main.c **** 	while (1)
 351              		.loc 1 106 1 is_stmt 0 view .LVU92
 352 0000 08B5     		push	{r3, lr}
 353              	.LCFI1:
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 3, -8
 356              		.cfi_offset 14, -4
 357              	.LVL11:
 358              	.L24:
 107:Code/src/main.c **** 	{
 359              		.loc 1 107 2 is_stmt 1 discriminator 1 view .LVU93
 109:Code/src/main.c **** 		vTaskDelay(1000);
 360              		.loc 1 109 3 discriminator 1 view .LVU94
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 11


 109:Code/src/main.c **** 		vTaskDelay(1000);
 361              		.loc 1 109 15 is_stmt 0 discriminator 1 view .LVU95
 362 0002 094C     		ldr	r4, .L26
 363 0004 2369     		ldr	r3, [r4, #16]
 364 0006 43F00063 		orr	r3, r3, #134217728
 365 000a 2361     		str	r3, [r4, #16]
 110:Code/src/main.c **** 		GPIOC->BSRR |= GPIO_BSRR_BS11; 		//Set PC11
 366              		.loc 1 110 3 is_stmt 1 discriminator 1 view .LVU96
 367 000c 4FF47A70 		mov	r0, #1000
 368 0010 FFF7FEFF 		bl	vTaskDelay
 369              	.LVL12:
 111:Code/src/main.c **** 		vTaskDelay(1000);
 370              		.loc 1 111 3 discriminator 1 view .LVU97
 111:Code/src/main.c **** 		vTaskDelay(1000);
 371              		.loc 1 111 15 is_stmt 0 discriminator 1 view .LVU98
 372 0014 2369     		ldr	r3, [r4, #16]
 373 0016 43F40063 		orr	r3, r3, #2048
 374 001a 2361     		str	r3, [r4, #16]
 112:Code/src/main.c **** 	}
 375              		.loc 1 112 3 is_stmt 1 discriminator 1 view .LVU99
 376 001c 4FF47A70 		mov	r0, #1000
 377 0020 FFF7FEFF 		bl	vTaskDelay
 378              	.LVL13:
 379 0024 EDE7     		b	.L24
 380              	.L27:
 381 0026 00BF     		.align	2
 382              	.L26:
 383 0028 00100140 		.word	1073811456
 384              		.cfi_endproc
 385              	.LFE71:
 387              		.section	.text.vTaskLed2,"ax",%progbits
 388              		.align	1
 389              		.global	vTaskLed2
 390              		.syntax unified
 391              		.thumb
 392              		.thumb_func
 393              		.fpu softvfp
 395              	vTaskLed2:
 396              	.LFB72:
 117:Code/src/main.c **** 	while (1)
 397              		.loc 1 117 1 view -0
 398              		.cfi_startproc
 399              		@ Volatile: function does not return.
 400              		@ args = 0, pretend = 0, frame = 0
 401              		@ frame_needed = 0, uses_anonymous_args = 0
 402              	.LVL14:
 117:Code/src/main.c **** 	while (1)
 403              		.loc 1 117 1 is_stmt 0 view .LVU101
 404 0000 08B5     		push	{r3, lr}
 405              	.LCFI2:
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 3, -8
 408              		.cfi_offset 14, -4
 409              	.LVL15:
 410              	.L29:
 118:Code/src/main.c **** 	{
 411              		.loc 1 118 2 is_stmt 1 discriminator 1 view .LVU102
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 12


 120:Code/src/main.c **** 		vTaskDelay(1000);
 412              		.loc 1 120 3 discriminator 1 view .LVU103
 120:Code/src/main.c **** 		vTaskDelay(1000);
 413              		.loc 1 120 15 is_stmt 0 discriminator 1 view .LVU104
 414 0002 094C     		ldr	r4, .L31
 415 0004 2369     		ldr	r3, [r4, #16]
 416 0006 43F48053 		orr	r3, r3, #4096
 417 000a 2361     		str	r3, [r4, #16]
 121:Code/src/main.c **** 		GPIOC->BSRR |= GPIO_BSRR_BR12; 		//Set PC12
 418              		.loc 1 121 3 is_stmt 1 discriminator 1 view .LVU105
 419 000c 4FF47A70 		mov	r0, #1000
 420 0010 FFF7FEFF 		bl	vTaskDelay
 421              	.LVL16:
 122:Code/src/main.c **** 		vTaskDelay(1000);
 422              		.loc 1 122 3 discriminator 1 view .LVU106
 122:Code/src/main.c **** 		vTaskDelay(1000);
 423              		.loc 1 122 15 is_stmt 0 discriminator 1 view .LVU107
 424 0014 2369     		ldr	r3, [r4, #16]
 425 0016 43F08053 		orr	r3, r3, #268435456
 426 001a 2361     		str	r3, [r4, #16]
 123:Code/src/main.c **** 	}
 427              		.loc 1 123 3 is_stmt 1 discriminator 1 view .LVU108
 428 001c 4FF47A70 		mov	r0, #1000
 429 0020 FFF7FEFF 		bl	vTaskDelay
 430              	.LVL17:
 431 0024 EDE7     		b	.L29
 432              	.L32:
 433 0026 00BF     		.align	2
 434              	.L31:
 435 0028 00100140 		.word	1073811456
 436              		.cfi_endproc
 437              	.LFE72:
 439              		.section	.text.USART3_Init,"ax",%progbits
 440              		.align	1
 441              		.global	USART3_Init
 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 445              		.fpu softvfp
 447              	USART3_Init:
 448              	.LFB74:
 140:Code/src/main.c **** 		}
 141:Code/src/main.c **** 	}
 142:Code/src/main.c **** }
 143:Code/src/main.c **** 
 144:Code/src/main.c **** void USART3_Init()
 145:Code/src/main.c **** {	
 449              		.loc 1 145 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 146:Code/src/main.c **** 	RCC->APB2ENR |= RCC_APB2ENR_IOPDEN; 		//Takt on for port D
 454              		.loc 1 146 2 view .LVU110
 455              		.loc 1 146 15 is_stmt 0 view .LVU111
 456 0000 224B     		ldr	r3, .L34
 457 0002 9A69     		ldr	r2, [r3, #24]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 13


 458 0004 42F02002 		orr	r2, r2, #32
 459 0008 9A61     		str	r2, [r3, #24]
 147:Code/src/main.c **** 	RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;			//Takt on Alternate function IO
 460              		.loc 1 147 2 is_stmt 1 view .LVU112
 461              		.loc 1 147 15 is_stmt 0 view .LVU113
 462 000a 9A69     		ldr	r2, [r3, #24]
 463 000c 42F00102 		orr	r2, r2, #1
 464 0010 9A61     		str	r2, [r3, #24]
 148:Code/src/main.c **** 	AFIO->MAPR |= AFIO_MAPR_USART3_REMAP;		//Full Remap USART3 PD8-TX, PD9-RX
 465              		.loc 1 148 2 is_stmt 1 view .LVU114
 466              		.loc 1 148 13 is_stmt 0 view .LVU115
 467 0012 1F49     		ldr	r1, .L34+4
 468 0014 4A68     		ldr	r2, [r1, #4]
 469 0016 42F03002 		orr	r2, r2, #48
 470 001a 4A60     		str	r2, [r1, #4]
 149:Code/src/main.c **** 	RCC->APB1ENR |= RCC_APB1ENR_USART3EN;		//Enable clock on USART3
 471              		.loc 1 149 2 is_stmt 1 view .LVU116
 472              		.loc 1 149 15 is_stmt 0 view .LVU117
 473 001c DA69     		ldr	r2, [r3, #28]
 474 001e 42F48022 		orr	r2, r2, #262144
 475 0022 DA61     		str	r2, [r3, #28]
 150:Code/src/main.c **** 
 151:Code/src/main.c **** 	GPIOD->CRH &= ~GPIO_CRH_CNF8_0;				//PD8 Alternate Push-pull
 476              		.loc 1 151 2 is_stmt 1 view .LVU118
 477              		.loc 1 151 13 is_stmt 0 view .LVU119
 478 0024 A3F57C43 		sub	r3, r3, #64512
 479 0028 5A68     		ldr	r2, [r3, #4]
 480 002a 22F00402 		bic	r2, r2, #4
 481 002e 5A60     		str	r2, [r3, #4]
 152:Code/src/main.c **** 	GPIOD->CRH |= GPIO_CRH_CNF8_1;				//PD8 Alternate Push-pull
 482              		.loc 1 152 2 is_stmt 1 view .LVU120
 483              		.loc 1 152 13 is_stmt 0 view .LVU121
 484 0030 5A68     		ldr	r2, [r3, #4]
 485 0032 42F00802 		orr	r2, r2, #8
 486 0036 5A60     		str	r2, [r3, #4]
 153:Code/src/main.c **** 	GPIOD->CRH |= GPIO_CRH_MODE8;				//PD8 50MHz
 487              		.loc 1 153 2 is_stmt 1 view .LVU122
 488              		.loc 1 153 13 is_stmt 0 view .LVU123
 489 0038 5A68     		ldr	r2, [r3, #4]
 490 003a 42F00302 		orr	r2, r2, #3
 491 003e 5A60     		str	r2, [r3, #4]
 154:Code/src/main.c **** 
 155:Code/src/main.c **** 	GPIOD->CRH &= ~GPIO_CRH_CNF9_1;				//Input floating mode PD9
 492              		.loc 1 155 2 is_stmt 1 view .LVU124
 493              		.loc 1 155 13 is_stmt 0 view .LVU125
 494 0040 5A68     		ldr	r2, [r3, #4]
 495 0042 22F08002 		bic	r2, r2, #128
 496 0046 5A60     		str	r2, [r3, #4]
 156:Code/src/main.c **** 	GPIOD->CRH |= GPIO_CRH_CNF9_0;				//Input floating mode PD9
 497              		.loc 1 156 2 is_stmt 1 view .LVU126
 498              		.loc 1 156 13 is_stmt 0 view .LVU127
 499 0048 5A68     		ldr	r2, [r3, #4]
 500 004a 42F04002 		orr	r2, r2, #64
 501 004e 5A60     		str	r2, [r3, #4]
 157:Code/src/main.c **** 	GPIOD->CRH &= ~GPIO_CRH_MODE9;				//Input floating mode PD9
 502              		.loc 1 157 2 is_stmt 1 view .LVU128
 503              		.loc 1 157 13 is_stmt 0 view .LVU129
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 14


 504 0050 5A68     		ldr	r2, [r3, #4]
 505 0052 22F03002 		bic	r2, r2, #48
 506 0056 5A60     		str	r2, [r3, #4]
 158:Code/src/main.c **** 
 159:Code/src/main.c **** 	USART3->BRR = 0x9C4;						//=(fapb1+baudrate/2)/baudrate
 507              		.loc 1 159 2 is_stmt 1 view .LVU130
 508              		.loc 1 159 14 is_stmt 0 view .LVU131
 509 0058 A3F54C43 		sub	r3, r3, #52224
 510 005c 40F6C412 		movw	r2, #2500
 511 0060 9A60     		str	r2, [r3, #8]
 160:Code/src/main.c **** 
 161:Code/src/main.c **** 	USART3->CR1 |= USART_CR1_TE;				//USART3 Transmit EN
 512              		.loc 1 161 2 is_stmt 1 view .LVU132
 513              		.loc 1 161 14 is_stmt 0 view .LVU133
 514 0062 DA68     		ldr	r2, [r3, #12]
 515 0064 42F00802 		orr	r2, r2, #8
 516 0068 DA60     		str	r2, [r3, #12]
 162:Code/src/main.c **** 	USART3->CR1 |= USART_CR1_RE;				//USART3 Receive EN
 517              		.loc 1 162 2 is_stmt 1 view .LVU134
 518              		.loc 1 162 14 is_stmt 0 view .LVU135
 519 006a DA68     		ldr	r2, [r3, #12]
 520 006c 42F00402 		orr	r2, r2, #4
 521 0070 DA60     		str	r2, [r3, #12]
 163:Code/src/main.c **** 	USART3->CR1 |= USART_CR1_UE;				//USART3 EN
 522              		.loc 1 163 2 is_stmt 1 view .LVU136
 523              		.loc 1 163 14 is_stmt 0 view .LVU137
 524 0072 DA68     		ldr	r2, [r3, #12]
 525 0074 42F40052 		orr	r2, r2, #8192
 526 0078 DA60     		str	r2, [r3, #12]
 164:Code/src/main.c **** 
 165:Code/src/main.c **** 	USART3->CR1 |= USART_CR1_RXNEIE;			//Включаем прерывание по приему
 527              		.loc 1 165 2 is_stmt 1 view .LVU138
 528              		.loc 1 165 14 is_stmt 0 view .LVU139
 529 007a DA68     		ldr	r2, [r3, #12]
 530 007c 42F02002 		orr	r2, r2, #32
 531 0080 DA60     		str	r2, [r3, #12]
 166:Code/src/main.c **** 	NVIC_EnableIRQ(USART3_IRQn);				//Вектор прерывания для USART3
 532              		.loc 1 166 2 is_stmt 1 view .LVU140
 533              	.LVL18:
 534              	.LBB6:
 535              	.LBI6:
 536              		.file 2 "CMSIS/inc/core_cm3.h"
   1:CMSIS/inc/core_cm3.h **** /**************************************************************************//**
   2:CMSIS/inc/core_cm3.h ****  * @file     core_cm3.h
   3:CMSIS/inc/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:CMSIS/inc/core_cm3.h ****  * @version  V4.30
   5:CMSIS/inc/core_cm3.h ****  * @date     20. October 2015
   6:CMSIS/inc/core_cm3.h ****  ******************************************************************************/
   7:CMSIS/inc/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:CMSIS/inc/core_cm3.h **** 
   9:CMSIS/inc/core_cm3.h ****    All rights reserved.
  10:CMSIS/inc/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:CMSIS/inc/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:CMSIS/inc/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:CMSIS/inc/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:CMSIS/inc/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:CMSIS/inc/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 15


  16:CMSIS/inc/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:CMSIS/inc/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:CMSIS/inc/core_cm3.h ****      to endorse or promote products derived from this software without
  19:CMSIS/inc/core_cm3.h ****      specific prior written permission.
  20:CMSIS/inc/core_cm3.h ****    *
  21:CMSIS/inc/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:CMSIS/inc/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:CMSIS/inc/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:CMSIS/inc/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:CMSIS/inc/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:CMSIS/inc/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:CMSIS/inc/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:CMSIS/inc/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:CMSIS/inc/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:CMSIS/inc/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:CMSIS/inc/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:CMSIS/inc/core_cm3.h ****    ---------------------------------------------------------------------------*/
  33:CMSIS/inc/core_cm3.h **** 
  34:CMSIS/inc/core_cm3.h **** 
  35:CMSIS/inc/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:CMSIS/inc/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:CMSIS/inc/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:CMSIS/inc/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:CMSIS/inc/core_cm3.h **** #endif
  40:CMSIS/inc/core_cm3.h **** 
  41:CMSIS/inc/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  42:CMSIS/inc/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:CMSIS/inc/core_cm3.h **** 
  44:CMSIS/inc/core_cm3.h **** #include <stdint.h>
  45:CMSIS/inc/core_cm3.h **** 
  46:CMSIS/inc/core_cm3.h **** #ifdef __cplusplus
  47:CMSIS/inc/core_cm3.h ****  extern "C" {
  48:CMSIS/inc/core_cm3.h **** #endif
  49:CMSIS/inc/core_cm3.h **** 
  50:CMSIS/inc/core_cm3.h **** /**
  51:CMSIS/inc/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:CMSIS/inc/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:CMSIS/inc/core_cm3.h **** 
  54:CMSIS/inc/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:CMSIS/inc/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  56:CMSIS/inc/core_cm3.h **** 
  57:CMSIS/inc/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:CMSIS/inc/core_cm3.h ****      Unions are used for effective representation of core registers.
  59:CMSIS/inc/core_cm3.h **** 
  60:CMSIS/inc/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:CMSIS/inc/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  62:CMSIS/inc/core_cm3.h ****  */
  63:CMSIS/inc/core_cm3.h **** 
  64:CMSIS/inc/core_cm3.h **** 
  65:CMSIS/inc/core_cm3.h **** /*******************************************************************************
  66:CMSIS/inc/core_cm3.h ****  *                 CMSIS definitions
  67:CMSIS/inc/core_cm3.h ****  ******************************************************************************/
  68:CMSIS/inc/core_cm3.h **** /**
  69:CMSIS/inc/core_cm3.h ****   \ingroup Cortex_M3
  70:CMSIS/inc/core_cm3.h ****   @{
  71:CMSIS/inc/core_cm3.h ****  */
  72:CMSIS/inc/core_cm3.h **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 16


  73:CMSIS/inc/core_cm3.h **** /*  CMSIS CM3 definitions */
  74:CMSIS/inc/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:CMSIS/inc/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:CMSIS/inc/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  77:CMSIS/inc/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:CMSIS/inc/core_cm3.h **** 
  79:CMSIS/inc/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  80:CMSIS/inc/core_cm3.h **** 
  81:CMSIS/inc/core_cm3.h **** 
  82:CMSIS/inc/core_cm3.h **** #if   defined ( __CC_ARM )
  83:CMSIS/inc/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:CMSIS/inc/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:CMSIS/inc/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  86:CMSIS/inc/core_cm3.h **** 
  87:CMSIS/inc/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:CMSIS/inc/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:CMSIS/inc/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:CMSIS/inc/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  91:CMSIS/inc/core_cm3.h **** 
  92:CMSIS/inc/core_cm3.h **** #elif defined ( __GNUC__ )
  93:CMSIS/inc/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:CMSIS/inc/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:CMSIS/inc/core_cm3.h ****   #define __STATIC_INLINE  static inline
  96:CMSIS/inc/core_cm3.h **** 
  97:CMSIS/inc/core_cm3.h **** #elif defined ( __ICCARM__ )
  98:CMSIS/inc/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:CMSIS/inc/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:CMSIS/inc/core_cm3.h ****   #define __STATIC_INLINE  static inline
 101:CMSIS/inc/core_cm3.h **** 
 102:CMSIS/inc/core_cm3.h **** #elif defined ( __TMS470__ )
 103:CMSIS/inc/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:CMSIS/inc/core_cm3.h ****   #define __STATIC_INLINE  static inline
 105:CMSIS/inc/core_cm3.h **** 
 106:CMSIS/inc/core_cm3.h **** #elif defined ( __TASKING__ )
 107:CMSIS/inc/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:CMSIS/inc/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:CMSIS/inc/core_cm3.h ****   #define __STATIC_INLINE  static inline
 110:CMSIS/inc/core_cm3.h **** 
 111:CMSIS/inc/core_cm3.h **** #elif defined ( __CSMC__ )
 112:CMSIS/inc/core_cm3.h ****   #define __packed
 113:CMSIS/inc/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:CMSIS/inc/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:CMSIS/inc/core_cm3.h ****   #define __STATIC_INLINE  static inline
 116:CMSIS/inc/core_cm3.h **** 
 117:CMSIS/inc/core_cm3.h **** #else
 118:CMSIS/inc/core_cm3.h ****   #error Unknown compiler
 119:CMSIS/inc/core_cm3.h **** #endif
 120:CMSIS/inc/core_cm3.h **** 
 121:CMSIS/inc/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:CMSIS/inc/core_cm3.h ****     This core does not support an FPU at all
 123:CMSIS/inc/core_cm3.h **** */
 124:CMSIS/inc/core_cm3.h **** #define __FPU_USED       0U
 125:CMSIS/inc/core_cm3.h **** 
 126:CMSIS/inc/core_cm3.h **** #if defined ( __CC_ARM )
 127:CMSIS/inc/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 128:CMSIS/inc/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:CMSIS/inc/core_cm3.h ****   #endif
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 17


 130:CMSIS/inc/core_cm3.h **** 
 131:CMSIS/inc/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:CMSIS/inc/core_cm3.h ****   #if defined __ARM_PCS_VFP
 133:CMSIS/inc/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:CMSIS/inc/core_cm3.h ****   #endif
 135:CMSIS/inc/core_cm3.h **** 
 136:CMSIS/inc/core_cm3.h **** #elif defined ( __GNUC__ )
 137:CMSIS/inc/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:CMSIS/inc/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:CMSIS/inc/core_cm3.h ****   #endif
 140:CMSIS/inc/core_cm3.h **** 
 141:CMSIS/inc/core_cm3.h **** #elif defined ( __ICCARM__ )
 142:CMSIS/inc/core_cm3.h ****   #if defined __ARMVFP__
 143:CMSIS/inc/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:CMSIS/inc/core_cm3.h ****   #endif
 145:CMSIS/inc/core_cm3.h **** 
 146:CMSIS/inc/core_cm3.h **** #elif defined ( __TMS470__ )
 147:CMSIS/inc/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 148:CMSIS/inc/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:CMSIS/inc/core_cm3.h ****   #endif
 150:CMSIS/inc/core_cm3.h **** 
 151:CMSIS/inc/core_cm3.h **** #elif defined ( __TASKING__ )
 152:CMSIS/inc/core_cm3.h ****   #if defined __FPU_VFP__
 153:CMSIS/inc/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:CMSIS/inc/core_cm3.h ****   #endif
 155:CMSIS/inc/core_cm3.h **** 
 156:CMSIS/inc/core_cm3.h **** #elif defined ( __CSMC__ )
 157:CMSIS/inc/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 158:CMSIS/inc/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:CMSIS/inc/core_cm3.h ****   #endif
 160:CMSIS/inc/core_cm3.h **** 
 161:CMSIS/inc/core_cm3.h **** #endif
 162:CMSIS/inc/core_cm3.h **** 
 163:CMSIS/inc/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:CMSIS/inc/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:CMSIS/inc/core_cm3.h **** 
 166:CMSIS/inc/core_cm3.h **** #ifdef __cplusplus
 167:CMSIS/inc/core_cm3.h **** }
 168:CMSIS/inc/core_cm3.h **** #endif
 169:CMSIS/inc/core_cm3.h **** 
 170:CMSIS/inc/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 171:CMSIS/inc/core_cm3.h **** 
 172:CMSIS/inc/core_cm3.h **** #ifndef __CMSIS_GENERIC
 173:CMSIS/inc/core_cm3.h **** 
 174:CMSIS/inc/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 175:CMSIS/inc/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 176:CMSIS/inc/core_cm3.h **** 
 177:CMSIS/inc/core_cm3.h **** #ifdef __cplusplus
 178:CMSIS/inc/core_cm3.h ****  extern "C" {
 179:CMSIS/inc/core_cm3.h **** #endif
 180:CMSIS/inc/core_cm3.h **** 
 181:CMSIS/inc/core_cm3.h **** /* check device defines and use defaults */
 182:CMSIS/inc/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 183:CMSIS/inc/core_cm3.h ****   #ifndef __CM3_REV
 184:CMSIS/inc/core_cm3.h ****     #define __CM3_REV               0x0200U
 185:CMSIS/inc/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 186:CMSIS/inc/core_cm3.h ****   #endif
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 18


 187:CMSIS/inc/core_cm3.h **** 
 188:CMSIS/inc/core_cm3.h ****   #ifndef __MPU_PRESENT
 189:CMSIS/inc/core_cm3.h ****     #define __MPU_PRESENT             0U
 190:CMSIS/inc/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 191:CMSIS/inc/core_cm3.h ****   #endif
 192:CMSIS/inc/core_cm3.h **** 
 193:CMSIS/inc/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 194:CMSIS/inc/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 195:CMSIS/inc/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 196:CMSIS/inc/core_cm3.h ****   #endif
 197:CMSIS/inc/core_cm3.h **** 
 198:CMSIS/inc/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 199:CMSIS/inc/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 200:CMSIS/inc/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 201:CMSIS/inc/core_cm3.h ****   #endif
 202:CMSIS/inc/core_cm3.h **** #endif
 203:CMSIS/inc/core_cm3.h **** 
 204:CMSIS/inc/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 205:CMSIS/inc/core_cm3.h **** /**
 206:CMSIS/inc/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 207:CMSIS/inc/core_cm3.h **** 
 208:CMSIS/inc/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 209:CMSIS/inc/core_cm3.h ****     \li to specify the access to peripheral variables.
 210:CMSIS/inc/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 211:CMSIS/inc/core_cm3.h **** */
 212:CMSIS/inc/core_cm3.h **** #ifdef __cplusplus
 213:CMSIS/inc/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 214:CMSIS/inc/core_cm3.h **** #else
 215:CMSIS/inc/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 216:CMSIS/inc/core_cm3.h **** #endif
 217:CMSIS/inc/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 218:CMSIS/inc/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 219:CMSIS/inc/core_cm3.h **** 
 220:CMSIS/inc/core_cm3.h **** /* following defines should be used for structure members */
 221:CMSIS/inc/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 222:CMSIS/inc/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 223:CMSIS/inc/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 224:CMSIS/inc/core_cm3.h **** 
 225:CMSIS/inc/core_cm3.h **** /*@} end of group Cortex_M3 */
 226:CMSIS/inc/core_cm3.h **** 
 227:CMSIS/inc/core_cm3.h **** 
 228:CMSIS/inc/core_cm3.h **** 
 229:CMSIS/inc/core_cm3.h **** /*******************************************************************************
 230:CMSIS/inc/core_cm3.h ****  *                 Register Abstraction
 231:CMSIS/inc/core_cm3.h ****   Core Register contain:
 232:CMSIS/inc/core_cm3.h ****   - Core Register
 233:CMSIS/inc/core_cm3.h ****   - Core NVIC Register
 234:CMSIS/inc/core_cm3.h ****   - Core SCB Register
 235:CMSIS/inc/core_cm3.h ****   - Core SysTick Register
 236:CMSIS/inc/core_cm3.h ****   - Core Debug Register
 237:CMSIS/inc/core_cm3.h ****   - Core MPU Register
 238:CMSIS/inc/core_cm3.h ****  ******************************************************************************/
 239:CMSIS/inc/core_cm3.h **** /**
 240:CMSIS/inc/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 241:CMSIS/inc/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 242:CMSIS/inc/core_cm3.h **** */
 243:CMSIS/inc/core_cm3.h **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 19


 244:CMSIS/inc/core_cm3.h **** /**
 245:CMSIS/inc/core_cm3.h ****   \ingroup    CMSIS_core_register
 246:CMSIS/inc/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 247:CMSIS/inc/core_cm3.h ****   \brief      Core Register type definitions.
 248:CMSIS/inc/core_cm3.h ****   @{
 249:CMSIS/inc/core_cm3.h ****  */
 250:CMSIS/inc/core_cm3.h **** 
 251:CMSIS/inc/core_cm3.h **** /**
 252:CMSIS/inc/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 253:CMSIS/inc/core_cm3.h ****  */
 254:CMSIS/inc/core_cm3.h **** typedef union
 255:CMSIS/inc/core_cm3.h **** {
 256:CMSIS/inc/core_cm3.h ****   struct
 257:CMSIS/inc/core_cm3.h ****   {
 258:CMSIS/inc/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 259:CMSIS/inc/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 260:CMSIS/inc/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 261:CMSIS/inc/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 262:CMSIS/inc/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 263:CMSIS/inc/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 264:CMSIS/inc/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 265:CMSIS/inc/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 266:CMSIS/inc/core_cm3.h **** } APSR_Type;
 267:CMSIS/inc/core_cm3.h **** 
 268:CMSIS/inc/core_cm3.h **** /* APSR Register Definitions */
 269:CMSIS/inc/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 270:CMSIS/inc/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 271:CMSIS/inc/core_cm3.h **** 
 272:CMSIS/inc/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 273:CMSIS/inc/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 274:CMSIS/inc/core_cm3.h **** 
 275:CMSIS/inc/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 276:CMSIS/inc/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 277:CMSIS/inc/core_cm3.h **** 
 278:CMSIS/inc/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 279:CMSIS/inc/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 280:CMSIS/inc/core_cm3.h **** 
 281:CMSIS/inc/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 282:CMSIS/inc/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 283:CMSIS/inc/core_cm3.h **** 
 284:CMSIS/inc/core_cm3.h **** 
 285:CMSIS/inc/core_cm3.h **** /**
 286:CMSIS/inc/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 287:CMSIS/inc/core_cm3.h ****  */
 288:CMSIS/inc/core_cm3.h **** typedef union
 289:CMSIS/inc/core_cm3.h **** {
 290:CMSIS/inc/core_cm3.h ****   struct
 291:CMSIS/inc/core_cm3.h ****   {
 292:CMSIS/inc/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 293:CMSIS/inc/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 294:CMSIS/inc/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 295:CMSIS/inc/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 296:CMSIS/inc/core_cm3.h **** } IPSR_Type;
 297:CMSIS/inc/core_cm3.h **** 
 298:CMSIS/inc/core_cm3.h **** /* IPSR Register Definitions */
 299:CMSIS/inc/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 300:CMSIS/inc/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 20


 301:CMSIS/inc/core_cm3.h **** 
 302:CMSIS/inc/core_cm3.h **** 
 303:CMSIS/inc/core_cm3.h **** /**
 304:CMSIS/inc/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 305:CMSIS/inc/core_cm3.h ****  */
 306:CMSIS/inc/core_cm3.h **** typedef union
 307:CMSIS/inc/core_cm3.h **** {
 308:CMSIS/inc/core_cm3.h ****   struct
 309:CMSIS/inc/core_cm3.h ****   {
 310:CMSIS/inc/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 311:CMSIS/inc/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 312:CMSIS/inc/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 313:CMSIS/inc/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 314:CMSIS/inc/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 315:CMSIS/inc/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 316:CMSIS/inc/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 317:CMSIS/inc/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 318:CMSIS/inc/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 319:CMSIS/inc/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 320:CMSIS/inc/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:CMSIS/inc/core_cm3.h **** } xPSR_Type;
 322:CMSIS/inc/core_cm3.h **** 
 323:CMSIS/inc/core_cm3.h **** /* xPSR Register Definitions */
 324:CMSIS/inc/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 325:CMSIS/inc/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 326:CMSIS/inc/core_cm3.h **** 
 327:CMSIS/inc/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 328:CMSIS/inc/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 329:CMSIS/inc/core_cm3.h **** 
 330:CMSIS/inc/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 331:CMSIS/inc/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 332:CMSIS/inc/core_cm3.h **** 
 333:CMSIS/inc/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 334:CMSIS/inc/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 335:CMSIS/inc/core_cm3.h **** 
 336:CMSIS/inc/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 337:CMSIS/inc/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 338:CMSIS/inc/core_cm3.h **** 
 339:CMSIS/inc/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 340:CMSIS/inc/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 341:CMSIS/inc/core_cm3.h **** 
 342:CMSIS/inc/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 343:CMSIS/inc/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 344:CMSIS/inc/core_cm3.h **** 
 345:CMSIS/inc/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 346:CMSIS/inc/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 347:CMSIS/inc/core_cm3.h **** 
 348:CMSIS/inc/core_cm3.h **** 
 349:CMSIS/inc/core_cm3.h **** /**
 350:CMSIS/inc/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 351:CMSIS/inc/core_cm3.h ****  */
 352:CMSIS/inc/core_cm3.h **** typedef union
 353:CMSIS/inc/core_cm3.h **** {
 354:CMSIS/inc/core_cm3.h ****   struct
 355:CMSIS/inc/core_cm3.h ****   {
 356:CMSIS/inc/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 357:CMSIS/inc/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 21


 358:CMSIS/inc/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 359:CMSIS/inc/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 360:CMSIS/inc/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 361:CMSIS/inc/core_cm3.h **** } CONTROL_Type;
 362:CMSIS/inc/core_cm3.h **** 
 363:CMSIS/inc/core_cm3.h **** /* CONTROL Register Definitions */
 364:CMSIS/inc/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 365:CMSIS/inc/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 366:CMSIS/inc/core_cm3.h **** 
 367:CMSIS/inc/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 368:CMSIS/inc/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 369:CMSIS/inc/core_cm3.h **** 
 370:CMSIS/inc/core_cm3.h **** /*@} end of group CMSIS_CORE */
 371:CMSIS/inc/core_cm3.h **** 
 372:CMSIS/inc/core_cm3.h **** 
 373:CMSIS/inc/core_cm3.h **** /**
 374:CMSIS/inc/core_cm3.h ****   \ingroup    CMSIS_core_register
 375:CMSIS/inc/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 376:CMSIS/inc/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 377:CMSIS/inc/core_cm3.h ****   @{
 378:CMSIS/inc/core_cm3.h ****  */
 379:CMSIS/inc/core_cm3.h **** 
 380:CMSIS/inc/core_cm3.h **** /**
 381:CMSIS/inc/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 382:CMSIS/inc/core_cm3.h ****  */
 383:CMSIS/inc/core_cm3.h **** typedef struct
 384:CMSIS/inc/core_cm3.h **** {
 385:CMSIS/inc/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 386:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED0[24U];
 387:CMSIS/inc/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 388:CMSIS/inc/core_cm3.h ****         uint32_t RSERVED1[24U];
 389:CMSIS/inc/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 390:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED2[24U];
 391:CMSIS/inc/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 392:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED3[24U];
 393:CMSIS/inc/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 394:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED4[56U];
 395:CMSIS/inc/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 396:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED5[644U];
 397:CMSIS/inc/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 398:CMSIS/inc/core_cm3.h **** }  NVIC_Type;
 399:CMSIS/inc/core_cm3.h **** 
 400:CMSIS/inc/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 401:CMSIS/inc/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 402:CMSIS/inc/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 403:CMSIS/inc/core_cm3.h **** 
 404:CMSIS/inc/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 405:CMSIS/inc/core_cm3.h **** 
 406:CMSIS/inc/core_cm3.h **** 
 407:CMSIS/inc/core_cm3.h **** /**
 408:CMSIS/inc/core_cm3.h ****   \ingroup  CMSIS_core_register
 409:CMSIS/inc/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 410:CMSIS/inc/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 411:CMSIS/inc/core_cm3.h ****   @{
 412:CMSIS/inc/core_cm3.h ****  */
 413:CMSIS/inc/core_cm3.h **** 
 414:CMSIS/inc/core_cm3.h **** /**
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 22


 415:CMSIS/inc/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 416:CMSIS/inc/core_cm3.h ****  */
 417:CMSIS/inc/core_cm3.h **** typedef struct
 418:CMSIS/inc/core_cm3.h **** {
 419:CMSIS/inc/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 420:CMSIS/inc/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 421:CMSIS/inc/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 422:CMSIS/inc/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 423:CMSIS/inc/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 424:CMSIS/inc/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 425:CMSIS/inc/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 426:CMSIS/inc/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 427:CMSIS/inc/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 428:CMSIS/inc/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 429:CMSIS/inc/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 430:CMSIS/inc/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 431:CMSIS/inc/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 432:CMSIS/inc/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 433:CMSIS/inc/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 434:CMSIS/inc/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 435:CMSIS/inc/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 436:CMSIS/inc/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 437:CMSIS/inc/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 438:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED0[5U];
 439:CMSIS/inc/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 440:CMSIS/inc/core_cm3.h **** } SCB_Type;
 441:CMSIS/inc/core_cm3.h **** 
 442:CMSIS/inc/core_cm3.h **** /* SCB CPUID Register Definitions */
 443:CMSIS/inc/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 444:CMSIS/inc/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 445:CMSIS/inc/core_cm3.h **** 
 446:CMSIS/inc/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 447:CMSIS/inc/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 448:CMSIS/inc/core_cm3.h **** 
 449:CMSIS/inc/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 450:CMSIS/inc/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 451:CMSIS/inc/core_cm3.h **** 
 452:CMSIS/inc/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 453:CMSIS/inc/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 454:CMSIS/inc/core_cm3.h **** 
 455:CMSIS/inc/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 456:CMSIS/inc/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 457:CMSIS/inc/core_cm3.h **** 
 458:CMSIS/inc/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 459:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 460:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 461:CMSIS/inc/core_cm3.h **** 
 462:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 463:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 464:CMSIS/inc/core_cm3.h **** 
 465:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 466:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 467:CMSIS/inc/core_cm3.h **** 
 468:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 469:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 470:CMSIS/inc/core_cm3.h **** 
 471:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 23


 472:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 473:CMSIS/inc/core_cm3.h **** 
 474:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 475:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 476:CMSIS/inc/core_cm3.h **** 
 477:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 478:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 479:CMSIS/inc/core_cm3.h **** 
 480:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 481:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 482:CMSIS/inc/core_cm3.h **** 
 483:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 484:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 485:CMSIS/inc/core_cm3.h **** 
 486:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 487:CMSIS/inc/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 488:CMSIS/inc/core_cm3.h **** 
 489:CMSIS/inc/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 490:CMSIS/inc/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 491:CMSIS/inc/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 492:CMSIS/inc/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 493:CMSIS/inc/core_cm3.h **** 
 494:CMSIS/inc/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 495:CMSIS/inc/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 496:CMSIS/inc/core_cm3.h **** #else
 497:CMSIS/inc/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 498:CMSIS/inc/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 499:CMSIS/inc/core_cm3.h **** #endif
 500:CMSIS/inc/core_cm3.h **** 
 501:CMSIS/inc/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 502:CMSIS/inc/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 503:CMSIS/inc/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 504:CMSIS/inc/core_cm3.h **** 
 505:CMSIS/inc/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 506:CMSIS/inc/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 507:CMSIS/inc/core_cm3.h **** 
 508:CMSIS/inc/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 509:CMSIS/inc/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 510:CMSIS/inc/core_cm3.h **** 
 511:CMSIS/inc/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 512:CMSIS/inc/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 513:CMSIS/inc/core_cm3.h **** 
 514:CMSIS/inc/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 515:CMSIS/inc/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 516:CMSIS/inc/core_cm3.h **** 
 517:CMSIS/inc/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 518:CMSIS/inc/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 519:CMSIS/inc/core_cm3.h **** 
 520:CMSIS/inc/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 521:CMSIS/inc/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 522:CMSIS/inc/core_cm3.h **** 
 523:CMSIS/inc/core_cm3.h **** /* SCB System Control Register Definitions */
 524:CMSIS/inc/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 525:CMSIS/inc/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 526:CMSIS/inc/core_cm3.h **** 
 527:CMSIS/inc/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 528:CMSIS/inc/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 24


 529:CMSIS/inc/core_cm3.h **** 
 530:CMSIS/inc/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 531:CMSIS/inc/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 532:CMSIS/inc/core_cm3.h **** 
 533:CMSIS/inc/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 534:CMSIS/inc/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 535:CMSIS/inc/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 536:CMSIS/inc/core_cm3.h **** 
 537:CMSIS/inc/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 538:CMSIS/inc/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 539:CMSIS/inc/core_cm3.h **** 
 540:CMSIS/inc/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 541:CMSIS/inc/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 542:CMSIS/inc/core_cm3.h **** 
 543:CMSIS/inc/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 544:CMSIS/inc/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 545:CMSIS/inc/core_cm3.h **** 
 546:CMSIS/inc/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 547:CMSIS/inc/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 548:CMSIS/inc/core_cm3.h **** 
 549:CMSIS/inc/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 550:CMSIS/inc/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 551:CMSIS/inc/core_cm3.h **** 
 552:CMSIS/inc/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 553:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 554:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 555:CMSIS/inc/core_cm3.h **** 
 556:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 557:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 558:CMSIS/inc/core_cm3.h **** 
 559:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 560:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 561:CMSIS/inc/core_cm3.h **** 
 562:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 563:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 564:CMSIS/inc/core_cm3.h **** 
 565:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 566:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 567:CMSIS/inc/core_cm3.h **** 
 568:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 569:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 570:CMSIS/inc/core_cm3.h **** 
 571:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 572:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 573:CMSIS/inc/core_cm3.h **** 
 574:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 575:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 576:CMSIS/inc/core_cm3.h **** 
 577:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 578:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 579:CMSIS/inc/core_cm3.h **** 
 580:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 581:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 582:CMSIS/inc/core_cm3.h **** 
 583:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 584:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 585:CMSIS/inc/core_cm3.h **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 25


 586:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 587:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 588:CMSIS/inc/core_cm3.h **** 
 589:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 590:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 591:CMSIS/inc/core_cm3.h **** 
 592:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 593:CMSIS/inc/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 594:CMSIS/inc/core_cm3.h **** 
 595:CMSIS/inc/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 596:CMSIS/inc/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 597:CMSIS/inc/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 598:CMSIS/inc/core_cm3.h **** 
 599:CMSIS/inc/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 600:CMSIS/inc/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 601:CMSIS/inc/core_cm3.h **** 
 602:CMSIS/inc/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 603:CMSIS/inc/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 604:CMSIS/inc/core_cm3.h **** 
 605:CMSIS/inc/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 606:CMSIS/inc/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 607:CMSIS/inc/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 608:CMSIS/inc/core_cm3.h **** 
 609:CMSIS/inc/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 610:CMSIS/inc/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 611:CMSIS/inc/core_cm3.h **** 
 612:CMSIS/inc/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 613:CMSIS/inc/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 614:CMSIS/inc/core_cm3.h **** 
 615:CMSIS/inc/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 616:CMSIS/inc/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 617:CMSIS/inc/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 618:CMSIS/inc/core_cm3.h **** 
 619:CMSIS/inc/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 620:CMSIS/inc/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 621:CMSIS/inc/core_cm3.h **** 
 622:CMSIS/inc/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 623:CMSIS/inc/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 624:CMSIS/inc/core_cm3.h **** 
 625:CMSIS/inc/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 626:CMSIS/inc/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 627:CMSIS/inc/core_cm3.h **** 
 628:CMSIS/inc/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 629:CMSIS/inc/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 630:CMSIS/inc/core_cm3.h **** 
 631:CMSIS/inc/core_cm3.h **** /*@} end of group CMSIS_SCB */
 632:CMSIS/inc/core_cm3.h **** 
 633:CMSIS/inc/core_cm3.h **** 
 634:CMSIS/inc/core_cm3.h **** /**
 635:CMSIS/inc/core_cm3.h ****   \ingroup  CMSIS_core_register
 636:CMSIS/inc/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 637:CMSIS/inc/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 638:CMSIS/inc/core_cm3.h ****   @{
 639:CMSIS/inc/core_cm3.h ****  */
 640:CMSIS/inc/core_cm3.h **** 
 641:CMSIS/inc/core_cm3.h **** /**
 642:CMSIS/inc/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 26


 643:CMSIS/inc/core_cm3.h ****  */
 644:CMSIS/inc/core_cm3.h **** typedef struct
 645:CMSIS/inc/core_cm3.h **** {
 646:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED0[1U];
 647:CMSIS/inc/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 648:CMSIS/inc/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 649:CMSIS/inc/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 650:CMSIS/inc/core_cm3.h **** #else
 651:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED1[1U];
 652:CMSIS/inc/core_cm3.h **** #endif
 653:CMSIS/inc/core_cm3.h **** } SCnSCB_Type;
 654:CMSIS/inc/core_cm3.h **** 
 655:CMSIS/inc/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 656:CMSIS/inc/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 657:CMSIS/inc/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 658:CMSIS/inc/core_cm3.h **** 
 659:CMSIS/inc/core_cm3.h **** /* Auxiliary Control Register Definitions */
 660:CMSIS/inc/core_cm3.h **** 
 661:CMSIS/inc/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 662:CMSIS/inc/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 663:CMSIS/inc/core_cm3.h **** 
 664:CMSIS/inc/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 665:CMSIS/inc/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 666:CMSIS/inc/core_cm3.h **** 
 667:CMSIS/inc/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 668:CMSIS/inc/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 669:CMSIS/inc/core_cm3.h **** 
 670:CMSIS/inc/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 671:CMSIS/inc/core_cm3.h **** 
 672:CMSIS/inc/core_cm3.h **** 
 673:CMSIS/inc/core_cm3.h **** /**
 674:CMSIS/inc/core_cm3.h ****   \ingroup  CMSIS_core_register
 675:CMSIS/inc/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 676:CMSIS/inc/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 677:CMSIS/inc/core_cm3.h ****   @{
 678:CMSIS/inc/core_cm3.h ****  */
 679:CMSIS/inc/core_cm3.h **** 
 680:CMSIS/inc/core_cm3.h **** /**
 681:CMSIS/inc/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 682:CMSIS/inc/core_cm3.h ****  */
 683:CMSIS/inc/core_cm3.h **** typedef struct
 684:CMSIS/inc/core_cm3.h **** {
 685:CMSIS/inc/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 686:CMSIS/inc/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 687:CMSIS/inc/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 688:CMSIS/inc/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 689:CMSIS/inc/core_cm3.h **** } SysTick_Type;
 690:CMSIS/inc/core_cm3.h **** 
 691:CMSIS/inc/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 692:CMSIS/inc/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 693:CMSIS/inc/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 694:CMSIS/inc/core_cm3.h **** 
 695:CMSIS/inc/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 696:CMSIS/inc/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 697:CMSIS/inc/core_cm3.h **** 
 698:CMSIS/inc/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 699:CMSIS/inc/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 27


 700:CMSIS/inc/core_cm3.h **** 
 701:CMSIS/inc/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 702:CMSIS/inc/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 703:CMSIS/inc/core_cm3.h **** 
 704:CMSIS/inc/core_cm3.h **** /* SysTick Reload Register Definitions */
 705:CMSIS/inc/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 706:CMSIS/inc/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 707:CMSIS/inc/core_cm3.h **** 
 708:CMSIS/inc/core_cm3.h **** /* SysTick Current Register Definitions */
 709:CMSIS/inc/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 710:CMSIS/inc/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 711:CMSIS/inc/core_cm3.h **** 
 712:CMSIS/inc/core_cm3.h **** /* SysTick Calibration Register Definitions */
 713:CMSIS/inc/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 714:CMSIS/inc/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 715:CMSIS/inc/core_cm3.h **** 
 716:CMSIS/inc/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 717:CMSIS/inc/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 718:CMSIS/inc/core_cm3.h **** 
 719:CMSIS/inc/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 720:CMSIS/inc/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 721:CMSIS/inc/core_cm3.h **** 
 722:CMSIS/inc/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 723:CMSIS/inc/core_cm3.h **** 
 724:CMSIS/inc/core_cm3.h **** 
 725:CMSIS/inc/core_cm3.h **** /**
 726:CMSIS/inc/core_cm3.h ****   \ingroup  CMSIS_core_register
 727:CMSIS/inc/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 728:CMSIS/inc/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 729:CMSIS/inc/core_cm3.h ****   @{
 730:CMSIS/inc/core_cm3.h ****  */
 731:CMSIS/inc/core_cm3.h **** 
 732:CMSIS/inc/core_cm3.h **** /**
 733:CMSIS/inc/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 734:CMSIS/inc/core_cm3.h ****  */
 735:CMSIS/inc/core_cm3.h **** typedef struct
 736:CMSIS/inc/core_cm3.h **** {
 737:CMSIS/inc/core_cm3.h ****   __OM  union
 738:CMSIS/inc/core_cm3.h ****   {
 739:CMSIS/inc/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 740:CMSIS/inc/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 741:CMSIS/inc/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 742:CMSIS/inc/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 743:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED0[864U];
 744:CMSIS/inc/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 745:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED1[15U];
 746:CMSIS/inc/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 747:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED2[15U];
 748:CMSIS/inc/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 749:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED3[29U];
 750:CMSIS/inc/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 751:CMSIS/inc/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 752:CMSIS/inc/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 753:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED4[43U];
 754:CMSIS/inc/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 755:CMSIS/inc/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 756:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED5[6U];
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 28


 757:CMSIS/inc/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 758:CMSIS/inc/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 759:CMSIS/inc/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 760:CMSIS/inc/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 761:CMSIS/inc/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 762:CMSIS/inc/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 763:CMSIS/inc/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 764:CMSIS/inc/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 765:CMSIS/inc/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 766:CMSIS/inc/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 767:CMSIS/inc/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 768:CMSIS/inc/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 769:CMSIS/inc/core_cm3.h **** } ITM_Type;
 770:CMSIS/inc/core_cm3.h **** 
 771:CMSIS/inc/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 772:CMSIS/inc/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 773:CMSIS/inc/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 774:CMSIS/inc/core_cm3.h **** 
 775:CMSIS/inc/core_cm3.h **** /* ITM Trace Control Register Definitions */
 776:CMSIS/inc/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 777:CMSIS/inc/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 778:CMSIS/inc/core_cm3.h **** 
 779:CMSIS/inc/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 780:CMSIS/inc/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 781:CMSIS/inc/core_cm3.h **** 
 782:CMSIS/inc/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 783:CMSIS/inc/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 784:CMSIS/inc/core_cm3.h **** 
 785:CMSIS/inc/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 786:CMSIS/inc/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 787:CMSIS/inc/core_cm3.h **** 
 788:CMSIS/inc/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 789:CMSIS/inc/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 790:CMSIS/inc/core_cm3.h **** 
 791:CMSIS/inc/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 792:CMSIS/inc/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 793:CMSIS/inc/core_cm3.h **** 
 794:CMSIS/inc/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 795:CMSIS/inc/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 796:CMSIS/inc/core_cm3.h **** 
 797:CMSIS/inc/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 798:CMSIS/inc/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 799:CMSIS/inc/core_cm3.h **** 
 800:CMSIS/inc/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 801:CMSIS/inc/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 802:CMSIS/inc/core_cm3.h **** 
 803:CMSIS/inc/core_cm3.h **** /* ITM Integration Write Register Definitions */
 804:CMSIS/inc/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 805:CMSIS/inc/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 806:CMSIS/inc/core_cm3.h **** 
 807:CMSIS/inc/core_cm3.h **** /* ITM Integration Read Register Definitions */
 808:CMSIS/inc/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 809:CMSIS/inc/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 810:CMSIS/inc/core_cm3.h **** 
 811:CMSIS/inc/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 812:CMSIS/inc/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 813:CMSIS/inc/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 29


 814:CMSIS/inc/core_cm3.h **** 
 815:CMSIS/inc/core_cm3.h **** /* ITM Lock Status Register Definitions */
 816:CMSIS/inc/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 817:CMSIS/inc/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 818:CMSIS/inc/core_cm3.h **** 
 819:CMSIS/inc/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 820:CMSIS/inc/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 821:CMSIS/inc/core_cm3.h **** 
 822:CMSIS/inc/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 823:CMSIS/inc/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 824:CMSIS/inc/core_cm3.h **** 
 825:CMSIS/inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 826:CMSIS/inc/core_cm3.h **** 
 827:CMSIS/inc/core_cm3.h **** 
 828:CMSIS/inc/core_cm3.h **** /**
 829:CMSIS/inc/core_cm3.h ****   \ingroup  CMSIS_core_register
 830:CMSIS/inc/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 831:CMSIS/inc/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 832:CMSIS/inc/core_cm3.h ****   @{
 833:CMSIS/inc/core_cm3.h ****  */
 834:CMSIS/inc/core_cm3.h **** 
 835:CMSIS/inc/core_cm3.h **** /**
 836:CMSIS/inc/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 837:CMSIS/inc/core_cm3.h ****  */
 838:CMSIS/inc/core_cm3.h **** typedef struct
 839:CMSIS/inc/core_cm3.h **** {
 840:CMSIS/inc/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 841:CMSIS/inc/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 842:CMSIS/inc/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 843:CMSIS/inc/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 844:CMSIS/inc/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 845:CMSIS/inc/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 846:CMSIS/inc/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 847:CMSIS/inc/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 848:CMSIS/inc/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 849:CMSIS/inc/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 850:CMSIS/inc/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 851:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED0[1U];
 852:CMSIS/inc/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 853:CMSIS/inc/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 854:CMSIS/inc/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 855:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED1[1U];
 856:CMSIS/inc/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 857:CMSIS/inc/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 858:CMSIS/inc/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 859:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED2[1U];
 860:CMSIS/inc/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 861:CMSIS/inc/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 862:CMSIS/inc/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 863:CMSIS/inc/core_cm3.h **** } DWT_Type;
 864:CMSIS/inc/core_cm3.h **** 
 865:CMSIS/inc/core_cm3.h **** /* DWT Control Register Definitions */
 866:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 867:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 868:CMSIS/inc/core_cm3.h **** 
 869:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 870:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 30


 871:CMSIS/inc/core_cm3.h **** 
 872:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 873:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 874:CMSIS/inc/core_cm3.h **** 
 875:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 876:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 877:CMSIS/inc/core_cm3.h **** 
 878:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 879:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 880:CMSIS/inc/core_cm3.h **** 
 881:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 882:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 883:CMSIS/inc/core_cm3.h **** 
 884:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 885:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 886:CMSIS/inc/core_cm3.h **** 
 887:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 888:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 889:CMSIS/inc/core_cm3.h **** 
 890:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 891:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 892:CMSIS/inc/core_cm3.h **** 
 893:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 894:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 895:CMSIS/inc/core_cm3.h **** 
 896:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 897:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 898:CMSIS/inc/core_cm3.h **** 
 899:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 900:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 901:CMSIS/inc/core_cm3.h **** 
 902:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 903:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 904:CMSIS/inc/core_cm3.h **** 
 905:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 906:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 907:CMSIS/inc/core_cm3.h **** 
 908:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 909:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 910:CMSIS/inc/core_cm3.h **** 
 911:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 912:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 913:CMSIS/inc/core_cm3.h **** 
 914:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 915:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 916:CMSIS/inc/core_cm3.h **** 
 917:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 918:CMSIS/inc/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 919:CMSIS/inc/core_cm3.h **** 
 920:CMSIS/inc/core_cm3.h **** /* DWT CPI Count Register Definitions */
 921:CMSIS/inc/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 922:CMSIS/inc/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 923:CMSIS/inc/core_cm3.h **** 
 924:CMSIS/inc/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 925:CMSIS/inc/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 926:CMSIS/inc/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 927:CMSIS/inc/core_cm3.h **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 31


 928:CMSIS/inc/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 929:CMSIS/inc/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 930:CMSIS/inc/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 931:CMSIS/inc/core_cm3.h **** 
 932:CMSIS/inc/core_cm3.h **** /* DWT LSU Count Register Definitions */
 933:CMSIS/inc/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 934:CMSIS/inc/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 935:CMSIS/inc/core_cm3.h **** 
 936:CMSIS/inc/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 937:CMSIS/inc/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 938:CMSIS/inc/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 939:CMSIS/inc/core_cm3.h **** 
 940:CMSIS/inc/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 941:CMSIS/inc/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 942:CMSIS/inc/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 943:CMSIS/inc/core_cm3.h **** 
 944:CMSIS/inc/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 945:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 946:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 947:CMSIS/inc/core_cm3.h **** 
 948:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 949:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 950:CMSIS/inc/core_cm3.h **** 
 951:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 952:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 953:CMSIS/inc/core_cm3.h **** 
 954:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 955:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 956:CMSIS/inc/core_cm3.h **** 
 957:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 958:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 959:CMSIS/inc/core_cm3.h **** 
 960:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 961:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 962:CMSIS/inc/core_cm3.h **** 
 963:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 964:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 965:CMSIS/inc/core_cm3.h **** 
 966:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 967:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 968:CMSIS/inc/core_cm3.h **** 
 969:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 970:CMSIS/inc/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 971:CMSIS/inc/core_cm3.h **** 
 972:CMSIS/inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 973:CMSIS/inc/core_cm3.h **** 
 974:CMSIS/inc/core_cm3.h **** 
 975:CMSIS/inc/core_cm3.h **** /**
 976:CMSIS/inc/core_cm3.h ****   \ingroup  CMSIS_core_register
 977:CMSIS/inc/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 978:CMSIS/inc/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
 979:CMSIS/inc/core_cm3.h ****   @{
 980:CMSIS/inc/core_cm3.h ****  */
 981:CMSIS/inc/core_cm3.h **** 
 982:CMSIS/inc/core_cm3.h **** /**
 983:CMSIS/inc/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 984:CMSIS/inc/core_cm3.h ****  */
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 32


 985:CMSIS/inc/core_cm3.h **** typedef struct
 986:CMSIS/inc/core_cm3.h **** {
 987:CMSIS/inc/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 988:CMSIS/inc/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 989:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED0[2U];
 990:CMSIS/inc/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 991:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED1[55U];
 992:CMSIS/inc/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 993:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED2[131U];
 994:CMSIS/inc/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 995:CMSIS/inc/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 996:CMSIS/inc/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 997:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED3[759U];
 998:CMSIS/inc/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 999:CMSIS/inc/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1000:CMSIS/inc/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1001:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED4[1U];
1002:CMSIS/inc/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1003:CMSIS/inc/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1004:CMSIS/inc/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1005:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED5[39U];
1006:CMSIS/inc/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1007:CMSIS/inc/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1008:CMSIS/inc/core_cm3.h ****         uint32_t RESERVED7[8U];
1009:CMSIS/inc/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1010:CMSIS/inc/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1011:CMSIS/inc/core_cm3.h **** } TPI_Type;
1012:CMSIS/inc/core_cm3.h **** 
1013:CMSIS/inc/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1014:CMSIS/inc/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1015:CMSIS/inc/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1016:CMSIS/inc/core_cm3.h **** 
1017:CMSIS/inc/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1018:CMSIS/inc/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1019:CMSIS/inc/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1020:CMSIS/inc/core_cm3.h **** 
1021:CMSIS/inc/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1022:CMSIS/inc/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1023:CMSIS/inc/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1024:CMSIS/inc/core_cm3.h **** 
1025:CMSIS/inc/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1026:CMSIS/inc/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1027:CMSIS/inc/core_cm3.h **** 
1028:CMSIS/inc/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1029:CMSIS/inc/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1030:CMSIS/inc/core_cm3.h **** 
1031:CMSIS/inc/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1032:CMSIS/inc/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1033:CMSIS/inc/core_cm3.h **** 
1034:CMSIS/inc/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1035:CMSIS/inc/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1036:CMSIS/inc/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1037:CMSIS/inc/core_cm3.h **** 
1038:CMSIS/inc/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1039:CMSIS/inc/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1040:CMSIS/inc/core_cm3.h **** 
1041:CMSIS/inc/core_cm3.h **** /* TPI TRIGGER Register Definitions */
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 33


1042:CMSIS/inc/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1043:CMSIS/inc/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1044:CMSIS/inc/core_cm3.h **** 
1045:CMSIS/inc/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1046:CMSIS/inc/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1047:CMSIS/inc/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1048:CMSIS/inc/core_cm3.h **** 
1049:CMSIS/inc/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1050:CMSIS/inc/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1051:CMSIS/inc/core_cm3.h **** 
1052:CMSIS/inc/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1053:CMSIS/inc/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1054:CMSIS/inc/core_cm3.h **** 
1055:CMSIS/inc/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1056:CMSIS/inc/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1057:CMSIS/inc/core_cm3.h **** 
1058:CMSIS/inc/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1059:CMSIS/inc/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1060:CMSIS/inc/core_cm3.h **** 
1061:CMSIS/inc/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1062:CMSIS/inc/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1063:CMSIS/inc/core_cm3.h **** 
1064:CMSIS/inc/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1065:CMSIS/inc/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1066:CMSIS/inc/core_cm3.h **** 
1067:CMSIS/inc/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1068:CMSIS/inc/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1069:CMSIS/inc/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1070:CMSIS/inc/core_cm3.h **** 
1071:CMSIS/inc/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1072:CMSIS/inc/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1073:CMSIS/inc/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1074:CMSIS/inc/core_cm3.h **** 
1075:CMSIS/inc/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1076:CMSIS/inc/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1077:CMSIS/inc/core_cm3.h **** 
1078:CMSIS/inc/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1079:CMSIS/inc/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1080:CMSIS/inc/core_cm3.h **** 
1081:CMSIS/inc/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1082:CMSIS/inc/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1083:CMSIS/inc/core_cm3.h **** 
1084:CMSIS/inc/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1085:CMSIS/inc/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1086:CMSIS/inc/core_cm3.h **** 
1087:CMSIS/inc/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1088:CMSIS/inc/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1089:CMSIS/inc/core_cm3.h **** 
1090:CMSIS/inc/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1091:CMSIS/inc/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1092:CMSIS/inc/core_cm3.h **** 
1093:CMSIS/inc/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1094:CMSIS/inc/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1095:CMSIS/inc/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1096:CMSIS/inc/core_cm3.h **** 
1097:CMSIS/inc/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1098:CMSIS/inc/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 34


1099:CMSIS/inc/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1100:CMSIS/inc/core_cm3.h **** 
1101:CMSIS/inc/core_cm3.h **** /* TPI DEVID Register Definitions */
1102:CMSIS/inc/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1103:CMSIS/inc/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1104:CMSIS/inc/core_cm3.h **** 
1105:CMSIS/inc/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1106:CMSIS/inc/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1107:CMSIS/inc/core_cm3.h **** 
1108:CMSIS/inc/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1109:CMSIS/inc/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1110:CMSIS/inc/core_cm3.h **** 
1111:CMSIS/inc/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1112:CMSIS/inc/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1113:CMSIS/inc/core_cm3.h **** 
1114:CMSIS/inc/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1115:CMSIS/inc/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1116:CMSIS/inc/core_cm3.h **** 
1117:CMSIS/inc/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1118:CMSIS/inc/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1119:CMSIS/inc/core_cm3.h **** 
1120:CMSIS/inc/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1121:CMSIS/inc/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1122:CMSIS/inc/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1123:CMSIS/inc/core_cm3.h **** 
1124:CMSIS/inc/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1125:CMSIS/inc/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1126:CMSIS/inc/core_cm3.h **** 
1127:CMSIS/inc/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1128:CMSIS/inc/core_cm3.h **** 
1129:CMSIS/inc/core_cm3.h **** 
1130:CMSIS/inc/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1131:CMSIS/inc/core_cm3.h **** /**
1132:CMSIS/inc/core_cm3.h ****   \ingroup  CMSIS_core_register
1133:CMSIS/inc/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1134:CMSIS/inc/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1135:CMSIS/inc/core_cm3.h ****   @{
1136:CMSIS/inc/core_cm3.h ****  */
1137:CMSIS/inc/core_cm3.h **** 
1138:CMSIS/inc/core_cm3.h **** /**
1139:CMSIS/inc/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1140:CMSIS/inc/core_cm3.h ****  */
1141:CMSIS/inc/core_cm3.h **** typedef struct
1142:CMSIS/inc/core_cm3.h **** {
1143:CMSIS/inc/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1144:CMSIS/inc/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1145:CMSIS/inc/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1146:CMSIS/inc/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1147:CMSIS/inc/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1148:CMSIS/inc/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1149:CMSIS/inc/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1150:CMSIS/inc/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1151:CMSIS/inc/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1152:CMSIS/inc/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1153:CMSIS/inc/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1154:CMSIS/inc/core_cm3.h **** } MPU_Type;
1155:CMSIS/inc/core_cm3.h **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 35


1156:CMSIS/inc/core_cm3.h **** /* MPU Type Register Definitions */
1157:CMSIS/inc/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1158:CMSIS/inc/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1159:CMSIS/inc/core_cm3.h **** 
1160:CMSIS/inc/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1161:CMSIS/inc/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1162:CMSIS/inc/core_cm3.h **** 
1163:CMSIS/inc/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1164:CMSIS/inc/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1165:CMSIS/inc/core_cm3.h **** 
1166:CMSIS/inc/core_cm3.h **** /* MPU Control Register Definitions */
1167:CMSIS/inc/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1168:CMSIS/inc/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1169:CMSIS/inc/core_cm3.h **** 
1170:CMSIS/inc/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1171:CMSIS/inc/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1172:CMSIS/inc/core_cm3.h **** 
1173:CMSIS/inc/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1174:CMSIS/inc/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1175:CMSIS/inc/core_cm3.h **** 
1176:CMSIS/inc/core_cm3.h **** /* MPU Region Number Register Definitions */
1177:CMSIS/inc/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1178:CMSIS/inc/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1179:CMSIS/inc/core_cm3.h **** 
1180:CMSIS/inc/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1181:CMSIS/inc/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1182:CMSIS/inc/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1183:CMSIS/inc/core_cm3.h **** 
1184:CMSIS/inc/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1185:CMSIS/inc/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1186:CMSIS/inc/core_cm3.h **** 
1187:CMSIS/inc/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1188:CMSIS/inc/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1189:CMSIS/inc/core_cm3.h **** 
1190:CMSIS/inc/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1191:CMSIS/inc/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1192:CMSIS/inc/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1193:CMSIS/inc/core_cm3.h **** 
1194:CMSIS/inc/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1195:CMSIS/inc/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1196:CMSIS/inc/core_cm3.h **** 
1197:CMSIS/inc/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1198:CMSIS/inc/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1199:CMSIS/inc/core_cm3.h **** 
1200:CMSIS/inc/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1201:CMSIS/inc/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1202:CMSIS/inc/core_cm3.h **** 
1203:CMSIS/inc/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1204:CMSIS/inc/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1205:CMSIS/inc/core_cm3.h **** 
1206:CMSIS/inc/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1207:CMSIS/inc/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1208:CMSIS/inc/core_cm3.h **** 
1209:CMSIS/inc/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1210:CMSIS/inc/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1211:CMSIS/inc/core_cm3.h **** 
1212:CMSIS/inc/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 36


1213:CMSIS/inc/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1214:CMSIS/inc/core_cm3.h **** 
1215:CMSIS/inc/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1216:CMSIS/inc/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1217:CMSIS/inc/core_cm3.h **** 
1218:CMSIS/inc/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1219:CMSIS/inc/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1220:CMSIS/inc/core_cm3.h **** 
1221:CMSIS/inc/core_cm3.h **** /*@} end of group CMSIS_MPU */
1222:CMSIS/inc/core_cm3.h **** #endif
1223:CMSIS/inc/core_cm3.h **** 
1224:CMSIS/inc/core_cm3.h **** 
1225:CMSIS/inc/core_cm3.h **** /**
1226:CMSIS/inc/core_cm3.h ****   \ingroup  CMSIS_core_register
1227:CMSIS/inc/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1228:CMSIS/inc/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1229:CMSIS/inc/core_cm3.h ****   @{
1230:CMSIS/inc/core_cm3.h ****  */
1231:CMSIS/inc/core_cm3.h **** 
1232:CMSIS/inc/core_cm3.h **** /**
1233:CMSIS/inc/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1234:CMSIS/inc/core_cm3.h ****  */
1235:CMSIS/inc/core_cm3.h **** typedef struct
1236:CMSIS/inc/core_cm3.h **** {
1237:CMSIS/inc/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1238:CMSIS/inc/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1239:CMSIS/inc/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1240:CMSIS/inc/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1241:CMSIS/inc/core_cm3.h **** } CoreDebug_Type;
1242:CMSIS/inc/core_cm3.h **** 
1243:CMSIS/inc/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1244:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1245:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1246:CMSIS/inc/core_cm3.h **** 
1247:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1248:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1249:CMSIS/inc/core_cm3.h **** 
1250:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1251:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1252:CMSIS/inc/core_cm3.h **** 
1253:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1254:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1255:CMSIS/inc/core_cm3.h **** 
1256:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1257:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1258:CMSIS/inc/core_cm3.h **** 
1259:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1260:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1261:CMSIS/inc/core_cm3.h **** 
1262:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1263:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1264:CMSIS/inc/core_cm3.h **** 
1265:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1266:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1267:CMSIS/inc/core_cm3.h **** 
1268:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1269:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 37


1270:CMSIS/inc/core_cm3.h **** 
1271:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1272:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1273:CMSIS/inc/core_cm3.h **** 
1274:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1275:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1276:CMSIS/inc/core_cm3.h **** 
1277:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1278:CMSIS/inc/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1279:CMSIS/inc/core_cm3.h **** 
1280:CMSIS/inc/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1281:CMSIS/inc/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1282:CMSIS/inc/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1283:CMSIS/inc/core_cm3.h **** 
1284:CMSIS/inc/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1285:CMSIS/inc/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1286:CMSIS/inc/core_cm3.h **** 
1287:CMSIS/inc/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1288:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1289:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1290:CMSIS/inc/core_cm3.h **** 
1291:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1292:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1293:CMSIS/inc/core_cm3.h **** 
1294:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1295:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1296:CMSIS/inc/core_cm3.h **** 
1297:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1298:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1299:CMSIS/inc/core_cm3.h **** 
1300:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1301:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1302:CMSIS/inc/core_cm3.h **** 
1303:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1304:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1305:CMSIS/inc/core_cm3.h **** 
1306:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1307:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1308:CMSIS/inc/core_cm3.h **** 
1309:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1310:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1311:CMSIS/inc/core_cm3.h **** 
1312:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1313:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1314:CMSIS/inc/core_cm3.h **** 
1315:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1316:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1317:CMSIS/inc/core_cm3.h **** 
1318:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1319:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1320:CMSIS/inc/core_cm3.h **** 
1321:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1322:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1323:CMSIS/inc/core_cm3.h **** 
1324:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1325:CMSIS/inc/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1326:CMSIS/inc/core_cm3.h **** 
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 38


1327:CMSIS/inc/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1328:CMSIS/inc/core_cm3.h **** 
1329:CMSIS/inc/core_cm3.h **** 
1330:CMSIS/inc/core_cm3.h **** /**
1331:CMSIS/inc/core_cm3.h ****   \ingroup    CMSIS_core_register
1332:CMSIS/inc/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1333:CMSIS/inc/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1334:CMSIS/inc/core_cm3.h ****   @{
1335:CMSIS/inc/core_cm3.h ****  */
1336:CMSIS/inc/core_cm3.h **** 
1337:CMSIS/inc/core_cm3.h **** /**
1338:CMSIS/inc/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1339:CMSIS/inc/core_cm3.h ****   \param[in] field  Name of the register bit field.
1340:CMSIS/inc/core_cm3.h ****   \param[in] value  Value of the bit field.
1341:CMSIS/inc/core_cm3.h ****   \return           Masked and shifted value.
1342:CMSIS/inc/core_cm3.h **** */
1343:CMSIS/inc/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1344:CMSIS/inc/core_cm3.h **** 
1345:CMSIS/inc/core_cm3.h **** /**
1346:CMSIS/inc/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1347:CMSIS/inc/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:CMSIS/inc/core_cm3.h ****   \param[in] value  Value of register.
1349:CMSIS/inc/core_cm3.h ****   \return           Masked and shifted bit field value.
1350:CMSIS/inc/core_cm3.h **** */
1351:CMSIS/inc/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1352:CMSIS/inc/core_cm3.h **** 
1353:CMSIS/inc/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1354:CMSIS/inc/core_cm3.h **** 
1355:CMSIS/inc/core_cm3.h **** 
1356:CMSIS/inc/core_cm3.h **** /**
1357:CMSIS/inc/core_cm3.h ****   \ingroup    CMSIS_core_register
1358:CMSIS/inc/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1359:CMSIS/inc/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1360:CMSIS/inc/core_cm3.h ****   @{
1361:CMSIS/inc/core_cm3.h ****  */
1362:CMSIS/inc/core_cm3.h **** 
1363:CMSIS/inc/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1364:CMSIS/inc/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1365:CMSIS/inc/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1366:CMSIS/inc/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1367:CMSIS/inc/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1368:CMSIS/inc/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1369:CMSIS/inc/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1370:CMSIS/inc/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1371:CMSIS/inc/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1372:CMSIS/inc/core_cm3.h **** 
1373:CMSIS/inc/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1374:CMSIS/inc/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1375:CMSIS/inc/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1376:CMSIS/inc/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1377:CMSIS/inc/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1378:CMSIS/inc/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1379:CMSIS/inc/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1380:CMSIS/inc/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1381:CMSIS/inc/core_cm3.h **** 
1382:CMSIS/inc/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1383:CMSIS/inc/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 39


1384:CMSIS/inc/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1385:CMSIS/inc/core_cm3.h **** #endif
1386:CMSIS/inc/core_cm3.h **** 
1387:CMSIS/inc/core_cm3.h **** /*@} */
1388:CMSIS/inc/core_cm3.h **** 
1389:CMSIS/inc/core_cm3.h **** 
1390:CMSIS/inc/core_cm3.h **** 
1391:CMSIS/inc/core_cm3.h **** /*******************************************************************************
1392:CMSIS/inc/core_cm3.h ****  *                Hardware Abstraction Layer
1393:CMSIS/inc/core_cm3.h ****   Core Function Interface contains:
1394:CMSIS/inc/core_cm3.h ****   - Core NVIC Functions
1395:CMSIS/inc/core_cm3.h ****   - Core SysTick Functions
1396:CMSIS/inc/core_cm3.h ****   - Core Debug Functions
1397:CMSIS/inc/core_cm3.h ****   - Core Register Access Functions
1398:CMSIS/inc/core_cm3.h ****  ******************************************************************************/
1399:CMSIS/inc/core_cm3.h **** /**
1400:CMSIS/inc/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1401:CMSIS/inc/core_cm3.h **** */
1402:CMSIS/inc/core_cm3.h **** 
1403:CMSIS/inc/core_cm3.h **** 
1404:CMSIS/inc/core_cm3.h **** 
1405:CMSIS/inc/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1406:CMSIS/inc/core_cm3.h **** /**
1407:CMSIS/inc/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1408:CMSIS/inc/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1409:CMSIS/inc/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1410:CMSIS/inc/core_cm3.h ****   @{
1411:CMSIS/inc/core_cm3.h ****  */
1412:CMSIS/inc/core_cm3.h **** 
1413:CMSIS/inc/core_cm3.h **** /**
1414:CMSIS/inc/core_cm3.h ****   \brief   Set Priority Grouping
1415:CMSIS/inc/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1416:CMSIS/inc/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1417:CMSIS/inc/core_cm3.h ****            Only values from 0..7 are used.
1418:CMSIS/inc/core_cm3.h ****            In case of a conflict between priority grouping and available
1419:CMSIS/inc/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1420:CMSIS/inc/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1421:CMSIS/inc/core_cm3.h ****  */
1422:CMSIS/inc/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1423:CMSIS/inc/core_cm3.h **** {
1424:CMSIS/inc/core_cm3.h ****   uint32_t reg_value;
1425:CMSIS/inc/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1426:CMSIS/inc/core_cm3.h **** 
1427:CMSIS/inc/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1428:CMSIS/inc/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1429:CMSIS/inc/core_cm3.h ****   reg_value  =  (reg_value                                   |
1430:CMSIS/inc/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1431:CMSIS/inc/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
1432:CMSIS/inc/core_cm3.h ****   SCB->AIRCR =  reg_value;
1433:CMSIS/inc/core_cm3.h **** }
1434:CMSIS/inc/core_cm3.h **** 
1435:CMSIS/inc/core_cm3.h **** 
1436:CMSIS/inc/core_cm3.h **** /**
1437:CMSIS/inc/core_cm3.h ****   \brief   Get Priority Grouping
1438:CMSIS/inc/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1439:CMSIS/inc/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1440:CMSIS/inc/core_cm3.h ****  */
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 40


1441:CMSIS/inc/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1442:CMSIS/inc/core_cm3.h **** {
1443:CMSIS/inc/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1444:CMSIS/inc/core_cm3.h **** }
1445:CMSIS/inc/core_cm3.h **** 
1446:CMSIS/inc/core_cm3.h **** 
1447:CMSIS/inc/core_cm3.h **** /**
1448:CMSIS/inc/core_cm3.h ****   \brief   Enable External Interrupt
1449:CMSIS/inc/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1450:CMSIS/inc/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1451:CMSIS/inc/core_cm3.h ****  */
1452:CMSIS/inc/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
 537              		.loc 2 1452 22 view .LVU141
 538              	.LBB7:
1453:CMSIS/inc/core_cm3.h **** {
1454:CMSIS/inc/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
 539              		.loc 2 1454 3 view .LVU142
 540              		.loc 2 1454 50 is_stmt 0 view .LVU143
 541 0082 044B     		ldr	r3, .L34+8
 542 0084 8022     		movs	r2, #128
 543 0086 5A60     		str	r2, [r3, #4]
 544              	.LVL19:
 545              		.loc 2 1454 50 view .LVU144
 546              	.LBE7:
 547              	.LBE6:
 167:Code/src/main.c **** }
 548              		.loc 1 167 1 view .LVU145
 549 0088 7047     		bx	lr
 550              	.L35:
 551 008a 00BF     		.align	2
 552              	.L34:
 553 008c 00100240 		.word	1073876992
 554 0090 00000140 		.word	1073807360
 555 0094 00E100E0 		.word	-536813312
 556              		.cfi_endproc
 557              	.LFE74:
 559              		.section	.text.USART3_Send,"ax",%progbits
 560              		.align	1
 561              		.global	USART3_Send
 562              		.syntax unified
 563              		.thumb
 564              		.thumb_func
 565              		.fpu softvfp
 567              	USART3_Send:
 568              	.LFB75:
 168:Code/src/main.c **** 
 169:Code/src/main.c **** void USART3_Send(char chr)
 170:Code/src/main.c **** {
 569              		.loc 1 170 1 is_stmt 1 view -0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 574              	.LVL20:
 575              	.L37:
 171:Code/src/main.c **** 	while(!(USART3->SR & USART_SR_TC));
 576              		.loc 1 171 36 discriminator 1 view .LVU147
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 41


 577              		.loc 1 171 16 is_stmt 0 discriminator 1 view .LVU148
 578 0000 034B     		ldr	r3, .L38
 579 0002 1B68     		ldr	r3, [r3]
 580              		.loc 1 171 7 discriminator 1 view .LVU149
 581 0004 13F0400F 		tst	r3, #64
 582 0008 FAD0     		beq	.L37
 172:Code/src/main.c **** 	USART3->DR = chr;
 583              		.loc 1 172 2 is_stmt 1 view .LVU150
 584              		.loc 1 172 13 is_stmt 0 view .LVU151
 585 000a 014B     		ldr	r3, .L38
 586 000c 5860     		str	r0, [r3, #4]
 173:Code/src/main.c **** }
 587              		.loc 1 173 1 view .LVU152
 588 000e 7047     		bx	lr
 589              	.L39:
 590              		.align	2
 591              	.L38:
 592 0010 00480040 		.word	1073760256
 593              		.cfi_endproc
 594              	.LFE75:
 596              		.section	.text.USART3_Send_String,"ax",%progbits
 597              		.align	1
 598              		.global	USART3_Send_String
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 602              		.fpu softvfp
 604              	USART3_Send_String:
 605              	.LVL21:
 606              	.LFB76:
 174:Code/src/main.c **** 
 175:Code/src/main.c **** void USART3_Send_String(char* str)
 176:Code/src/main.c **** {
 607              		.loc 1 176 1 is_stmt 1 view -0
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 0
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611              		.loc 1 176 1 is_stmt 0 view .LVU154
 612 0000 38B5     		push	{r3, r4, r5, lr}
 613              	.LCFI3:
 614              		.cfi_def_cfa_offset 16
 615              		.cfi_offset 3, -16
 616              		.cfi_offset 4, -12
 617              		.cfi_offset 5, -8
 618              		.cfi_offset 14, -4
 619 0002 0546     		mov	r5, r0
 177:Code/src/main.c **** 	uint8_t i = 0;
 620              		.loc 1 177 2 is_stmt 1 view .LVU155
 621              	.LVL22:
 178:Code/src/main.c **** 	while(str[i])
 622              		.loc 1 178 2 view .LVU156
 177:Code/src/main.c **** 	uint8_t i = 0;
 623              		.loc 1 177 10 is_stmt 0 view .LVU157
 624 0004 0024     		movs	r4, #0
 625              	.LVL23:
 626              	.L41:
 627              		.loc 1 178 11 view .LVU158
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 42


 628 0006 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 629              		.loc 1 178 7 view .LVU159
 630 0008 20B1     		cbz	r0, .L44
 179:Code/src/main.c **** 	USART3_Send(str[i++]);
 631              		.loc 1 179 2 is_stmt 1 view .LVU160
 632              		.loc 1 179 19 is_stmt 0 view .LVU161
 633 000a 0134     		adds	r4, r4, #1
 634              	.LVL24:
 635              		.loc 1 179 19 view .LVU162
 636 000c E4B2     		uxtb	r4, r4
 637              	.LVL25:
 638              		.loc 1 179 2 view .LVU163
 639 000e FFF7FEFF 		bl	USART3_Send
 640              	.LVL26:
 641 0012 F8E7     		b	.L41
 642              	.L44:
 180:Code/src/main.c **** }
 643              		.loc 1 180 1 view .LVU164
 644 0014 38BD     		pop	{r3, r4, r5, pc}
 645              		.loc 1 180 1 view .LVU165
 646              		.cfi_endproc
 647              	.LFE76:
 649              		.section	.text.USART3_IRQHandler,"ax",%progbits
 650              		.align	1
 651              		.global	USART3_IRQHandler
 652              		.syntax unified
 653              		.thumb
 654              		.thumb_func
 655              		.fpu softvfp
 657              	USART3_IRQHandler:
 658              	.LFB77:
 181:Code/src/main.c **** 
 182:Code/src/main.c **** void USART3_IRQHandler(void)
 183:Code/src/main.c **** {
 659              		.loc 1 183 1 is_stmt 1 view -0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663 0000 08B5     		push	{r3, lr}
 664              	.LCFI4:
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 3, -8
 667              		.cfi_offset 14, -4
 184:Code/src/main.c **** 	if (USART3->SR & USART_SR_RXNE)
 668              		.loc 1 184 2 view .LVU167
 669              		.loc 1 184 12 is_stmt 0 view .LVU168
 670 0002 124B     		ldr	r3, .L51
 671 0004 1B68     		ldr	r3, [r3]
 672              		.loc 1 184 5 view .LVU169
 673 0006 13F0200F 		tst	r3, #32
 674 000a 0BD0     		beq	.L45
 185:Code/src/main.c **** 	{
 186:Code/src/main.c **** 		USART3->SR &= ~USART_SR_RXNE;
 675              		.loc 1 186 3 is_stmt 1 view .LVU170
 676              		.loc 1 186 14 is_stmt 0 view .LVU171
 677 000c 0F4B     		ldr	r3, .L51
 678 000e 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 43


 679 0010 22F02002 		bic	r2, r2, #32
 680 0014 1A60     		str	r2, [r3]
 187:Code/src/main.c **** 		
 188:Code/src/main.c **** 		if (USART3->DR == '0')
 681              		.loc 1 188 3 is_stmt 1 view .LVU172
 682              		.loc 1 188 13 is_stmt 0 view .LVU173
 683 0016 5B68     		ldr	r3, [r3, #4]
 684              		.loc 1 188 6 view .LVU174
 685 0018 302B     		cmp	r3, #48
 686 001a 04D0     		beq	.L49
 687              	.L47:
 189:Code/src/main.c **** 		{
 190:Code/src/main.c **** 			USART3_Send_String("OFF\r\n");
 191:Code/src/main.c **** 			GPIOC->BSRR |= GPIO_BSRR_BR12; 		//Set PC12
 192:Code/src/main.c **** 		}
 193:Code/src/main.c **** 		
 194:Code/src/main.c **** 		if (USART3->DR == '1')
 688              		.loc 1 194 3 is_stmt 1 view .LVU175
 689              		.loc 1 194 13 is_stmt 0 view .LVU176
 690 001c 0B4B     		ldr	r3, .L51
 691 001e 5B68     		ldr	r3, [r3, #4]
 692              		.loc 1 194 6 view .LVU177
 693 0020 312B     		cmp	r3, #49
 694 0022 09D0     		beq	.L50
 695              	.L45:
 195:Code/src/main.c **** 		{
 196:Code/src/main.c **** 			USART3_Send_String("ON\r\n");
 197:Code/src/main.c **** 			GPIOC->BSRR |= GPIO_BSRR_BS12; 		//Reset PC12
 198:Code/src/main.c **** 		}
 199:Code/src/main.c **** 	}
 200:Code/src/main.c **** 	
 201:Code/src/main.c **** }
 696              		.loc 1 201 1 view .LVU178
 697 0024 08BD     		pop	{r3, pc}
 698              	.L49:
 190:Code/src/main.c **** 			GPIOC->BSRR |= GPIO_BSRR_BR12; 		//Set PC12
 699              		.loc 1 190 4 is_stmt 1 view .LVU179
 700 0026 0A48     		ldr	r0, .L51+4
 701 0028 FFF7FEFF 		bl	USART3_Send_String
 702              	.LVL27:
 191:Code/src/main.c **** 		}
 703              		.loc 1 191 4 view .LVU180
 191:Code/src/main.c **** 		}
 704              		.loc 1 191 16 is_stmt 0 view .LVU181
 705 002c 094A     		ldr	r2, .L51+8
 706 002e 1369     		ldr	r3, [r2, #16]
 707 0030 43F08053 		orr	r3, r3, #268435456
 708 0034 1361     		str	r3, [r2, #16]
 709 0036 F1E7     		b	.L47
 710              	.L50:
 196:Code/src/main.c **** 			GPIOC->BSRR |= GPIO_BSRR_BS12; 		//Reset PC12
 711              		.loc 1 196 4 is_stmt 1 view .LVU182
 712 0038 0748     		ldr	r0, .L51+12
 713 003a FFF7FEFF 		bl	USART3_Send_String
 714              	.LVL28:
 197:Code/src/main.c **** 		}
 715              		.loc 1 197 4 view .LVU183
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 44


 197:Code/src/main.c **** 		}
 716              		.loc 1 197 16 is_stmt 0 view .LVU184
 717 003e 054A     		ldr	r2, .L51+8
 718 0040 1369     		ldr	r3, [r2, #16]
 719 0042 43F48053 		orr	r3, r3, #4096
 720 0046 1361     		str	r3, [r2, #16]
 721              		.loc 1 201 1 view .LVU185
 722 0048 ECE7     		b	.L45
 723              	.L52:
 724 004a 00BF     		.align	2
 725              	.L51:
 726 004c 00480040 		.word	1073760256
 727 0050 00000000 		.word	.LC0
 728 0054 00100140 		.word	1073811456
 729 0058 08000000 		.word	.LC1
 730              		.cfi_endproc
 731              	.LFE77:
 733              		.section	.text.PWM_Init,"ax",%progbits
 734              		.align	1
 735              		.global	PWM_Init
 736              		.syntax unified
 737              		.thumb
 738              		.thumb_func
 739              		.fpu softvfp
 741              	PWM_Init:
 742              	.LFB78:
 202:Code/src/main.c **** 
 203:Code/src/main.c **** void PWM_Init(void)
 204:Code/src/main.c **** {
 743              		.loc 1 204 1 is_stmt 1 view -0
 744              		.cfi_startproc
 745              		@ args = 0, pretend = 0, frame = 0
 746              		@ frame_needed = 0, uses_anonymous_args = 0
 747              		@ link register save eliminated.
 205:Code/src/main.c **** 	RCC->APB2ENR |= RCC_APB2ENR_IOPAEN; 									//Takt on for port A
 748              		.loc 1 205 2 view .LVU187
 749              		.loc 1 205 15 is_stmt 0 view .LVU188
 750 0000 1E4B     		ldr	r3, .L54
 751 0002 9A69     		ldr	r2, [r3, #24]
 752 0004 42F00402 		orr	r2, r2, #4
 753 0008 9A61     		str	r2, [r3, #24]
 206:Code/src/main.c **** 	RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;										//Takt on Alternate function IO
 754              		.loc 1 206 2 is_stmt 1 view .LVU189
 755              		.loc 1 206 15 is_stmt 0 view .LVU190
 756 000a 9A69     		ldr	r2, [r3, #24]
 757 000c 42F00102 		orr	r2, r2, #1
 758 0010 9A61     		str	r2, [r3, #24]
 207:Code/src/main.c **** 	RCC->APB2ENR |= RCC_APB2ENR_TIM1EN;										//TIM1 Enable
 759              		.loc 1 207 2 is_stmt 1 view .LVU191
 760              		.loc 1 207 15 is_stmt 0 view .LVU192
 761 0012 9A69     		ldr	r2, [r3, #24]
 762 0014 42F40062 		orr	r2, r2, #2048
 763 0018 9A61     		str	r2, [r3, #24]
 208:Code/src/main.c **** 
 209:Code/src/main.c **** 	GPIOA->CRH &= ~GPIO_CRH_CNF9_0; 	 	 								//PA9 in Alternate output
 764              		.loc 1 209 2 is_stmt 1 view .LVU193
 765              		.loc 1 209 13 is_stmt 0 view .LVU194
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 45


 766 001a A3F58433 		sub	r3, r3, #67584
 767 001e 5A68     		ldr	r2, [r3, #4]
 768 0020 22F04002 		bic	r2, r2, #64
 769 0024 5A60     		str	r2, [r3, #4]
 210:Code/src/main.c **** 	GPIOA->CRH |= GPIO_CRH_CNF9_1;						 	 	 			//PA9 in Alternate output
 770              		.loc 1 210 2 is_stmt 1 view .LVU195
 771              		.loc 1 210 13 is_stmt 0 view .LVU196
 772 0026 5A68     		ldr	r2, [r3, #4]
 773 0028 42F08002 		orr	r2, r2, #128
 774 002c 5A60     		str	r2, [r3, #4]
 211:Code/src/main.c **** 	GPIOA->CRH |= GPIO_CRH_MODE9; 											//PA9 in output, speed 50 MHz
 775              		.loc 1 211 2 is_stmt 1 view .LVU197
 776              		.loc 1 211 13 is_stmt 0 view .LVU198
 777 002e 5A68     		ldr	r2, [r3, #4]
 778 0030 42F03002 		orr	r2, r2, #48
 779 0034 5A60     		str	r2, [r3, #4]
 212:Code/src/main.c **** 
 213:Code/src/main.c **** 	TIM1->PSC = 48-1;														//Предделитель для TIM1
 780              		.loc 1 213 2 is_stmt 1 view .LVU199
 781              		.loc 1 213 12 is_stmt 0 view .LVU200
 782 0036 03F51053 		add	r3, r3, #9216
 783 003a 2F22     		movs	r2, #47
 784 003c 9A62     		str	r2, [r3, #40]
 214:Code/src/main.c **** 	TIM1->ARR = 1000;														//Период ШИМ
 785              		.loc 1 214 2 is_stmt 1 view .LVU201
 786              		.loc 1 214 12 is_stmt 0 view .LVU202
 787 003e 4FF47A72 		mov	r2, #1000
 788 0042 DA62     		str	r2, [r3, #44]
 215:Code/src/main.c **** 	TIM1->CCR2 = 500;														//Заполнение ШИМ
 789              		.loc 1 215 2 is_stmt 1 view .LVU203
 790              		.loc 1 215 13 is_stmt 0 view .LVU204
 791 0044 4FF4FA72 		mov	r2, #500
 792 0048 9A63     		str	r2, [r3, #56]
 216:Code/src/main.c **** 	
 217:Code/src/main.c **** 	TIM1->CCMR1 |= TIM_CCMR1_OC2M_0 | TIM_CCMR1_OC2M_1 | TIM_CCMR1_OC2M_2;	//Polarity of PWM
 793              		.loc 1 217 2 is_stmt 1 view .LVU205
 794              		.loc 1 217 14 is_stmt 0 view .LVU206
 795 004a 9A69     		ldr	r2, [r3, #24]
 796 004c 42F4E042 		orr	r2, r2, #28672
 797 0050 9A61     		str	r2, [r3, #24]
 218:Code/src/main.c **** 	TIM1->CCER |= TIM_CCER_CC2E;											//Generating PWM
 798              		.loc 1 218 2 is_stmt 1 view .LVU207
 799              		.loc 1 218 13 is_stmt 0 view .LVU208
 800 0052 1A6A     		ldr	r2, [r3, #32]
 801 0054 42F01002 		orr	r2, r2, #16
 802 0058 1A62     		str	r2, [r3, #32]
 219:Code/src/main.c **** 	TIM1->CCER |= TIM_CCER_CC2P;											//Active level
 803              		.loc 1 219 2 is_stmt 1 view .LVU209
 804              		.loc 1 219 13 is_stmt 0 view .LVU210
 805 005a 1A6A     		ldr	r2, [r3, #32]
 806 005c 42F02002 		orr	r2, r2, #32
 807 0060 1A62     		str	r2, [r3, #32]
 220:Code/src/main.c **** 
 221:Code/src/main.c **** 	TIM1->BDTR |= TIM_BDTR_MOE;
 808              		.loc 1 221 2 is_stmt 1 view .LVU211
 809              		.loc 1 221 13 is_stmt 0 view .LVU212
 810 0062 5A6C     		ldr	r2, [r3, #68]
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 46


 811 0064 42F40042 		orr	r2, r2, #32768
 812 0068 5A64     		str	r2, [r3, #68]
 222:Code/src/main.c **** 	
 223:Code/src/main.c **** 	TIM1->CR1 &= ~TIM_CR1_DIR;												//Direction
 813              		.loc 1 223 2 is_stmt 1 view .LVU213
 814              		.loc 1 223 12 is_stmt 0 view .LVU214
 815 006a 1A68     		ldr	r2, [r3]
 816 006c 22F01002 		bic	r2, r2, #16
 817 0070 1A60     		str	r2, [r3]
 224:Code/src/main.c **** 	TIM1->CR1 |= TIM_CR1_CEN;												//Generating PWM
 818              		.loc 1 224 2 is_stmt 1 view .LVU215
 819              		.loc 1 224 12 is_stmt 0 view .LVU216
 820 0072 1A68     		ldr	r2, [r3]
 821 0074 42F00102 		orr	r2, r2, #1
 822 0078 1A60     		str	r2, [r3]
 225:Code/src/main.c **** }...
 823              		.loc 1 225 1 view .LVU217
 824 007a 7047     		bx	lr
 825              	.L55:
 826              		.align	2
 827              	.L54:
 828 007c 00100240 		.word	1073876992
 829              		.cfi_endproc
 830              	.LFE78:
 832              		.section	.text.main,"ax",%progbits
 833              		.align	1
 834              		.global	main
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 838              		.fpu softvfp
 840              	main:
 841              	.LFB67:
  18:Code/src/main.c **** {
 842              		.loc 1 18 1 is_stmt 1 view -0
 843              		.cfi_startproc
 844              		@ Volatile: function does not return.
 845              		@ args = 0, pretend = 0, frame = 0
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 847 0000 00B5     		push	{lr}
 848              	.LCFI5:
 849              		.cfi_def_cfa_offset 4
 850              		.cfi_offset 14, -4
 851 0002 83B0     		sub	sp, sp, #12
 852              	.LCFI6:
 853              		.cfi_def_cfa_offset 16
  19:Code/src/main.c ****     RCC_Init();
 854              		.loc 1 19 5 view .LVU219
 855 0004 FFF7FEFF 		bl	RCC_Init
 856              	.LVL29:
  20:Code/src/main.c ****     GPIO_Init();
 857              		.loc 1 20 5 view .LVU220
 858 0008 FFF7FEFF 		bl	GPIO_Init
 859              	.LVL30:
  22:Code/src/main.c **** 	PWM_Init();
 860              		.loc 1 22 2 view .LVU221
 861 000c FFF7FEFF 		bl	PWM_Init
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 47


 862              	.LVL31:
  28:Code/src/main.c **** 	xTaskCreate(vTaskButtonUser, "LED1", 32, NULL, 1, NULL);
 863              		.loc 1 28 2 view .LVU222
 864 0010 0023     		movs	r3, #0
 865 0012 0193     		str	r3, [sp, #4]
 866 0014 0122     		movs	r2, #1
 867 0016 0092     		str	r2, [sp]
 868 0018 2022     		movs	r2, #32
 869 001a 0349     		ldr	r1, .L59
 870 001c 0348     		ldr	r0, .L59+4
 871 001e FFF7FEFF 		bl	xTaskCreate
 872              	.LVL32:
  30:Code/src/main.c **** 	vTaskStartScheduler();
 873              		.loc 1 30 2 view .LVU223
 874 0022 FFF7FEFF 		bl	vTaskStartScheduler
 875              	.LVL33:
 876              	.L57:
  32:Code/src/main.c ****     while (1)
 877              		.loc 1 32 5 discriminator 1 view .LVU224
  35:Code/src/main.c ****     }
 878              		.loc 1 35 5 discriminator 1 view .LVU225
 879 0026 FEE7     		b	.L57
 880              	.L60:
 881              		.align	2
 882              	.L59:
 883 0028 00000000 		.word	.LC2
 884 002c 00000000 		.word	vTaskButtonUser
 885              		.cfi_endproc
 886              	.LFE67:
 888              		.section	.rodata.USART3_IRQHandler.str1.4,"aMS",%progbits,1
 889              		.align	2
 890              	.LC0:
 891 0000 4F46460D 		.ascii	"OFF\015\012\000"
 891      0A00
 892 0006 0000     		.space	2
 893              	.LC1:
 894 0008 4F4E0D0A 		.ascii	"ON\015\012\000"
 894      00
 895              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 896              		.align	2
 897              	.LC2:
 898 0000 4C454431 		.ascii	"LED1\000"
 898      00
 899              		.text
 900              	.Letext0:
 901              		.file 3 "CMSIS/inc/stm32f105xc.h"
 902              		.file 4 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 903              		.file 5 "c:\\software\\embeddedgcc\\arm_gcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 904              		.file 6 "CMSIS/inc/system_stm32f1xx.h"
 905              		.file 7 "FreeRTOS/inc/task.h"
ARM GAS  C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s 			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:16     .text.vTaskButtonUser:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:24     .text.vTaskButtonUser:0000000000000000 vTaskButtonUser
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:97     .text.vTaskButtonUser:0000000000000034 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:103    .text.RCC_Init:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:110    .text.RCC_Init:0000000000000000 RCC_Init
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:211    .text.RCC_Init:000000000000007c $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:217    .text.GPIO_Init:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:224    .text.GPIO_Init:0000000000000000 GPIO_Init
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:279    .text.GPIO_Init:000000000000004c $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:284    .text.MCO_out:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:291    .text.MCO_out:0000000000000000 MCO_out
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:330    .text.MCO_out:0000000000000030 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:336    .text.vTaskLed1:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:343    .text.vTaskLed1:0000000000000000 vTaskLed1
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:383    .text.vTaskLed1:0000000000000028 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:388    .text.vTaskLed2:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:395    .text.vTaskLed2:0000000000000000 vTaskLed2
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:435    .text.vTaskLed2:0000000000000028 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:440    .text.USART3_Init:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:447    .text.USART3_Init:0000000000000000 USART3_Init
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:553    .text.USART3_Init:000000000000008c $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:560    .text.USART3_Send:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:567    .text.USART3_Send:0000000000000000 USART3_Send
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:592    .text.USART3_Send:0000000000000010 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:597    .text.USART3_Send_String:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:604    .text.USART3_Send_String:0000000000000000 USART3_Send_String
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:650    .text.USART3_IRQHandler:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:657    .text.USART3_IRQHandler:0000000000000000 USART3_IRQHandler
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:726    .text.USART3_IRQHandler:000000000000004c $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:734    .text.PWM_Init:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:741    .text.PWM_Init:0000000000000000 PWM_Init
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:828    .text.PWM_Init:000000000000007c $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:833    .text.main:0000000000000000 $t
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:840    .text.main:0000000000000000 main
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:883    .text.main:0000000000000028 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:889    .rodata.USART3_IRQHandler.str1.4:0000000000000000 $d
C:\Users\HARTO_~1\AppData\Local\Temp\ccnDqcYI.s:896    .rodata.main.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
vTaskDelay
xTaskCreate
vTaskStartScheduler
